/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Reinsurance.Services.Provider.IssueReinsurance.dict v1.0
 * FileSize=9362 Header=276 CRC=1959351746
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReinsuranceServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad IssueReinsurance.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReinsuranceServices.EEProvider.IssueReinsurance.dict"),
    Serializable(),
    DescriptionKey("ISSUE_REINSURANCE_ENTITY"),
    TableMap(TableName="ISSUE_REINSURANCE", Schema="REINS"),
    ]
    public partial class IssueReinsurance :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IssueReinsuranceId = "IssueReinsuranceId";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string ReinsuranceNumber = "ReinsuranceNumber";
			public static readonly string MovementTypeId = "MovementTypeId";
			public static readonly string ProcessDate = "ProcessDate";
			public static readonly string IssueDate = "IssueDate";
			public static readonly string ValidityFrom = "ValidityFrom";
			public static readonly string ValidityTo = "ValidityTo";
			public static readonly string IsAutomatic = "IsAutomatic";
			public static readonly string UserId = "UserId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="issueReinsuranceId">Propiedad clave IssueReinsuranceId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int issueReinsuranceId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.IssueReinsuranceId, issueReinsuranceId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="issueReinsuranceId">Propiedad clave IssueReinsuranceId.</param>
		public static PrimaryKey CreatePrimaryKey(int issueReinsuranceId)
	    {
			return InternalCreatePrimaryKey<IssueReinsurance>(issueReinsuranceId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad EndorsementId.
		/// </summary>
        private int _endorsementId;
		/// <summary>
		/// Atributo para la propiedad ReinsuranceNumber.
		/// </summary>
        private int _reinsuranceNumber;
		/// <summary>
		/// Atributo para la propiedad MovementTypeId.
		/// </summary>
        private int _movementTypeId;
		/// <summary>
		/// Atributo para la propiedad ProcessDate.
		/// </summary>
        private DateTime _processDate;
		/// <summary>
		/// Atributo para la propiedad IssueDate.
		/// </summary>
        private DateTime _issueDate;
		/// <summary>
		/// Atributo para la propiedad ValidityFrom.
		/// </summary>
        private DateTime _validityFrom;
		/// <summary>
		/// Atributo para la propiedad ValidityTo.
		/// </summary>
        private DateTime _validityTo;
		/// <summary>
		/// Atributo para la propiedad IsAutomatic.
		/// </summary>
        private bool _isAutomatic;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="issueReinsuranceId">IssueReinsuranceId key property.</param>
	    public IssueReinsurance(int issueReinsuranceId):
			this(IssueReinsurance.CreatePrimaryKey(issueReinsuranceId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public IssueReinsurance(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssueReinsuranceId.
		/// </summary>
		/// <value>Propiedad IssueReinsuranceId.</value>
	    [
		DescriptionKey("ISSUE_REINSURANCE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ISSUE_REINSURANCE_ID", DbType=System.Data.DbType.String),
	    ]
        public int IssueReinsuranceId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IssueReinsuranceId];
		    }
		    set
		    {
				this._primaryKey[Properties.IssueReinsuranceId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
			    return this._endorsementId;
		    }
		    set
		    {
				this._endorsementId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReinsuranceNumber.
		/// </summary>
		/// <value>Propiedad ReinsuranceNumber.</value>
	    [
		DescriptionKey("REINSURANCE_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REINSURANCE_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int ReinsuranceNumber
	    {
		    get
		    {
			    return this._reinsuranceNumber;
		    }
		    set
		    {
				this._reinsuranceNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MovementTypeId.
		/// </summary>
		/// <value>Propiedad MovementTypeId.</value>
	    [
		DescriptionKey("MOVEMENT_TYPE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="MOVEMENT_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int MovementTypeId
	    {
		    get
		    {
			    return this._movementTypeId;
		    }
		    set
		    {
				this._movementTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessDate.
		/// </summary>
		/// <value>Propiedad ProcessDate.</value>
	    [
		DescriptionKey("PROCESS_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime ProcessDate
	    {
		    get
		    {
			    return this._processDate;
		    }
		    set
		    {
				this._processDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssueDate.
		/// </summary>
		/// <value>Propiedad IssueDate.</value>
	    [
		DescriptionKey("ISSUE_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ISSUE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime IssueDate
	    {
		    get
		    {
			    return this._issueDate;
		    }
		    set
		    {
				this._issueDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ValidityFrom.
		/// </summary>
		/// <value>Propiedad ValidityFrom.</value>
	    [
		DescriptionKey("VALIDITY_FROM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="VALIDITY_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime ValidityFrom
	    {
		    get
		    {
			    return this._validityFrom;
		    }
		    set
		    {
				this._validityFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ValidityTo.
		/// </summary>
		/// <value>Propiedad ValidityTo.</value>
	    [
		DescriptionKey("VALIDITY_TO_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="VALIDITY_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime ValidityTo
	    {
		    get
		    {
			    return this._validityTo;
		    }
		    set
		    {
				this._validityTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsAutomatic.
		/// </summary>
		/// <value>Propiedad IsAutomatic.</value>
	    [
		DescriptionKey("IS_AUTOMATIC_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_AUTOMATIC", DbType=System.Data.DbType.String),
	    ]
        public bool IsAutomatic
	    {
		    get
		    {
			    return this._isAutomatic;
		    }
		    set
		    {
				this._isAutomatic = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

    }
}