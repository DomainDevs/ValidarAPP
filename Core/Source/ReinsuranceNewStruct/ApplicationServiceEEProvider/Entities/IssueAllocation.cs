/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Reinsurance.Services.Provider.IssueAllocation.dict v1.0
 * FileSize=7976 Header=275 CRC=2177927361
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReinsuranceServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad IssueAllocation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReinsuranceServices.EEProvider.IssueAllocation.dict"),
    Serializable(),
    DescriptionKey("ISSUE_ALLOCATION_ENTITY"),
    TableMap(TableName="ISSUE_ALLOCATION", Schema="REINS"),
    ]
    public partial class IssueAllocation :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IssueAllocationId = "IssueAllocationId";
			public static readonly string IssueLayerLineId = "IssueLayerLineId";
			public static readonly string CurrencyId = "CurrencyId";
			public static readonly string IsFacultative = "IsFacultative";
			public static readonly string ContractCompanyId = "ContractCompanyId";
			public static readonly string Amount = "Amount";
			public static readonly string Premium = "Premium";
			public static readonly string Commission = "Commission";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="issueAllocationId">Propiedad clave IssueAllocationId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int issueAllocationId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.IssueAllocationId, issueAllocationId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="issueAllocationId">Propiedad clave IssueAllocationId.</param>
		public static PrimaryKey CreatePrimaryKey(int issueAllocationId)
	    {
			return InternalCreatePrimaryKey<IssueAllocation>(issueAllocationId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IssueLayerLineId.
		/// </summary>
        private int _issueLayerLineId;
		/// <summary>
		/// Atributo para la propiedad CurrencyId.
		/// </summary>
        private int _currencyId;
		/// <summary>
		/// Atributo para la propiedad IsFacultative.
		/// </summary>
        private bool _isFacultative;
		/// <summary>
		/// Atributo para la propiedad ContractCompanyId.
		/// </summary>
        private int _contractCompanyId;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal _amount;
		/// <summary>
		/// Atributo para la propiedad Premium.
		/// </summary>
        private decimal _premium;
		/// <summary>
		/// Atributo para la propiedad Commission.
		/// </summary>
        private decimal _commission;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="issueAllocationId">IssueAllocationId key property.</param>
	    public IssueAllocation(int issueAllocationId):
			this(IssueAllocation.CreatePrimaryKey(issueAllocationId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public IssueAllocation(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssueAllocationId.
		/// </summary>
		/// <value>Propiedad IssueAllocationId.</value>
	    [
		DescriptionKey("ISSUE_ALLOCATION_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ISSUE_ALLOCATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int IssueAllocationId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IssueAllocationId];
		    }
		    set
		    {
				this._primaryKey[Properties.IssueAllocationId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssueLayerLineId.
		/// </summary>
		/// <value>Propiedad IssueLayerLineId.</value>
	    [
		DescriptionKey("ISSUE_LAYER_LINE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ISSUE_LAYER_LINE_ID", DbType=System.Data.DbType.String),
	    ]
        public int IssueLayerLineId
	    {
		    get
		    {
			    return this._issueLayerLineId;
		    }
		    set
		    {
				this._issueLayerLineId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyId.
		/// </summary>
		/// <value>Propiedad CurrencyId.</value>
	    [
		DescriptionKey("CURRENCY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_ID", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyId
	    {
		    get
		    {
			    return this._currencyId;
		    }
		    set
		    {
				this._currencyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsFacultative.
		/// </summary>
		/// <value>Propiedad IsFacultative.</value>
	    [
		DescriptionKey("IS_FACULTATIVE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_FACULTATIVE", DbType=System.Data.DbType.String),
	    ]
        public bool IsFacultative
	    {
		    get
		    {
			    return this._isFacultative;
		    }
		    set
		    {
				this._isFacultative = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ContractCompanyId.
		/// </summary>
		/// <value>Propiedad ContractCompanyId.</value>
	    [
		DescriptionKey("CONTRACT_COMPANY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CONTRACT_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int ContractCompanyId
	    {
		    get
		    {
			    return this._contractCompanyId;
		    }
		    set
		    {
				this._contractCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Premium.
		/// </summary>
		/// <value>Propiedad Premium.</value>
	    [
		DescriptionKey("PREMIUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREMIUM", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Premium
	    {
		    get
		    {
			    return this._premium;
		    }
		    set
		    {
				this._premium = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Commission.
		/// </summary>
		/// <value>Propiedad Commission.</value>
	    [
		DescriptionKey("COMMISSION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Commission
	    {
		    get
		    {
			    return this._commission;
		    }
		    set
		    {
				this._commission = value;
			}
	    }

    }
}