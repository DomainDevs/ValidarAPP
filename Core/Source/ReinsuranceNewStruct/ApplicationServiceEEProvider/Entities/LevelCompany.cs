/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReinsuranceServices.EEProvider.LevelCompany.dict v1.0
 * FileSize=16522 Header=274 CRC=1036994780
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReinsuranceServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad LevelCompany.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReinsuranceServices.EEProvider.LevelCompany.dict"),
    Serializable(),
    DescriptionKey("LEVEL_COMPANY_ENTITY"),
    TableMap(TableName="LEVEL_COMPANY", Schema="REINS"),
    ]
    public partial class LevelCompany :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LevelCompanyId = "LevelCompanyId";
			public static readonly string LevelCode = "LevelCode";
			public static readonly string BrokerReinsuranceCompanyId = "BrokerReinsuranceCompanyId";
			public static readonly string ReinsuranceCompanyId = "ReinsuranceCompanyId";
			public static readonly string ParticipationPercentage = "ParticipationPercentage";
			public static readonly string CommissionPercentage = "CommissionPercentage";
			public static readonly string MinimumCommission = "MinimumCommission";
			public static readonly string MaximumCommission = "MaximumCommission";
			public static readonly string AdditionalCommission = "AdditionalCommission";
			public static readonly string ReservePremiumPercentage = "ReservePremiumPercentage";
			public static readonly string InterestReserveRelease = "InterestReserveRelease";
			public static readonly string DragLoss = "DragLoss";
			public static readonly string ReinsurerExpenditur = "ReinsurerExpenditur";
			public static readonly string ProfitSharingPercentage = "ProfitSharingPercentage";
			public static readonly string Presentation = "Presentation";
			public static readonly string BrokerCommission = "BrokerCommission";
			public static readonly string LossCommissionPercentage = "LossCommissionPercentage";
			public static readonly string DifferentialCommissionPercentage = "DifferentialCommissionPerc_707";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="levelCompanyId">Propiedad clave LevelCompanyId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int levelCompanyId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LevelCompanyId, levelCompanyId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="levelCompanyId">Propiedad clave LevelCompanyId.</param>
		public static PrimaryKey CreatePrimaryKey(int levelCompanyId)
	    {
			return InternalCreatePrimaryKey<LevelCompany>(levelCompanyId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad LevelCode.
		/// </summary>
        private int _levelCode;
		/// <summary>
		/// Atributo para la propiedad BrokerReinsuranceCompanyId.
		/// </summary>
        private int _brokerReinsuranceCompanyId;
		/// <summary>
		/// Atributo para la propiedad ReinsuranceCompanyId.
		/// </summary>
        private int _reinsuranceCompanyId;
		/// <summary>
		/// Atributo para la propiedad ParticipationPercentage.
		/// </summary>
        private decimal _participationPercentage;
		/// <summary>
		/// Atributo para la propiedad CommissionPercentage.
		/// </summary>
        private decimal? _commissionPercentage = null;
		/// <summary>
		/// Atributo para la propiedad MinimumCommission.
		/// </summary>
        private decimal? _minimumCommission = null;
		/// <summary>
		/// Atributo para la propiedad MaximumCommission.
		/// </summary>
        private decimal? _maximumCommission = null;
		/// <summary>
		/// Atributo para la propiedad AdditionalCommission.
		/// </summary>
        private decimal? _additionalCommission = null;
		/// <summary>
		/// Atributo para la propiedad ReservePremiumPercentage.
		/// </summary>
        private decimal? _reservePremiumPercentage = null;
		/// <summary>
		/// Atributo para la propiedad InterestReserveRelease.
		/// </summary>
        private decimal? _interestReserveRelease = null;
		/// <summary>
		/// Atributo para la propiedad DragLoss.
		/// </summary>
        private decimal? _dragLoss = null;
		/// <summary>
		/// Atributo para la propiedad ReinsurerExpenditur.
		/// </summary>
        private decimal? _reinsurerExpenditur = null;
		/// <summary>
		/// Atributo para la propiedad ProfitSharingPercentage.
		/// </summary>
        private decimal? _profitSharingPercentage = null;
		/// <summary>
		/// Atributo para la propiedad Presentation.
		/// </summary>
        private int? _presentation = null;
		/// <summary>
		/// Atributo para la propiedad BrokerCommission.
		/// </summary>
        private bool? _brokerCommission = null;
		/// <summary>
		/// Atributo para la propiedad LossCommissionPercentage.
		/// </summary>
        private decimal? _lossCommissionPercentage = null;
		/// <summary>
		/// Atributo para la propiedad DifferentialCommissionPercentage.
		/// </summary>
        private decimal? _differentialCommissionPercentage = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="levelCompanyId">LevelCompanyId key property.</param>
	    public LevelCompany(int levelCompanyId):
			this(LevelCompany.CreatePrimaryKey(levelCompanyId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public LevelCompany(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelCompanyId.
		/// </summary>
		/// <value>Propiedad LevelCompanyId.</value>
	    [
		DescriptionKey("LEVEL_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LEVEL_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int LevelCompanyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LevelCompanyId];
		    }
		    set
		    {
				this._primaryKey[Properties.LevelCompanyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelCode.
		/// </summary>
		/// <value>Propiedad LevelCode.</value>
	    [
		DescriptionKey("LEVEL_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LEVEL_CD", DbType=System.Data.DbType.String),
	    ]
        public int LevelCode
	    {
		    get
		    {
			    return this._levelCode;
		    }
		    set
		    {
				this._levelCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BrokerReinsuranceCompanyId.
		/// </summary>
		/// <value>Propiedad BrokerReinsuranceCompanyId.</value>
	    [
		DescriptionKey("BROKER_REINSURANCE_COMPANY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BROKER_REINSURANCE_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int BrokerReinsuranceCompanyId
	    {
		    get
		    {
			    return this._brokerReinsuranceCompanyId;
		    }
		    set
		    {
				this._brokerReinsuranceCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReinsuranceCompanyId.
		/// </summary>
		/// <value>Propiedad ReinsuranceCompanyId.</value>
	    [
		DescriptionKey("REINSURANCE_COMPANY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REINSURANCE_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int ReinsuranceCompanyId
	    {
		    get
		    {
			    return this._reinsuranceCompanyId;
		    }
		    set
		    {
				this._reinsuranceCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ParticipationPercentage.
		/// </summary>
		/// <value>Propiedad ParticipationPercentage.</value>
	    [
		DescriptionKey("PARTICIPATION_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PARTICIPATION_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ParticipationPercentage
	    {
		    get
		    {
			    return this._participationPercentage;
		    }
		    set
		    {
				this._participationPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionPercentage.
		/// </summary>
		/// <value>Propiedad CommissionPercentage.</value>
	    [
		DescriptionKey("COMMISSION_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionPercentage
	    {
		    get
		    {
			    return this._commissionPercentage;
		    }
		    set
		    {
				this._commissionPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MinimumCommission.
		/// </summary>
		/// <value>Propiedad MinimumCommission.</value>
	    [
		DescriptionKey("MINIMUM_COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MINIMUM_COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? MinimumCommission
	    {
		    get
		    {
			    return this._minimumCommission;
		    }
		    set
		    {
				this._minimumCommission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MaximumCommission.
		/// </summary>
		/// <value>Propiedad MaximumCommission.</value>
	    [
		DescriptionKey("MAXIMUM_COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MAXIMUM_COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? MaximumCommission
	    {
		    get
		    {
			    return this._maximumCommission;
		    }
		    set
		    {
				this._maximumCommission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AdditionalCommission.
		/// </summary>
		/// <value>Propiedad AdditionalCommission.</value>
	    [
		DescriptionKey("ADDITIONAL_COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ADDITIONAL_COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AdditionalCommission
	    {
		    get
		    {
			    return this._additionalCommission;
		    }
		    set
		    {
				this._additionalCommission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReservePremiumPercentage.
		/// </summary>
		/// <value>Propiedad ReservePremiumPercentage.</value>
	    [
		DescriptionKey("RESERVE_PREMIUM_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RESERVE_PREMIUM_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ReservePremiumPercentage
	    {
		    get
		    {
			    return this._reservePremiumPercentage;
		    }
		    set
		    {
				this._reservePremiumPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InterestReserveRelease.
		/// </summary>
		/// <value>Propiedad InterestReserveRelease.</value>
	    [
		DescriptionKey("INTEREST_RESERVE_RELEASE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INTEREST_RESERVE_RELEASE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? InterestReserveRelease
	    {
		    get
		    {
			    return this._interestReserveRelease;
		    }
		    set
		    {
				this._interestReserveRelease = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DragLoss.
		/// </summary>
		/// <value>Propiedad DragLoss.</value>
	    [
		DescriptionKey("DRAG_LOSS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DRAG_LOSS", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? DragLoss
	    {
		    get
		    {
			    return this._dragLoss;
		    }
		    set
		    {
				this._dragLoss = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReinsurerExpenditur.
		/// </summary>
		/// <value>Propiedad ReinsurerExpenditur.</value>
	    [
		DescriptionKey("REINSURER_EXPENDITUR_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REINSURER_EXPENDITUR", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ReinsurerExpenditur
	    {
		    get
		    {
			    return this._reinsurerExpenditur;
		    }
		    set
		    {
				this._reinsurerExpenditur = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProfitSharingPercentage.
		/// </summary>
		/// <value>Propiedad ProfitSharingPercentage.</value>
	    [
		DescriptionKey("PROFIT_SHARING_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROFIT_SHARING_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ProfitSharingPercentage
	    {
		    get
		    {
			    return this._profitSharingPercentage;
		    }
		    set
		    {
				this._profitSharingPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Presentation.
		/// </summary>
		/// <value>Propiedad Presentation.</value>
	    [
		DescriptionKey("PRESENTATION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PRESENTATION", DbType=System.Data.DbType.String),
	    ]
        public int? Presentation
	    {
		    get
		    {
			    return this._presentation;
		    }
		    set
		    {
				this._presentation = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BrokerCommission.
		/// </summary>
		/// <value>Propiedad BrokerCommission.</value>
	    [
		DescriptionKey("BROKER_COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BROKER_COMMISSION", DbType=System.Data.DbType.String),
	    ]
        public bool? BrokerCommission
	    {
		    get
		    {
			    return this._brokerCommission;
		    }
		    set
		    {
				this._brokerCommission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LossCommissionPercentage.
		/// </summary>
		/// <value>Propiedad LossCommissionPercentage.</value>
	    [
		DescriptionKey("LOSS_COMMISSION_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOSS_COMMISSION_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? LossCommissionPercentage
	    {
		    get
		    {
			    return this._lossCommissionPercentage;
		    }
		    set
		    {
				this._lossCommissionPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DifferentialCommissionPercentage.
		/// </summary>
		/// <value>Propiedad DifferentialCommissionPercentage.</value>
	    [
		DescriptionKey("DIFFERENTIAL_COMMISSION_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true, DataName = "DifferentialCommissionPerc_707"),
        ColumnMap(ColumnName="DIFFERENTIAL_COMMISSION_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? DifferentialCommissionPercentage
	    {
		    get
		    {
			    return this._differentialCommissionPercentage;
		    }
		    set
		    {
				this._differentialCommissionPercentage = value;
			}
	    }

    }
}