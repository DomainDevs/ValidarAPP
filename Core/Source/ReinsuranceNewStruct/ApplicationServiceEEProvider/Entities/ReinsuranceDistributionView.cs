/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReinsuranceServices.EEProvider.ReinsuranceDistributionV.dict v1.0
 * FileSize=10047 Header=286 CRC=2281632466
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReinsuranceServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad ReinsuranceDistributionV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReinsuranceServices.EEProvider.ReinsuranceDistributionView.dict"),
    Serializable(),
    DescriptionKey("REINSURANCE_DISTRIBUTION_V_ENTITY"),
    TableMap(TableName="REINSURANCE_DISTRIBUTION_V", Schema="REINS"),
    ]
    public partial class ReinsuranceDistributionView :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentLayerId = "PaymentLayerId";
			public static readonly string Line = "Line";
			public static readonly string CumulusKey = "CumulusKey";
			public static readonly string MovementSource = "MovementSource";
			public static readonly string Currency = "Currency";
			public static readonly string IsFacultative = "IsFacultative";
			public static readonly string Contract = "Contract";
			public static readonly string LevelNumber = "LevelNumber";
			public static readonly string Broker = "Broker";
			public static readonly string Reinsurer = "Reinsurer";
			public static readonly string Amount = "Amount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<ReinsuranceDistributionView>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentLayerId.
		/// </summary>
        private int _paymentLayerId;
		/// <summary>
		/// Atributo para la propiedad Line.
		/// </summary>
        private string _line = null;
		/// <summary>
		/// Atributo para la propiedad CumulusKey.
		/// </summary>
        private string _cumulusKey = null;
		/// <summary>
		/// Atributo para la propiedad MovementSource.
		/// </summary>
        private string _movementSource = null;
		/// <summary>
		/// Atributo para la propiedad Currency.
		/// </summary>
        private string _currency = null;
		/// <summary>
		/// Atributo para la propiedad IsFacultative.
		/// </summary>
        private bool _isFacultative;
		/// <summary>
		/// Atributo para la propiedad Contract.
		/// </summary>
        private string _contract = null;
		/// <summary>
		/// Atributo para la propiedad LevelNumber.
		/// </summary>
        private int _levelNumber;
		/// <summary>
		/// Atributo para la propiedad Broker.
		/// </summary>
        private string _broker = null;
		/// <summary>
		/// Atributo para la propiedad Reinsurer.
		/// </summary>
        private string _reinsurer = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal _amount;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public ReinsuranceDistributionView():
			this(ReinsuranceDistributionView.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ReinsuranceDistributionView(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentLayerId.
		/// </summary>
		/// <value>Propiedad PaymentLayerId.</value>
	    [
		DescriptionKey("PAYMENT_LAYER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_LAYER_ID", DbType=System.Data.DbType.String),
	    ]
        public int PaymentLayerId
	    {
		    get
		    {
			    return this._paymentLayerId;
		    }
		    set
		    {
				this._paymentLayerId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Line.
		/// </summary>
		/// <value>Propiedad Line.</value>
	    [
		DescriptionKey("LINE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LINE", DbType=System.Data.DbType.String),
	    ]
        public string Line
	    {
		    get
		    {
			    return this._line;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Line);
				}
				this._line = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CumulusKey.
		/// </summary>
		/// <value>Propiedad CumulusKey.</value>
	    [
		DescriptionKey("CUMULUS_KEY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CUMULUS_KEY", DbType=System.Data.DbType.String),
	    ]
        public string CumulusKey
	    {
		    get
		    {
			    return this._cumulusKey;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CumulusKey);
				}
				this._cumulusKey = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MovementSource.
		/// </summary>
		/// <value>Propiedad MovementSource.</value>
	    [
		DescriptionKey("MOVEMENT_SOURCE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="MOVEMENT_SOURCE", DbType=System.Data.DbType.String),
	    ]
        public string MovementSource
	    {
		    get
		    {
			    return this._movementSource;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.MovementSource);
				}
				this._movementSource = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Currency.
		/// </summary>
		/// <value>Propiedad Currency.</value>
	    [
		DescriptionKey("CURRENCY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY", DbType=System.Data.DbType.String),
	    ]
        public string Currency
	    {
		    get
		    {
			    return this._currency;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Currency);
				}
				this._currency = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsFacultative.
		/// </summary>
		/// <value>Propiedad IsFacultative.</value>
	    [
		DescriptionKey("IS_FACULTATIVE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_FACULTATIVE", DbType=System.Data.DbType.String),
	    ]
        public bool IsFacultative
	    {
		    get
		    {
			    return this._isFacultative;
		    }
		    set
		    {
				this._isFacultative = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Contract.
		/// </summary>
		/// <value>Propiedad Contract.</value>
	    [
		DescriptionKey("CONTRACT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CONTRACT", DbType=System.Data.DbType.String),
	    ]
        public string Contract
	    {
		    get
		    {
			    return this._contract;
		    }
		    set
		    {
				this._contract = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelNumber.
		/// </summary>
		/// <value>Propiedad LevelNumber.</value>
	    [
		DescriptionKey("LEVEL_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LEVEL_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int LevelNumber
	    {
		    get
		    {
			    return this._levelNumber;
		    }
		    set
		    {
				this._levelNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Broker.
		/// </summary>
		/// <value>Propiedad Broker.</value>
	    [
		DescriptionKey("BROKER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BROKER", DbType=System.Data.DbType.String),
	    ]
        public string Broker
	    {
		    get
		    {
			    return this._broker;
		    }
		    set
		    {
				this._broker = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Reinsurer.
		/// </summary>
		/// <value>Propiedad Reinsurer.</value>
	    [
		DescriptionKey("REINSURER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REINSURER", DbType=System.Data.DbType.String),
	    ]
        public string Reinsurer
	    {
		    get
		    {
			    return this._reinsurer;
		    }
		    set
		    {
				this._reinsurer = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

    }
}