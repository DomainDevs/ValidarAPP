/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReinsuranceServices.EEProvider.Contract.dict v1.0
 * FileSize=15116 Header=270 CRC=3988110108
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReinsuranceServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad Contract.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReinsuranceServices.EEProvider.Contract.dict"),
    Serializable(),
    DescriptionKey("CONTRACT_ENTITY"),
    TableMap(TableName="CONTRACT", Schema="REINS"),
    ]
    public partial class Contract :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ContractId = "ContractId";
			public static readonly string ContractTypeId = "ContractTypeId";
			public static readonly string CurrencyId = "CurrencyId";
			public static readonly string SmallDescription = "SmallDescription";
			public static readonly string Description = "Description";
			public static readonly string Year = "Year";
			public static readonly string DateFrom = "DateFrom";
			public static readonly string DateTo = "DateTo";
			public static readonly string ReleaseTimeReserve = "ReleaseTimeReserve";
			public static readonly string AffectationTypeCode = "AffectationTypeCode";
			public static readonly string ReestablishmentTypeCode = "ReestablishmentTypeCode";
			public static readonly string Epi = "Epi";
			public static readonly string EpiTypeCode = "EpiTypeCode";
			public static readonly string Status = "Status";
			public static readonly string Grouper = "Grouper";
			public static readonly string CoinsurancePercentage = "CoinsurancePercentage";
			public static readonly string QuantityRisk = "QuantityRisk";
			public static readonly string EstimatedDate = "EstimatedDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="contractId">Propiedad clave ContractId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int contractId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ContractId, contractId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="contractId">Propiedad clave ContractId.</param>
		public static PrimaryKey CreatePrimaryKey(int contractId)
	    {
			return InternalCreatePrimaryKey<Contract>(contractId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ContractTypeId.
		/// </summary>
        private int _contractTypeId;
		/// <summary>
		/// Atributo para la propiedad CurrencyId.
		/// </summary>
        private int _currencyId;
		/// <summary>
		/// Atributo para la propiedad SmallDescription.
		/// </summary>
        private string _smallDescription = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad Year.
		/// </summary>
        private int _year;
		/// <summary>
		/// Atributo para la propiedad DateFrom.
		/// </summary>
        private DateTime? _dateFrom = null;
		/// <summary>
		/// Atributo para la propiedad DateTo.
		/// </summary>
        private DateTime? _dateTo = null;
		/// <summary>
		/// Atributo para la propiedad ReleaseTimeReserve.
		/// </summary>
        private int? _releaseTimeReserve = null;
		/// <summary>
		/// Atributo para la propiedad AffectationTypeCode.
		/// </summary>
        private int? _affectationTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad ReestablishmentTypeCode.
		/// </summary>
        private int? _reestablishmentTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad Epi.
		/// </summary>
        private decimal? _epi = null;
		/// <summary>
		/// Atributo para la propiedad EpiTypeCode.
		/// </summary>
        private int? _epiTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private bool? _status = null;
		/// <summary>
		/// Atributo para la propiedad Grouper.
		/// </summary>
        private string _grouper = null;
		/// <summary>
		/// Atributo para la propiedad CoinsurancePercentage.
		/// </summary>
        private decimal? _coinsurancePercentage = null;
		/// <summary>
		/// Atributo para la propiedad QuantityRisk.
		/// </summary>
        private int? _quantityRisk = null;
		/// <summary>
		/// Atributo para la propiedad EstimatedDate.
		/// </summary>
        private DateTime? _estimatedDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="contractId">ContractId key property.</param>
	    public Contract(int contractId):
			this(Contract.CreatePrimaryKey(contractId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Contract(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ContractId.
		/// </summary>
		/// <value>Propiedad ContractId.</value>
	    [
		DescriptionKey("CONTRACT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CONTRACT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ContractId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ContractId];
		    }
		    set
		    {
				this._primaryKey[Properties.ContractId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ContractTypeId.
		/// </summary>
		/// <value>Propiedad ContractTypeId.</value>
	    [
		DescriptionKey("CONTRACT_TYPE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CONTRACT_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int ContractTypeId
	    {
		    get
		    {
			    return this._contractTypeId;
		    }
		    set
		    {
				this._contractTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyId.
		/// </summary>
		/// <value>Propiedad CurrencyId.</value>
	    [
		DescriptionKey("CURRENCY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_ID", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyId
	    {
		    get
		    {
			    return this._currencyId;
		    }
		    set
		    {
				this._currencyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SmallDescription.
		/// </summary>
		/// <value>Propiedad SmallDescription.</value>
	    [
		DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SMALL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SmallDescription
	    {
		    get
		    {
			    return this._smallDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
				}
				this._smallDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Year.
		/// </summary>
		/// <value>Propiedad Year.</value>
	    [
		DescriptionKey("YEAR_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="YEAR", DbType=System.Data.DbType.String),
	    ]
        public int Year
	    {
		    get
		    {
			    return this._year;
		    }
		    set
		    {
				this._year = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DateFrom.
		/// </summary>
		/// <value>Propiedad DateFrom.</value>
	    [
		DescriptionKey("DATE_FROM_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DateFrom
	    {
		    get
		    {
			    return this._dateFrom;
		    }
		    set
		    {
				this._dateFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DateTo.
		/// </summary>
		/// <value>Propiedad DateTo.</value>
	    [
		DescriptionKey("DATE_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DateTo
	    {
		    get
		    {
			    return this._dateTo;
		    }
		    set
		    {
				this._dateTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReleaseTimeReserve.
		/// </summary>
		/// <value>Propiedad ReleaseTimeReserve.</value>
	    [
		DescriptionKey("RELEASE_TIME_RESERVE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RELEASE_TIME_RESERVE", DbType=System.Data.DbType.String),
	    ]
        public int? ReleaseTimeReserve
	    {
		    get
		    {
			    return this._releaseTimeReserve;
		    }
		    set
		    {
				this._releaseTimeReserve = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AffectationTypeCode.
		/// </summary>
		/// <value>Propiedad AffectationTypeCode.</value>
	    [
		DescriptionKey("AFFECTATION_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AFFECTATION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AffectationTypeCode
	    {
		    get
		    {
			    return this._affectationTypeCode;
		    }
		    set
		    {
				this._affectationTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReestablishmentTypeCode.
		/// </summary>
		/// <value>Propiedad ReestablishmentTypeCode.</value>
	    [
		DescriptionKey("REESTABLISHMENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REESTABLISHMENT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ReestablishmentTypeCode
	    {
		    get
		    {
			    return this._reestablishmentTypeCode;
		    }
		    set
		    {
				this._reestablishmentTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Epi.
		/// </summary>
		/// <value>Propiedad Epi.</value>
	    [
		DescriptionKey("EPI_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EPI", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Epi
	    {
		    get
		    {
			    return this._epi;
		    }
		    set
		    {
				this._epi = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EpiTypeCode.
		/// </summary>
		/// <value>Propiedad EpiTypeCode.</value>
	    [
		DescriptionKey("EPI_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EPI_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? EpiTypeCode
	    {
		    get
		    {
			    return this._epiTypeCode;
		    }
		    set
		    {
				this._epiTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public bool? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Grouper.
		/// </summary>
		/// <value>Propiedad Grouper.</value>
	    [
		DescriptionKey("GROUPER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="GROUPER", DbType=System.Data.DbType.String),
	    ]
        public string Grouper
	    {
		    get
		    {
			    return this._grouper;
		    }
		    set
		    {
				this._grouper = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsurancePercentage.
		/// </summary>
		/// <value>Propiedad CoinsurancePercentage.</value>
	    [
		DescriptionKey("COINSURANCE_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURANCE_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CoinsurancePercentage
	    {
		    get
		    {
			    return this._coinsurancePercentage;
		    }
		    set
		    {
				this._coinsurancePercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad QuantityRisk.
		/// </summary>
		/// <value>Propiedad QuantityRisk.</value>
	    [
		DescriptionKey("QUANTITY_RISK_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="QUANTITY_RISK", DbType=System.Data.DbType.String),
	    ]
        public int? QuantityRisk
	    {
		    get
		    {
			    return this._quantityRisk;
		    }
		    set
		    {
				this._quantityRisk = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimatedDate.
		/// </summary>
		/// <value>Propiedad EstimatedDate.</value>
	    [
		DescriptionKey("ESTIMATED_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATED_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimatedDate
	    {
		    get
		    {
			    return this._estimatedDate;
		    }
		    set
		    {
				this._estimatedDate = value;
			}
	    }

    }
}