/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReinsuranceServices.EEProvider.Facultative.dict v1.0
 * FileSize=8175 Header=272 CRC=1165584684
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReinsuranceServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad Facultative.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReinsuranceServices.EEProvider.Facultative.dict"),
    Serializable(),
    DescriptionKey("FACULTATIVE_ENTITY"),
    TableMap(TableName="FACULTATIVE", Schema="REINS"),
    ]
    public partial class Facultative :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string FacultativeId = "FacultativeId";
			public static readonly string FacultativePercentage = "FacultativePercentage";
			public static readonly string PremiumPercentage = "PremiumPercentage";
			public static readonly string ProcessDate = "ProcessDate";
			public static readonly string Comments = "Comments";
			public static readonly string UserId = "UserId";
			public static readonly string ReleaseTimeReserve = "ReleaseTimeReserve";
			public static readonly string SlipNumber = "SlipNumber";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="facultativeId">Propiedad clave FacultativeId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int facultativeId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.FacultativeId, facultativeId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="facultativeId">Propiedad clave FacultativeId.</param>
		public static PrimaryKey CreatePrimaryKey(int facultativeId)
	    {
			return InternalCreatePrimaryKey<Facultative>(facultativeId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad FacultativePercentage.
		/// </summary>
        private decimal _facultativePercentage;
		/// <summary>
		/// Atributo para la propiedad PremiumPercentage.
		/// </summary>
        private decimal _premiumPercentage;
		/// <summary>
		/// Atributo para la propiedad ProcessDate.
		/// </summary>
        private DateTime _processDate;
		/// <summary>
		/// Atributo para la propiedad Comments.
		/// </summary>
        private string _comments = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
		/// <summary>
		/// Atributo para la propiedad ReleaseTimeReserve.
		/// </summary>
        private int? _releaseTimeReserve = null;
		/// <summary>
		/// Atributo para la propiedad SlipNumber.
		/// </summary>
        private int? _slipNumber = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="facultativeId">FacultativeId key property.</param>
	    public Facultative(int facultativeId):
			this(Facultative.CreatePrimaryKey(facultativeId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Facultative(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad FacultativeId.
		/// </summary>
		/// <value>Propiedad FacultativeId.</value>
	    [
		DescriptionKey("FACULTATIVE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="FACULTATIVE_ID", DbType=System.Data.DbType.String),
	    ]
        public int FacultativeId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.FacultativeId];
		    }
		    set
		    {
				this._primaryKey[Properties.FacultativeId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FacultativePercentage.
		/// </summary>
		/// <value>Propiedad FacultativePercentage.</value>
	    [
		DescriptionKey("FACULTATIVE_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FACULTATIVE_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal FacultativePercentage
	    {
		    get
		    {
			    return this._facultativePercentage;
		    }
		    set
		    {
				this._facultativePercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PremiumPercentage.
		/// </summary>
		/// <value>Propiedad PremiumPercentage.</value>
	    [
		DescriptionKey("PREMIUM_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREMIUM_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PremiumPercentage
	    {
		    get
		    {
			    return this._premiumPercentage;
		    }
		    set
		    {
				this._premiumPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessDate.
		/// </summary>
		/// <value>Propiedad ProcessDate.</value>
	    [
		DescriptionKey("PROCESS_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime ProcessDate
	    {
		    get
		    {
			    return this._processDate;
		    }
		    set
		    {
				this._processDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Comments.
		/// </summary>
		/// <value>Propiedad Comments.</value>
	    [
		DescriptionKey("COMMENTS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COMMENTS", DbType=System.Data.DbType.String),
	    ]
        public string Comments
	    {
		    get
		    {
			    return this._comments;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Comments);
				}
				this._comments = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReleaseTimeReserve.
		/// </summary>
		/// <value>Propiedad ReleaseTimeReserve.</value>
	    [
		DescriptionKey("RELEASE_TIME_RESERVE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RELEASE_TIME_RESERVE", DbType=System.Data.DbType.String),
	    ]
        public int? ReleaseTimeReserve
	    {
		    get
		    {
			    return this._releaseTimeReserve;
		    }
		    set
		    {
				this._releaseTimeReserve = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SlipNumber.
		/// </summary>
		/// <value>Propiedad SlipNumber.</value>
	    [
		DescriptionKey("SLIP_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SLIP_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? SlipNumber
	    {
		    get
		    {
			    return this._slipNumber;
		    }
		    set
		    {
				this._slipNumber = value;
			}
	    }

    }
}