/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReinsuranceServices.EEProvider.GetClaims.dict v1.0
 * FileSize=9345 Header=270 CRC=3234639811
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReinsuranceServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad GetClaims.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReinsuranceServices.EEProvider.GetClaims.dict"),
    Serializable(),
    DescriptionKey("GET_CLAIMS_ENTITY"),
    TableMap(TableName="GET_CLAIMS", Schema="REINS"),
    ]
    public partial class GetClaims :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ClaimBranchCode = "ClaimBranchCode";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string PolicyNumber = "PolicyNumber";
			public static readonly string ClaimCode = "ClaimCode";
			public static readonly string ClaimNumber = "ClaimNumber";
			public static readonly string ClaimDate = "ClaimDate";
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string EstimationType = "EstimationType";
			public static readonly string EstimationAmount = "EstimationAmount";
			public static readonly string MovementSourceId = "MovementSourceId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<GetClaims>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ClaimBranchCode.
		/// </summary>
        private int _claimBranchCode;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad PolicyNumber.
		/// </summary>
        private string _policyNumber = null;
		/// <summary>
		/// Atributo para la propiedad ClaimCode.
		/// </summary>
        private int _claimCode;
		/// <summary>
		/// Atributo para la propiedad ClaimNumber.
		/// </summary>
        private int _claimNumber;
        /// <summary>
		/// Atributo para la propiedad ClaimDate.
		/// </summary>
        private DateTime? _claimDate = null;
		/// <summary>
		/// Atributo para la propiedad RegistrationDate.
		/// </summary>
        private DateTime? _registrationDate = null;
		/// <summary>
		/// Atributo para la propiedad EstimationType.
		/// </summary>
        private string _estimationType = null;
		/// <summary>
		/// Atributo para la propiedad EstimationAmount.
		/// </summary>
        private decimal _estimationAmount;
		/// <summary>
		/// Atributo para la propiedad MovementSourceId.
		/// </summary>
        private int _movementSourceId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public GetClaims():
			this(GetClaims.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetClaims(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimBranchCode.
		/// </summary>
		/// <value>Propiedad ClaimBranchCode.</value>
	    [
		DescriptionKey("CLAIM_BRANCH_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CLAIM_BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int ClaimBranchCode
	    {
		    get
		    {
			    return this._claimBranchCode;
		    }
		    set
		    {
				this._claimBranchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyNumber.
		/// </summary>
		/// <value>Propiedad PolicyNumber.</value>
	    [
		DescriptionKey("POLICY_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string PolicyNumber
	    {
		    get
		    {
			    return this._policyNumber;
		    }
		    set
		    {
				this._policyNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimCode.
		/// </summary>
		/// <value>Propiedad ClaimCode.</value>
	    [
		DescriptionKey("CLAIM_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CLAIM_CD", DbType=System.Data.DbType.String),
	    ]
        public int ClaimCode
	    {
		    get
		    {
			    return this._claimCode;
		    }
		    set
		    {
				this._claimCode = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClaimNumber.
        /// </summary>
        /// <value>Propiedad ClaimNumber.</value>
        [
        DescriptionKey("CLAIM_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CLAIM_NUMBER", DbType = System.Data.DbType.String),
        ]
        public int ClaimNumber
        {
            get
            {
                return this._claimNumber;
            }
            set
            {
                this._claimNumber = value;
            }
        }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimDate.
		/// </summary>
		/// <value>Propiedad ClaimDate.</value>
	    [
		DescriptionKey("CLAIM_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CLAIM_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ClaimDate
	    {
		    get
		    {
			    return this._claimDate;
		    }
		    set
		    {
				this._claimDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegistrationDate
	    {
		    get
		    {
			    return this._registrationDate;
		    }
		    set
		    {
				this._registrationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimationType.
		/// </summary>
		/// <value>Propiedad EstimationType.</value>
	    [
		DescriptionKey("ESTIMATION_TYPE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ESTIMATION_TYPE", DbType=System.Data.DbType.String),
	    ]
        public string EstimationType
	    {
		    get
		    {
			    return this._estimationType;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.EstimationType);
				}
				this._estimationType = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EstimationAmount.
        /// </summary>
        /// <value>Propiedad EstimationAmount.</value>
        [
        DescriptionKey("ESTIMATION_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ESTIMATION_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal EstimationAmount
        {
            get
            {
                return this._estimationAmount;
            }
            set
            {
                this._estimationAmount = value;
            }
        }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MovementSourceId.
		/// </summary>
		/// <value>Propiedad MovementSourceId.</value>
	    [
		DescriptionKey("MOVEMENT_SOURCE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="MOVEMENT_SOURCE_ID", DbType=System.Data.DbType.String),
	    ]
        public int MovementSourceId
	    {
		    get
		    {
			    return this._movementSourceId;
		    }
		    set
		    {
				this._movementSourceId = value;
			}
	    }

    }
}