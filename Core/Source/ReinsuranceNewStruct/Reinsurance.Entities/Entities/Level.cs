/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Reinsurance.Level.dict v1.0
 * FileSize=14528 Header=267 CRC=3239436741
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Reinsurance.Entities
{
    /// <summary>
    /// Definición de entidad Level.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Reinsurance.Level.dict"),
    Serializable(),
    DescriptionKey("LEVEL_ENTITY"),
    TableMap(TableName="LEVEL", Schema="REINS"),
    ]
    public partial class Level :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LevelId = "LevelId";
			public static readonly string ContractCode = "ContractCode";
			public static readonly string LevelNumber = "LevelNumber";
			public static readonly string LevelLimit = "LevelLimit";
			public static readonly string AssignmentPercentage = "AssignmentPercentage";
			public static readonly string RetentionLimit = "RetentionLimit";
			public static readonly string LinesNumber = "LinesNumber";
			public static readonly string EventLimit = "EventLimit";
			public static readonly string AdjustmentPercentage = "AdjustmentPercentage";
			public static readonly string FixedRatePercentage = "FixedRatePercentage";
			public static readonly string MinimumRatePercentage = "MinimumRatePercentage";
			public static readonly string MaximumRatePercentage = "MaximumRatePercentage";
			public static readonly string LifeRate = "LifeRate";
			public static readonly string CalculationType = "CalculationType";
			public static readonly string ApplyOn = "ApplyOn";
			public static readonly string AnnualAddedLimit = "AnnualAddedLimit";
			public static readonly string PremiumType = "PremiumType";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="levelId">Propiedad clave LevelId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int levelId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LevelId, levelId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="levelId">Propiedad clave LevelId.</param>
		public static PrimaryKey CreatePrimaryKey(int levelId)
	    {
			return InternalCreatePrimaryKey<Level>(levelId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ContractCode.
		/// </summary>
        private int _contractCode;
		/// <summary>
		/// Atributo para la propiedad LevelNumber.
		/// </summary>
        private int _levelNumber;
		/// <summary>
		/// Atributo para la propiedad LevelLimit.
		/// </summary>
        private decimal _levelLimit;
		/// <summary>
		/// Atributo para la propiedad AssignmentPercentage.
		/// </summary>
        private decimal? _assignmentPercentage = null;
		/// <summary>
		/// Atributo para la propiedad RetentionLimit.
		/// </summary>
        private decimal? _retentionLimit = null;
		/// <summary>
		/// Atributo para la propiedad LinesNumber.
		/// </summary>
        private decimal? _linesNumber = null;
		/// <summary>
		/// Atributo para la propiedad EventLimit.
		/// </summary>
        private decimal? _eventLimit = null;
		/// <summary>
		/// Atributo para la propiedad AdjustmentPercentage.
		/// </summary>
        private decimal? _adjustmentPercentage = null;
		/// <summary>
		/// Atributo para la propiedad FixedRatePercentage.
		/// </summary>
        private decimal? _fixedRatePercentage = null;
		/// <summary>
		/// Atributo para la propiedad MinimumRatePercentage.
		/// </summary>
        private decimal? _minimumRatePercentage = null;
		/// <summary>
		/// Atributo para la propiedad MaximumRatePercentage.
		/// </summary>
        private decimal? _maximumRatePercentage = null;
		/// <summary>
		/// Atributo para la propiedad LifeRate.
		/// </summary>
        private decimal? _lifeRate = null;
		/// <summary>
		/// Atributo para la propiedad CalculationType.
		/// </summary>
        private int? _calculationType = null;
		/// <summary>
		/// Atributo para la propiedad ApplyOn.
		/// </summary>
        private int? _applyOn = null;
		/// <summary>
		/// Atributo para la propiedad AnnualAddedLimit.
		/// </summary>
        private decimal? _annualAddedLimit = null;
		/// <summary>
		/// Atributo para la propiedad PremiumType.
		/// </summary>
        private int? _premiumType = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="levelId">LevelId key property.</param>
	    public Level(int levelId):
			this(Level.CreatePrimaryKey(levelId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Level(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelId.
		/// </summary>
		/// <value>Propiedad LevelId.</value>
	    [
		DescriptionKey("LEVEL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LEVEL_ID", DbType=System.Data.DbType.String),
	    ]
        public int LevelId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LevelId];
		    }
		    set
		    {
				this._primaryKey[Properties.LevelId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ContractCode.
		/// </summary>
		/// <value>Propiedad ContractCode.</value>
	    [
		DescriptionKey("CONTRACT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CONTRACT_CD", DbType=System.Data.DbType.String),
	    ]
        public int ContractCode
	    {
		    get
		    {
			    return this._contractCode;
		    }
		    set
		    {
				this._contractCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelNumber.
		/// </summary>
		/// <value>Propiedad LevelNumber.</value>
	    [
		DescriptionKey("LEVEL_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LEVEL_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int LevelNumber
	    {
		    get
		    {
			    return this._levelNumber;
		    }
		    set
		    {
				this._levelNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelLimit.
		/// </summary>
		/// <value>Propiedad LevelLimit.</value>
	    [
		DescriptionKey("LEVEL_LIMIT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LEVEL_LIMIT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal LevelLimit
	    {
		    get
		    {
			    return this._levelLimit;
		    }
		    set
		    {
				this._levelLimit = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AssignmentPercentage.
		/// </summary>
		/// <value>Propiedad AssignmentPercentage.</value>
	    [
		DescriptionKey("ASSIGNMENT_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ASSIGNMENT_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AssignmentPercentage
	    {
		    get
		    {
			    return this._assignmentPercentage;
		    }
		    set
		    {
				this._assignmentPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RetentionLimit.
		/// </summary>
		/// <value>Propiedad RetentionLimit.</value>
	    [
		DescriptionKey("RETENTION_LIMIT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RETENTION_LIMIT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? RetentionLimit
	    {
		    get
		    {
			    return this._retentionLimit;
		    }
		    set
		    {
				this._retentionLimit = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LinesNumber.
		/// </summary>
		/// <value>Propiedad LinesNumber.</value>
	    [
		DescriptionKey("LINES_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LINES_NUMBER", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? LinesNumber
	    {
		    get
		    {
			    return this._linesNumber;
		    }
		    set
		    {
				this._linesNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EventLimit.
		/// </summary>
		/// <value>Propiedad EventLimit.</value>
	    [
		DescriptionKey("EVENT_LIMIT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EVENT_LIMIT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? EventLimit
	    {
		    get
		    {
			    return this._eventLimit;
		    }
		    set
		    {
				this._eventLimit = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AdjustmentPercentage.
		/// </summary>
		/// <value>Propiedad AdjustmentPercentage.</value>
	    [
		DescriptionKey("ADJUSTMENT_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ADJUSTMENT_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AdjustmentPercentage
	    {
		    get
		    {
			    return this._adjustmentPercentage;
		    }
		    set
		    {
				this._adjustmentPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FixedRatePercentage.
		/// </summary>
		/// <value>Propiedad FixedRatePercentage.</value>
	    [
		DescriptionKey("FIXED_RATE_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FIXED_RATE_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? FixedRatePercentage
	    {
		    get
		    {
			    return this._fixedRatePercentage;
		    }
		    set
		    {
				this._fixedRatePercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MinimumRatePercentage.
		/// </summary>
		/// <value>Propiedad MinimumRatePercentage.</value>
	    [
		DescriptionKey("MINIMUM_RATE_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MINIMUM_RATE_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? MinimumRatePercentage
	    {
		    get
		    {
			    return this._minimumRatePercentage;
		    }
		    set
		    {
				this._minimumRatePercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MaximumRatePercentage.
		/// </summary>
		/// <value>Propiedad MaximumRatePercentage.</value>
	    [
		DescriptionKey("MAXIMUM_RATE_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MAXIMUM_RATE_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? MaximumRatePercentage
	    {
		    get
		    {
			    return this._maximumRatePercentage;
		    }
		    set
		    {
				this._maximumRatePercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LifeRate.
		/// </summary>
		/// <value>Propiedad LifeRate.</value>
	    [
		DescriptionKey("LIFE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LIFE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? LifeRate
	    {
		    get
		    {
			    return this._lifeRate;
		    }
		    set
		    {
				this._lifeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CalculationType.
		/// </summary>
		/// <value>Propiedad CalculationType.</value>
	    [
		DescriptionKey("CALCULATION_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CALCULATION_TYPE", DbType=System.Data.DbType.String),
	    ]
        public int? CalculationType
	    {
		    get
		    {
			    return this._calculationType;
		    }
		    set
		    {
				this._calculationType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ApplyOn.
		/// </summary>
		/// <value>Propiedad ApplyOn.</value>
	    [
		DescriptionKey("APPLY_ON_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="APPLY_ON", DbType=System.Data.DbType.String),
	    ]
        public int? ApplyOn
	    {
		    get
		    {
			    return this._applyOn;
		    }
		    set
		    {
				this._applyOn = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnnualAddedLimit.
		/// </summary>
		/// <value>Propiedad AnnualAddedLimit.</value>
	    [
		DescriptionKey("ANNUAL_ADDED_LIMIT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ANNUAL_ADDED_LIMIT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AnnualAddedLimit
	    {
		    get
		    {
			    return this._annualAddedLimit;
		    }
		    set
		    {
				this._annualAddedLimit = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PremiumType.
		/// </summary>
		/// <value>Propiedad PremiumType.</value>
	    [
		DescriptionKey("PREMIUM_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREMIUM_TYPE", DbType=System.Data.DbType.String),
	    ]
        public int? PremiumType
	    {
		    get
		    {
			    return this._premiumType;
		    }
		    set
		    {
				this._premiumType = value;
			}
	    }

    }
}