/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Reinsurance.PaymentAllocation.dict v1.0
 * FileSize=7477 Header=278 CRC=3151418361
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Reinsurance.Entities
{
    /// <summary>
    /// Definición de entidad PaymentAllocation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Reinsurance.PaymentAllocation.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_ALLOCATION_ENTITY"),
    TableMap(TableName = "PAYMENT_ALLOCATION", Schema = "REINS"),
    ]
    public partial class PaymentAllocation :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PaymentAllocationId = "PaymentAllocationId";
            public static readonly string PaymentCumulusId = "PaymentCumulusId";
            public static readonly string MovementSourceId = "MovementSourceId";
            public static readonly string CurrencyId = "CurrencyId";
            public static readonly string IsFacultative = "IsFacultative";
            public static readonly string ContractCompanyId = "ContractCompanyId";
            public static readonly string Amount = "Amount";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="paymentAllocationId">Propiedad clave PaymentAllocationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentAllocationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentAllocationId, paymentAllocationId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentAllocationId">Propiedad clave PaymentAllocationId.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentAllocationId)
        {
            return InternalCreatePrimaryKey<PaymentAllocation>(paymentAllocationId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentCumulusId.
        /// </summary>
        private int _paymentCumulusId;
        /// <summary>
        /// Atributo para la propiedad MovementSourceId.
        /// </summary>
        private int _movementSourceId;
        /// <summary>
        /// Atributo para la propiedad CurrencyId.
        /// </summary>
        private int _currencyId;
        /// <summary>
        /// Atributo para la propiedad IsFacultative.
        /// </summary>
        private bool _isFacultative;
        /// <summary>
        /// Atributo para la propiedad ContractCompanyId.
        /// </summary>
        private int _contractCompanyId;
        /// <summary>
        /// Atributo para la propiedad Amount.
        /// </summary>
        private decimal _amount;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="paymentAllocationId">PaymentAllocationId key property.</param>
        public PaymentAllocation(int paymentAllocationId) :
            this(PaymentAllocation.CreatePrimaryKey(paymentAllocationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PaymentAllocation(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentAllocationId.
        /// </summary>
        /// <value>Propiedad PaymentAllocationId.</value>
        [
        DescriptionKey("PAYMENT_ALLOCATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_ALLOCATION_ID", DbType = System.Data.DbType.String),
        ]
        public int PaymentAllocationId
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentAllocationId];
            }
            set
            {
                this._primaryKey[Properties.PaymentAllocationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentCumulusId.
        /// </summary>
        /// <value>Propiedad PaymentCumulusId.</value>
        [
        DescriptionKey("PAYMENT_CUMULUS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_CUMULUS_ID", DbType = System.Data.DbType.String),
        ]
        public int PaymentCumulusId
        {
            get
            {
                return this._paymentCumulusId;
            }
            set
            {
                this._paymentCumulusId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MovementSourceId.
        /// </summary>
        /// <value>Propiedad MovementSourceId.</value>
        [
        DescriptionKey("MOVEMENT_SOURCE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MOVEMENT_SOURCE_ID", DbType = System.Data.DbType.String),
        ]
        public int MovementSourceId
        {
            get
            {
                return this._movementSourceId;
            }
            set
            {
                this._movementSourceId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyId.
        /// </summary>
        /// <value>Propiedad CurrencyId.</value>
        [
        DescriptionKey("CURRENCY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_ID", DbType = System.Data.DbType.String),
        ]
        public int CurrencyId
        {
            get
            {
                return this._currencyId;
            }
            set
            {
                this._currencyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsFacultative.
        /// </summary>
        /// <value>Propiedad IsFacultative.</value>
        [
        DescriptionKey("IS_FACULTATIVE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_FACULTATIVE", DbType = System.Data.DbType.String),
        ]
        public bool IsFacultative
        {
            get
            {
                return this._isFacultative;
            }
            set
            {
                this._isFacultative = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ContractCompanyId.
        /// </summary>
        /// <value>Propiedad ContractCompanyId.</value>
        [
        DescriptionKey("CONTRACT_COMPANY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONTRACT_COMPANY_ID", DbType = System.Data.DbType.String),
        ]
        public int ContractCompanyId
        {
            get
            {
                return this._contractCompanyId;
            }
            set
            {
                this._contractCompanyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Amount.
        /// </summary>
        /// <value>Propiedad Amount.</value>
        [
        DescriptionKey("AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                this._amount = value;
            }
        }

    }
}