/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Reinsurance.TempInstallmentPayment.dict v1.0
 * FileSize=6412 Header=283 CRC=2853071031
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Reinsurance.Entities
{
    /// <summary>
    /// Definición de entidad TempInstallmentPayment.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Reinsurance.TempInstallmentPayment.dict"),
    Serializable(),
    DescriptionKey("TEMP_INSTALLMENT_PAYMENT_ENTITY"),
    TableMap(TableName="TEMP_INSTALLMENT_PAYMENT", Schema="REINS"),
    ]
    public partial class TempInstallmentPayment :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempInstallementPaymentsId = "TempInstallementPaymentsId";
			public static readonly string TempInstallementCompanyCode = "TempInstallementCompanyCode";
			public static readonly string FeeNumber = "FeeNumber";
			public static readonly string PaymentDate = "PaymentDate";
			public static readonly string PaymentAmount = "PaymentAmount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="tempInstallementPaymentsId">Propiedad clave TempInstallementPaymentsId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempInstallementPaymentsId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TempInstallementPaymentsId, tempInstallementPaymentsId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="tempInstallementPaymentsId">Propiedad clave TempInstallementPaymentsId.</param>
		public static PrimaryKey CreatePrimaryKey(int tempInstallementPaymentsId)
	    {
			return InternalCreatePrimaryKey<TempInstallmentPayment>(tempInstallementPaymentsId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempInstallementCompanyCode.
		/// </summary>
        private int _tempInstallementCompanyCode;
		/// <summary>
		/// Atributo para la propiedad FeeNumber.
		/// </summary>
        private int _feeNumber;
		/// <summary>
		/// Atributo para la propiedad PaymentDate.
		/// </summary>
        private DateTime _paymentDate;
		/// <summary>
		/// Atributo para la propiedad PaymentAmount.
		/// </summary>
        private decimal _paymentAmount;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="tempInstallementPaymentsId">TempInstallementPaymentsId key property.</param>
	    public TempInstallmentPayment(int tempInstallementPaymentsId):
			this(TempInstallmentPayment.CreatePrimaryKey(tempInstallementPaymentsId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempInstallmentPayment(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempInstallementPaymentsId.
		/// </summary>
		/// <value>Propiedad TempInstallementPaymentsId.</value>
	    [
		DescriptionKey("TEMP_INSTALLEMENT_PAYMENTS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TEMP_INSTALLEMENT_PAYMENTS_ID", DbType=System.Data.DbType.String),
	    ]
        public int TempInstallementPaymentsId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempInstallementPaymentsId];
		    }
		    set
		    {
				this._primaryKey[Properties.TempInstallementPaymentsId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempInstallementCompanyCode.
		/// </summary>
		/// <value>Propiedad TempInstallementCompanyCode.</value>
	    [
		DescriptionKey("TEMP_INSTALLEMENT_COMPANY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TEMP_INSTALLEMENT_COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int TempInstallementCompanyCode
	    {
		    get
		    {
			    return this._tempInstallementCompanyCode;
		    }
		    set
		    {
				this._tempInstallementCompanyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FeeNumber.
		/// </summary>
		/// <value>Propiedad FeeNumber.</value>
	    [
		DescriptionKey("FEE_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FEE_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int FeeNumber
	    {
		    get
		    {
			    return this._feeNumber;
		    }
		    set
		    {
				this._feeNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentDate.
		/// </summary>
		/// <value>Propiedad PaymentDate.</value>
	    [
		DescriptionKey("PAYMENT_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime PaymentDate
	    {
		    get
		    {
			    return this._paymentDate;
		    }
		    set
		    {
				this._paymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentAmount.
		/// </summary>
		/// <value>Propiedad PaymentAmount.</value>
	    [
		DescriptionKey("PAYMENT_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PaymentAmount
	    {
		    get
		    {
			    return this._paymentAmount;
		    }
		    set
		    {
				this._paymentAmount = value;
			}
	    }

    }
}