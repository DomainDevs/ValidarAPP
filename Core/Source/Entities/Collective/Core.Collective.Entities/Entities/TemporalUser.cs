/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Collective.TemporalUser.dict v1.0
 * FileSize=5907 Header=253 CRC=3411323774
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Collective.Entities
{
    /// <summary>
    /// Definición de entidad TemporalUser.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Collective.TemporalUser.dict"),
    Serializable(),
    DescriptionKey("TEMPORAL_USER_ENTITY"),
    TableMap(TableName = "TEMPORAL_USER", Schema = "COLL"),
    ]
    public partial class TemporalUser :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TemporalUserId = "TemporalUserId";
            public static readonly string TempId = "TempId";
            public static readonly string AuthorizationUserId = "AuthorizationUserId";
            public static readonly string AuthorizedUserId = "AuthorizedUserId";
            public static readonly string DateUpdate = "DateUpdate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="temporalUserId">Propiedad clave TemporalUserId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int temporalUserId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TemporalUserId, temporalUserId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="temporalUserId">Propiedad clave TemporalUserId.</param>
        public static PrimaryKey CreatePrimaryKey(int temporalUserId)
        {
            return InternalCreatePrimaryKey<TemporalUser>(temporalUserId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TempId.
        /// </summary>
        private int _tempId;
        /// <summary>
        /// Atributo para la propiedad AuthorizationUserId.
        /// </summary>
        private int _authorizationUserId;
        /// <summary>
        /// Atributo para la propiedad AuthorizedUserId.
        /// </summary>
        private int _authorizedUserId;
        /// <summary>
        /// Atributo para la propiedad DateUpdate.
        /// </summary>
        private DateTime _dateUpdate;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="temporalUserId">TemporalUserId key property.</param>
        public TemporalUser(int temporalUserId) :
            this(TemporalUser.CreatePrimaryKey(temporalUserId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public TemporalUser(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TemporalUserId.
        /// </summary>
        /// <value>Propiedad TemporalUserId.</value>
        [
        DescriptionKey("TEMPORAL_USER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TEMPORAL_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int TemporalUserId
        {
            get
            {
                return (int)this._primaryKey[Properties.TemporalUserId];
            }
            set
            {
                this._primaryKey[Properties.TemporalUserId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int TempId
        {
            get
            {
                return this._tempId;
            }
            set
            {
                this._tempId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationUserId.
        /// </summary>
        /// <value>Propiedad AuthorizationUserId.</value>
        [
        DescriptionKey("AUTHORIZATION_USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AUTHORIZATION_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int AuthorizationUserId
        {
            get
            {
                return this._authorizationUserId;
            }
            set
            {
                this._authorizationUserId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizedUserId.
        /// </summary>
        /// <value>Propiedad AuthorizedUserId.</value>
        [
        DescriptionKey("AUTHORIZED_USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AUTHORIZED_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int AuthorizedUserId
        {
            get
            {
                return this._authorizedUserId;
            }
            set
            {
                this._authorizedUserId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DateUpdate.
        /// </summary>
        /// <value>Propiedad DateUpdate.</value>
        [
        DescriptionKey("DATE_UPDATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DATE_UPDATE", DbType = System.Data.DbType.String),
        ]
        public DateTime DateUpdate
        {
            get
            {
                return this._dateUpdate;
            }
            set
            {
                this._dateUpdate = value;
            }
        }

    }
}