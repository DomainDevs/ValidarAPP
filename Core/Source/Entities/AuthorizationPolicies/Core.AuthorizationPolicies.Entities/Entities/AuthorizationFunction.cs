/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AuthorizationPolicies.AuthorizationFunction.dict v1.0
 * FileSize=5291 Header=273 CRC=3721375038
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.AuthorizationPolicies.Entities
{
    /// <summary>
    /// Definición de entidad AuthorizationFunction.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AuthorizationPolicies.AuthorizationFunction.dict"),
    Serializable(),
    DescriptionKey("AUTHORIZATION_FUNCTION_ENTITY"),
    TableMap(TableName = "AUTHORIZATION_FUNCTION", Schema = "AUTHO"),
    ]
    public partial class AuthorizationFunction :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string FunctionId = "FunctionId";
            public static readonly string PackageId = "PackageId";
            public static readonly string Type = "Type";
            public static readonly string Method = "Method";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="functionId">Propiedad clave FunctionId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int functionId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.FunctionId, functionId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="functionId">Propiedad clave FunctionId.</param>
        public static PrimaryKey CreatePrimaryKey(int functionId)
        {
            return InternalCreatePrimaryKey<AuthorizationFunction>(functionId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PackageId.
        /// </summary>
        private int _packageId;
        /// <summary>
        /// Atributo para la propiedad Type.
        /// </summary>
        private string _type = null;
        /// <summary>
        /// Atributo para la propiedad Method.
        /// </summary>
        private string _method = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="functionId">FunctionId key property.</param>
        public AuthorizationFunction(int functionId) :
            this(AuthorizationFunction.CreatePrimaryKey(functionId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public AuthorizationFunction(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad FunctionId.
        /// </summary>
        /// <value>Propiedad FunctionId.</value>
        [
        DescriptionKey("FUNCTION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "FUNCTION_ID", DbType = System.Data.DbType.String),
        ]
        public int FunctionId
        {
            get
            {
                return (int)this._primaryKey[Properties.FunctionId];
            }
            set
            {
                this._primaryKey[Properties.FunctionId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PackageId.
        /// </summary>
        /// <value>Propiedad PackageId.</value>
        [
        DescriptionKey("PACKAGE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PACKAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int PackageId
        {
            get
            {
                return this._packageId;
            }
            set
            {
                this._packageId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Type.
        /// </summary>
        /// <value>Propiedad Type.</value>
        [
        DescriptionKey("TYPE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TYPE", DbType = System.Data.DbType.String),
        ]
        public string Type
        {
            get
            {
                return this._type;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Type);
                }
                this._type = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Method.
        /// </summary>
        /// <value>Propiedad Method.</value>
        [
        DescriptionKey("METHOD_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "METHOD", DbType = System.Data.DbType.String),
        ]
        public string Method
        {
            get
            {
                return this._method;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Method);
                }
                this._method = value;
            }
        }

    }
}