/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AuthorizationPolicies.Entities.AuthorizationAnswer.dict v1.0
 * FileSize=8925 Header=280 CRC=3548998974
 ******************************************/

using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.AuthorizationPolicies.Entities
{
    /// <summary>
    /// Definición de entidad AuthorizationAnswer.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AuthorizationPolicies.AuthorizationAnswer.dict"),
    Serializable(),
    DescriptionKey("AUTHORIZATION_ANSWER_ENTITY"),
    TableMap(TableName = "AUTHORIZATION_ANSWER", Schema = "AUTHO"),
    ]
    public partial class AuthorizationAnswer :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string AuthorizationAnswerId = "AuthorizationAnswerId";
            public static readonly string AuthorizationRequestId = "AuthorizationRequestId";
            public static readonly string StatusId = "StatusId";
            public static readonly string UserAnswerId = "UserAnswerId";
            public static readonly string HierarchyAnswerId = "HierarchyAnswerId";
            public static readonly string DescriptionAnswer = "DescriptionAnswer";
            public static readonly string Required = "Required";
            public static readonly string Enabled = "Enabled";
            public static readonly string DateAnswer = "DateAnswer";
            public static readonly string RejectionCausesId = "RejectionCausesId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="authorizationAnswerId">Propiedad clave AuthorizationAnswerId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int authorizationAnswerId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AuthorizationAnswerId, authorizationAnswerId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AuthorizationAnswerId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="authorizationAnswerId">Propiedad clave AuthorizationAnswerId.</param>
        public static PrimaryKey CreatePrimaryKey(int authorizationAnswerId)
        {
            return InternalCreatePrimaryKey<AuthorizationAnswer>(authorizationAnswerId);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<AuthorizationAnswer>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad AuthorizationRequestId.
        /// </summary>
        private int _authorizationRequestId;
        /// <summary>
        /// Atributo para la propiedad StatusId.
        /// </summary>
        private int _statusId;
        /// <summary>
        /// Atributo para la propiedad UserAnswerId.
        /// </summary>
        private int _userAnswerId;
        /// <summary>
        /// Atributo para la propiedad HierarchyAnswerId.
        /// </summary>
        private int _hierarchyAnswerId;
        /// <summary>
        /// Atributo para la propiedad DescriptionAnswer.
        /// </summary>
        private string _descriptionAnswer = null;
        /// <summary>
        /// Atributo para la propiedad Required.
        /// </summary>
        private bool _required;
        /// <summary>
        /// Atributo para la propiedad Enabled.
        /// </summary>
        private bool _enabled;
        /// <summary>
        /// Atributo para la propiedad DateAnswer.
        /// </summary>
        private DateTime? _dateAnswer = null;

        /// <summary>
        /// Atributo para la propiedad _rejectionCausesId.
        /// </summary>
        private int? _rejectionCausesId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="authorizationAnswerId">AuthorizationAnswerId key property.</param>
        public AuthorizationAnswer(int authorizationAnswerId) :
            this(AuthorizationAnswer.CreatePrimaryKey(authorizationAnswerId), null)
        {
        }


        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="authorizationAnswerId">AuthorizationAnswerId key property.</param>
        public AuthorizationAnswer() :
            this(AuthorizationAnswer.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public AuthorizationAnswer(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationAnswerId.
        /// </summary>
        /// <value>Propiedad AuthorizationAnswerId.</value>
        [
        DescriptionKey("AUTHORIZATION_ANSWER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "AUTHORIZATION_ANSWER_ID", DbType = System.Data.DbType.String),
        ]
        public int AuthorizationAnswerId
        {
            get
            {
                return (int)this._primaryKey[Properties.AuthorizationAnswerId];
            }
            set
            {
                this._primaryKey[Properties.AuthorizationAnswerId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationRequestId.
        /// </summary>
        /// <value>Propiedad AuthorizationRequestId.</value>
        [
        DescriptionKey("AUTHORIZATION_REQUEST_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AUTHORIZATION_REQUEST_ID", DbType = System.Data.DbType.String),
        ]
        public int AuthorizationRequestId
        {
            get
            {
                return this._authorizationRequestId;
            }
            set
            {
                this._authorizationRequestId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StatusId.
        /// </summary>
        /// <value>Propiedad StatusId.</value>
        [
        DescriptionKey("STATUS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STATUS_ID", DbType = System.Data.DbType.String),
        ]
        public int StatusId
        {
            get
            {
                return this._statusId;
            }
            set
            {
                this._statusId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserAnswerId.
        /// </summary>
        /// <value>Propiedad UserAnswerId.</value>
        [
        DescriptionKey("USER_ANSWER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ANSWER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserAnswerId
        {
            get
            {
                return this._userAnswerId;
            }
            set
            {
                this._userAnswerId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HierarchyAnswerId.
        /// </summary>
        /// <value>Propiedad HierarchyAnswerId.</value>
        [
        DescriptionKey("HIERARCHY_ANSWER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "HIERARCHY_ANSWER_ID", DbType = System.Data.DbType.String),
        ]
        public int HierarchyAnswerId
        {
            get
            {
                return this._hierarchyAnswerId;
            }
            set
            {
                this._hierarchyAnswerId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionAnswer.
        /// </summary>
        /// <value>Propiedad DescriptionAnswer.</value>
        [
        DescriptionKey("DESCRIPTION_ANSWER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_ANSWER", DbType = System.Data.DbType.String),
        ]
        public string DescriptionAnswer
        {
            get
            {
                return this._descriptionAnswer;
            }
            set
            {
                this._descriptionAnswer = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Required.
        /// </summary>
        /// <value>Propiedad Required.</value>
        [
        DescriptionKey("REQUIRED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REQUIRED", DbType = System.Data.DbType.String),
        ]
        public bool Required
        {
            get
            {
                return this._required;
            }
            set
            {
                this._required = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Enabled.
        /// </summary>
        /// <value>Propiedad Enabled.</value>
        [
        DescriptionKey("ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool Enabled
        {
            get
            {
                return this._enabled;
            }
            set
            {
                this._enabled = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DateAnswer.
        /// </summary>
        /// <value>Propiedad DateAnswer.</value>
        [
        DescriptionKey("DATE_ANSWER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DATE_ANSWER", DbType = System.Data.DbType.String),
        ]
        public DateTime? DateAnswer
        {
            get
            {
                return this._dateAnswer;
            }
            set
            {
                this._dateAnswer = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RejectionCausesId
        /// </summary>
        /// <value>Propiedad RejectionCausesId.</value>
        [
            DescriptionKey("REJECTION_CAUSES_ID_PROPERTY"),
            PersistentProperty(IsNullable = true),
            ColumnMap(ColumnName = "REJECTION_CAUSES_ID", DbType = System.Data.DbType.String),
        ]
        public int? RejectionCausesId
        {
            get
            {
                return this._rejectionCausesId;
            }
            set
            {
                this._rejectionCausesId = value;
            }
        }
    }
}