/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Core.AuthorizationPolicies.Entities.Parameters.dict v1.0
 * FileSize=4863 Header=251 CRC=2310929512
 ******************************************/

using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.AuthorizationPolicies.Entities
{
    /// <summary>
    /// Definición de entidad Parameters.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AuthorizationPolicies.Parameters.dict"),
    Serializable(),
    DescriptionKey("PARAMETERS_ENTITY"),
    TableMap(TableName = "PARAMETERS", Schema = "AUTHO"),
    ]
    public partial class Parameters :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PackageId = "PackageId";
            public static readonly string ModuleId = "ModuleId";
            public static readonly string SubmoduleId = "SubmoduleId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="packageId">Propiedad clave PackageId.</param>
        /// <param name="moduleId">Propiedad clave ModuleId.</param>
        /// <param name="submoduleId">Propiedad clave SubmoduleId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int packageId, int moduleId, int submoduleId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PackageId, packageId);
            keys.Add(Properties.ModuleId, moduleId);
            keys.Add(Properties.SubmoduleId, submoduleId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="packageId">Propiedad clave PackageId.</param>
        /// <param name="moduleId">Propiedad clave ModuleId.</param>
        /// <param name="submoduleId">Propiedad clave SubmoduleId.</param>
        public static PrimaryKey CreatePrimaryKey(int packageId, int moduleId, int submoduleId)
        {
            return InternalCreatePrimaryKey<Parameters>(packageId, moduleId, submoduleId);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="packageId">PackageId key property.</param>
        /// <param name="moduleId">ModuleId key property.</param>
        /// <param name="submoduleId">SubmoduleId key property.</param>
        public Parameters(int packageId, int moduleId, int submoduleId) :
            this(Parameters.CreatePrimaryKey(packageId, moduleId, submoduleId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Parameters(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PackageId.
        /// </summary>
        /// <value>Propiedad PackageId.</value>
        [
        DescriptionKey("PACKAGE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PACKAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int PackageId
        {
            get
            {
                return (int)this._primaryKey[Properties.PackageId];
            }
            set
            {
                this._primaryKey[Properties.PackageId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ModuleId.
        /// </summary>
        /// <value>Propiedad ModuleId.</value>
        [
        DescriptionKey("MODULE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "MODULE_ID", DbType = System.Data.DbType.String),
        ]
        public int ModuleId
        {
            get
            {
                return (int)this._primaryKey[Properties.ModuleId];
            }
            set
            {
                this._primaryKey[Properties.ModuleId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubmoduleId.
        /// </summary>
        /// <value>Propiedad SubmoduleId.</value>
        [
        DescriptionKey("SUBMODULE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SUBMODULE_ID", DbType = System.Data.DbType.String),
        ]
        public int SubmoduleId
        {
            get
            {
                return (int)this._primaryKey[Properties.SubmoduleId];
            }
            set
            {
                this._primaryKey[Properties.SubmoduleId] = value;
            }
        }

    }
}