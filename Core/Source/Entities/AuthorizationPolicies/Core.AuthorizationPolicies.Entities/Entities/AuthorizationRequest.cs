/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AuthorizationPolicies.Entities.AuthorizationRequest.dict v1.0
 * FileSize=9866 Header=281 CRC=2004800736
 ******************************************/

using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.AuthorizationPolicies.Entities
{
    /// <summary>
    /// Definición de entidad AuthorizationRequest.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AuthorizationPolicies.AuthorizationRequest.dict"),
    Serializable(),
    DescriptionKey("AUTHORIZATION_REQUEST_ENTITY"),
    TableMap(TableName = "AUTHORIZATION_REQUEST", Schema = "AUTHO"),
    ]
    public partial class AuthorizationRequest :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string AuthorizationRequestId = "AuthorizationRequestId";
            public static readonly string PoliciesId = "PoliciesId";
            public static readonly string Key = "Key";
            public static readonly string Key2 = "Key2";
            public static readonly string Description = "Description";
            public static readonly string StatusId = "StatusId";
            public static readonly string NumberAut = "NumberAut";
            public static readonly string UserRequestId = "UserRequestId";
            public static readonly string HierarchyRequestId = "HierarchyRequestId";
            public static readonly string DescriptionRequest = "DescriptionRequest";
            public static readonly string DateRequest = "DateRequest";
            public static readonly string FunctionId = "FunctionId";
            public static readonly string ProcessId = "ProcessId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="authorizationRequestId">Propiedad clave AuthorizationRequestId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int authorizationRequestId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AuthorizationRequestId, authorizationRequestId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AuthorizationRequestId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="authorizationRequestId">Propiedad clave AuthorizationRequestId.</param>
        public static PrimaryKey CreatePrimaryKey(int authorizationRequestId)
        {
            return InternalCreatePrimaryKey<AuthorizationRequest>(authorizationRequestId);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<AuthorizationRequest>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PoliciesId.
        /// </summary>
        private int _policiesId;
        /// <summary>
        /// Atributo para la propiedad Key.
        /// </summary>
        private string _key = null;
        /// <summary>
        /// Atributo para la propiedad Key2.
        /// </summary>
        private string _key2 = null;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad StatusId.
        /// </summary>
        private int _statusId;
        /// <summary>
        /// Atributo para la propiedad NumberAut.
        /// </summary>
        private int _numberAut;
        /// <summary>
        /// Atributo para la propiedad UserRequestId.
        /// </summary>
        private int _userRequestId;
        /// <summary>
        /// Atributo para la propiedad HierarchyRequestId.
        /// </summary>
        private int _hierarchyRequestId;
        /// <summary>
        /// Atributo para la propiedad DescriptionRequest.
        /// </summary>
        private string _descriptionRequest = null;
        /// <summary>
        /// Atributo para la propiedad DateRequest.
        /// </summary>
        private DateTime _dateRequest;

        /// <summary>
        /// Atributo para la propiedad FunctionId.
        /// </summary>
        private int _functionId;
        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private string _processId = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public AuthorizationRequest() :
            this(AuthorizationRequest.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="authorizationRequestId">AuthorizationRequestId key property.</param>
        public AuthorizationRequest(int authorizationRequestId) :
            this(AuthorizationRequest.CreatePrimaryKey(authorizationRequestId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public AuthorizationRequest(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationRequestId.
        /// </summary>
        /// <value>Propiedad AuthorizationRequestId.</value>
        [
        DescriptionKey("AUTHORIZATION_REQUEST_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "AUTHORIZATION_REQUEST_ID", DbType = System.Data.DbType.String),
        ]
        public int AuthorizationRequestId
        {
            get
            {
                return (int)this._primaryKey[Properties.AuthorizationRequestId];
            }
            set
            {
                this._primaryKey[Properties.AuthorizationRequestId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PoliciesId.
        /// </summary>
        /// <value>Propiedad PoliciesId.</value>
        [
        DescriptionKey("POLICIES_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "POLICIES_ID", DbType = System.Data.DbType.String),
        ]
        public int PoliciesId
        {
            get
            {
                return this._policiesId;
            }
            set
            {
                this._policiesId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key.
        /// </summary>
        /// <value>Propiedad Key.</value>
        [
        DescriptionKey("KEY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "KEY", DbType = System.Data.DbType.String),
        ]
        public string Key
        {
            get
            {
                return this._key;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Key);
                }
                this._key = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key2.
        /// </summary>
        /// <value>Propiedad Key2.</value>
        [
            DescriptionKey("KEY2_PROPERTY"),
            PersistentProperty(),
            ColumnMap(ColumnName = "KEY2", DbType = System.Data.DbType.String),
        ]
        public string Key2
        {
            get
            {
                return this._key2;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Key2);
                }
                this._key2 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StatusId.
        /// </summary>
        /// <value>Propiedad StatusId.</value>
        [
        DescriptionKey("STATUS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STATUS_ID", DbType = System.Data.DbType.String),
        ]
        public int StatusId
        {
            get
            {
                return this._statusId;
            }
            set
            {
                this._statusId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad NumberAut.
        /// </summary>
        /// <value>Propiedad NumberAut.</value>
        [
        DescriptionKey("NUMBER_AUT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "NUMBER_AUT", DbType = System.Data.DbType.String),
        ]
        public int NumberAut
        {
            get
            {
                return this._numberAut;
            }
            set
            {
                this._numberAut = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserRequestId.
        /// </summary>
        /// <value>Propiedad UserRequestId.</value>
        [
        DescriptionKey("USER_REQUEST_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_REQUEST_ID", DbType = System.Data.DbType.String),
        ]
        public int UserRequestId
        {
            get
            {
                return this._userRequestId;
            }
            set
            {
                this._userRequestId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HierarchyRequestId.
        /// </summary>
        /// <value>Propiedad HierarchyRequestId.</value>
        [
        DescriptionKey("HIERARCHY_REQUEST_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "HIERARCHY_REQUEST_ID", DbType = System.Data.DbType.String),
        ]
        public int HierarchyRequestId
        {
            get
            {
                return this._hierarchyRequestId;
            }
            set
            {
                this._hierarchyRequestId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionRequest.
        /// </summary>
        /// <value>Propiedad DescriptionRequest.</value>
        [
        DescriptionKey("DESCRIPTION_REQUEST_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION_REQUEST", DbType = System.Data.DbType.String),
        ]
        public string DescriptionRequest
        {
            get
            {
                return this._descriptionRequest;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.DescriptionRequest);
                }
                this._descriptionRequest = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DateRequest.
        /// </summary>
        /// <value>Propiedad DateRequest.</value>
        [
        DescriptionKey("DATE_REQUEST_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DATE_REQUEST", DbType = System.Data.DbType.String),
        ]
        public DateTime DateRequest
        {
            get
            {
                return this._dateRequest;
            }
            set
            {
                this._dateRequest = value;
            }
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad PackageId.
        /// </summary>
        /// <value>Propiedad PackageId.</value>
        [
            DescriptionKey("FUNCTION_ID_PROPERTY"),
            PersistentProperty(),
            ColumnMap(ColumnName = "FUNCTION", DbType = System.Data.DbType.String),
        ]
        public int FunctionId
        {
            get
            {
                return this._functionId;
            }
            set
            {
                this._functionId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
            DescriptionKey("PROCESS_ID_PROPERTY"),
            PersistentProperty(IsNullable = true),
            ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public string ProcessId
        {
            get
            {
                return this._processId;
            }
            set
            {
                this._processId = value;
            }
        }
    }
}