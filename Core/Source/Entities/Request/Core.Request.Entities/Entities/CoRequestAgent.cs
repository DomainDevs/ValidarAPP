/******************************************
 * Code generated by DictEditor v1.0.3.1
 * Template: Sistran.Company.Application.QuotationServices.dict v1.0
 * FileSize=8415 Header=260 CRC=1963487021
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Specialized;

namespace Sistran.Core.Application.Request.Entities
{
    /// <summary>
    /// Definición de entidad CoRequestAgent.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Request.CoRequestAgent.dict"),
    Serializable(),
    DescriptionKey("CO_REQUEST_AGENT_ENTITY")
    ]
    public class CoRequestAgent :
        BusinessObject
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public sealed class Properties
        {
            public static readonly string IsPrimary = "IsPrimary";
            public static readonly string AgentAgencyId = "AgentAgencyId";
            public static readonly string RequestAgentId = "RequestAgentId";
            public static readonly string ParticipationPercentage = "ParticipationPercentage";
            public static readonly string IndividualId = "IndividualId";

            private Properties()
            {
            }
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.RequestAgentId, null);

            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey(typeof(CoRequestAgent));
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="requestAgentId">Propiedad clave RequestAgentId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass, int requestAgentId)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.RequestAgentId, requestAgentId);

            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="requestAgentId">Propiedad clave RequestAgentId.</param>
        public static PrimaryKey CreatePrimaryKey(int requestAgentId)
        {
            return InternalCreatePrimaryKey(typeof(CoRequestAgent), requestAgentId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IsPrimary.
        /// </summary>
        private bool _isPrimary;
        /// <summary>
        /// Atributo para la propiedad AgentAgencyId.
        /// </summary>
        private int _agentAgencyId;
        /// <summary>
        /// Atributo para la propiedad ParticipationPercentage.
        /// </summary>
        private decimal _participationPercentage;
        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves que no son autonumeradas.
        /// </summary>
        /// <returns>Primary key.</returns>
        public CoRequestAgent() :
            this(CoRequestAgent.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="requestAgentId">RequestAgentId key property.</param>
        public CoRequestAgent(int requestAgentId) :
            this(CoRequestAgent.CreatePrimaryKey(requestAgentId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoRequestAgent(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsPrimary.
        /// </summary>
        /// <value>Propiedad IsPrimary.</value>
        [
            DescriptionKey("IS_PRIMARY_PROPERTY"),
            PersistentProperty()
        ]
        public bool IsPrimary
        {
            get
            {
                return this._isPrimary;
            }
            set
            {
                this._isPrimary = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentAgencyId.
        /// </summary>
        /// <value>Propiedad AgentAgencyId.</value>
        [
            DescriptionKey("AGENT_AGENCY_ID_PROPERTY"),
            PersistentProperty()
        ]
        public int AgentAgencyId
        {
            get
            {
                return this._agentAgencyId;
            }
            set
            {
                this._agentAgencyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RequestAgentId.
        /// </summary>
        /// <value>Propiedad RequestAgentId.</value>
        [
            DescriptionKey("REQUEST_AGENT_ID_PROPERTY"),
            PersistentProperty(IsKey = true, IsAutomatic = true)
        ]
        public int RequestAgentId
        {
            get
            {
                return (int)this._primaryKey[Properties.RequestAgentId];
            }
            set
            {
                this._primaryKey[Properties.RequestAgentId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ParticipationPercentage.
        /// </summary>
        /// <value>Propiedad ParticipationPercentage.</value>
        [
            DescriptionKey("PARTICIPATION_PERCENTAGE_PROPERTY"),
            PersistentProperty()
        ]
        public decimal ParticipationPercentage
        {
            get
            {
                return this._participationPercentage;
            }
            set
            {
                this._participationPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
            DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
            PersistentProperty()
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Establecer los valores de las propiedades que no forman parte de la clave o identificador de la instancia.
        /// </summary>
        /// <param name="values">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public override void SetPropertyValues(IDictionary values)
        {
            // Set base properties
            base.SetPropertyValues(values);

            object value;
            value = values[Properties.IsPrimary];
            if (value == null)
            {
                throw new PropertyNotNullableException(this.GetType().FullName, Properties.IsPrimary);
            }
            this.IsPrimary = (bool)value;

            value = values[Properties.AgentAgencyId];
            if (value == null)
            {
                throw new PropertyNotNullableException(this.GetType().FullName, Properties.AgentAgencyId);
            }
            this.AgentAgencyId = (int)value;

            value = values[Properties.ParticipationPercentage];
            if (value == null)
            {
                throw new PropertyNotNullableException(this.GetType().FullName, Properties.ParticipationPercentage);
            }
            this.ParticipationPercentage = (decimal)value;

            value = values[Properties.IndividualId];
            if (value == null)
            {
                throw new PropertyNotNullableException(this.GetType().FullName, Properties.IndividualId);
            }
            this.IndividualId = (int)value;

        }

        /// <summary>
        /// Obtiene el estado a partir de los valores de la instancia de la entidad.
        /// </summary>
        /// <returns>
        /// Diccionario con los valores de las propiedades.
        /// </returns>
        public override IDictionary GetPropertyValues()
        {
            // Get base properties
            IDictionary values = base.GetPropertyValues();

            values.Add(Properties.IsPrimary, this.IsPrimary);
            values.Add(Properties.AgentAgencyId, this.AgentAgencyId);
            values.Add(Properties.ParticipationPercentage, this.ParticipationPercentage);
            values.Add(Properties.IndividualId, this.IndividualId);

            return values;
        }

    }
}