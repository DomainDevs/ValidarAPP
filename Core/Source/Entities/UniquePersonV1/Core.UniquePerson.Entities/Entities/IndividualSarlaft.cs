/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.IndividualSarlaft.dict v1.0
 * FileSize=16456 Header=269 CRC=218290144
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad IndividualSarlaft.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.IndividualSarlaft.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_SARLAFT_ENTITY"),
    TableMap(TableName="INDIVIDUAL_SARLAFT", Schema="UP"),
    ]
    public partial class IndividualSarlaft :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string SarlaftId = "SarlaftId";
			public static readonly string FormNum = "FormNum";
			public static readonly string Year = "Year";
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string AuthorizedBy = "AuthorizedBy";
			public static readonly string FillingDate = "FillingDate";
			public static readonly string CheckDate = "CheckDate";
			public static readonly string VerifyingEmployee = "VerifyingEmployee";
			public static readonly string InterviewDate = "InterviewDate";
			public static readonly string InterviewerName = "InterviewerName";
			public static readonly string InternationalOperations = "InternationalOperations";
			public static readonly string InterviewPlace = "InterviewPlace";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string UserId = "UserId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string EconomicActivityCode = "EconomicActivityCode";
			public static readonly string SecondEconomicActivityCode = "SecondEconomicActivityCode";
			public static readonly string InterviewResultCode = "InterviewResultCode";
			public static readonly string PendingEvent = "PendingEvent";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int sarlaftId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.SarlaftId, sarlaftId);

		    return new PrimaryKey<T>(keys);
	    }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SarlaftId, null);

            return new PrimaryKey<T>(keys);
        }


        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
        public static PrimaryKey CreatePrimaryKey(int sarlaftId)
	    {
			return InternalCreatePrimaryKey<IndividualSarlaft>(sarlaftId);
		}
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<IndividualSarlaft>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FormNum.
        /// </summary>
        private string _formNum = null;
		/// <summary>
		/// Atributo para la propiedad Year.
		/// </summary>
        private int _year;
		/// <summary>
		/// Atributo para la propiedad RegistrationDate.
		/// </summary>
        private DateTime? _registrationDate = null;
		/// <summary>
		/// Atributo para la propiedad AuthorizedBy.
		/// </summary>
        private string _authorizedBy = null;
		/// <summary>
		/// Atributo para la propiedad FillingDate.
		/// </summary>
        private DateTime? _fillingDate = null;
		/// <summary>
		/// Atributo para la propiedad CheckDate.
		/// </summary>
        private DateTime? _checkDate = null;
		/// <summary>
		/// Atributo para la propiedad VerifyingEmployee.
		/// </summary>
        private string _verifyingEmployee = null;
		/// <summary>
		/// Atributo para la propiedad InterviewDate.
		/// </summary>
        private DateTime? _interviewDate = null;
		/// <summary>
		/// Atributo para la propiedad InterviewerName.
		/// </summary>
        private string _interviewerName = null;
		/// <summary>
		/// Atributo para la propiedad InternationalOperations.
		/// </summary>
        private bool _internationalOperations;
		/// <summary>
		/// Atributo para la propiedad InterviewPlace.
		/// </summary>
        private string _interviewPlace = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int _individualId;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad EconomicActivityCode.
		/// </summary>
        private int _economicActivityCode;
		/// <summary>
		/// Atributo para la propiedad SecondEconomicActivityCode.
		/// </summary>
        private int _secondEconomicActivityCode;
		/// <summary>
		/// Atributo para la propiedad InterviewResultCode.
		/// </summary>
        private int _interviewResultCode;
		/// <summary>
		/// Atributo para la propiedad PendingEvent.
		/// </summary>
        private bool _pendingEvent;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="sarlaftId">SarlaftId key property.</param>
	    public IndividualSarlaft(int sarlaftId):
			this(IndividualSarlaft.CreatePrimaryKey(sarlaftId), null)
	    {
	    }
        public IndividualSarlaft() :
          this(IndividualSarlaft.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public IndividualSarlaft(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad SarlaftId.
		/// </summary>
		/// <value>Propiedad SarlaftId.</value>
	    [
		DescriptionKey("SARLAFT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SARLAFT_ID", DbType=System.Data.DbType.String),
	    ]
        public int SarlaftId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.SarlaftId];
		    }
		    set
		    {
				this._primaryKey[Properties.SarlaftId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FormNum.
		/// </summary>
		/// <value>Propiedad FormNum.</value>
	    [
		DescriptionKey("FORM_NUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FORM_NUM", DbType=System.Data.DbType.String),
	    ]
        public string FormNum
	    {
		    get
		    {
			    return this._formNum;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.FormNum);
				}
				this._formNum = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Year.
		/// </summary>
		/// <value>Propiedad Year.</value>
	    [
		DescriptionKey("YEAR_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="YEAR", DbType=System.Data.DbType.String),
	    ]
        public int Year
	    {
		    get
		    {
			    return this._year;
		    }
		    set
		    {
				this._year = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegistrationDate
	    {
		    get
		    {
			    return this._registrationDate;
		    }
		    set
		    {
				this._registrationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AuthorizedBy.
		/// </summary>
		/// <value>Propiedad AuthorizedBy.</value>
	    [
		DescriptionKey("AUTHORIZED_BY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AUTHORIZED_BY", DbType=System.Data.DbType.String),
	    ]
        public string AuthorizedBy
	    {
		    get
		    {
			    return this._authorizedBy;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AuthorizedBy);
				}
				this._authorizedBy = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FillingDate.
		/// </summary>
		/// <value>Propiedad FillingDate.</value>
	    [
		DescriptionKey("FILLING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FILLING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? FillingDate
	    {
		    get
		    {
			    return this._fillingDate;
		    }
		    set
		    {
				this._fillingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckDate.
		/// </summary>
		/// <value>Propiedad CheckDate.</value>
	    [
		DescriptionKey("CHECK_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHECK_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CheckDate
	    {
		    get
		    {
			    return this._checkDate;
		    }
		    set
		    {
				this._checkDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad VerifyingEmployee.
		/// </summary>
		/// <value>Propiedad VerifyingEmployee.</value>
	    [
		DescriptionKey("VERIFYING_EMPLOYEE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="VERIFYING_EMPLOYEE", DbType=System.Data.DbType.String),
	    ]
        public string VerifyingEmployee
	    {
		    get
		    {
			    return this._verifyingEmployee;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.VerifyingEmployee);
				}
				this._verifyingEmployee = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InterviewDate.
		/// </summary>
		/// <value>Propiedad InterviewDate.</value>
	    [
		DescriptionKey("INTERVIEW_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INTERVIEW_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? InterviewDate
	    {
		    get
		    {
			    return this._interviewDate;
		    }
		    set
		    {
				this._interviewDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InterviewerName.
		/// </summary>
		/// <value>Propiedad InterviewerName.</value>
	    [
		DescriptionKey("INTERVIEWER_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INTERVIEWER_NAME", DbType=System.Data.DbType.String),
	    ]
        public string InterviewerName
	    {
		    get
		    {
			    return this._interviewerName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.InterviewerName);
				}
				this._interviewerName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InternationalOperations.
		/// </summary>
		/// <value>Propiedad InternationalOperations.</value>
	    [
		DescriptionKey("INTERNATIONAL_OPERATIONS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INTERNATIONAL_OPERATIONS", DbType=System.Data.DbType.String),
	    ]
        public bool InternationalOperations
	    {
		    get
		    {
			    return this._internationalOperations;
		    }
		    set
		    {
				this._internationalOperations = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InterviewPlace.
		/// </summary>
		/// <value>Propiedad InterviewPlace.</value>
	    [
		DescriptionKey("INTERVIEW_PLACE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INTERVIEW_PLACE", DbType=System.Data.DbType.String),
	    ]
        public string InterviewPlace
	    {
		    get
		    {
			    return this._interviewPlace;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.InterviewPlace);
				}
				this._interviewPlace = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EconomicActivityCode.
		/// </summary>
		/// <value>Propiedad EconomicActivityCode.</value>
	    [
		DescriptionKey("ECONOMIC_ACTIVITY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ECONOMIC_ACTIVITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int EconomicActivityCode
	    {
		    get
		    {
			    return this._economicActivityCode;
		    }
		    set
		    {
				this._economicActivityCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SecondEconomicActivityCode.
		/// </summary>
		/// <value>Propiedad SecondEconomicActivityCode.</value>
	    [
		DescriptionKey("SECOND_ECONOMIC_ACTIVITY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SECOND_ECONOMIC_ACTIVITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int SecondEconomicActivityCode
	    {
		    get
		    {
			    return this._secondEconomicActivityCode;
		    }
		    set
		    {
				this._secondEconomicActivityCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InterviewResultCode.
		/// </summary>
		/// <value>Propiedad InterviewResultCode.</value>
	    [
		DescriptionKey("INTERVIEW_RESULT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INTERVIEW_RESULT_CD", DbType=System.Data.DbType.String),
	    ]
        public int InterviewResultCode
	    {
		    get
		    {
			    return this._interviewResultCode;
		    }
		    set
		    {
				this._interviewResultCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PendingEvent.
		/// </summary>
		/// <value>Propiedad PendingEvent.</value>
	    [
		DescriptionKey("PENDING_EVENT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PENDING_EVENT", DbType=System.Data.DbType.String),
	    ]
        public bool PendingEvent
	    {
		    get
		    {
			    return this._pendingEvent;
		    }
		    set
		    {
				this._pendingEvent = value;
			}
	    }

    }
}