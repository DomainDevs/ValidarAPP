/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.CoProspect.dict v1.0
 * FileSize=3759 Header=253 CRC=2581764728
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad CoProspect.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.CoProspect.dict"),
    Serializable(),
    DescriptionKey("CO_PROSPECT_ENTITY"),
    TableMap(TableName = "CO_PROSPECT", Schema = "UP"),
    ]
    public partial class CoProspect :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProspectId = "ProspectId";
            public static readonly string VerifyDigit = "VerifyDigit";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="prospectId">Propiedad clave ProspectId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int prospectId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProspectId, prospectId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="prospectId">Propiedad clave ProspectId.</param>
        public static PrimaryKey CreatePrimaryKey(int prospectId)
        {
            return InternalCreatePrimaryKey<CoProspect>(prospectId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad VerifyDigit.
        /// </summary>
        private int? _verifyDigit = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="prospectId">ProspectId key property.</param>
        public CoProspect(int prospectId) :
            this(CoProspect.CreatePrimaryKey(prospectId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoProspect(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProspectId.
        /// </summary>
        /// <value>Propiedad ProspectId.</value>
        [
        DescriptionKey("PROSPECT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROSPECT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProspectId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProspectId];
            }
            set
            {
                this._primaryKey[Properties.ProspectId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VerifyDigit.
        /// </summary>
        /// <value>Propiedad VerifyDigit.</value>
        [
        DescriptionKey("VERIFY_DIGIT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "VERIFY_DIGIT", DbType = System.Data.DbType.String),
        ]
        public int? VerifyDigit
        {
            get
            {
                return this._verifyDigit;
            }
            set
            {
                this._verifyDigit = value;
            }
        }

    }
}