/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.ThirdParty.dict v1.0
 * FileSize=13128 Header=252 CRC=3334387254
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad Supplier.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.ThirdParty.dict"),
    Serializable(),
    DescriptionKey("THIRD_PARTY_ENTITY"),
    TableMap(TableName= "THIRD_PARTY", Schema="UP"),
    ]
    public partial class ThirdParty :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			
			public static readonly string ThirdPartyCode = "ThirdPartyCode";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string EnteredDate = "EnteredDate";
            public static readonly string ModificationDate = "ModificationDate";
            public static readonly string DeclinedDate = "DeclinedDate";
            public static readonly string DeclinedTypeCode = "DeclinedTypeCode";
            public static readonly string Annotation = "Annotation";
			
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="supplierCode">Propiedad clave SupplierCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int thirdPartyCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ThirdPartyCode, thirdPartyCode);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="supplierCode">Propiedad clave SupplierCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ThirdPartyCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="thirPartyCode">Propiedad clave SupplierCode.</param>
        public static PrimaryKey CreatePrimaryKey(int thirdPartyCode)
	    {
			return InternalCreatePrimaryKey<ThirdParty>(thirdPartyCode);
		}

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="thirPartyCode">Propiedad clave SupplierCode.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ThirdParty>();
        }
        #endregion

        //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad SupplierTypeCode.
		/// </summary>
        private int? _individualId;
		/// <summary>
		/// Atributo para la propiedad EnteredDate.
		/// </summary>
        private DateTime? _enteredDate = null;

        private DateTime? _modificationDate = null;
        /// <summary>
        /// Atributo para la propiedad DeclinedDate.
        /// </summary>
        private DateTime? _declinedDate = null;
		
		/// <summary>
		/// Atributo para la propiedad Observation.
		/// </summary>
        private string _annotation = null;
		/// <summary>
		/// Atributo para la propiedad SupplierDeclinedTypeCode.
		/// </summary>
        private int? _declinedTypeCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="thirdPartyCode">SupplierCode key property.</param>
	    public ThirdParty(int thirdPartyCode) :
			this(ThirdParty.CreatePrimaryKey(thirdPartyCode), null)
	    {
	    }

        /// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="thirdPartyCode">SupplierCode key property.</param>
	    public ThirdParty() :
            this(ThirdParty.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ThirdParty(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad SupplierCode.
		/// </summary>
		/// <value>Propiedad SupplierCode.</value>
	    [
		DescriptionKey("THIRD_PARTY_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="THIRD_PARTY_CD", DbType=System.Data.DbType.String),
	    ]
        public int ThirdPartyCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ThirdPartyCode];
		    }
		    set
            {
                this._primaryKey[Properties.ThirdPartyCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SupplierProfileCode.
		/// </summary>
		/// <value>Propiedad SupplierProfileCode.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EnteredDate.
		/// </summary>
		/// <value>Propiedad EnteredDate.</value>
	    [
		DescriptionKey("ENTERED_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENTERED_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EnteredDate
	    {
		    get
		    {
			    return this._enteredDate;
		    }
		    set
		    {
				this._enteredDate = value;
			}
	    }

        /// <summary>
		/// Devuelve o setea el valor de la propiedad EnteredDate.
		/// </summary>
		/// <value>Propiedad EnteredDate.</value>
	    [
        DescriptionKey("MODIFICATION_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MODIFICATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? ModificationDate
        {
            get
            {
                return this._modificationDate;
            }
            set
            {
                this._modificationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeclinedDate.
        /// </summary>
        /// <value>Propiedad DeclinedDate.</value>
        [
		DescriptionKey("DECLINED_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DECLINED_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DeclinedDate
	    {
		    get
		    {
			    return this._declinedDate;
		    }
		    set
		    {
				this._declinedDate = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SupplierDeclinedTypeCode.
        /// </summary>
        /// <value>Propiedad SupplierDeclinedTypeCode.</value>
        [
        DescriptionKey("DECLINED_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DECLINED_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? DeclinedTypeCode
        {
            get
            {
                return this._declinedTypeCode;
            }
            set
            {
                this._declinedTypeCode = value;
            }
        }
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Observation.
        /// </summary>
        /// <value>Propiedad Observation.</value>
        [
		DescriptionKey("ANNOTATION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ANNOTATION", DbType=System.Data.DbType.String),
	    ]
        public string Annotation
	    {
		    get
		    {
			    return this._annotation;
		    }
		    set
		    {
				this._annotation = value;
			}
	    }

		

    }
}