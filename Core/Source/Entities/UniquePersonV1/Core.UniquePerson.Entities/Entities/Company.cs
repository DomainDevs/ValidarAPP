/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: namespace.Company.dict v1.0
 * FileSize=13507 Header=223 CRC=1831650707
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad Company.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.Company.dict"),
    Serializable(),
    DescriptionKey("COMPANY_ENTITY"),
    TableMap(TableName = "COMPANY", Schema = "UP"),
    ]
    public partial class Company :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string IndividualTypeCode = "IndividualTypeCode";
            public static readonly string AtDataId = "AtDataId";
            public static readonly string AtPaymentId = "AtPaymentId";
            public static readonly string AtAgentAgencyId = "AtAgentAgencyId";
            public static readonly string OwnerRoleCode = "OwnerRoleCode";
            public static readonly string EconomicActivityCode = "EconomicActivityCode";
            public static readonly string TradeName = "TradeName";
            public static readonly string TributaryIdTypeCode = "TributaryIdTypeCode";
            public static readonly string TributaryIdNo = "TributaryIdNo";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string CompanyTypeCode = "CompanyTypeCode";
            public static readonly string BusinessLegalStatusCode = "BusinessLegalStatusCode";
            public static readonly string MarketSectorCode = "MarketSectorCode";
            public static readonly string ManagerName = "ManagerName";
            public static readonly string GeneralManagerName = "GeneralManagerName";
            public static readonly string LegalRepresentativeName = "LegalRepresentativeName";
            public static readonly string LrIdCardTypeCode = "LrIdCardTypeCode";
            public static readonly string LrIdCardNo = "LrIdCardNo";
            public static readonly string ContactName = "ContactName";
            public static readonly string ContactAdditionalInfo = "ContactAdditionalInfo";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Company>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId)
        {
            return InternalCreatePrimaryKey<Company>(individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualTypeCode.
        /// </summary>
        private int _individualTypeCode;
        /// <summary>
        /// Atributo para la propiedad AtDataId.
        /// </summary>
        private int _atDataId;
        /// <summary>
        /// Atributo para la propiedad AtPaymentId.
        /// </summary>
        private int _atPaymentId;
        /// <summary>
        /// Atributo para la propiedad AtAgentAgencyId.
        /// </summary>
        private int _atAgentAgencyId;
        /// <summary>
        /// Atributo para la propiedad OwnerRoleCode.
        /// </summary>
        private int? _ownerRoleCode = null;
        /// <summary>
        /// Atributo para la propiedad EconomicActivityCode.
        /// </summary>
        private int? _economicActivityCode = null;
        /// <summary>
        /// Atributo para la propiedad TradeName.
        /// </summary>
        private string _tradeName = null;
        /// <summary>
        /// Atributo para la propiedad TributaryIdTypeCode.
        /// </summary>
        private int _tributaryIdTypeCode;
        /// <summary>
        /// Atributo para la propiedad TributaryIdNo.
        /// </summary>
        private string _tributaryIdNo = null;
        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int _countryCode;
        /// <summary>
        /// Atributo para la propiedad CompanyTypeCode.
        /// </summary>
        private int _companyTypeCode;
        /// <summary>
        /// Atributo para la propiedad BusinessLegalStatusCode.
        /// </summary>
        private int? _businessLegalStatusCode = null;
        /// <summary>
        /// Atributo para la propiedad MarketSectorCode.
        /// </summary>
        private int? _marketSectorCode = null;
        /// <summary>
        /// Atributo para la propiedad ManagerName.
        /// </summary>
        private string _managerName = null;
        /// <summary>
        /// Atributo para la propiedad GeneralManagerName.
        /// </summary>
        private string _generalManagerName = null;
        /// <summary>
        /// Atributo para la propiedad LegalRepresentativeName.
        /// </summary>
        private string _legalRepresentativeName = null;
        /// <summary>
        /// Atributo para la propiedad LrIdCardTypeCode.
        /// </summary>
        private int? _lrIdCardTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad LrIdCardNo.
        /// </summary>
        private string _lrIdCardNo = null;
        /// <summary>
        /// Atributo para la propiedad ContactName.
        /// </summary>
        private string _contactName = null;
        /// <summary>
        /// Atributo para la propiedad ContactAdditionalInfo.
        /// </summary>
        private string _contactAdditionalInfo = null;
        /// <summary>
        /// CheckPayable
        /// </summary>
        private string _checkPayable = null;

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase
        /// </summary>
        public Company() :
            this(Company.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        public Company(int individualId) :
            this(Company.CreatePrimaryKey(individualId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Company(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualTypeCode.
        /// </summary>
        /// <value>Propiedad IndividualTypeCode.</value>
        [
        DescriptionKey("INDIVIDUAL_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int IndividualTypeCode
        {
            get
            {
                return this._individualTypeCode;
            }
            set
            {
                this._individualTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AtDataId.
        /// </summary>
        /// <value>Propiedad AtDataId.</value>
        [
        DescriptionKey("AT_DATA_ID_PROPERTY"),
        PersistentProperty()
        ]
        public int AtDataId
        {
            get
            {
                return this._atDataId;
            }
            set
            {
                this._atDataId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AtPaymentId.
        /// </summary>
        /// <value>Propiedad AtPaymentId.</value>
        [
        DescriptionKey("AT_PAYMENT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AT_PAYMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int AtPaymentId
        {
            get
            {
                return this._atPaymentId;
            }
            set
            {
                this._atPaymentId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AtAgentAgencyId.
        /// </summary>
        /// <value>Propiedad AtAgentAgencyId.</value>
        [
        DescriptionKey("AT_AGENT_AGENCY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AT_AGENT_AGENCY_ID", DbType = System.Data.DbType.String),
        ]
        public int AtAgentAgencyId
        {
            get
            {
                return this._atAgentAgencyId;
            }
            set
            {
                this._atAgentAgencyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OwnerRoleCode.
        /// </summary>
        /// <value>Propiedad OwnerRoleCode.</value>
        [
        DescriptionKey("OWNER_ROLE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OWNER_ROLE_CD", DbType = System.Data.DbType.String),
        ]
        public int? OwnerRoleCode
        {
            get
            {
                return this._ownerRoleCode;
            }
            set
            {
                this._ownerRoleCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EconomicActivityCode.
        /// </summary>
        /// <value>Propiedad EconomicActivityCode.</value>
        [
        DescriptionKey("ECONOMIC_ACTIVITY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ECONOMIC_ACTIVITY_CD", DbType = System.Data.DbType.String),
        ]
        public int? EconomicActivityCode
        {
            get
            {
                return this._economicActivityCode;
            }
            set
            {
                this._economicActivityCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TradeName.
        /// </summary>
        /// <value>Propiedad TradeName.</value>
        [
        DescriptionKey("TRADE_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TRADE_NAME", DbType = System.Data.DbType.String),
        ]
        public string TradeName
        {
            get
            {
                return this._tradeName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.TradeName);
                }
                this._tradeName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TributaryIdTypeCode.
        /// </summary>
        /// <value>Propiedad TributaryIdTypeCode.</value>
        [
        DescriptionKey("TRIBUTARY_ID_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TRIBUTARY_ID_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int TributaryIdTypeCode
        {
            get
            {
                return this._tributaryIdTypeCode;
            }
            set
            {
                this._tributaryIdTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TributaryIdNo.
        /// </summary>
        /// <value>Propiedad TributaryIdNo.</value>
        [
        DescriptionKey("TRIBUTARY_ID_NO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TRIBUTARY_ID_NO", DbType = System.Data.DbType.String),
        ]
        public string TributaryIdNo
        {
            get
            {
                return this._tributaryIdNo;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.TributaryIdNo);
                }
                this._tributaryIdNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int CountryCode
        {
            get
            {
                return this._countryCode;
            }
            set
            {
                this._countryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CompanyTypeCode.
        /// </summary>
        /// <value>Propiedad CompanyTypeCode.</value>
        [
        DescriptionKey("COMPANY_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COMPANY_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int CompanyTypeCode
        {
            get
            {
                return this._companyTypeCode;
            }
            set
            {
                this._companyTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BusinessLegalStatusCode.
        /// </summary>
        /// <value>Propiedad BusinessLegalStatusCode.</value>
        [
        DescriptionKey("BUSINESS_LEGAL_STATUS_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BUSINESS_LEGAL_STATUS_CD", DbType = System.Data.DbType.String),
        ]
        public int? BusinessLegalStatusCode
        {
            get
            {
                return this._businessLegalStatusCode;
            }
            set
            {
                this._businessLegalStatusCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MarketSectorCode.
        /// </summary>
        /// <value>Propiedad MarketSectorCode.</value>
        [
        DescriptionKey("MARKET_SECTOR_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MARKET_SECTOR_CD", DbType = System.Data.DbType.String),
        ]
        public int? MarketSectorCode
        {
            get
            {
                return this._marketSectorCode;
            }
            set
            {
                this._marketSectorCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ManagerName.
        /// </summary>
        /// <value>Propiedad ManagerName.</value>
        [
        DescriptionKey("MANAGER_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MANAGER_NAME", DbType = System.Data.DbType.String),
        ]
        public string ManagerName
        {
            get
            {
                return this._managerName;
            }
            set
            {
                this._managerName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GeneralManagerName.
        /// </summary>
        /// <value>Propiedad GeneralManagerName.</value>
        [
        DescriptionKey("GENERAL_MANAGER_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "GENERAL_MANAGER_NAME", DbType = System.Data.DbType.String),
        ]
        public string GeneralManagerName
        {
            get
            {
                return this._generalManagerName;
            }
            set
            {
                this._generalManagerName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LegalRepresentativeName.
        /// </summary>
        /// <value>Propiedad LegalRepresentativeName.</value>
        [
        DescriptionKey("LEGAL_REPRESENTATIVE_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LEGAL_REPRESENTATIVE_NAME", DbType = System.Data.DbType.String),
        ]
        public string LegalRepresentativeName
        {
            get
            {
                return this._legalRepresentativeName;
            }
            set
            {
                this._legalRepresentativeName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LrIdCardTypeCode.
        /// </summary>
        /// <value>Propiedad LrIdCardTypeCode.</value>
        [
        DescriptionKey("LR_ID_CARD_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LR_ID_CARD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? LrIdCardTypeCode
        {
            get
            {
                return this._lrIdCardTypeCode;
            }
            set
            {
                this._lrIdCardTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LrIdCardNo.
        /// </summary>
        /// <value>Propiedad LrIdCardNo.</value>
        [
        DescriptionKey("LR_ID_CARD_NO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LR_ID_CARD_NO", DbType = System.Data.DbType.String),
        ]
        public string LrIdCardNo
        {
            get
            {
                return this._lrIdCardNo;
            }
            set
            {
                this._lrIdCardNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ContactName.
        /// </summary>
        /// <value>Propiedad ContactName.</value>
        [
        DescriptionKey("CONTACT_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONTACT_NAME", DbType = System.Data.DbType.String),
        ]
        public string ContactName
        {
            get
            {
                return this._contactName;
            }
            set
            {
                this._contactName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ContactAdditionalInfo.
        /// </summary>
        /// <value>Propiedad ContactAdditionalInfo.</value>
        [
        DescriptionKey("CONTACT_ADDITIONAL_INFO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONTACT_ADDITIONAL_INFO", DbType = System.Data.DbType.String),
        ]
        public string ContactAdditionalInfo
        {
            get
            {
                return this._contactAdditionalInfo;
            }
            set
            {
                this._contactAdditionalInfo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CheckPayable.
        /// </summary>
        /// <value>Propiedad CheckPayable.</value>
        [
        DescriptionKey("CHECK_PAYABLE"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CHECK_PAYABLE", DbType = System.Data.DbType.String),
        ]
        public string CheckPayable
        {
            get
            {
                return this._checkPayable;
            }
            set
            {
                this._checkPayable = value;
            }
        }
    }
}