/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.DocumentsTypeRange.dict v1.0
 * FileSize=6466 Header=261 CRC=3600499723
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad DocumentsTypeRange.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.DocumentsTypeRange.dict"),
    Serializable(),
    DescriptionKey("DOCUMENTS_TYPE_RANGE_ENTITY"),
    TableMap(TableName = "DOCUMENTS_TYPE_RANGE", Schema = "UP"),
    ]
    public partial class DocumentsTypeRange :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string DocumentsTypeRangeCode = "DocumentsTypeRangeCode";
            public static readonly string IdCardTypeCode = "IdCardTypeCode";
            public static readonly string Gender = "Gender";
            public static readonly string IdCardNoFrom = "IdCardNoFrom";
            public static readonly string IdCardNoTo = "IdCardNoTo";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="documentsTypeRangeCode">Propiedad clave DocumentsTypeRangeCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int documentsTypeRangeCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.DocumentsTypeRangeCode, documentsTypeRangeCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="documentsTypeRangeCode">Propiedad clave DocumentsTypeRangeCode.</param>
        public static PrimaryKey CreatePrimaryKey(int documentsTypeRangeCode)
        {
            return InternalCreatePrimaryKey<DocumentsTypeRange>(documentsTypeRangeCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IdCardTypeCode.
        /// </summary>
        private int _idCardTypeCode;
        /// <summary>
        /// Atributo para la propiedad Gender.
        /// </summary>
        private string _gender = null;
        /// <summary>
        /// Atributo para la propiedad IdCardNoFrom.
        /// </summary>
        private string _idCardNoFrom = null;
        /// <summary>
        /// Atributo para la propiedad IdCardNoTo.
        /// </summary>
        private string _idCardNoTo = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="documentsTypeRangeCode">DocumentsTypeRangeCode key property.</param>
        public DocumentsTypeRange(int documentsTypeRangeCode) :
            this(DocumentsTypeRange.CreatePrimaryKey(documentsTypeRangeCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public DocumentsTypeRange(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentsTypeRangeCode.
        /// </summary>
        /// <value>Propiedad DocumentsTypeRangeCode.</value>
        [
        DescriptionKey("DOCUMENTS_TYPE_RANGE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "DOCUMENTS_TYPE_RANGE_CD", DbType = System.Data.DbType.String),
        ]
        public int DocumentsTypeRangeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.DocumentsTypeRangeCode];
            }
            set
            {
                this._primaryKey[Properties.DocumentsTypeRangeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardTypeCode.
        /// </summary>
        /// <value>Propiedad IdCardTypeCode.</value>
        [
        DescriptionKey("ID_CARD_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID_CARD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int IdCardTypeCode
        {
            get
            {
                return this._idCardTypeCode;
            }
            set
            {
                this._idCardTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Gender.
        /// </summary>
        /// <value>Propiedad Gender.</value>
        [
        DescriptionKey("GENDER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "GENDER", DbType = System.Data.DbType.String),
        ]
        public string Gender
        {
            get
            {
                return this._gender;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Gender);
                }
                this._gender = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardNoFrom.
        /// </summary>
        /// <value>Propiedad IdCardNoFrom.</value>
        [
        DescriptionKey("ID_CARD_NO_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID_CARD_NO_FROM", DbType = System.Data.DbType.String),
        ]
        public string IdCardNoFrom
        {
            get
            {
                return this._idCardNoFrom;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.IdCardNoFrom);
                }
                this._idCardNoFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardNoTo.
        /// </summary>
        /// <value>Propiedad IdCardNoTo.</value>
        [
        DescriptionKey("ID_CARD_NO_TO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID_CARD_NO_TO", DbType = System.Data.DbType.String),
        ]
        public string IdCardNoTo
        {
            get
            {
                return this._idCardNoTo;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.IdCardNoTo);
                }
                this._idCardNoTo = value;
            }
        }

    }
}