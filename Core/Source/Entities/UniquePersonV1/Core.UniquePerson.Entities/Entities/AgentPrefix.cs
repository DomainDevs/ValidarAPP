/**********************************
 * Code generated by DictEditor v1.0.1.1
 * Template: Sistran.Core.Application.UniquePersonV1.AgentPrefix.dict v0.0
 * MODIFICADO : 
 *    {MAC, 27/04/2004, Agregado de constructor que recibe el Id}
 **********************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Specialized;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.AgentPrefix.dict"),
    Serializable()
    ]
    public class AgentPrefix :
        BusinessObject
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string PrefixCode = "PrefixCode";

        }
        /// <summary>
        /// Create primary key for concrete class.
        /// </summary>
        /// <param name="concreteClass">Concrete class.</param>
        /// <param name="prefixCode">PrefixCode key property.</param>
        /// <param name="individualId">IndividualId key property.</param>
        /// <returns>Primary key.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass, int prefixCode, int individualId)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add("PrefixCode", prefixCode);
            keys.Add("IndividualId", individualId);

            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Create primary key for this class.
        /// </summary>
        /// <param name="prefixCode">PrefixCode key property.</param>
        /// <param name="individualId">IndividualId key property.</param>
        public static PrimaryKey CreatePrimaryKey(int prefixCode, int individualId)
        {
            return InternalCreatePrimaryKey(typeof(AgentPrefix), prefixCode, individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// PrefixCode property attribute.
        /// </summary>
        private int _prefixCode;
        /// <summary>
        /// IndividualId property attribute.
        /// </summary>
        private int _individualId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Construct an instance of the class with the specified primary 
        /// key and object engine.
        /// </summary>
        /// <param name="key">Primary key.</param>
        public AgentPrefix(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        { }

        /// <summary>
        /// Constructor basado en el Identificador de la entidad.
        /// </summary>
        /// <param name="prefixCode">
        /// Identificador de Ramo comercial utilizado para generar la 
        /// Primary Key.
        /// </param>
        /// <param name="individualId">
        /// Identificador de individuo utilizado para generar la Primary Key
        /// </param>
        public AgentPrefix(int prefixCode, int individualId) :
            base(AgentPrefix.CreatePrimaryKey(prefixCode, individualId),
            null)
        { }


        /// <summary>
        /// Return or set PrefixCode property.
        /// </summary>
        /// <value>PrefixCode property.</value>
        [
          DescriptionKey("PREFIX_CODE_PROPERTY"),
          PersistentProperty(IsKey = true, KeyType = "None"),
          ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

        /// <summary>
        /// Return or set IndividualId property.
        /// </summary>
        /// <value>IndividualId property.</value>
        [
          DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
          PersistentProperty(IsKey = true, KeyType = "None"),
          ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Set all property values.
        /// </summary>
        protected override void SetKeyPropertyValues(IDictionary keys)
        {
            this._prefixCode = (int)keys["PrefixCode"];
            this._individualId = (int)keys["IndividualId"];
        }

        /// <summary>
        /// Set all property values.
        /// </summary>
        public override void SetPropertyValues(IDictionary values)
        {
        }

        /// <summary>
        /// Get all property values.
        /// </summary>
        public override IDictionary GetPropertyValues()
        {
            ListDictionary values = new ListDictionary();


            return values;
        }

    }
}