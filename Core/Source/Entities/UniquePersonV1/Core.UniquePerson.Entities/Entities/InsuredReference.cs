/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.InsuredReference.dict v1.0
 * FileSize=9523 Header=258 CRC=649346809
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad InsuredReference.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.InsuredReference.dict"),
    Serializable(),
    DescriptionKey("INSURED_REFERENCE_ENTITY"),
    TableMap(TableName = "INSURED_REFERENCE", Schema = "UP"),
    ]
    public partial class InsuredReference :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string InsuredReferenceId = "InsuredReferenceId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string ReferenceTypeCode = "ReferenceTypeCode";
            public static readonly string ReferenceName = "ReferenceName";
            public static readonly string Address = "Address";
            public static readonly string PhoneNum = "PhoneNum";
            public static readonly string ProductName = "ProductName";
            public static readonly string ProductNum = "ProductNum";
            public static readonly string HasBankReference = "HasBankReference";
            public static readonly string HasTradeReference = "HasTradeReference";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="insuredReferenceId">Propiedad clave InsuredReferenceId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int insuredReferenceId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.InsuredReferenceId, insuredReferenceId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="insuredReferenceId">Propiedad clave InsuredReferenceId.</param>
        public static PrimaryKey CreatePrimaryKey(int insuredReferenceId)
        {
            return InternalCreatePrimaryKey<InsuredReference>(insuredReferenceId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        /// <summary>
        /// Atributo para la propiedad ReferenceTypeCode.
        /// </summary>
        private int _referenceTypeCode;
        /// <summary>
        /// Atributo para la propiedad ReferenceName.
        /// </summary>
        private string _referenceName = null;
        /// <summary>
        /// Atributo para la propiedad Address.
        /// </summary>
        private string _address = null;
        /// <summary>
        /// Atributo para la propiedad PhoneNum.
        /// </summary>
        private long? _phoneNum = null;
        /// <summary>
        /// Atributo para la propiedad ProductName.
        /// </summary>
        private string _productName = null;
        /// <summary>
        /// Atributo para la propiedad ProductNum.
        /// </summary>
        private string _productNum = null;
        /// <summary>
        /// Atributo para la propiedad HasBankReference.
        /// </summary>
        private bool _hasBankReference;
        /// <summary>
        /// Atributo para la propiedad HasTradeReference.
        /// </summary>
        private bool _hasTradeReference;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="insuredReferenceId">InsuredReferenceId key property.</param>
        public InsuredReference(int insuredReferenceId) :
            this(InsuredReference.CreatePrimaryKey(insuredReferenceId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public InsuredReference(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredReferenceId.
        /// </summary>
        /// <value>Propiedad InsuredReferenceId.</value>
        [
        DescriptionKey("INSURED_REFERENCE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INSURED_REFERENCE_ID", DbType = System.Data.DbType.String),
        ]
        public int InsuredReferenceId
        {
            get
            {
                return (int)this._primaryKey[Properties.InsuredReferenceId];
            }
            set
            {
                this._primaryKey[Properties.InsuredReferenceId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ReferenceTypeCode.
        /// </summary>
        /// <value>Propiedad ReferenceTypeCode.</value>
        [
        DescriptionKey("REFERENCE_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REFERENCE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int ReferenceTypeCode
        {
            get
            {
                return this._referenceTypeCode;
            }
            set
            {
                this._referenceTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ReferenceName.
        /// </summary>
        /// <value>Propiedad ReferenceName.</value>
        [
        DescriptionKey("REFERENCE_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "REFERENCE_NAME", DbType = System.Data.DbType.String),
        ]
        public string ReferenceName
        {
            get
            {
                return this._referenceName;
            }
            set
            {
                this._referenceName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Address.
        /// </summary>
        /// <value>Propiedad Address.</value>
        [
        DescriptionKey("ADDRESS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ADDRESS", DbType = System.Data.DbType.String),
        ]
        public string Address
        {
            get
            {
                return this._address;
            }
            set
            {
                this._address = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PhoneNum.
        /// </summary>
        /// <value>Propiedad PhoneNum.</value>
        [
        DescriptionKey("PHONE_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PHONE_NUM", DbType = System.Data.DbType.String),
        ]
        public long? PhoneNum
        {
            get
            {
                return this._phoneNum;
            }
            set
            {
                this._phoneNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductName.
        /// </summary>
        /// <value>Propiedad ProductName.</value>
        [
        DescriptionKey("PRODUCT_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRODUCT_NAME", DbType = System.Data.DbType.String),
        ]
        public string ProductName
        {
            get
            {
                return this._productName;
            }
            set
            {
                this._productName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductNum.
        /// </summary>
        /// <value>Propiedad ProductNum.</value>
        [
        DescriptionKey("PRODUCT_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRODUCT_NUM", DbType = System.Data.DbType.String),
        ]
        public string ProductNum
        {
            get
            {
                return this._productNum;
            }
            set
            {
                this._productNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HasBankReference.
        /// </summary>
        /// <value>Propiedad HasBankReference.</value>
        [
        DescriptionKey("HAS_BANK_REFERENCE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "HAS_BANK_REFERENCE", DbType = System.Data.DbType.String),
        ]
        public bool HasBankReference
        {
            get
            {
                return this._hasBankReference;
            }
            set
            {
                this._hasBankReference = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HasTradeReference.
        /// </summary>
        /// <value>Propiedad HasTradeReference.</value>
        [
        DescriptionKey("HAS_TRADE_REFERENCE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "HAS_TRADE_REFERENCE", DbType = System.Data.DbType.String),
        ]
        public bool HasTradeReference
        {
            get
            {
                return this._hasTradeReference;
            }
            set
            {
                this._hasTradeReference = value;
            }
        }

    }
}