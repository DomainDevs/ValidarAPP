/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.ProviderSpeciality.dict v1.0
 * FileSize=4782 Header=268 CRC=3404763183
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad ProviderSpeciality.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.ProviderSpeciality.dict"),
    Serializable(),
    DescriptionKey("PROVIDER_SPECIALITY_ENTITY"),
    TableMap(TableName = "PROVIDER_SPECIALITY", Schema = "UP"),
    ]
    public partial class ProviderSpeciality :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProviderSpecialityCode = "ProviderSpecialityCode";
            public static readonly string ProviderCode = "ProviderCode";
            public static readonly string SpecialityCode = "SpecialityCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>        
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProviderSpecialityCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="providerSpecialityCode">Propiedad clave ProviderSpecialityCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int providerSpecialityCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProviderSpecialityCode, providerSpecialityCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ProviderSpeciality>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="providerSpecialityCode">Propiedad clave ProviderSpecialityCode.</param>
        public static PrimaryKey CreatePrimaryKey(int providerSpecialityCode)
        {
            return InternalCreatePrimaryKey<ProviderSpeciality>(providerSpecialityCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProviderCode.
        /// </summary>
        private int _providerCode;
        /// <summary>
        /// Atributo para la propiedad SpecialityCode.
        /// </summary>
        private int _specialityCode;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public ProviderSpeciality() :
            this(ProviderSpeciality.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="providerSpecialityCode">ProviderSpecialityCode key property.</param>
        public ProviderSpeciality(int providerSpecialityCode) :
            this(ProviderSpeciality.CreatePrimaryKey(providerSpecialityCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ProviderSpeciality(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProviderSpecialityCode.
        /// </summary>
        /// <value>Propiedad ProviderSpecialityCode.</value>
        [
        DescriptionKey("PROVIDER_SPECIALITY_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROVIDER_SPECIALITY_CD", DbType = System.Data.DbType.String),
        ]
        public int ProviderSpecialityCode
        {
            get
            {
                return (int)this._primaryKey[Properties.ProviderSpecialityCode];
            }
            set
            {
                this._primaryKey[Properties.ProviderSpecialityCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProviderCode.
        /// </summary>
        /// <value>Propiedad ProviderCode.</value>
        [
        DescriptionKey("PROVIDER_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROVIDER_CD", DbType = System.Data.DbType.String),
        ]
        public int ProviderCode
        {
            get
            {
                return this._providerCode;
            }
            set
            {
                this._providerCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SpecialityCode.
        /// </summary>
        /// <value>Propiedad SpecialityCode.</value>
        [
        DescriptionKey("SPECIALITY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SPECIALITY_CD", DbType = System.Data.DbType.String),
        ]
        public int SpecialityCode
        {
            get
            {
                return this._specialityCode;
            }
            set
            {
                this._specialityCode = value;
            }
        }

    }
}