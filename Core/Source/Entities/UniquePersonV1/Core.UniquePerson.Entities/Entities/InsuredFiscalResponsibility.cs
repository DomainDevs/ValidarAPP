/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.InsuredFiscalResponsibility.dict v1.0
 * FileSize=5194 Header=287 CRC=2360795334
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad InsuredFiscalResponsibility.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.InsuredFiscalResponsibility.dict"),
    Serializable(),
    DescriptionKey("INSURED_FISCAL_RESPONSIBILITY_ENTITY"),
    TableMap(TableName="INSURED_FISCAL_RESPONSIBILITY", Schema="UP"),
    ]
    public partial class InsuredFiscalResponsibility :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string InsuredCode = "InsuredCode";
			public static readonly string FiscalResponsibilityId = "FiscalResponsibilityId";
		}

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);

            return new PrimaryKey<T>(keys);
        }


        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id, int individualId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
	    }

        /// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<InsuredFiscalResponsibility>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id, int individualId)
	    {
			return InternalCreatePrimaryKey<InsuredFiscalResponsibility>(id, individualId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int _individualId;
		/// <summary>
		/// Atributo para la propiedad InsuredCode.
		/// </summary>
        private int _insuredCode;
		/// <summary>
		/// Atributo para la propiedad FiscalResponsibilityId.
		/// </summary>
        private int _fiscalResponsibilityId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public InsuredFiscalResponsibility() :
            this(InsuredFiscalResponsibility.CreatePrimaryKey(), null)
        {
        }


        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public InsuredFiscalResponsibility(int id, int individualId) :
			this(InsuredFiscalResponsibility.CreatePrimaryKey(id, individualId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public InsuredFiscalResponsibility(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredCode.
		/// </summary>
		/// <value>Propiedad InsuredCode.</value>
	    [
		DescriptionKey("INSURED_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INSURED_CD", DbType=System.Data.DbType.String),
	    ]
        public int InsuredCode
	    {
		    get
		    {
			    return this._insuredCode;
		    }
		    set
		    {
				this._insuredCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FiscalResponsibilityId.
		/// </summary>
		/// <value>Propiedad FiscalResponsibilityId.</value>
	    [
		DescriptionKey("FISCAL_RESPONSIBILITY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FISCAL_RESPONSIBILITY_ID", DbType=System.Data.DbType.String),
	    ]
        public int FiscalResponsibilityId
	    {
		    get
		    {
			    return this._fiscalResponsibilityId;
		    }
		    set
		    {
				this._fiscalResponsibilityId = value;
			}
	    }

    }
}