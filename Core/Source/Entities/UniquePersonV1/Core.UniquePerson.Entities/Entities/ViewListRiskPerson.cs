/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.ViewListRiskPerson.dict v1.0
 * FileSize=7669 Header=263 CRC=2310341890
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad ViewListRiskPerson.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.ViewListRiskPerson.dict"),
    Serializable(),
    DescriptionKey("VIEW_LIST_RISK_PERSON_ENTITY"),
    TableMap(TableName = "VIEW_LIST_RISK_PERSON", Schema = "UP"),
    ]
    public partial class ViewListRiskPerson :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string DocumentNumber = "DocumentNumber";
            public static readonly string FullName = "FullName";
            public static readonly string ProcessId = "ProcessId";
            public static readonly string RegistrationDate = "RegistrationDate";
            public static readonly string RiskListCode = "RiskListCode";
            public static readonly string Description = "Description";
            public static readonly string RiskListType = "RiskListType";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="riskListCode">Propiedad clave RiskListCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RiskListCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="riskListCode">Propiedad clave RiskListCode.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ViewListRiskPerson>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DocumentNumber.
        /// </summary>
        private string _documentNumber = null;
        private string[] _documentNumberSplit = null;
        /// <summary>
        /// Atributo para la propiedad FullName.
        /// </summary>
        private string _fullName = null;
        private string[] _fullNameSplit = null;
        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private int _processId;
        private int _riskListCode;
        /// <summary>
        /// Atributo para la propiedad RegistrationDate.
        /// </summary>
        private DateTime _registrationDate;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad RiskListType.
        /// </summary>
        private string _riskListType = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="riskListCode">RiskListCode key property.</param>
        public ViewListRiskPerson() :
            this(ViewListRiskPerson.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ViewListRiskPerson(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentNumber.
        /// </summary>
        /// <value>Propiedad DocumentNumber.</value>
        [
        DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DOCUMENT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string DocumentNumber
        {
            get
            {
                return this._documentNumber;
            }
            set
            {
                this._documentNumber = value.Trim().ToLowerInvariant();
            }
        }
        public string[] DocumentNumberSplit
        {
            get
            {
                if (_documentNumberSplit == null)
                {
                    this._documentNumberSplit = this._documentNumber.Split(' ');
                }

                return this._documentNumberSplit;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FullName.
        /// </summary>
        /// <value>Propiedad FullName.</value>
        [
        DescriptionKey("FULL_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FULL_NAME", DbType = System.Data.DbType.String),
        ]
        public string FullName
        {
            get
            {
                return this._fullName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.FullName);
                }
                this._fullName = value.Trim().ToLowerInvariant();
            }
        }
        public string[] FullNameSplit
        {
            get
            {
                if (_fullNameSplit == null)
                {
                    this._fullNameSplit = this._fullName.Split(' ');
                }

                return this._fullNameSplit;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return this._processId;
            }
            set
            {
                this._processId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RegistrationDate.
        /// </summary>
        /// <value>Propiedad RegistrationDate.</value>
        [
        DescriptionKey("REGISTRATION_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REGISTRATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime RegistrationDate
        {
            get
            {
                return this._registrationDate;
            }
            set
            {
                this._registrationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskListCode.
        /// </summary>
        /// <value>Propiedad RiskListCode.</value>
        [
        DescriptionKey("RISK_LIST_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_LIST_CD", DbType = System.Data.DbType.String),
        ]
        public int RiskListCode
        {
            get
            {
                return this._riskListCode;
            }
            set
            {
                this._riskListCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskListType.
        /// </summary>
        /// <value>Propiedad RiskListType.</value>
        [
        DescriptionKey("RISK_LIST_TYPE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_LIST_TYPE", DbType = System.Data.DbType.String),
        ]
        public string RiskListType
        {
            get
            {
                return this._riskListType;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.RiskListType);
                }
                this._riskListType = value;
            }
        }

    }
}