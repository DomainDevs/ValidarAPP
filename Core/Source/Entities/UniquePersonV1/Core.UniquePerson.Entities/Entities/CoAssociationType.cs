/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: namespaces.CoAssociationType.dict v1.0
 * FileSize=6105 Header=233 CRC=4003837833
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad CoAssociationType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.CoAssociationType.dict"),
    Serializable(),
    DescriptionKey("CO_ASSOCIATION_TYPE_ENTITY"),
    TableMap(TableName = "CO_ASSOCIATION_TYPE", Schema = "UP"),
    ]
    public partial class CoAssociationType :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string AssociationTypeCode = "AssociationTypeCode";
            public static readonly string Description = "Description";
            public static readonly string IsFuture = "IsFuture";
            public static readonly string IsConsortium = "IsConsortium";
            public static readonly string IdCardTypeCode = "IdCardTypeCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="associationTypeCode">Propiedad clave AssociationTypeCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int associationTypeCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AssociationTypeCode, associationTypeCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="associationTypeCode">Propiedad clave AssociationTypeCode.</param>
        public static PrimaryKey CreatePrimaryKey(int associationTypeCode)
        {
            return InternalCreatePrimaryKey<CoAssociationType>(associationTypeCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad IsFuture.
        /// </summary>
        private bool _isFuture;
        /// <summary>
        /// Atributo para la propiedad IsConsortium.
        /// </summary>
        private bool _isConsortium;
        /// <summary>
        /// Atributo para la propiedad IdCardTypeCode.
        /// </summary>
        private int? _idCardTypeCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="associationTypeCode">AssociationTypeCode key property.</param>
        public CoAssociationType(int associationTypeCode) :
            this(CoAssociationType.CreatePrimaryKey(associationTypeCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoAssociationType(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad AssociationTypeCode.
        /// </summary>
        /// <value>Propiedad AssociationTypeCode.</value>
        [
        DescriptionKey("ASSOCIATION_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ASSOCIATION_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int AssociationTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.AssociationTypeCode];
            }
            set
            {
                this._primaryKey[Properties.AssociationTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsFuture.
        /// </summary>
        /// <value>Propiedad IsFuture.</value>
        [
        DescriptionKey("IS_FUTURE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_FUTURE", DbType = System.Data.DbType.String),
        ]
        public bool IsFuture
        {
            get
            {
                return this._isFuture;
            }
            set
            {
                this._isFuture = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsConsortium.
        /// </summary>
        /// <value>Propiedad IsConsortium.</value>
        [
        DescriptionKey("IS_CONSORTIUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_CONSORTIUM", DbType = System.Data.DbType.String),
        ]
        public bool IsConsortium
        {
            get
            {
                return this._isConsortium;
            }
            set
            {
                this._isConsortium = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardTypeCode.
        /// </summary>
        /// <value>Propiedad IdCardTypeCode.</value>
        [
        DescriptionKey("ID_CARD_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ID_CARD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? IdCardTypeCode
        {
            get
            {
                return this._idCardTypeCode;
            }
            set
            {
                this._idCardTypeCode = value;
            }
        }

    }
}