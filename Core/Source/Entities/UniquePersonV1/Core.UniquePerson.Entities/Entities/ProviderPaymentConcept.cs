/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.ProviderPaymentConcept.dict v1.0
 * FileSize=4914 Header=272 CRC=1836500691
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad ProviderPaymentConcept.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.ProviderPaymentConcept.dict"),
    Serializable(),
    DescriptionKey("PROVIDER_PAYMENT_CONCEPT_ENTITY"),
    TableMap(TableName = "PROVIDER_PAYMENT_CONCEPT", Schema = "UP"),
    ]
    public partial class ProviderPaymentConcept :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProviderPaymentConceptId = "ProviderPaymentConceptId";
            public static readonly string ProviderCode = "ProviderCode";
            public static readonly string PaymentConceptCode = "PaymentConceptCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>        
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProviderPaymentConceptId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="providerPaymentConceptId">Propiedad clave ProviderPaymentConceptId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int providerPaymentConceptId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProviderPaymentConceptId, providerPaymentConceptId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="providerPaymentConceptId">Propiedad clave ProviderPaymentConceptId.</param>
        public static PrimaryKey CreatePrimaryKey(int providerPaymentConceptId)
        {
            return InternalCreatePrimaryKey<ProviderPaymentConcept>(providerPaymentConceptId);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ProviderPaymentConcept>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProviderCode.
        /// </summary>
        private int _providerCode;
        /// <summary>
        /// Atributo para la propiedad PaymentConceptCode.
        /// </summary>
        private int _paymentConceptCode;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public ProviderPaymentConcept() :
            this(ProviderPaymentConcept.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="providerPaymentConceptId">ProviderPaymentConceptId key property.</param>
        public ProviderPaymentConcept(int providerPaymentConceptId) :
            this(ProviderPaymentConcept.CreatePrimaryKey(providerPaymentConceptId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ProviderPaymentConcept(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProviderPaymentConceptId.
        /// </summary>
        /// <value>Propiedad ProviderPaymentConceptId.</value>
        [
        DescriptionKey("PROVIDER_PAYMENT_CONCEPT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROVIDER_PAYMENT_CONCEPT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProviderPaymentConceptId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProviderPaymentConceptId];
            }
            set
            {
                this._primaryKey[Properties.ProviderPaymentConceptId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProviderCode.
        /// </summary>
        /// <value>Propiedad ProviderCode.</value>
        [
        DescriptionKey("PROVIDER_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROVIDER_CD", DbType = System.Data.DbType.String),
        ]
        public int ProviderCode
        {
            get
            {
                return this._providerCode;
            }
            set
            {
                this._providerCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentConceptCode.
        /// </summary>
        /// <value>Propiedad PaymentConceptCode.</value>
        [
        DescriptionKey("PAYMENT_CONCEPT_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_CONCEPT_CD", DbType = System.Data.DbType.String),
        ]
        public int PaymentConceptCode
        {
            get
            {
                return this._paymentConceptCode;
            }
            set
            {
                this._paymentConceptCode = value;
            }
        }

    }
}