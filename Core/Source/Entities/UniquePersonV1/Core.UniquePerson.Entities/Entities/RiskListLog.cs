/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.RiskListLog.dict v1.0
 * FileSize=17224 Header=254 CRC=453091987
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad RiskListLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.RiskListLog.dict"),
    Serializable(),
    DescriptionKey("RISK_LIST_LOG_ENTITY"),
    TableMap(TableName = "RISK_LIST_LOG", Schema = "UP"),
    ]
    public partial class RiskListLog :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RiskListLogCode = "RiskListLogCode";
            public static readonly string ModuleCode = "ModuleCode";
            public static readonly string DescriptionModule = "DescriptionModule";
            public static readonly string SubmodulesCode = "SubmodulesCode";
            public static readonly string DescriptionSubmodulle = "DescriptionSubmodulle";
            public static readonly string IdCardTypeCode = "IdCardTypeCode";
            public static readonly string IdCardNo = "IdCardNo";
            public static readonly string DescriptionCardType = "DescriptionCardType";
            public static readonly string TempId = "TempId";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string DescriptionBranch = "DescriptionBranch";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string DescriptionPrefix = "DescriptionPrefix";
            public static readonly string DocumentNum = "DocumentNum";
            public static readonly string RiskListCode = "RiskListCode";
            public static readonly string DescriptionRiskList = "DescriptionRiskList";
            public static readonly string AccessedDate = "AccessedDate";
            public static readonly string Observation = "Observation";
            public static readonly string UserId = "UserId";
            public static readonly string AccountName = "AccountName";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="riskListLogCode">Propiedad clave RiskListLogCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int riskListLogCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RiskListLogCode, riskListLogCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="riskListLogCode">Propiedad clave RiskListLogCode.</param>
        public static PrimaryKey CreatePrimaryKey(int riskListLogCode)
        {
            return InternalCreatePrimaryKey<RiskListLog>(riskListLogCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ModuleCode.
        /// </summary>
        private int _moduleCode;
        /// <summary>
        /// Atributo para la propiedad DescriptionModule.
        /// </summary>
        private string _descriptionModule = null;
        /// <summary>
        /// Atributo para la propiedad SubmodulesCode.
        /// </summary>
        private int _submodulesCode;
        /// <summary>
        /// Atributo para la propiedad DescriptionSubmodulle.
        /// </summary>
        private string _descriptionSubmodulle = null;
        /// <summary>
        /// Atributo para la propiedad IdCardTypeCode.
        /// </summary>
        private int _idCardTypeCode;
        /// <summary>
        /// Atributo para la propiedad IdCardNo.
        /// </summary>
        private string _idCardNo = null;
        /// <summary>
        /// Atributo para la propiedad DescriptionCardType.
        /// </summary>
        private string _descriptionCardType = null;
        /// <summary>
        /// Atributo para la propiedad TempId.
        /// </summary>
        private int? _tempId = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int? _branchCode = null;
        /// <summary>
        /// Atributo para la propiedad DescriptionBranch.
        /// </summary>
        private string _descriptionBranch = null;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int? _prefixCode = null;
        /// <summary>
        /// Atributo para la propiedad DescriptionPrefix.
        /// </summary>
        private string _descriptionPrefix = null;
        /// <summary>
        /// Atributo para la propiedad DocumentNum.
        /// </summary>
        private decimal? _documentNum = null;
        /// <summary>
        /// Atributo para la propiedad RiskListCode.
        /// </summary>
        private int _riskListCode;
        /// <summary>
        /// Atributo para la propiedad DescriptionRiskList.
        /// </summary>
        private string _descriptionRiskList = null;
        /// <summary>
        /// Atributo para la propiedad AccessedDate.
        /// </summary>
        private DateTime _accessedDate;
        /// <summary>
        /// Atributo para la propiedad Observation.
        /// </summary>
        private string _observation = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int _userId;
        /// <summary>
        /// Atributo para la propiedad AccountName.
        /// </summary>
        private string _accountName = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="riskListLogCode">RiskListLogCode key property.</param>
        public RiskListLog(int riskListLogCode) :
            this(RiskListLog.CreatePrimaryKey(riskListLogCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RiskListLog(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskListLogCode.
        /// </summary>
        /// <value>Propiedad RiskListLogCode.</value>
        [
        DescriptionKey("RISK_LIST_LOG_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_LIST_LOG_CD", DbType = System.Data.DbType.String),
        ]
        public int RiskListLogCode
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskListLogCode];
            }
            set
            {
                this._primaryKey[Properties.RiskListLogCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ModuleCode.
        /// </summary>
        /// <value>Propiedad ModuleCode.</value>
        [
        DescriptionKey("MODULE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MODULE_CD", DbType = System.Data.DbType.String),
        ]
        public int ModuleCode
        {
            get
            {
                return this._moduleCode;
            }
            set
            {
                this._moduleCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionModule.
        /// </summary>
        /// <value>Propiedad DescriptionModule.</value>
        [
        DescriptionKey("DESCRIPTION_MODULE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION_MODULE", DbType = System.Data.DbType.String),
        ]
        public string DescriptionModule
        {
            get
            {
                return this._descriptionModule;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.DescriptionModule);
                }
                this._descriptionModule = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubmodulesCode.
        /// </summary>
        /// <value>Propiedad SubmodulesCode.</value>
        [
        DescriptionKey("SUBMODULES_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SUBMODULES_CD", DbType = System.Data.DbType.String),
        ]
        public int SubmodulesCode
        {
            get
            {
                return this._submodulesCode;
            }
            set
            {
                this._submodulesCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionSubmodulle.
        /// </summary>
        /// <value>Propiedad DescriptionSubmodulle.</value>
        [
        DescriptionKey("DESCRIPTION_SUBMODULLE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION_SUBMODULLE", DbType = System.Data.DbType.String),
        ]
        public string DescriptionSubmodulle
        {
            get
            {
                return this._descriptionSubmodulle;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.DescriptionSubmodulle);
                }
                this._descriptionSubmodulle = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardTypeCode.
        /// </summary>
        /// <value>Propiedad IdCardTypeCode.</value>
        [
        DescriptionKey("ID_CARD_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID_CARD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int IdCardTypeCode
        {
            get
            {
                return this._idCardTypeCode;
            }
            set
            {
                this._idCardTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardNo.
        /// </summary>
        /// <value>Propiedad IdCardNo.</value>
        [
        DescriptionKey("ID_CARD_NO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID_CARD_NO", DbType = System.Data.DbType.String),
        ]
        public string IdCardNo
        {
            get
            {
                return this._idCardNo;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.IdCardNo);
                }
                this._idCardNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionCardType.
        /// </summary>
        /// <value>Propiedad DescriptionCardType.</value>
        [
        DescriptionKey("DESCRIPTION_CARD_TYPE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION_CARD_TYPE", DbType = System.Data.DbType.String),
        ]
        public string DescriptionCardType
        {
            get
            {
                return this._descriptionCardType;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.DescriptionCardType);
                }
                this._descriptionCardType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int? TempId
        {
            get
            {
                return this._tempId;
            }
            set
            {
                this._tempId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int? BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionBranch.
        /// </summary>
        /// <value>Propiedad DescriptionBranch.</value>
        [
        DescriptionKey("DESCRIPTION_BRANCH_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_BRANCH", DbType = System.Data.DbType.String),
        ]
        public string DescriptionBranch
        {
            get
            {
                return this._descriptionBranch;
            }
            set
            {
                this._descriptionBranch = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int? PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionPrefix.
        /// </summary>
        /// <value>Propiedad DescriptionPrefix.</value>
        [
        DescriptionKey("DESCRIPTION_PREFIX_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_PREFIX", DbType = System.Data.DbType.String),
        ]
        public string DescriptionPrefix
        {
            get
            {
                return this._descriptionPrefix;
            }
            set
            {
                this._descriptionPrefix = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentNum.
        /// </summary>
        /// <value>Propiedad DocumentNum.</value>
        [
        DescriptionKey("DOCUMENT_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DOCUMENT_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? DocumentNum
        {
            get
            {
                return this._documentNum;
            }
            set
            {
                this._documentNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskListCode.
        /// </summary>
        /// <value>Propiedad RiskListCode.</value>
        [
        DescriptionKey("RISK_LIST_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_LIST_CD", DbType = System.Data.DbType.String),
        ]
        public int RiskListCode
        {
            get
            {
                return this._riskListCode;
            }
            set
            {
                this._riskListCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionRiskList.
        /// </summary>
        /// <value>Propiedad DescriptionRiskList.</value>
        [
        DescriptionKey("DESCRIPTION_RISK_LIST_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION_RISK_LIST", DbType = System.Data.DbType.String),
        ]
        public string DescriptionRiskList
        {
            get
            {
                return this._descriptionRiskList;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.DescriptionRiskList);
                }
                this._descriptionRiskList = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccessedDate.
        /// </summary>
        /// <value>Propiedad AccessedDate.</value>
        [
        DescriptionKey("ACCESSED_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ACCESSED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime AccessedDate
        {
            get
            {
                return this._accessedDate;
            }
            set
            {
                this._accessedDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Observation.
        /// </summary>
        /// <value>Propiedad Observation.</value>
        [
        DescriptionKey("OBSERVATION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OBSERVATION", DbType = System.Data.DbType.String),
        ]
        public string Observation
        {
            get
            {
                return this._observation;
            }
            set
            {
                this._observation = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountName.
        /// </summary>
        /// <value>Propiedad AccountName.</value>
        [
        DescriptionKey("ACCOUNT_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ACCOUNT_NAME", DbType = System.Data.DbType.String),
        ]
        public string AccountName
        {
            get
            {
                return this._accountName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
                }
                this._accountName = value;
            }
        }

    }
}