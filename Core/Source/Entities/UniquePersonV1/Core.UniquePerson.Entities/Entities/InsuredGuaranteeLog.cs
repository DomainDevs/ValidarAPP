/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.InsuredGuaranteeLog.dict v1.0
 * FileSize=7780 Header=269 CRC=3658662633
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad InsuredGuaranteeLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.InsuredGuaranteeLog.dict"),
    Serializable(),
    DescriptionKey("INSURED_GUARANTEE_LOG_ENTITY"),
    TableMap(TableName = "INSURED_GUARANTEE_LOG", Schema = "UP"),
    ]
    public partial class InsuredGuaranteeLog :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string GuaranteeId = "GuaranteeId";
            public static readonly string GuaranteeStatusCode = "GuaranteeStatusCode";
            public static readonly string UserId = "UserId";
            public static readonly string LogDate = "LogDate";
            public static readonly string Description = "Description";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="guaranteeId">Propiedad clave GuaranteeId.</param>
        /// <param name="guaranteeStatusCode">Propiedad clave GuaranteeStatusCode.</param>
        /// <param name="userId">Propiedad clave UserId.</param>
        /// <param name="logDate">Propiedad clave LogDate.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int guaranteeId, int guaranteeStatusCode, int userId, DateTime logDate)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.GuaranteeId, guaranteeId);
            keys.Add(Properties.GuaranteeStatusCode, guaranteeStatusCode);
            keys.Add(Properties.UserId, userId);
            keys.Add(Properties.LogDate, logDate);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="guaranteeId">Propiedad clave GuaranteeId.</param>
        /// <param name="guaranteeStatusCode">Propiedad clave GuaranteeStatusCode.</param>
        /// <param name="userId">Propiedad clave UserId.</param>
        /// <param name="logDate">Propiedad clave LogDate.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId, int guaranteeId, int guaranteeStatusCode, int userId, DateTime logDate)
        {
            return InternalCreatePrimaryKey<InsuredGuaranteeLog>(individualId, guaranteeId, guaranteeStatusCode, userId, logDate);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="guaranteeId">GuaranteeId key property.</param>
        /// <param name="guaranteeStatusCode">GuaranteeStatusCode key property.</param>
        /// <param name="userId">UserId key property.</param>
        /// <param name="logDate">LogDate key property.</param>
        public InsuredGuaranteeLog(int individualId, int guaranteeId, int guaranteeStatusCode, int userId, DateTime logDate) :
            this(InsuredGuaranteeLog.CreatePrimaryKey(individualId, guaranteeId, guaranteeStatusCode, userId, logDate), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public InsuredGuaranteeLog(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GuaranteeId.
        /// </summary>
        /// <value>Propiedad GuaranteeId.</value>
        [
        DescriptionKey("GUARANTEE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GUARANTEE_ID", DbType = System.Data.DbType.String),
        ]
        public int GuaranteeId
        {
            get
            {
                return (int)this._primaryKey[Properties.GuaranteeId];
            }
            set
            {
                this._primaryKey[Properties.GuaranteeId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GuaranteeStatusCode.
        /// </summary>
        /// <value>Propiedad GuaranteeStatusCode.</value>
        [
        DescriptionKey("GUARANTEE_STATUS_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GUARANTEE_STATUS_CD", DbType = System.Data.DbType.String),
        ]
        public int GuaranteeStatusCode
        {
            get
            {
                return (int)this._primaryKey[Properties.GuaranteeStatusCode];
            }
            set
            {
                this._primaryKey[Properties.GuaranteeStatusCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return (int)this._primaryKey[Properties.UserId];
            }
            set
            {
                this._primaryKey[Properties.UserId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LogDate.
        /// </summary>
        /// <value>Propiedad LogDate.</value>
        [
        DescriptionKey("LOG_DATE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "LOG_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime LogDate
        {
            get
            {
                return (DateTime)this._primaryKey[Properties.LogDate];
            }
            set
            {
                this._primaryKey[Properties.LogDate] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

    }
}