/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.RiskListPerson.dict v1.0
 * FileSize=9715 Header=259 CRC=3441999142
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad RiskListPerson.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.RiskListPerson.dict"),
    Serializable(),
    DescriptionKey("RISK_LIST_PERSON_ENTITY"),
    TableMap(TableName="RISK_LIST_PERSON", Schema="UP"),
    ]
    public partial class RiskListPerson :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string Event = "Event";
			public static readonly string IdCard = "IdCard";
			public static readonly string UserName = "UserName";
			public static readonly string ProcessId = "ProcessId";
			public static readonly string JModel = "JModel";
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string RiskListType = "RiskListType";
			public static readonly string RiskListDescription = "RiskListDescription";
			public static readonly string RiskListDescriptionCode = "RiskListDescriptionCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey(int id)
	    {
			return InternalCreatePrimaryKey<RiskListPerson>(id);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Event.
		/// </summary>
        private string _event = null;
		/// <summary>
		/// Atributo para la propiedad IdCard.
		/// </summary>
        private string _idCard = null;
		/// <summary>
		/// Atributo para la propiedad UserName.
		/// </summary>
        private string _userName = null;
		/// <summary>
		/// Atributo para la propiedad ProcessId.
		/// </summary>
        private int _processId;
		/// <summary>
		/// Atributo para la propiedad JModel.
		/// </summary>
        private string _jModel = null;
		/// <summary>
		/// Atributo para la propiedad RegistrationDate.
		/// </summary>
        private DateTime _registrationDate;
		/// <summary>
		/// Atributo para la propiedad RiskListType.
		/// </summary>
        private string _riskListType = null;
		/// <summary>
		/// Atributo para la propiedad RiskListDescription.
		/// </summary>
        private string _riskListDescription = null;
		/// <summary>
		/// Atributo para la propiedad RiskListDescriptionCode.
		/// </summary>
        private int? _riskListDescriptionCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="id">Id key property.</param>
	    public RiskListPerson(int id):
			this(RiskListPerson.CreatePrimaryKey(id), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public RiskListPerson(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Event.
		/// </summary>
		/// <value>Propiedad Event.</value>
	    [
		DescriptionKey("EVENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EVENT", DbType=System.Data.DbType.String),
	    ]
        public string Event
	    {
		    get
		    {
			    return this._event;
		    }
		    set
		    {
				this._event = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdCard.
		/// </summary>
		/// <value>Propiedad IdCard.</value>
	    [
		DescriptionKey("ID_CARD_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ID_CARD", DbType=System.Data.DbType.String),
	    ]
        public string IdCard
	    {
		    get
		    {
			    return this._idCard;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.IdCard);
				}
				this._idCard = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserName.
		/// </summary>
		/// <value>Propiedad UserName.</value>
	    [
		DescriptionKey("USER_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_NAME", DbType=System.Data.DbType.String),
	    ]
        public string UserName
	    {
		    get
		    {
			    return this._userName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.UserName);
				}
				this._userName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessId.
		/// </summary>
		/// <value>Propiedad ProcessId.</value>
	    [
		DescriptionKey("PROCESS_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProcessId
	    {
		    get
		    {
			    return this._processId;
		    }
		    set
		    {
				this._processId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JModel.
		/// </summary>
		/// <value>Propiedad JModel.</value>
	    [
		DescriptionKey("J_MODEL_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="J_MODEL", DbType=System.Data.DbType.String),
	    ]
        public string JModel
	    {
		    get
		    {
			    return this._jModel;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.JModel);
				}
				this._jModel = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime RegistrationDate
	    {
		    get
		    {
			    return this._registrationDate;
		    }
		    set
		    {
				this._registrationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskListType.
		/// </summary>
		/// <value>Propiedad RiskListType.</value>
	    [
		DescriptionKey("RISK_LIST_TYPE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RISK_LIST_TYPE", DbType=System.Data.DbType.String),
	    ]
        public string RiskListType
	    {
		    get
		    {
			    return this._riskListType;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.RiskListType);
				}
				this._riskListType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskListDescription.
		/// </summary>
		/// <value>Propiedad RiskListDescription.</value>
	    [
		DescriptionKey("RISK_LIST_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RISK_LIST_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string RiskListDescription
	    {
		    get
		    {
			    return this._riskListDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.RiskListDescription);
				}
				this._riskListDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskListDescriptionCode.
		/// </summary>
		/// <value>Propiedad RiskListDescriptionCode.</value>
	    [
		DescriptionKey("RISK_LIST_DESCRIPTION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RISK_LIST_DESCRIPTION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? RiskListDescriptionCode
	    {
		    get
		    {
			    return this._riskListDescriptionCode;
		    }
		    set
		    {
				this._riskListDescriptionCode = value;
			}
	    }

    }
}