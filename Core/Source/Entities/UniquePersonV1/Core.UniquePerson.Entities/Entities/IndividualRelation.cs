/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePersonV1.IndividualRelation.dict v1.0
 * FileSize=5547 Header=261 CRC=3674322128
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePersonV1.Entities
{
    /// <summary>
    /// Definición de entidad IndividualRelation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePersonV1.IndividualRelation.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_RELATION_ENTITY"),
    TableMap(TableName = "INDIVIDUAL_RELATION", Schema = "UP"),
    ]
    public partial class IndividualRelation :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualRelationId = "IndividualRelationId";
            public static readonly string ParentIndividualId = "ParentIndividualId";
            public static readonly string ChildIndividualId = "ChildIndividualId";
            public static readonly string RelationTypeCode = "RelationTypeCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualRelationId">Propiedad clave IndividualRelationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualRelationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualRelationId, individualRelationId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualRelationId">Propiedad clave IndividualRelationId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualRelationId)
        {
            return InternalCreatePrimaryKey<IndividualRelation>(individualRelationId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ParentIndividualId.
        /// </summary>
        private int _parentIndividualId;
        /// <summary>
        /// Atributo para la propiedad ChildIndividualId.
        /// </summary>
        private int _childIndividualId;
        /// <summary>
        /// Atributo para la propiedad RelationTypeCode.
        /// </summary>
        private int _relationTypeCode;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualRelationId">IndividualRelationId key property.</param>
        public IndividualRelation(int individualRelationId) :
            this(IndividualRelation.CreatePrimaryKey(individualRelationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public IndividualRelation(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualRelationId.
        /// </summary>
        /// <value>Propiedad IndividualRelationId.</value>
        [
        DescriptionKey("INDIVIDUAL_RELATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_RELATION_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualRelationId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualRelationId];
            }
            set
            {
                this._primaryKey[Properties.IndividualRelationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ParentIndividualId.
        /// </summary>
        /// <value>Propiedad ParentIndividualId.</value>
        [
        DescriptionKey("PARENT_INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PARENT_INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int ParentIndividualId
        {
            get
            {
                return this._parentIndividualId;
            }
            set
            {
                this._parentIndividualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ChildIndividualId.
        /// </summary>
        /// <value>Propiedad ChildIndividualId.</value>
        [
        DescriptionKey("CHILD_INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CHILD_INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int ChildIndividualId
        {
            get
            {
                return this._childIndividualId;
            }
            set
            {
                this._childIndividualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RelationTypeCode.
        /// </summary>
        /// <value>Propiedad RelationTypeCode.</value>
        [
        DescriptionKey("RELATION_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RELATION_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int RelationTypeCode
        {
            get
            {
                return this._relationTypeCode;
            }
            set
            {
                this._relationTypeCode = value;
            }
        }

    }
}