/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.Reinsurer.dict v1.0
 * FileSize=7272 Header=251 CRC=977060834
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad Reinsurer.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.Reinsurer.dict"),
    Serializable(),
    DescriptionKey("REINSURER_ENTITY"),
    TableMap(TableName = "REINSURER", Schema = "UP"),
    ]
    public partial class Reinsurer :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IndividualId = "IndividualId";
			public static readonly string ReinsurerCode = "ReinsurerCode";
			public static readonly string EnteredDate = "EnteredDate";
			public static readonly string ModifyDate = "ModifyDate";
			public static readonly string DeclinedDate = "DeclinedDate";
			public static readonly string DeclinedTypeCode = "DeclinedTypeCode";
			public static readonly string Annotations = "Annotations";
			public static readonly string IsActive = "IsActive";
		}

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int reinsurerCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.IndividualId, reinsurerCode);

            return new PrimaryKey<T>(keys);
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId)
        {
            return InternalCreatePrimaryKey<Reinsurer>(individualId);
        }
        public static PrimaryKey CreatePrimaryKey(int individualId, int reinsurerCode)
        {
            return InternalCreatePrimaryKey<Reinsurer>(individualId, reinsurerCode);
        }
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Reinsurer>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ReinsurerCode.
        /// </summary>
        private int _reinsurerCode;
        /// <summary>
        /// Atributo para la propiedad EnteredDate.
        /// </summary>
        private DateTime _enteredDate;
        /// <summary>
        /// Atributo para la propiedad ModifyDate.
        /// </summary>
        private DateTime? _modifyDate = null;
        /// <summary>
        /// Atributo para la propiedad DeclinedDate.
        /// </summary>
        private DateTime? _declinedDate = null;
        /// <summary>
        /// Atributo para la propiedad DeclinedTypeCode.
        /// </summary>
        private int? _declinedTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad Annotations.
        /// </summary>
        private string _annotations = null;
		/// <summary>
		/// Atributo para la propiedad IsActive.
		/// </summary>
        private bool _isActive;
	    //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        public Reinsurer(int individualId) :
            this(Reinsurer.CreatePrimaryKey(individualId), null)
        {
        }
        public Reinsurer(int individualId, int reinsurerCode) :
            this(Reinsurer.CreatePrimaryKey(individualId, reinsurerCode), null)
        {
        }
        public Reinsurer() :
           this(Reinsurer.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Reinsurer(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ReinsurerCode.
        /// </summary>
        /// <value>Propiedad ReinsurerCode.</value>
        [
        DescriptionKey("REINSURER_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "REINSURER_CD", DbType = System.Data.DbType.String),
        ]
        public int ReinsurerCode
        {
            get
            {
                return (int)this._primaryKey[Properties.ReinsurerCode];
            }
            set
            {
                this._primaryKey[Properties.ReinsurerCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnteredDate.
        /// </summary>
        /// <value>Propiedad EnteredDate.</value>
        [
        DescriptionKey("ENTERED_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENTERED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime EnteredDate
        {
            get
            {
                return this._enteredDate;
            }
            set
            {
                this._enteredDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ModifyDate.
        /// </summary>
        /// <value>Propiedad ModifyDate.</value>
        [
        DescriptionKey("MODIFY_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MODIFY_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? ModifyDate
        {
            get
            {
                return this._modifyDate;
            }
            set
            {
                this._modifyDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeclinedDate.
        /// </summary>
        /// <value>Propiedad DeclinedDate.</value>
        [
        DescriptionKey("DECLINED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DECLINED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? DeclinedDate
        {
            get
            {
                return this._declinedDate;
            }
            set
            {
                this._declinedDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeclinedTypeCode.
        /// </summary>
        /// <value>Propiedad DeclinedTypeCode.</value>
        [
        DescriptionKey("DECLINED_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DECLINED_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? DeclinedTypeCode
        {
            get
            {
                return this._declinedTypeCode;
            }
            set
            {
                this._declinedTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Annotations.
        /// </summary>
        /// <value>Propiedad Annotations.</value>
        [
        DescriptionKey("ANNOTATIONS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ANNOTATIONS", DbType = System.Data.DbType.String),
        ]
        public string Annotations
        {
            get
            {
                return this._annotations;
            }
            set
            {
                this._annotations = value;
            }
        }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsActive.
		/// </summary>
		/// <value>Propiedad IsActive.</value>
	    [
		DescriptionKey("IS_ACTIVE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_ACTIVE", DbType=System.Data.DbType.String),
	    ]
        public bool IsActive
	    {
		    get
		    {
			    return this._isActive;
		    }
		    set
		    {
				this._isActive = value;
			}
	    }

    }
}