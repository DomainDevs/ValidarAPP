/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.Provider.dict v1.0
 * FileSize=9623 Header=258 CRC=3230623749
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad Provider.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.Provider.dict"),
    Serializable(),
    DescriptionKey("PROVIDER_ENTITY"),
    TableMap(TableName = "PROVIDER", Schema = "UP"),
    ]
    public partial class Provider :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProviderCode = "ProviderCode";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string ProviderTypeCode = "ProviderTypeCode";
            public static readonly string OriginTypeCode = "OriginTypeCode";
            public static readonly string ProviderDeclinedTypeCode = "ProviderDeclinedTypeCode";
            public static readonly string CreationDate = "CreationDate";
            public static readonly string ModificationDate = "ModificationDate";
            public static readonly string DeclinationDate = "DeclinationDate";
            public static readonly string Observation = "Observation";
            public static readonly string SpecialityDefault = "SpecialityDefault";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>        
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProviderCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="providerCode">Propiedad clave ProviderCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int providerCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProviderCode, providerCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Provider>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="providerCode">Propiedad clave ProviderCode.</param>
        public static PrimaryKey CreatePrimaryKey(int providerCode)
        {
            return InternalCreatePrimaryKey<Provider>(providerCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        /// <summary>
        /// Atributo para la propiedad ProviderTypeCode.
        /// </summary>
        private int _providerTypeCode;
        /// <summary>
        /// Atributo para la propiedad OriginTypeCode.
        /// </summary>
        private int _originTypeCode;
        /// <summary>
        /// Atributo para la propiedad ProviderDeclinedTypeCode.
        /// </summary>
        private int? _providerDeclinedTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad CreationDate.
        /// </summary>
        private DateTime _creationDate;
        /// <summary>
        /// Atributo para la propiedad ModificationDate.
        /// </summary>
        private DateTime? _modificationDate = null;
        /// <summary>
        /// Atributo para la propiedad DeclinationDate.
        /// </summary>
        private DateTime? _declinationDate = null;
        /// <summary>
        /// Atributo para la propiedad Observation.
        /// </summary>
        private string _observation = null;
        /// <summary>
        /// Atributo para la propiedad SpecialityDefault.
        /// </summary>
        private int? _specialityDefault = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public Provider() :
            this(Provider.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="providerCode">ProviderCode key property.</param>
        public Provider(int providerCode) :
            this(Provider.CreatePrimaryKey(providerCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Provider(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProviderCode.
        /// </summary>
        /// <value>Propiedad ProviderCode.</value>
        [
        DescriptionKey("PROVIDER_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROVIDER_CD", DbType = System.Data.DbType.String),
        ]
        public int ProviderCode
        {
            get
            {
                return (int)this._primaryKey[Properties.ProviderCode];
            }
            set
            {
                this._primaryKey[Properties.ProviderCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProviderTypeCode.
        /// </summary>
        /// <value>Propiedad ProviderTypeCode.</value>
        [
        DescriptionKey("PROVIDER_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROVIDER_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int ProviderTypeCode
        {
            get
            {
                return this._providerTypeCode;
            }
            set
            {
                this._providerTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OriginTypeCode.
        /// </summary>
        /// <value>Propiedad OriginTypeCode.</value>
        [
        DescriptionKey("ORIGIN_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ORIGIN_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int OriginTypeCode
        {
            get
            {
                return this._originTypeCode;
            }
            set
            {
                this._originTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProviderDeclinedTypeCode.
        /// </summary>
        /// <value>Propiedad ProviderDeclinedTypeCode.</value>
        [
        DescriptionKey("PROVIDER_DECLINED_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PROVIDER_DECLINED_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? ProviderDeclinedTypeCode
        {
            get
            {
                return this._providerDeclinedTypeCode;
            }
            set
            {
                this._providerDeclinedTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CreationDate.
        /// </summary>
        /// <value>Propiedad CreationDate.</value>
        [
        DescriptionKey("CREATION_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CREATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime CreationDate
        {
            get
            {
                return this._creationDate;
            }
            set
            {
                this._creationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ModificationDate.
        /// </summary>
        /// <value>Propiedad ModificationDate.</value>
        [
        DescriptionKey("MODIFICATION_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MODIFICATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? ModificationDate
        {
            get
            {
                return this._modificationDate;
            }
            set
            {
                this._modificationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeclinationDate.
        /// </summary>
        /// <value>Propiedad DeclinationDate.</value>
        [
        DescriptionKey("DECLINATION_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DECLINATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? DeclinationDate
        {
            get
            {
                return this._declinationDate;
            }
            set
            {
                this._declinationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Observation.
        /// </summary>
        /// <value>Propiedad Observation.</value>
        [
        DescriptionKey("OBSERVATION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OBSERVATION", DbType = System.Data.DbType.String),
        ]
        public string Observation
        {
            get
            {
                return this._observation;
            }
            set
            {
                this._observation = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SpecialityDefault.
        /// </summary>
        /// <value>Propiedad SpecialityDefault.</value>
        [
        DescriptionKey("SPECIALITY_DEFAULT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SPECIALITY_DEFAULT", DbType = System.Data.DbType.String),
        ]
        public int? SpecialityDefault
        {
            get
            {
                return this._specialityDefault;
            }
            set
            {
                this._specialityDefault = value;
            }
        }

    }
}