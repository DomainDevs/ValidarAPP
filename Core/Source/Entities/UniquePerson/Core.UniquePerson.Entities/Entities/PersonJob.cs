/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: PersonJob.PersonJob.dict v1.0
 * FileSize=9312 Header=224 CRC=1216355720
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad PersonJob.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.PersonJob.dict"),
    Serializable(),
    DescriptionKey("PERSON_JOB_ENTITY"),
    TableMap(TableName = "PERSON_JOB", Schema = "UP"),
    ]
    public partial class PersonJob :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string OccupationCode = "OccupationCode";
            public static readonly string IncomeLevelCode = "IncomeLevelCode";
            public static readonly string CompanyName = "CompanyName";
            public static readonly string JobSector = "JobSector";
            public static readonly string Position = "Position";
            public static readonly string Contact = "Contact";
            public static readonly string CompanyPhone = "CompanyPhone";
            public static readonly string SpecialityCode = "SpecialityCode";
            public static readonly string OtherOccupationCode = "OtherOccupationCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId)
        {
            return InternalCreatePrimaryKey<PersonJob>(individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad OccupationCode.
        /// </summary>
        private int _occupationCode;
        /// <summary>
        /// Atributo para la propiedad IncomeLevelCode.
        /// </summary>
        private int? _incomeLevelCode = null;
        /// <summary>
        /// Atributo para la propiedad CompanyName.
        /// </summary>
        private string _companyName = null;
        /// <summary>
        /// Atributo para la propiedad JobSector.
        /// </summary>
        private string _jobSector = null;
        /// <summary>
        /// Atributo para la propiedad Position.
        /// </summary>
        private string _position = null;
        /// <summary>
        /// Atributo para la propiedad Contact.
        /// </summary>
        private string _contact = null;
        /// <summary>
        /// Atributo para la propiedad CompanyPhone.
        /// </summary>
        private long? _companyPhone = null;
        /// <summary>
        /// Atributo para la propiedad SpecialityCode.
        /// </summary>
        private int? _specialityCode = null;
        /// <summary>
        /// Atributo para la propiedad OtherOccupationCode.
        /// </summary>
        private int? _otherOccupationCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        public PersonJob(int individualId) :
            this(PersonJob.CreatePrimaryKey(individualId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PersonJob(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OccupationCode.
        /// </summary>
        /// <value>Propiedad OccupationCode.</value>
        [
        DescriptionKey("OCCUPATION_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "OCCUPATION_CD", DbType = System.Data.DbType.String),
        ]
        public int OccupationCode
        {
            get
            {
                return this._occupationCode;
            }
            set
            {
                this._occupationCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IncomeLevelCode.
        /// </summary>
        /// <value>Propiedad IncomeLevelCode.</value>
        [
        DescriptionKey("INCOME_LEVEL_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INCOME_LEVEL_CD", DbType = System.Data.DbType.String),
        ]
        public int? IncomeLevelCode
        {
            get
            {
                return this._incomeLevelCode;
            }
            set
            {
                this._incomeLevelCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CompanyName.
        /// </summary>
        /// <value>Propiedad CompanyName.</value>
        [
        DescriptionKey("COMPANY_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMPANY_NAME", DbType = System.Data.DbType.String),
        ]
        public string CompanyName
        {
            get
            {
                return this._companyName;
            }
            set
            {
                this._companyName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad JobSector.
        /// </summary>
        /// <value>Propiedad JobSector.</value>
        [
        DescriptionKey("JOB_SECTOR_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "JOB_SECTOR", DbType = System.Data.DbType.String),
        ]
        public string JobSector
        {
            get
            {
                return this._jobSector;
            }
            set
            {
                this._jobSector = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Position.
        /// </summary>
        /// <value>Propiedad Position.</value>
        [
        DescriptionKey("POSITION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POSITION", DbType = System.Data.DbType.String),
        ]
        public string Position
        {
            get
            {
                return this._position;
            }
            set
            {
                this._position = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Contact.
        /// </summary>
        /// <value>Propiedad Contact.</value>
        [
        DescriptionKey("CONTACT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONTACT", DbType = System.Data.DbType.String),
        ]
        public string Contact
        {
            get
            {
                return this._contact;
            }
            set
            {
                this._contact = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CompanyPhone.
        /// </summary>
        /// <value>Propiedad CompanyPhone.</value>
        [
        DescriptionKey("COMPANY_PHONE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMPANY_PHONE", DbType = System.Data.DbType.String),
        ]
        public long? CompanyPhone
        {
            get
            {
                return this._companyPhone;
            }
            set
            {
                this._companyPhone = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SpecialityCode.
        /// </summary>
        /// <value>Propiedad SpecialityCode.</value>
        [
        DescriptionKey("SPECIALITY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SPECIALITY_CD", DbType = System.Data.DbType.String),
        ]
        public int? SpecialityCode
        {
            get
            {
                return this._specialityCode;
            }
            set
            {
                this._specialityCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OtherOccupationCode.
        /// </summary>
        /// <value>Propiedad OtherOccupationCode.</value>
        [
        DescriptionKey("OTHER_OCCUPATION_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OTHER_OCCUPATION_CD", DbType = System.Data.DbType.String),
        ]
        public int? OtherOccupationCode
        {
            get
            {
                return this._otherOccupationCode;
            }
            set
            {
                this._otherOccupationCode = value;
            }
        }

    }
}