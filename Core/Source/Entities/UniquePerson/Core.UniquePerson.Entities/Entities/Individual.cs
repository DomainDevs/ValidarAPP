/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: names.Individual.dict v1.0
 * FileSize=7275 Header=221 CRC=2495289880
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad Individual.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.Individual.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_ENTITY")
   ]
    [TableMap(Alias = "INDIVIDUAL", TableName = "INDIVIDUAL", Schema = "UP")]
    public class Individual :
        BusinessObject
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string IndividualTypeCode = "IndividualTypeCode";
            public static readonly string AtDataId = "AtDataId";
            public static readonly string AtPaymentId = "AtPaymentId";
            public static readonly string AtAgentAgencyId = "AtAgentAgencyId";
            public static readonly string OwnerRoleCode = "OwnerRoleCode";
            public static readonly string EconomicActivityCode = "EconomicActivityCode";

        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Individual>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId)
        {
            return InternalCreatePrimaryKey<Individual>(individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualTypeCode.
        /// </summary>
        private int _individualTypeCode;
        /// <summary>
        /// Atributo para la propiedad AtDataId.
        /// </summary>
        private int _atDataId;
        /// <summary>
        /// Atributo para la propiedad AtPaymentId.
        /// </summary>
        private int _atPaymentId;
        /// <summary>
        /// Atributo para la propiedad AtAgentAgencyId.
        /// </summary>
        private int _atAgentAgencyId;
        /// <summary>
        /// Atributo para la propiedad OwnerRoleCode.
        /// </summary>
        private int? _ownerRoleCode = null;
        /// <summary>
        /// Atributo para la propiedad EconomicActivityCode.
        /// </summary>
        private int? _economicActivityCode = null;
       
        /// <summary>
        /// Constructor de instancia de la clase
        /// </summary>
        public Individual() :
            this(Individual.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        public Individual(int individualId) :
            this(Individual.CreatePrimaryKey(individualId), null)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Individual(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualTypeCode.
        /// </summary>
        /// <value>Propiedad IndividualTypeCode.</value>
        [
        DescriptionKey("INDIVIDUAL_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int IndividualTypeCode
        {
            get
            {
                return this._individualTypeCode;
            }
            set
            {
                this._individualTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AtDataId.
        /// </summary>
        /// <value>Propiedad AtDataId.</value>
        [
        DescriptionKey("AT_DATA_ID_PROPERTY"),
        PersistentProperty()
        ]
        public int AtDataId
        {
            get
            {
                return this._atDataId;
            }
            set
            {
                this._atDataId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AtPaymentId.
        /// </summary>
        /// <value>Propiedad AtPaymentId.</value>
        [
        DescriptionKey("AT_PAYMENT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AT_PAYMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int AtPaymentId
        {
            get
            {
                return this._atPaymentId;
            }
            set
            {
                this._atPaymentId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AtAgentAgencyId.
        /// </summary>
        /// <value>Propiedad AtAgentAgencyId.</value>
        [
        DescriptionKey("AT_AGENT_AGENCY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AT_AGENT_AGENCY_ID", DbType = System.Data.DbType.String),
        ]
        public int AtAgentAgencyId
        {
            get
            {
                return this._atAgentAgencyId;
            }
            set
            {
                this._atAgentAgencyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OwnerRoleCode.
        /// </summary>
        /// <value>Propiedad OwnerRoleCode.</value>
        [
        DescriptionKey("OWNER_ROLE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OWNER_ROLE_CD", DbType = System.Data.DbType.String),
        ]
        public int? OwnerRoleCode
        {
            get
            {
                return this._ownerRoleCode;
            }
            set
            {
                this._ownerRoleCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EconomicActivityCode.
        /// </summary>
        /// <value>Propiedad EconomicActivityCode.</value>
        [
        DescriptionKey("ECONOMIC_ACTIVITY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ECONOMIC_ACTIVITY_CD", DbType = System.Data.DbType.String),
        ]
        public int? EconomicActivityCode
        {
            get
            {
                return this._economicActivityCode;
            }
            set
            {
                this._economicActivityCode = value;
            }
        }
    }
}