/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.AgentAgency.dict v1.0
 * FileSize=9790 Header=251 CRC=2712309779
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad AgentAgency.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.AgentAgency.dict"),
    Serializable(),
    DescriptionKey("AGENT_AGENCY_ENTITY"),
    TableMap(TableName = "AGENT_AGENCY", Schema = "UP"),
    ]
    public partial class AgentAgency :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string AgentAgencyId = "AgentAgencyId";
            public static readonly string Description = "Description";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string Annotations = "Annotations";
            public static readonly string AgentCode = "AgentCode";
            public static readonly string AgencyGroupCode = "AgencyGroupCode";
            public static readonly string DeclinedDate = "DeclinedDate";
            public static readonly string AgentDeclinedTypeCode = "AgentDeclinedTypeCode";
            public static readonly string AgentTypeCode = "AgentTypeCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int agentAgencyId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.AgentAgencyId, agentAgencyId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.AgentAgencyId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId, int agentAgencyId)
        {
            return InternalCreatePrimaryKey<AgentAgency>(individualId, agentAgencyId);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId)
        {
            return InternalCreatePrimaryKey<AgentAgency>(individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int _branchCode;
        /// <summary>
        /// Atributo para la propiedad Annotations.
        /// </summary>
        private string _annotations = null;
        /// <summary>
        /// Atributo para la propiedad AgentCode.
        /// </summary>
        private int _agentCode;
        /// <summary>
        /// Atributo para la propiedad AgencyGroupCode.
        /// </summary>
        private int? _agencyGroupCode = null;
        /// <summary>
        /// Atributo para la propiedad DeclinedDate.
        /// </summary>
        private DateTime? _declinedDate = null;
        /// <summary>
        /// Atributo para la propiedad AgentDeclinedTypeCode.
        /// </summary>
        private int? _agentDeclinedTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad AgentTypeCode.
        /// </summary>
        private int _agentTypeCode;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="agentAgencyId">AgentAgencyId key property.</param>
        public AgentAgency(int individualId, int agentAgencyId) :
            this(AgentAgency.CreatePrimaryKey(individualId, agentAgencyId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="agentAgencyId">AgentAgencyId key property.</param>
        public AgentAgency(int individualId) :
            this(AgentAgency.CreatePrimaryKey(individualId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public AgentAgency(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentAgencyId.
        /// </summary>
        /// <value>Propiedad AgentAgencyId.</value>
        [
        DescriptionKey("AGENT_AGENCY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "AGENT_AGENCY_ID", DbType = System.Data.DbType.String),
        ]
        public int AgentAgencyId
        {
            get
            {
                return (int)this._primaryKey[Properties.AgentAgencyId];
            }
            set
            {
                this._primaryKey[Properties.AgentAgencyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Annotations.
        /// </summary>
        /// <value>Propiedad Annotations.</value>
        [
        DescriptionKey("ANNOTATIONS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ANNOTATIONS", DbType = System.Data.DbType.String),
        ]
        public string Annotations
        {
            get
            {
                return this._annotations;
            }
            set
            {
                this._annotations = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentCode.
        /// </summary>
        /// <value>Propiedad AgentCode.</value>
        [
        DescriptionKey("AGENT_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AGENT_CD", DbType = System.Data.DbType.String),
        ]
        public int AgentCode
        {
            get
            {
                return this._agentCode;
            }
            set
            {
                this._agentCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgencyGroupCode.
        /// </summary>
        /// <value>Propiedad AgencyGroupCode.</value>
        [
        DescriptionKey("AGENCY_GROUP_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AGENCY_GROUP_CD", DbType = System.Data.DbType.String),
        ]
        public int? AgencyGroupCode
        {
            get
            {
                return this._agencyGroupCode;
            }
            set
            {
                this._agencyGroupCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeclinedDate.
        /// </summary>
        /// <value>Propiedad DeclinedDate.</value>
        [
        DescriptionKey("DECLINED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DECLINED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? DeclinedDate
        {
            get
            {
                return this._declinedDate;
            }
            set
            {
                this._declinedDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentDeclinedTypeCode.
        /// </summary>
        /// <value>Propiedad AgentDeclinedTypeCode.</value>
        [
        DescriptionKey("AGENT_DECLINED_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AGENT_DECLINED_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? AgentDeclinedTypeCode
        {
            get
            {
                return this._agentDeclinedTypeCode;
            }
            set
            {
                this._agentDeclinedTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentTypeCode.
        /// </summary>
        /// <value>Propiedad AgentTypeCode.</value>
        [
        DescriptionKey("AGENT_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AGENT_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int AgentTypeCode
        {
            get
            {
                return this._agentTypeCode;
            }
            set
            {
                this._agentTypeCode = value;
            }
        }

    }
}