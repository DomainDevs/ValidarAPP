/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.CoCompany.dict v1.0
 * FileSize=8963 Header=252 CRC=3020173604
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad CoCompany.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.CoCompany.dict"),
    Serializable(),
    DescriptionKey("CO_COMPANY_ENTITY"),
    TableMap(TableName="CO_COMPANY", Schema="UP"),
    ]
    public partial class CoCompany :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IndividualId = "IndividualId";
			public static readonly string VerifyDigit = "VerifyDigit";
			public static readonly string AssociationTypeCode = "AssociationTypeCode";
			public static readonly string AuthorizationAmount = "AuthorizationAmount";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CategoryCode = "CategoryCode";
			public static readonly string EntityOfficialCode = "EntityOfficialCode";
			public static readonly string InsuredGroupId = "InsuredGroupId";
			public static readonly string NitAssociationType = "NitAssociationType";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.IndividualId, individualId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		public static PrimaryKey CreatePrimaryKey(int individualId)
	    {
			return InternalCreatePrimaryKey<CoCompany>(individualId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad VerifyDigit.
		/// </summary>
        private int? _verifyDigit = null;
		/// <summary>
		/// Atributo para la propiedad AssociationTypeCode.
		/// </summary>
        private int _associationTypeCode;
		/// <summary>
		/// Atributo para la propiedad AuthorizationAmount.
		/// </summary>
        private decimal? _authorizationAmount = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CategoryCode.
		/// </summary>
        private int? _categoryCode = null;
		/// <summary>
		/// Atributo para la propiedad EntityOfficialCode.
		/// </summary>
        private int? _entityOfficialCode = null;
		/// <summary>
		/// Atributo para la propiedad InsuredGroupId.
		/// </summary>
        private int? _insuredGroupId = null;
		/// <summary>
		/// Atributo para la propiedad NitAssociationType.
		/// </summary>
        private string _nitAssociationType = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="individualId">IndividualId key property.</param>
	    public CoCompany(int individualId):
			this(CoCompany.CreatePrimaryKey(individualId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoCompany(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad VerifyDigit.
		/// </summary>
		/// <value>Propiedad VerifyDigit.</value>
	    [
		DescriptionKey("VERIFY_DIGIT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VERIFY_DIGIT", DbType=System.Data.DbType.String),
	    ]
        public int? VerifyDigit
	    {
		    get
		    {
			    return this._verifyDigit;
		    }
		    set
		    {
				this._verifyDigit = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AssociationTypeCode.
		/// </summary>
		/// <value>Propiedad AssociationTypeCode.</value>
	    [
		DescriptionKey("ASSOCIATION_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ASSOCIATION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int AssociationTypeCode
	    {
		    get
		    {
			    return this._associationTypeCode;
		    }
		    set
		    {
				this._associationTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AuthorizationAmount.
		/// </summary>
		/// <value>Propiedad AuthorizationAmount.</value>
	    [
		DescriptionKey("AUTHORIZATION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AUTHORIZATION_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AuthorizationAmount
	    {
		    get
		    {
			    return this._authorizationAmount;
		    }
		    set
		    {
				this._authorizationAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CategoryCode.
		/// </summary>
		/// <value>Propiedad CategoryCode.</value>
	    [
		DescriptionKey("CATEGORY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CATEGORY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CategoryCode
	    {
		    get
		    {
			    return this._categoryCode;
		    }
		    set
		    {
				this._categoryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntityOfficialCode.
		/// </summary>
		/// <value>Propiedad EntityOfficialCode.</value>
	    [
		DescriptionKey("ENTITY_OFFICIAL_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENTITY_OFFICIAL_CD", DbType=System.Data.DbType.String),
	    ]
        public int? EntityOfficialCode
	    {
		    get
		    {
			    return this._entityOfficialCode;
		    }
		    set
		    {
				this._entityOfficialCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredGroupId.
		/// </summary>
		/// <value>Propiedad InsuredGroupId.</value>
	    [
		DescriptionKey("INSURED_GROUP_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_GROUP_ID", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredGroupId
	    {
		    get
		    {
			    return this._insuredGroupId;
		    }
		    set
		    {
				this._insuredGroupId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NitAssociationType.
		/// </summary>
		/// <value>Propiedad NitAssociationType.</value>
	    [
		DescriptionKey("NIT_ASSOCIATION_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NIT_ASSOCIATION_TYPE", DbType=System.Data.DbType.String),
	    ]
        public string NitAssociationType
	    {
		    get
		    {
			    return this._nitAssociationType;
		    }
		    set
		    {
				this._nitAssociationType = value;
			}
	    }

    }
}