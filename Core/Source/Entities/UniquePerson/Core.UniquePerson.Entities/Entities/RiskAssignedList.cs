/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.RiskAssignedList.dict v1.0
 * FileSize=8735 Header=259 CRC=3799376781
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad RiskAssignedList.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.RiskAssignedList.dict"),
    Serializable(),
    DescriptionKey("RISK_ASSIGNED_LIST_ENTITY"),
    TableMap(TableName = "RISK_ASSIGNED_LIST", Schema = "UP"),
    ]
    public partial class RiskAssignedList :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IdCardTypeCode = "IdCardTypeCode";
            public static readonly string IdCardNo = "IdCardNo";
            public static readonly string RiskListCode = "RiskListCode";
            public static readonly string CreatedListUserId = "CreatedListUserId";
            public static readonly string UpdatedListUserId = "UpdatedListUserId";
            public static readonly string ExcludedPerson = "ExcludedPerson";
            public static readonly string AssignmentDate = "AssignmentDate";
            public static readonly string LastChangeDate = "LastChangeDate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="idCardTypeCode">Propiedad clave IdCardTypeCode.</param>
        /// <param name="idCardNo">Propiedad clave IdCardNo.</param>
        /// <param name="riskListCode">Propiedad clave RiskListCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int idCardTypeCode, string idCardNo, int riskListCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IdCardTypeCode, idCardTypeCode);
            keys.Add(Properties.IdCardNo, idCardNo);
            keys.Add(Properties.RiskListCode, riskListCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="idCardTypeCode">Propiedad clave IdCardTypeCode.</param>
        /// <param name="idCardNo">Propiedad clave IdCardNo.</param>
        /// <param name="riskListCode">Propiedad clave RiskListCode.</param>
        public static PrimaryKey CreatePrimaryKey(int idCardTypeCode, string idCardNo, int riskListCode)
        {
            return InternalCreatePrimaryKey<RiskAssignedList>(idCardTypeCode, idCardNo, riskListCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CreatedListUserId.
        /// </summary>
        private int? _createdListUserId = null;
        /// <summary>
        /// Atributo para la propiedad UpdatedListUserId.
        /// </summary>
        private int? _updatedListUserId = null;
        /// <summary>
        /// Atributo para la propiedad ExcludedPerson.
        /// </summary>
        private bool _excludedPerson;
        /// <summary>
        /// Atributo para la propiedad AssignmentDate.
        /// </summary>
        private DateTime? _assignmentDate = null;
        /// <summary>
        /// Atributo para la propiedad LastChangeDate.
        /// </summary>
        private DateTime? _lastChangeDate = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="idCardTypeCode">IdCardTypeCode key property.</param>
        /// <param name="idCardNo">IdCardNo key property.</param>
        /// <param name="riskListCode">RiskListCode key property.</param>
        public RiskAssignedList(int idCardTypeCode, string idCardNo, int riskListCode) :
            this(RiskAssignedList.CreatePrimaryKey(idCardTypeCode, idCardNo, riskListCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RiskAssignedList(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardTypeCode.
        /// </summary>
        /// <value>Propiedad IdCardTypeCode.</value>
        [
        DescriptionKey("ID_CARD_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID_CARD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int IdCardTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.IdCardTypeCode];
            }
            set
            {
                this._primaryKey[Properties.IdCardTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardNo.
        /// </summary>
        /// <value>Propiedad IdCardNo.</value>
        [
        DescriptionKey("ID_CARD_NO_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID_CARD_NO", DbType = System.Data.DbType.String),
        ]
        public string IdCardNo
        {
            get
            {
                return (string)this._primaryKey[Properties.IdCardNo];
            }
            set
            {
                this._primaryKey[Properties.IdCardNo] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskListCode.
        /// </summary>
        /// <value>Propiedad RiskListCode.</value>
        [
        DescriptionKey("RISK_LIST_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_LIST_CD", DbType = System.Data.DbType.String),
        ]
        public int RiskListCode
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskListCode];
            }
            set
            {
                this._primaryKey[Properties.RiskListCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CreatedListUserId.
        /// </summary>
        /// <value>Propiedad CreatedListUserId.</value>
        [
        DescriptionKey("CREATED_LIST_USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CREATED_LIST_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? CreatedListUserId
        {
            get
            {
                return this._createdListUserId;
            }
            set
            {
                this._createdListUserId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UpdatedListUserId.
        /// </summary>
        /// <value>Propiedad UpdatedListUserId.</value>
        [
        DescriptionKey("UPDATED_LIST_USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "UPDATED_LIST_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UpdatedListUserId
        {
            get
            {
                return this._updatedListUserId;
            }
            set
            {
                this._updatedListUserId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExcludedPerson.
        /// </summary>
        /// <value>Propiedad ExcludedPerson.</value>
        [
        DescriptionKey("EXCLUDED_PERSON_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXCLUDED_PERSON", DbType = System.Data.DbType.String),
        ]
        public bool ExcludedPerson
        {
            get
            {
                return this._excludedPerson;
            }
            set
            {
                this._excludedPerson = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AssignmentDate.
        /// </summary>
        /// <value>Propiedad AssignmentDate.</value>
        [
        DescriptionKey("ASSIGNMENT_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ASSIGNMENT_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? AssignmentDate
        {
            get
            {
                return this._assignmentDate;
            }
            set
            {
                this._assignmentDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LastChangeDate.
        /// </summary>
        /// <value>Propiedad LastChangeDate.</value>
        [
        DescriptionKey("LAST_CHANGE_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LAST_CHANGE_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? LastChangeDate
        {
            get
            {
                return this._lastChangeDate;
            }
            set
            {
                this._lastChangeDate = value;
            }
        }

    }
}