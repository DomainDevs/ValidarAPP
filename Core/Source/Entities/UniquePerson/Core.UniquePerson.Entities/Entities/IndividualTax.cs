/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.IndividualTax.dict v1.0
 * FileSize=5224 Header=263 CRC=1503006611
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad IndividualTax.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.IndividualTax.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_TAX_ENTITY"),
    TableMap(TableName = "INDIVIDUAL_TAX", Schema = "UP"),
    ]
    public partial class IndividualTax :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualTaxId = "IndividualTaxId";
            public static readonly string TaxCode = "TaxCode";
            public static readonly string TaxConditionCode = "TaxConditionCode";
            public static readonly string IndividualId = "IndividualId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>        
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualTaxId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualTaxId">Propiedad clave IndividualTaxId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualTaxId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualTaxId, individualTaxId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<IndividualTax>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualTaxId">Propiedad clave IndividualTaxId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualTaxId)
        {
            return InternalCreatePrimaryKey<IndividualTax>(individualTaxId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TaxCode.
        /// </summary>
        private int _taxCode;
        /// <summary>
        /// Atributo para la propiedad TaxConditionCode.
        /// </summary>
        private int _taxConditionCode;
        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        //*** Object Constructors ********************************


        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public IndividualTax() :
            this(IndividualTax.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualTaxId">IndividualTaxId key property.</param>
        public IndividualTax(int individualTaxId) :
            this(IndividualTax.CreatePrimaryKey(individualTaxId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public IndividualTax(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualTaxId.
        /// </summary>
        /// <value>Propiedad IndividualTaxId.</value>
        [
        DescriptionKey("INDIVIDUAL_TAX_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_TAX_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualTaxId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualTaxId];
            }
            set
            {
                this._primaryKey[Properties.IndividualTaxId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxCode.
        /// </summary>
        /// <value>Propiedad TaxCode.</value>
        [
        DescriptionKey("TAX_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TAX_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxCode
        {
            get
            {
                return this._taxCode;
            }
            set
            {
                this._taxCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxConditionCode.
        /// </summary>
        /// <value>Propiedad TaxConditionCode.</value>
        [
        DescriptionKey("TAX_CONDITION_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TAX_CONDITION_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxConditionCode
        {
            get
            {
                return this._taxConditionCode;
            }
            set
            {
                this._taxConditionCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

    }
}