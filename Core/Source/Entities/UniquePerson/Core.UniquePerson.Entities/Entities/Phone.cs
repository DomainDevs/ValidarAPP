/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.Phone.dict v1.0
 * FileSize=12737 Header=248 CRC=650746623
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad Phone.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.Phone.dict"),
    Serializable(),
    DescriptionKey("PHONE_ENTITY"),
    TableMap(TableName="PHONE", Schema="UP"),
    ]
    public partial class Phone :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IndividualId = "IndividualId";
			public static readonly string DataId = "DataId";
			public static readonly string PhoneTypeCode = "PhoneTypeCode";
			public static readonly string PhoneNumber = "PhoneNumber";
			public static readonly string Extension = "Extension";
			public static readonly string CountryCode = "CountryCode";
			public static readonly string CityCode = "CityCode";
			public static readonly string ScheduleAvailability = "ScheduleAvailability";
			public static readonly string IsMain = "IsMain";
		}

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, null);
            keys.Add(Properties.DataId, null);
            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="dataId">Propiedad clave DataId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int dataId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.DataId, dataId);

		    return new PrimaryKey<T>(keys);
	    }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Phone>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="dataId">Propiedad clave DataId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId, int dataId)
        {
            return InternalCreatePrimaryKey<Phone>(individualId, dataId);
        }
        #endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PhoneTypeCode.
		/// </summary>
        private int _phoneTypeCode;
		/// <summary>
		/// Atributo para la propiedad PhoneNumber.
		/// </summary>
        private long _phoneNumber;
		/// <summary>
		/// Atributo para la propiedad Extension.
		/// </summary>
        private int? _extension = null;
		/// <summary>
		/// Atributo para la propiedad CountryCode.
		/// </summary>
        private int? _countryCode = null;
		/// <summary>
		/// Atributo para la propiedad CityCode.
		/// </summary>
        private int? _cityCode = null;
		/// <summary>
		/// Atributo para la propiedad ScheduleAvailability.
		/// </summary>
        private string _scheduleAvailability = null;
	
		/// <summary>
		/// Atributo para la propiedad IsMain.
		/// </summary>
        private bool? _isMain = null;
	    //*** Object Constructors ********************************

        public Phone() :
            this(Phone.CreatePrimaryKey(), null)
        {
        }
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="dataId">DataId key property.</param>
        public Phone(int individualId, int dataId) :
            this(Phone.CreatePrimaryKey(individualId, dataId), null)
        {
        }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Phone(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DataId.
		/// </summary>
		/// <value>Propiedad DataId.</value>
	    [
		DescriptionKey("DATA_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="DATA_ID", DbType=System.Data.DbType.String),
	    ]
        public int DataId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.DataId];
		    }
		    set
		    {
				this._primaryKey[Properties.DataId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PhoneTypeCode.
		/// </summary>
		/// <value>Propiedad PhoneTypeCode.</value>
	    [
		DescriptionKey("PHONE_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PHONE_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int PhoneTypeCode
	    {
		    get
		    {
			    return this._phoneTypeCode;
		    }
		    set
		    {
				this._phoneTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PhoneNumber.
		/// </summary>
		/// <value>Propiedad PhoneNumber.</value>
	    [
		DescriptionKey("PHONE_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PHONE_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public long PhoneNumber
	    {
		    get
		    {
			    return this._phoneNumber;
		    }
		    set
		    {
				this._phoneNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Extension.
		/// </summary>
		/// <value>Propiedad Extension.</value>
	    [
		DescriptionKey("EXTENSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXTENSION", DbType=System.Data.DbType.String),
	    ]
        public int? Extension
	    {
		    get
		    {
			    return this._extension;
		    }
		    set
		    {
				this._extension = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CountryCode.
		/// </summary>
		/// <value>Propiedad CountryCode.</value>
	    [
		DescriptionKey("COUNTRY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COUNTRY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CountryCode
	    {
		    get
		    {
			    return this._countryCode;
		    }
		    set
		    {
				this._countryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CityCode.
		/// </summary>
		/// <value>Propiedad CityCode.</value>
	    [
		DescriptionKey("CITY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CITY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CityCode
	    {
		    get
		    {
			    return this._cityCode;
		    }
		    set
		    {
				this._cityCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ScheduleAvailability.
		/// </summary>
		/// <value>Propiedad ScheduleAvailability.</value>
	    [
		DescriptionKey("SCHEDULE_AVAILABILITY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SCHEDULE_AVAILABILITY", DbType=System.Data.DbType.String),
	    ]
        public string ScheduleAvailability
	    {
		    get
		    {
			    return this._scheduleAvailability;
		    }
		    set
		    {
				this._scheduleAvailability = value;
			}
	    }

		

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsMain.
		/// </summary>
		/// <value>Propiedad IsMain.</value>
	    [
		DescriptionKey("IS_MAIN_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_MAIN", DbType=System.Data.DbType.String),
	    ]
        public bool? IsMain
	    {
		    get
		    {
			    return this._isMain;
		    }
		    set
		    {
				this._isMain = value;
			}
	    }

    }
}