/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.PermisionProfile.dict v1.0
 * FileSize=5922 Header=259 CRC=1687824732
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad PermisionProfile.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.PermisionProfile.dict"),
    Serializable(),
    DescriptionKey("PERMISION_PROFILE_ENTITY"),
    TableMap(TableName = "PERMISION_PROFILE", Schema = "UP"),
    ]
    public partial class PermisionProfile :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string OperationCode = "OperationCode";
            public static readonly string ProfileId = "ProfileId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string RoleCode = "RoleCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="operationCode">Propiedad clave OperationCode.</param>
        /// <param name="profileId">Propiedad clave ProfileId.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="roleCode">Propiedad clave RoleCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int operationCode, int profileId, int individualId, int roleCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.OperationCode, operationCode);
            keys.Add(Properties.ProfileId, profileId);
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.RoleCode, roleCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="operationCode">Propiedad clave OperationCode.</param>
        /// <param name="profileId">Propiedad clave ProfileId.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="roleCode">Propiedad clave RoleCode.</param>
        public static PrimaryKey CreatePrimaryKey(int operationCode, int profileId, int individualId, int roleCode)
        {
            return InternalCreatePrimaryKey<PermisionProfile>(operationCode, profileId, individualId, roleCode);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="operationCode">OperationCode key property.</param>
        /// <param name="profileId">ProfileId key property.</param>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="roleCode">RoleCode key property.</param>
        public PermisionProfile(int operationCode, int profileId, int individualId, int roleCode) :
            this(PermisionProfile.CreatePrimaryKey(operationCode, profileId, individualId, roleCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PermisionProfile(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad OperationCode.
        /// </summary>
        /// <value>Propiedad OperationCode.</value>
        [
        DescriptionKey("OPERATION_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "OPERATION_CD", DbType = System.Data.DbType.String),
        ]
        public int OperationCode
        {
            get
            {
                return (int)this._primaryKey[Properties.OperationCode];
            }
            set
            {
                this._primaryKey[Properties.OperationCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProfileId.
        /// </summary>
        /// <value>Propiedad ProfileId.</value>
        [
        DescriptionKey("PROFILE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROFILE_ID", DbType = System.Data.DbType.String),
        ]
        public int ProfileId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProfileId];
            }
            set
            {
                this._primaryKey[Properties.ProfileId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RoleCode.
        /// </summary>
        /// <value>Propiedad RoleCode.</value>
        [
        DescriptionKey("ROLE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ROLE_CD", DbType = System.Data.DbType.String),
        ]
        public int RoleCode
        {
            get
            {
                return (int)this._primaryKey[Properties.RoleCode];
            }
            set
            {
                this._primaryKey[Properties.RoleCode] = value;
            }
        }

    }
}