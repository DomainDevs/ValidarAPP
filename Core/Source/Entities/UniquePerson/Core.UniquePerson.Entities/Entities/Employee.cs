/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.Employee.dict v1.0
 * FileSize=5893 Header=251 CRC=4263630441
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad Employee.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.Employee.dict"),
    Serializable(),
    DescriptionKey("EMPLOYEE_ENTITY"),
    TableMap(TableName = "EMPLOYEE", Schema = "UP"),
    ]
    public partial class Employee :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string FileNumber = "FileNumber";
            public static readonly string EntryDate = "EntryDate";
            public static readonly string EgressDate = "EgressDate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId)
        {
            return InternalCreatePrimaryKey<Employee>(individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int _branchCode;
        /// <summary>
        /// Atributo para la propiedad FileNumber.
        /// </summary>
        private string _fileNumber = null;
        /// <summary>
        /// Atributo para la propiedad EntryDate.
        /// </summary>
        private DateTime? _entryDate = null;
        /// <summary>
        /// Atributo para la propiedad EgressDate.
        /// </summary>
        private DateTime? _egressDate = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        public Employee(int individualId) :
            this(Employee.CreatePrimaryKey(individualId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Employee(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FileNumber.
        /// </summary>
        /// <value>Propiedad FileNumber.</value>
        [
        DescriptionKey("FILE_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FILE_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string FileNumber
        {
            get
            {
                return this._fileNumber;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.FileNumber);
                }
                this._fileNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EntryDate.
        /// </summary>
        /// <value>Propiedad EntryDate.</value>
        [
        DescriptionKey("ENTRY_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENTRY_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? EntryDate
        {
            get
            {
                return this._entryDate;
            }
            set
            {
                this._entryDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EgressDate.
        /// </summary>
        /// <value>Propiedad EgressDate.</value>
        [
        DescriptionKey("EGRESS_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EGRESS_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? EgressDate
        {
            get
            {
                return this._egressDate;
            }
            set
            {
                this._egressDate = value;
            }
        }

    }
}