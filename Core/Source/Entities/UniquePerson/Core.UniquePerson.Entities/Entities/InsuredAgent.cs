/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.InsuredAgent.dict v1.0
 * FileSize=5650 Header=255 CRC=2886364802
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad InsuredAgent.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.InsuredAgent.dict"),
    Serializable(),
    DescriptionKey("INSURED_AGENT_ENTITY"),
    TableMap(TableName="INSURED_AGENT", Schema="UP"),
    ]
    public partial class InsuredAgent :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string InsuredIndId = "InsuredIndId";
			public static readonly string AgentIndId = "AgentIndId";
			public static readonly string AgentAgencyId = "AgentAgencyId";
			public static readonly string IsMain = "IsMain";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="insuredIndId">Propiedad clave InsuredIndId.</param>
		/// <param name="agentIndId">Propiedad clave AgentIndId.</param>
		/// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int insuredIndId, int agentIndId, int agentAgencyId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.InsuredIndId, insuredIndId);
		    keys.Add(Properties.AgentIndId, agentIndId);
		    keys.Add(Properties.AgentAgencyId, agentAgencyId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="insuredIndId">Propiedad clave InsuredIndId.</param>
		/// <param name="agentIndId">Propiedad clave AgentIndId.</param>
		/// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
		public static PrimaryKey CreatePrimaryKey(int insuredIndId, int agentIndId, int agentAgencyId)
	    {
			return InternalCreatePrimaryKey<InsuredAgent>(insuredIndId, agentIndId, agentAgencyId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IsMain.
		/// </summary>
        private bool _isMain;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="insuredIndId">InsuredIndId key property.</param>
		/// <param name="agentIndId">AgentIndId key property.</param>
		/// <param name="agentAgencyId">AgentAgencyId key property.</param>
	    public InsuredAgent(int insuredIndId, int agentIndId, int agentAgencyId):
			this(InsuredAgent.CreatePrimaryKey(insuredIndId, agentIndId, agentAgencyId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public InsuredAgent(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredIndId.
		/// </summary>
		/// <value>Propiedad InsuredIndId.</value>
	    [
		DescriptionKey("INSURED_IND_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INSURED_IND_ID", DbType=System.Data.DbType.String),
	    ]
        public int InsuredIndId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.InsuredIndId];
		    }
		    set
		    {
				this._primaryKey[Properties.InsuredIndId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentIndId.
		/// </summary>
		/// <value>Propiedad AgentIndId.</value>
	    [
		DescriptionKey("AGENT_IND_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="AGENT_IND_ID", DbType=System.Data.DbType.String),
	    ]
        public int AgentIndId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AgentIndId];
		    }
		    set
		    {
				this._primaryKey[Properties.AgentIndId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentAgencyId.
		/// </summary>
		/// <value>Propiedad AgentAgencyId.</value>
	    [
		DescriptionKey("AGENT_AGENCY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="AGENT_AGENCY_ID", DbType=System.Data.DbType.String),
	    ]
        public int AgentAgencyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AgentAgencyId];
		    }
		    set
		    {
				this._primaryKey[Properties.AgentAgencyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsMain.
		/// </summary>
		/// <value>Propiedad IsMain.</value>
	    [
		DescriptionKey("IS_MAIN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_MAIN", DbType=System.Data.DbType.String),
	    ]
        public bool IsMain
	    {
		    get
		    {
			    return this._isMain;
		    }
		    set
		    {
				this._isMain = value;
			}
	    }

    }
}