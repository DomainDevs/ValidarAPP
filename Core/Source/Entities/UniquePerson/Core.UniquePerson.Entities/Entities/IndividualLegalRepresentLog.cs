/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.IndividualLegalRepresentLog.dict v1.0
 * FileSize=19399 Header=271 CRC=3374651527
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad IndividualLegalRepresentLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.IndividualLegalRepresentLog.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_LEGAL_REPRESENT_LOG_ENTITY"),
    TableMap(TableName = "INDIVIDUAL_LEGAL_REPRESENT_LOG", Schema = "UP"),
    ]
    public partial class IndividualLegalRepresentLog :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string IdCardTypeCode = "IdCardTypeCode";
            public static readonly string IdCardNo = "IdCardNo";
            public static readonly string LegalRepresentativeName = "LegalRepresentativeName";
            public static readonly string ExpeditionDate = "ExpeditionDate";
            public static readonly string ExpeditionPlace = "ExpeditionPlace";
            public static readonly string BirthDate = "BirthDate";
            public static readonly string BirthPlace = "BirthPlace";
            public static readonly string Nationality = "Nationality";
            public static readonly string City = "City";
            public static readonly string Phone = "Phone";
            public static readonly string JobTitle = "JobTitle";
            public static readonly string CellPhone = "CellPhone";
            public static readonly string Email = "Email";
            public static readonly string Address = "Address";
            public static readonly string ChangeDate = "ChangeDate";
            public static readonly string AuthorizationAmount = "AuthorizationAmount";
            public static readonly string Description = "Description";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string UserId = "UserId";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string StateCode = "StateCode";
            public static readonly string CityCode = "CityCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="idCardTypeCode">Propiedad clave IdCardTypeCode.</param>
        /// <param name="idCardNo">Propiedad clave IdCardNo.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int idCardTypeCode, string idCardNo)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.IdCardTypeCode, idCardTypeCode);
            keys.Add(Properties.IdCardNo, idCardNo);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="idCardTypeCode">Propiedad clave IdCardTypeCode.</param>
        /// <param name="idCardNo">Propiedad clave IdCardNo.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId, int idCardTypeCode, string idCardNo)
        {
            return InternalCreatePrimaryKey<IndividualLegalRepresentLog>(individualId, idCardTypeCode, idCardNo);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad LegalRepresentativeName.
        /// </summary>
        private string _legalRepresentativeName = null;
        /// <summary>
        /// Atributo para la propiedad ExpeditionDate.
        /// </summary>
        private DateTime _expeditionDate;
        /// <summary>
        /// Atributo para la propiedad ExpeditionPlace.
        /// </summary>
        private string _expeditionPlace = null;
        /// <summary>
        /// Atributo para la propiedad BirthDate.
        /// </summary>
        private DateTime _birthDate;
        /// <summary>
        /// Atributo para la propiedad BirthPlace.
        /// </summary>
        private string _birthPlace = null;
        /// <summary>
        /// Atributo para la propiedad Nationality.
        /// </summary>
        private string _nationality = null;
        /// <summary>
        /// Atributo para la propiedad City.
        /// </summary>
        private string _city = null;
        /// <summary>
        /// Atributo para la propiedad Phone.
        /// </summary>
        private long? _phone = null;
        /// <summary>
        /// Atributo para la propiedad JobTitle.
        /// </summary>
        private string _jobTitle = null;
        /// <summary>
        /// Atributo para la propiedad CellPhone.
        /// </summary>
        private long? _cellPhone = null;
        /// <summary>
        /// Atributo para la propiedad Email.
        /// </summary>
        private string _email = null;
        /// <summary>
        /// Atributo para la propiedad Address.
        /// </summary>
        private string _address = null;
        /// <summary>
        /// Atributo para la propiedad ChangeDate.
        /// </summary>
        private DateTime _changeDate;
        /// <summary>
        /// Atributo para la propiedad AuthorizationAmount.
        /// </summary>
        private decimal? _authorizationAmount = null;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int? _currencyCode = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int _userId;
        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int _countryCode;
        /// <summary>
        /// Atributo para la propiedad StateCode.
        /// </summary>
        private int _stateCode;
        /// <summary>
        /// Atributo para la propiedad CityCode.
        /// </summary>
        private int _cityCode;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="idCardTypeCode">IdCardTypeCode key property.</param>
        /// <param name="idCardNo">IdCardNo key property.</param>
        public IndividualLegalRepresentLog(int individualId, int idCardTypeCode, string idCardNo) :
            this(IndividualLegalRepresentLog.CreatePrimaryKey(individualId, idCardTypeCode, idCardNo), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public IndividualLegalRepresentLog(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardTypeCode.
        /// </summary>
        /// <value>Propiedad IdCardTypeCode.</value>
        [
        DescriptionKey("ID_CARD_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID_CARD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int IdCardTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.IdCardTypeCode];
            }
            set
            {
                this._primaryKey[Properties.IdCardTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardNo.
        /// </summary>
        /// <value>Propiedad IdCardNo.</value>
        [
        DescriptionKey("ID_CARD_NO_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID_CARD_NO", DbType = System.Data.DbType.String),
        ]
        public string IdCardNo
        {
            get
            {
                return (string)this._primaryKey[Properties.IdCardNo];
            }
            set
            {
                this._primaryKey[Properties.IdCardNo] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LegalRepresentativeName.
        /// </summary>
        /// <value>Propiedad LegalRepresentativeName.</value>
        [
        DescriptionKey("LEGAL_REPRESENTATIVE_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LEGAL_REPRESENTATIVE_NAME", DbType = System.Data.DbType.String),
        ]
        public string LegalRepresentativeName
        {
            get
            {
                return this._legalRepresentativeName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.LegalRepresentativeName);
                }
                this._legalRepresentativeName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExpeditionDate.
        /// </summary>
        /// <value>Propiedad ExpeditionDate.</value>
        [
        DescriptionKey("EXPEDITION_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXPEDITION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime ExpeditionDate
        {
            get
            {
                return this._expeditionDate;
            }
            set
            {
                this._expeditionDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExpeditionPlace.
        /// </summary>
        /// <value>Propiedad ExpeditionPlace.</value>
        [
        DescriptionKey("EXPEDITION_PLACE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXPEDITION_PLACE", DbType = System.Data.DbType.String),
        ]
        public string ExpeditionPlace
        {
            get
            {
                return this._expeditionPlace;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.ExpeditionPlace);
                }
                this._expeditionPlace = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BirthDate.
        /// </summary>
        /// <value>Propiedad BirthDate.</value>
        [
        DescriptionKey("BIRTH_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BIRTH_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime BirthDate
        {
            get
            {
                return this._birthDate;
            }
            set
            {
                this._birthDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BirthPlace.
        /// </summary>
        /// <value>Propiedad BirthPlace.</value>
        [
        DescriptionKey("BIRTH_PLACE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BIRTH_PLACE", DbType = System.Data.DbType.String),
        ]
        public string BirthPlace
        {
            get
            {
                return this._birthPlace;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.BirthPlace);
                }
                this._birthPlace = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Nationality.
        /// </summary>
        /// <value>Propiedad Nationality.</value>
        [
        DescriptionKey("NATIONALITY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "NATIONALITY", DbType = System.Data.DbType.String),
        ]
        public string Nationality
        {
            get
            {
                return this._nationality;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Nationality);
                }
                this._nationality = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad City.
        /// </summary>
        /// <value>Propiedad City.</value>
        [
        DescriptionKey("CITY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CITY", DbType = System.Data.DbType.String),
        ]
        public string City
        {
            get
            {
                return this._city;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.City);
                }
                this._city = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Phone.
        /// </summary>
        /// <value>Propiedad Phone.</value>
        [
        DescriptionKey("PHONE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PHONE", DbType = System.Data.DbType.String),
        ]
        public long? Phone
        {
            get
            {
                return this._phone;
            }
            set
            {
                this._phone = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad JobTitle.
        /// </summary>
        /// <value>Propiedad JobTitle.</value>
        [
        DescriptionKey("JOB_TITLE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "JOB_TITLE", DbType = System.Data.DbType.String),
        ]
        public string JobTitle
        {
            get
            {
                return this._jobTitle;
            }
            set
            {
                this._jobTitle = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CellPhone.
        /// </summary>
        /// <value>Propiedad CellPhone.</value>
        [
        DescriptionKey("CELL_PHONE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CELL_PHONE", DbType = System.Data.DbType.String),
        ]
        public long? CellPhone
        {
            get
            {
                return this._cellPhone;
            }
            set
            {
                this._cellPhone = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Email.
        /// </summary>
        /// <value>Propiedad Email.</value>
        [
        DescriptionKey("EMAIL_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EMAIL", DbType = System.Data.DbType.String),
        ]
        public string Email
        {
            get
            {
                return this._email;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Email);
                }
                this._email = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Address.
        /// </summary>
        /// <value>Propiedad Address.</value>
        [
        DescriptionKey("ADDRESS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ADDRESS", DbType = System.Data.DbType.String),
        ]
        public string Address
        {
            get
            {
                return this._address;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Address);
                }
                this._address = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ChangeDate.
        /// </summary>
        /// <value>Propiedad ChangeDate.</value>
        [
        DescriptionKey("CHANGE_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CHANGE_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime ChangeDate
        {
            get
            {
                return this._changeDate;
            }
            set
            {
                this._changeDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationAmount.
        /// </summary>
        /// <value>Propiedad AuthorizationAmount.</value>
        [
        DescriptionKey("AUTHORIZATION_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AUTHORIZATION_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? AuthorizationAmount
        {
            get
            {
                return this._authorizationAmount;
            }
            set
            {
                this._authorizationAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int CountryCode
        {
            get
            {
                return this._countryCode;
            }
            set
            {
                this._countryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StateCode.
        /// </summary>
        /// <value>Propiedad StateCode.</value>
        [
        DescriptionKey("STATE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STATE_CD", DbType = System.Data.DbType.String),
        ]
        public int StateCode
        {
            get
            {
                return this._stateCode;
            }
            set
            {
                this._stateCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CityCode.
        /// </summary>
        /// <value>Propiedad CityCode.</value>
        [
        DescriptionKey("CITY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CITY_CD", DbType = System.Data.DbType.String),
        ]
        public int CityCode
        {
            get
            {
                return this._cityCode;
            }
            set
            {
                this._cityCode = value;
            }
        }

    }
}