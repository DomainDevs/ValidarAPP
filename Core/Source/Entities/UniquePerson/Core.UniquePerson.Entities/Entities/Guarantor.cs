/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.Guarantor.dict v1.0
 * FileSize=10392 Header=260 CRC=1478156962
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad Guarantor.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniquePerson.Guarantor.dict"),
    Serializable(),
    DescriptionKey("GUARANTOR_ENTITY"),
    TableMap(TableName = "GUARANTOR", Schema = "UP"),
    ]
    public partial class Guarantor :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualId = "IndividualId";
            public static readonly string GuaranteeId = "GuaranteeId";
            public static readonly string GuarantorId = "GuarantorId";
            public static readonly string TradeName = "TradeName";
            public static readonly string GuarantorName = "GuarantorName";
            public static readonly string IdCardNo = "IdCardNo";
            public static readonly string TributaryIdNo = "TributaryIdNo";
            public static readonly string Adrress = "Adrress";
            public static readonly string PhoneNumber = "PhoneNumber";
            public static readonly string CityText = "CityText";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="guaranteeId">Propiedad clave GuaranteeId.</param>
        /// <param name="guarantorId">Propiedad clave GuarantorId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int guaranteeId, int guarantorId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.GuaranteeId, guaranteeId);
            keys.Add(Properties.GuarantorId, guarantorId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="guaranteeId">Propiedad clave GuaranteeId.</param>
        /// <param name="guarantorId">Propiedad clave GuarantorId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId, int guaranteeId, int guarantorId)
        {
            return InternalCreatePrimaryKey<Guarantor>(individualId, guaranteeId, guarantorId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TradeName.
        /// </summary>
        private string _tradeName = null;
        /// <summary>
        /// Atributo para la propiedad GuarantorName.
        /// </summary>
        private string _guarantorName = null;
        /// <summary>
        /// Atributo para la propiedad IdCardNo.
        /// </summary>
        private string _idCardNo = null;
        /// <summary>
        /// Atributo para la propiedad TributaryIdNo.
        /// </summary>
        private string _tributaryIdNo = null;
        /// <summary>
        /// Atributo para la propiedad Adrress.
        /// </summary>
        private string _adrress = null;
        /// <summary>
        /// Atributo para la propiedad PhoneNumber.
        /// </summary>
        private long _phoneNumber;
        /// <summary>
        /// Atributo para la propiedad CityText.
        /// </summary>
        private string _cityText = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="guaranteeId">GuaranteeId key property.</param>
        /// <param name="guarantorId">GuarantorId key property.</param>
        public Guarantor(int individualId, int guaranteeId, int guarantorId) :
            this(Guarantor.CreatePrimaryKey(individualId, guaranteeId, guarantorId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Guarantor(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GuaranteeId.
        /// </summary>
        /// <value>Propiedad GuaranteeId.</value>
        [
        DescriptionKey("GUARANTEE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GUARANTEE_ID", DbType = System.Data.DbType.String),
        ]
        public int GuaranteeId
        {
            get
            {
                return (int)this._primaryKey[Properties.GuaranteeId];
            }
            set
            {
                this._primaryKey[Properties.GuaranteeId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GuarantorId.
        /// </summary>
        /// <value>Propiedad GuarantorId.</value>
        [
        DescriptionKey("GUARANTOR_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GUARANTOR_ID", DbType = System.Data.DbType.String),
        ]
        public int GuarantorId
        {
            get
            {
                return (int)this._primaryKey[Properties.GuarantorId];
            }
            set
            {
                this._primaryKey[Properties.GuarantorId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TradeName.
        /// </summary>
        /// <value>Propiedad TradeName.</value>
        [
        DescriptionKey("TRADE_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TRADE_NAME", DbType = System.Data.DbType.String),
        ]
        public string TradeName
        {
            get
            {
                return this._tradeName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.TradeName);
                }
                this._tradeName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GuarantorName.
        /// </summary>
        /// <value>Propiedad GuarantorName.</value>
        [
        DescriptionKey("GUARANTOR_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "GUARANTOR_NAME", DbType = System.Data.DbType.String),
        ]
        public string GuarantorName
        {
            get
            {
                return this._guarantorName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.GuarantorName);
                }
                this._guarantorName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCardNo.
        /// </summary>
        /// <value>Propiedad IdCardNo.</value>
        [
        DescriptionKey("ID_CARD_NO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID_CARD_NO", DbType = System.Data.DbType.String),
        ]
        public string IdCardNo
        {
            get
            {
                return this._idCardNo;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.IdCardNo);
                }
                this._idCardNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TributaryIdNo.
        /// </summary>
        /// <value>Propiedad TributaryIdNo.</value>
        [
        DescriptionKey("TRIBUTARY_ID_NO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TRIBUTARY_ID_NO", DbType = System.Data.DbType.String),
        ]
        public string TributaryIdNo
        {
            get
            {
                return this._tributaryIdNo;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.TributaryIdNo);
                }
                this._tributaryIdNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Adrress.
        /// </summary>
        /// <value>Propiedad Adrress.</value>
        [
        DescriptionKey("ADRRESS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ADRRESS", DbType = System.Data.DbType.String),
        ]
        public string Adrress
        {
            get
            {
                return this._adrress;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Adrress);
                }
                this._adrress = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PhoneNumber.
        /// </summary>
        /// <value>Propiedad PhoneNumber.</value>
        [
        DescriptionKey("PHONE_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PHONE_NUMBER", DbType = System.Data.DbType.String),
        ]
        public long PhoneNumber
        {
            get
            {
                return this._phoneNumber;
            }
            set
            {
                this._phoneNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CityText.
        /// </summary>
        /// <value>Propiedad CityText.</value>
        [
        DescriptionKey("CITY_TEXT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CITY_TEXT", DbType = System.Data.DbType.String),
        ]
        public string CityText
        {
            get
            {
                return this._cityText;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.CityText);
                }
                this._cityText = value;
            }
        }

    }
}