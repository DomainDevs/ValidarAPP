/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Tax.ProspectTax.dict v1.0
 * FileSize=7910 Header=245 CRC=3892356999
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Tax.Entities
{
    /// <summary>
    /// Definición de entidad ProspectTax.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Tax.ProspectTax.dict"),
    Serializable(),
    DescriptionKey("PROSPECT_TAX_ENTITY"),
    TableMap(TableName = "PROSPECT_TAX", Schema = "TAX"),
    ]
    public partial class ProspectTax :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProspectTaxId = "ProspectTaxId";
            public static readonly string ProspectId = "ProspectId";
            public static readonly string TaxCode = "TaxCode";
            public static readonly string TaxConditionCode = "TaxConditionCode";
            public static readonly string StateCode = "StateCode";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string InscriptionNumber = "InscriptionNumber";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="prospectId">Propiedad clave ProspectId.</param>
        /// <param name="taxCode">Propiedad clave TaxCode.</param>
        /// <param name="stateCode">Propiedad clave StateCode.</param>
        /// <param name="countryCode">Propiedad clave CountryCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int prospectId, int taxCode, int? stateCode, int? countryCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProspectId, prospectId);
            keys.Add(Properties.TaxCode, taxCode);
            keys.Add(Properties.StateCode, stateCode);
            keys.Add(Properties.CountryCode, countryCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="prospectId">Propiedad clave ProspectId.</param>
        /// <param name="taxCode">Propiedad clave TaxCode.</param>
        /// <param name="stateCode">Propiedad clave StateCode.</param>
        /// <param name="countryCode">Propiedad clave CountryCode.</param>
        public static PrimaryKey CreatePrimaryKey(int prospectId, int taxCode, int? stateCode, int? countryCode)
        {
            return InternalCreatePrimaryKey<ProspectTax>(prospectId, taxCode, stateCode, countryCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProspectTaxId.
        /// </summary>
        private int _prospectTaxId;
        /// <summary>
        /// Atributo para la propiedad TaxConditionCode.
        /// </summary>
        private int _taxConditionCode;
        /// <summary>
        /// Atributo para la propiedad InscriptionNumber.
        /// </summary>
        private string _inscriptionNumber = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="prospectId">ProspectId key property.</param>
        /// <param name="taxCode">TaxCode key property.</param>
        /// <param name="stateCode">StateCode key property.</param>
        /// <param name="countryCode">CountryCode key property.</param>
        public ProspectTax(int prospectId, int taxCode, int? stateCode, int? countryCode) :
            this(ProspectTax.CreatePrimaryKey(prospectId, taxCode, stateCode, countryCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ProspectTax(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProspectTaxId.
        /// </summary>
        /// <value>Propiedad ProspectTaxId.</value>
        [
        DescriptionKey("PROSPECT_TAX_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROSPECT_TAX_ID", DbType = System.Data.DbType.String),
        ]
        public int ProspectTaxId
        {
            get
            {
                return this._prospectTaxId;
            }
            set
            {
                this._prospectTaxId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProspectId.
        /// </summary>
        /// <value>Propiedad ProspectId.</value>
        [
        DescriptionKey("PROSPECT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROSPECT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProspectId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProspectId];
            }
            set
            {
                this._primaryKey[Properties.ProspectId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxCode.
        /// </summary>
        /// <value>Propiedad TaxCode.</value>
        [
        DescriptionKey("TAX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TAX_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxCode
        {
            get
            {
                return (int)this._primaryKey[Properties.TaxCode];
            }
            set
            {
                this._primaryKey[Properties.TaxCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxConditionCode.
        /// </summary>
        /// <value>Propiedad TaxConditionCode.</value>
        [
        DescriptionKey("TAX_CONDITION_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TAX_CONDITION_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxConditionCode
        {
            get
            {
                return this._taxConditionCode;
            }
            set
            {
                this._taxConditionCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StateCode.
        /// </summary>
        /// <value>Propiedad StateCode.</value>
        [
        DescriptionKey("STATE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "STATE_CD", DbType = System.Data.DbType.String),
        ]
        public int? StateCode
        {
            get
            {
                return (int?)this._primaryKey[Properties.StateCode];
            }
            set
            {
                this._primaryKey[Properties.StateCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CountryCode
        {
            get
            {
                return (int?)this._primaryKey[Properties.CountryCode];
            }
            set
            {
                this._primaryKey[Properties.CountryCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InscriptionNumber.
        /// </summary>
        /// <value>Propiedad InscriptionNumber.</value>
        [
        DescriptionKey("INSCRIPTION_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INSCRIPTION_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string InscriptionNumber
        {
            get
            {
                return this._inscriptionNumber;
            }
            set
            {
                this._inscriptionNumber = value;
            }
        }

    }
}