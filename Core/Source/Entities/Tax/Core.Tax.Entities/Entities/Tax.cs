/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Tax.Tax.dict v1.0
 * FileSize=13114 Header=238 CRC=3302743095
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Tax.Entities
{
    /// <summary>
    /// Definición de entidad Tax.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Tax.Tax.dict"),
    Serializable(),
    DescriptionKey("TAX_ENTITY"),
    TableMap(TableName = "TAX", Schema = "TAX"),
    ]
    public partial class Tax :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TaxCode = "TaxCode";
            public static readonly string Description = "Description";
            public static readonly string SmallDescription = "SmallDescription";
            public static readonly string RateTypeCode = "RateTypeCode";
            public static readonly string AdditionalRateTypeCode = "AdditionalRateTypeCode";
            public static readonly string IsSurplus = "IsSurplus";
            public static readonly string IsAdditionalSurplus = "IsAdditionalSurplus";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string Enabled = "Enabled";
            public static readonly string IsEarned = "IsEarned";
            public static readonly string IsRetention = "IsRetention";
            public static readonly string RetentionTaxCode = "RetentionTaxCode";
            public static readonly string BaseConditionTaxCode = "BaseConditionTaxCode";
            public static readonly string TaxRepaymentTypeCode = "TaxRepaymentTypeCode";
            public static readonly string DevolutionTaxTypeCode = "DevolutionTaxTypeCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="taxCode">Propiedad clave TaxCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int taxCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TaxCode, taxCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TaxCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="taxCode">Propiedad clave TaxCode.</param>
        public static PrimaryKey CreatePrimaryKey(int taxCode)
        {
            return InternalCreatePrimaryKey<Tax>(taxCode);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Tax>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad SmallDescription.
        /// </summary>
        private string _smallDescription = null;
        /// <summary>
        /// Atributo para la propiedad RateTypeCode.
        /// </summary>
        private int _rateTypeCode;
        /// <summary>
        /// Atributo para la propiedad AdditionalRateTypeCode.
        /// </summary>
        private int? _additionalRateTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad IsSurplus.
        /// </summary>
        private bool _isSurplus;
        /// <summary>
        /// Atributo para la propiedad IsAdditionalSurplus.
        /// </summary>
        private bool _isAdditionalSurplus;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad Enabled.
        /// </summary>
        private bool _enabled;
        /// <summary>
        /// Atributo para la propiedad IsEarned.
        /// </summary>
        private bool _isEarned;
        /// <summary>
        /// Atributo para la propiedad IsRetention.
        /// </summary>
        private bool _isRetention;
        /// <summary>
        /// Atributo para la propiedad RetentionTaxCode.
        /// </summary>
        private int? _retentionTaxCode = null;
        /// <summary>
        /// Atributo para la propiedad BaseConditionTaxCode.
        /// </summary>
        private int? _baseConditionTaxCode = null;
        /// <summary>
        /// Atributo para la propiedad TaxRepaymentTypeCode.
        /// </summary>
        private int _taxRepaymentTypeCode;
        /// <summary>
        /// Atributo para la propiedad DevolutionTaxTypeCode.
        /// </summary>
        private int? _devolutionTaxTypeCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="taxCode">TaxCode key property.</param>
        public Tax(int taxCode) :
            this(Tax.CreatePrimaryKey(taxCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public Tax() :
            this(Tax.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Tax(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxCode.
        /// </summary>
        /// <value>Propiedad TaxCode.</value>
        [
        DescriptionKey("TAX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "TAX_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxCode
        {
            get
            {
                return (int)this._primaryKey[Properties.TaxCode];
            }
            set
            {
                this._primaryKey[Properties.TaxCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SmallDescription.
        /// </summary>
        /// <value>Propiedad SmallDescription.</value>
        [
        DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SMALL_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string SmallDescription
        {
            get
            {
                return this._smallDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
                }
                this._smallDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RateTypeCode.
        /// </summary>
        /// <value>Propiedad RateTypeCode.</value>
        [
        DescriptionKey("RATE_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RATE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int RateTypeCode
        {
            get
            {
                return this._rateTypeCode;
            }
            set
            {
                this._rateTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AdditionalRateTypeCode.
        /// </summary>
        /// <value>Propiedad AdditionalRateTypeCode.</value>
        [
        DescriptionKey("ADDITIONAL_RATE_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ADDITIONAL_RATE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? AdditionalRateTypeCode
        {
            get
            {
                return this._additionalRateTypeCode;
            }
            set
            {
                this._additionalRateTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsSurplus.
        /// </summary>
        /// <value>Propiedad IsSurplus.</value>
        [
        DescriptionKey("IS_SURPLUS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_SURPLUS", DbType = System.Data.DbType.String),
        ]
        public bool IsSurplus
        {
            get
            {
                return this._isSurplus;
            }
            set
            {
                this._isSurplus = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsAdditionalSurplus.
        /// </summary>
        /// <value>Propiedad IsAdditionalSurplus.</value>
        [
        DescriptionKey("IS_ADDITIONAL_SURPLUS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ADDITIONAL_SURPLUS", DbType = System.Data.DbType.String),
        ]
        public bool IsAdditionalSurplus
        {
            get
            {
                return this._isAdditionalSurplus;
            }
            set
            {
                this._isAdditionalSurplus = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Enabled.
        /// </summary>
        /// <value>Propiedad Enabled.</value>
        [
        DescriptionKey("ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool Enabled
        {
            get
            {
                return this._enabled;
            }
            set
            {
                this._enabled = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsEarned.
        /// </summary>
        /// <value>Propiedad IsEarned.</value>
        [
        DescriptionKey("IS_EARNED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_EARNED", DbType = System.Data.DbType.String),
        ]
        public bool IsEarned
        {
            get
            {
                return this._isEarned;
            }
            set
            {
                this._isEarned = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsRetention.
        /// </summary>
        /// <value>Propiedad IsRetention.</value>
        [
        DescriptionKey("IS_RETENTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_RETENTION", DbType = System.Data.DbType.String),
        ]
        public bool IsRetention
        {
            get
            {
                return this._isRetention;
            }
            set
            {
                this._isRetention = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RetentionTaxCode.
        /// </summary>
        /// <value>Propiedad RetentionTaxCode.</value>
        [
        DescriptionKey("RETENTION_TAX_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "RETENTION_TAX_CD", DbType = System.Data.DbType.String),
        ]
        public int? RetentionTaxCode
        {
            get
            {
                return this._retentionTaxCode;
            }
            set
            {
                this._retentionTaxCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BaseConditionTaxCode.
        /// </summary>
        /// <value>Propiedad BaseConditionTaxCode.</value>
        [
        DescriptionKey("BASE_CONDITION_TAX_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BASE_CONDITION_TAX_CD", DbType = System.Data.DbType.String),
        ]
        public int? BaseConditionTaxCode
        {
            get
            {
                return this._baseConditionTaxCode;
            }
            set
            {
                this._baseConditionTaxCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxRepaymentTypeCode.
        /// </summary>
        /// <value>Propiedad TaxRepaymentTypeCode.</value>
        [
        DescriptionKey("TAX_REPAYMENT_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TAX_REPAYMENT_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxRepaymentTypeCode
        {
            get
            {
                return this._taxRepaymentTypeCode;
            }
            set
            {
                this._taxRepaymentTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DevolutionTaxTypeCode.
        /// </summary>
        /// <value>Propiedad DevolutionTaxTypeCode.</value>
        [
        DescriptionKey("DEVOLUTION_TAX_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEVOLUTION_TAX_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? DevolutionTaxTypeCode
        {
            get
            {
                return this._devolutionTaxTypeCode;
            }
            set
            {
                this._devolutionTaxTypeCode = value;
            }
        }

    }
}