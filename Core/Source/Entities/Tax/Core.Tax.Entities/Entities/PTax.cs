/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Tax.PTax.dict v1.0
 * FileSize=3587 Header=238 CRC=2496693224
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Tax.Entities
{
    /// <summary>
    /// Definición de entidad PTax.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Tax.PTax.dict"),
    Serializable(),
    DescriptionKey("P_TAX_ENTITY"),
    TableMap(TableName = "P_TAX", Schema = "TAX"),
    ]
    public partial class PTax :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TaxCode = "TaxCode";
            public static readonly string PIsDynamic = "PIsDynamic";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="taxCode">Propiedad clave TaxCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int taxCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TaxCode, taxCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="taxCode">Propiedad clave TaxCode.</param>
        public static PrimaryKey CreatePrimaryKey(int taxCode)
        {
            return InternalCreatePrimaryKey<PTax>(taxCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PIsDynamic.
        /// </summary>
        private bool _pIsDynamic;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="taxCode">TaxCode key property.</param>
        public PTax(int taxCode) :
            this(PTax.CreatePrimaryKey(taxCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PTax(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxCode.
        /// </summary>
        /// <value>Propiedad TaxCode.</value>
        [
        DescriptionKey("TAX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TAX_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxCode
        {
            get
            {
                return (int)this._primaryKey[Properties.TaxCode];
            }
            set
            {
                this._primaryKey[Properties.TaxCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PIsDynamic.
        /// </summary>
        /// <value>Propiedad PIsDynamic.</value>
        [
        DescriptionKey("P_IS_DYNAMIC_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "P_IS_DYNAMIC", DbType = System.Data.DbType.String),
        ]
        public bool PIsDynamic
        {
            get
            {
                return this._pIsDynamic;
            }
            set
            {
                this._pIsDynamic = value;
            }
        }

    }
}