/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Tax.IndividualTax.dict v1.0
 * FileSize=8062 Header=245 CRC=12192458
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Tax.Entities
{
    /// <summary>
    /// Definición de entidad IndividualTax.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Tax.IndividualTax.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_TAX_ENTITY"),
    TableMap(TableName = "INDIVIDUAL_TAX", Schema = "TAX"),
    ]
    public partial class IndividualTax :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndividualTaxId = "IndividualTaxId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string TaxRateCode = "TaxRateCode";
            public static readonly string RoleCode = "RoleCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualTaxId, null);
            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualTaxId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndividualTaxId, individualTaxId);
            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="userId">Propiedad clave UserId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualTaxId)
        {
            return InternalCreatePrimaryKey<IndividualTax>(individualTaxId);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<IndividualTax>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualTaxId.
        /// </summary>
        private int _individualTaxId;
        /// <summary>
		/// Atributo para la propiedad RoleCode.
		/// </summary>
        private int? _roleCode = null;
        private int _individualId;
        private int _taxRateCode;
        //*** Object Constructors ********************************

        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="taxCode">TaxCode key property.</param>
        /// <param name="stateCode">StateCode key property.</param>
        /// <param name="countryCode">CountryCode key property.</param>
        public IndividualTax() :
            this(IndividualTax.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="taxCode">TaxCode key property.</param>
        /// <param name="stateCode">StateCode key property.</param>
        /// <param name="countryCode">CountryCode key property.</param>
        public IndividualTax(int taxIdividualId) :
            this(IndividualTax.CreatePrimaryKey(taxIdividualId), null)
        {
        }

    
        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public IndividualTax(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualTaxId.
        /// </summary>
        /// <value>Propiedad IndividualTaxId.</value>
        [
        DescriptionKey("INDIVIDUAL_TAX_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_TAX_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualTaxId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualTaxId];
            }
            set
            {
                this._primaryKey[Properties.IndividualTaxId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxRateCode.
        /// </summary>
        /// <value>Propiedad TaxRateCode.</value>
        [
        DescriptionKey("TAX_RATE_CD_PROPERTY"),
        ColumnMap(ColumnName = "TAX_RATE_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxRateCode
        {
            get
            {
                return this._taxRateCode;
            }
            set
            {
                this._taxRateCode = value;
            }
        }
        /// <summary>
		/// Devuelve o setea el valor de la propiedad RoleCode.
		/// </summary>
		/// <value>Propiedad RoleCode.</value>
	    [
        DescriptionKey("ROLE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ROLE_CD", DbType = System.Data.DbType.String),
        ]
        public int? RoleCode
        {
            get
            {
                return this._roleCode;
            }
            set
            {
                this._roleCode = value;
            }
        }
    }
}