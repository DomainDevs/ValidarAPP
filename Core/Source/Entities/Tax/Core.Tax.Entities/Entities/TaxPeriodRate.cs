/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Tax.TaxPeriodRate.dict v1.0
 * FileSize=9740 Header=246 CRC=145085381
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Tax.Entities
{
    /// <summary>
    /// Definición de entidad TaxPeriodRate.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Tax.TaxPeriodRate.dict"),
    Serializable(),
    DescriptionKey("TAX_PERIOD_RATE_ENTITY"),
    TableMap(TableName = "TAX_PERIOD_RATE", Schema = "TAX"),
    ]
    public partial class TaxPeriodRate :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TaxRateId = "TaxRateId";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string Rate = "Rate";
            public static readonly string AdditionalRate = "AdditionalRate";
            public static readonly string BaseTaxIncInAdditional = "BaseTaxIncInAdditional";
            public static readonly string MinBaseAmount = "MinBaseAmount";
            public static readonly string MinAdditionalBaseAmount = "MinAdditionalBaseAmount";
            public static readonly string MinTaxAmount = "MinTaxAmount";
            public static readonly string MinAdditionalTaxAmount = "MinAdditionalTaxAmount";
            public static readonly string CurrentTo = "CurrentTo";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="taxRateId">Propiedad clave TaxRateId.</param>
        /// <param name="currentFrom">Propiedad clave CurrentFrom.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int taxRateId, DateTime currentFrom)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TaxRateId, taxRateId);
            keys.Add(Properties.CurrentFrom, currentFrom);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="taxRateId">Propiedad clave TaxRateId.</param>
        /// <param name="currentFrom">Propiedad clave CurrentFrom.</param>
        public static PrimaryKey CreatePrimaryKey(int taxRateId, DateTime currentFrom)
        {
            return InternalCreatePrimaryKey<TaxPeriodRate>(taxRateId, currentFrom);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Rate.
        /// </summary>
        private decimal _rate;
        /// <summary>
        /// Atributo para la propiedad AdditionalRate.
        /// </summary>
        private decimal _additionalRate;
        /// <summary>
        /// Atributo para la propiedad BaseTaxIncInAdditional.
        /// </summary>
        private bool _baseTaxIncInAdditional;
        /// <summary>
        /// Atributo para la propiedad MinBaseAmount.
        /// </summary>
        private decimal _minBaseAmount;
        /// <summary>
        /// Atributo para la propiedad MinAdditionalBaseAmount.
        /// </summary>
        private decimal _minAdditionalBaseAmount;
        /// <summary>
        /// Atributo para la propiedad MinTaxAmount.
        /// </summary>
        private decimal _minTaxAmount;
        /// <summary>
        /// Atributo para la propiedad MinAdditionalTaxAmount.
        /// </summary>
        private decimal _minAdditionalTaxAmount;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime? _currentTo = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="taxRateId">TaxRateId key property.</param>
        /// <param name="currentFrom">CurrentFrom key property.</param>
        public TaxPeriodRate(int taxRateId, DateTime currentFrom) :
            this(TaxPeriodRate.CreatePrimaryKey(taxRateId, currentFrom), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public TaxPeriodRate(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxRateId.
        /// </summary>
        /// <value>Propiedad TaxRateId.</value>
        [
        DescriptionKey("TAX_RATE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TAX_RATE_ID", DbType = System.Data.DbType.String),
        ]
        public int TaxRateId
        {
            get
            {
                return (int)this._primaryKey[Properties.TaxRateId];
            }
            set
            {
                this._primaryKey[Properties.TaxRateId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return (DateTime)this._primaryKey[Properties.CurrentFrom];
            }
            set
            {
                this._primaryKey[Properties.CurrentFrom] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Rate.
        /// </summary>
        /// <value>Propiedad Rate.</value>
        [
        DescriptionKey("RATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RATE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal Rate
        {
            get
            {
                return this._rate;
            }
            set
            {
                this._rate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AdditionalRate.
        /// </summary>
        /// <value>Propiedad AdditionalRate.</value>
        [
        DescriptionKey("ADDITIONAL_RATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ADDITIONAL_RATE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal AdditionalRate
        {
            get
            {
                return this._additionalRate;
            }
            set
            {
                this._additionalRate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BaseTaxIncInAdditional.
        /// </summary>
        /// <value>Propiedad BaseTaxIncInAdditional.</value>
        [
        DescriptionKey("BASE_TAX_INC_IN_ADDITIONAL_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BASE_TAX_INC_IN_ADDITIONAL", DbType = System.Data.DbType.String),
        ]
        public bool BaseTaxIncInAdditional
        {
            get
            {
                return this._baseTaxIncInAdditional;
            }
            set
            {
                this._baseTaxIncInAdditional = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MinBaseAmount.
        /// </summary>
        /// <value>Propiedad MinBaseAmount.</value>
        [
        DescriptionKey("MIN_BASE_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MIN_BASE_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal MinBaseAmount
        {
            get
            {
                return this._minBaseAmount;
            }
            set
            {
                this._minBaseAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MinAdditionalBaseAmount.
        /// </summary>
        /// <value>Propiedad MinAdditionalBaseAmount.</value>
        [
        DescriptionKey("MIN_ADDITIONAL_BASE_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MIN_ADDITIONAL_BASE_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal MinAdditionalBaseAmount
        {
            get
            {
                return this._minAdditionalBaseAmount;
            }
            set
            {
                this._minAdditionalBaseAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MinTaxAmount.
        /// </summary>
        /// <value>Propiedad MinTaxAmount.</value>
        [
        DescriptionKey("MIN_TAX_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MIN_TAX_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal MinTaxAmount
        {
            get
            {
                return this._minTaxAmount;
            }
            set
            {
                this._minTaxAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MinAdditionalTaxAmount.
        /// </summary>
        /// <value>Propiedad MinAdditionalTaxAmount.</value>
        [
        DescriptionKey("MIN_ADDITIONAL_TAX_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MIN_ADDITIONAL_TAX_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal MinAdditionalTaxAmount
        {
            get
            {
                return this._minAdditionalTaxAmount;
            }
            set
            {
                this._minAdditionalTaxAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

    }
}