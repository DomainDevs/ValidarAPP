/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Tax.EconomicActivityTax.dict v1.0
 * FileSize=6851 Header=253 CRC=3671342970
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Tax.Entities
{
    /// <summary>
    /// Definición de entidad EconomicActivityTax.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Tax.EconomicActivityTax.dict"),
    Serializable(),
    DescriptionKey("ECONOMIC_ACTIVITY_TAX_ENTITY"),
    TableMap(TableName="ECONOMIC_ACTIVITY_TAX", Schema="TAX"),
    ]
    public partial class EconomicActivityTax :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string EconomicActivityTaxId = "EconomicActivityTaxId";
			public static readonly string CountryCode = "CountryCode";
			public static readonly string StateCode = "StateCode";
			public static readonly string CityCode = "CityCode";
			public static readonly string EconomicActivityCode = "EconomicActivityCode";
			public static readonly string Description = "Description";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="economicActivityTaxId">Propiedad clave EconomicActivityTaxId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int economicActivityTaxId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.EconomicActivityTaxId, economicActivityTaxId);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EconomicActivityTaxId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="economicActivityTaxId">Propiedad clave EconomicActivityTaxId.</param>
        public static PrimaryKey CreatePrimaryKey(int economicActivityTaxId)
	    {
			return InternalCreatePrimaryKey<EconomicActivityTax>(economicActivityTaxId);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<EconomicActivityTax>();
        }

        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int? _countryCode = null;
		/// <summary>
		/// Atributo para la propiedad StateCode.
		/// </summary>
        private int? _stateCode = null;
		/// <summary>
		/// Atributo para la propiedad CityCode.
		/// </summary>
        private int? _cityCode = null;
		/// <summary>
		/// Atributo para la propiedad EconomicActivityCode.
		/// </summary>
        private int? _economicActivityCode = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="economicActivityTaxId">EconomicActivityTaxId key property.</param>
	    public EconomicActivityTax(int economicActivityTaxId):
			this(EconomicActivityTax.CreatePrimaryKey(economicActivityTaxId), null)
	    {
	    }

        public EconomicActivityTax() :
            this(EconomicActivityTax.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public EconomicActivityTax(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad EconomicActivityTaxId.
		/// </summary>
		/// <value>Propiedad EconomicActivityTaxId.</value>
	    [
		DescriptionKey("ECONOMIC_ACTIVITY_TAX_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ECONOMIC_ACTIVITY_TAX_ID", DbType=System.Data.DbType.String),
	    ]
        public int EconomicActivityTaxId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EconomicActivityTaxId];
		    }
		    set
		    {
				this._primaryKey[Properties.EconomicActivityTaxId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CountryCode.
		/// </summary>
		/// <value>Propiedad CountryCode.</value>
	    [
		DescriptionKey("COUNTRY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COUNTRY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CountryCode
	    {
		    get
		    {
			    return this._countryCode;
		    }
		    set
		    {
				this._countryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StateCode.
		/// </summary>
		/// <value>Propiedad StateCode.</value>
	    [
		DescriptionKey("STATE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? StateCode
	    {
		    get
		    {
			    return this._stateCode;
		    }
		    set
		    {
				this._stateCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CityCode.
		/// </summary>
		/// <value>Propiedad CityCode.</value>
	    [
		DescriptionKey("CITY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CityCode
	    {
		    get
		    {
			    return this._cityCode;
		    }
		    set
		    {
				this._cityCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EconomicActivityCode.
		/// </summary>
		/// <value>Propiedad EconomicActivityCode.</value>
	    [
		DescriptionKey("ECONOMIC_ACTIVITY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ECONOMIC_ACTIVITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? EconomicActivityCode
	    {
		    get
		    {
			    return this._economicActivityCode;
		    }
		    set
		    {
				this._economicActivityCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

    }
}