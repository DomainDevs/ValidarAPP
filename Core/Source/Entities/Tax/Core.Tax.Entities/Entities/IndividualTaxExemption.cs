/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Tax.IndividualTaxExemption.dict v1.0
 * FileSize=10940 Header=257 CRC=1350038525
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Tax.Entities
{
    /// <summary>
    /// Definición de entidad IndividualTaxExemption.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Tax.IndividualTaxExemption.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_TAX_EXEMPTION_ENTITY"),
    TableMap(TableName = "INDIVIDUAL_TAX_EXEMPTION", Schema = "TAX"),
    ]
    public partial class IndividualTaxExemption :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IndTaxExemptionId = "IndTaxExemptionId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string TaxCode = "TaxCode";
            public static readonly string ExemptionPercentage = "ExemptionPercentage";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string TaxCategoryCode = "TaxCategoryCode";
            public static readonly string StateCode = "StateCode";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string BulletinDate = "BulletinDate";
            public static readonly string ResolutionNumber = "ResolutionNumber";
            public static readonly string HasFullRetention = "HasFullRetention";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="indTaxExemptionId">Propiedad clave IndTaxExemptionId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int indTaxExemptionId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndTaxExemptionId, indTaxExemptionId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="indTaxExemptionId">Propiedad clave IndTaxExemptionId.</param>
        public static PrimaryKey CreatePrimaryKey(int indTaxExemptionId)
        {
            return InternalCreatePrimaryKey<IndividualTaxExemption>(indTaxExemptionId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        /// <summary>
        /// Atributo para la propiedad TaxCode.
        /// </summary>
        private int _taxCode;
        /// <summary>
        /// Atributo para la propiedad ExemptionPercentage.
        /// </summary>
        private decimal _exemptionPercentage;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime? _currentFrom = null;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime? _currentTo = null;
        /// <summary>
        /// Atributo para la propiedad TaxCategoryCode.
        /// </summary>
        private int? _taxCategoryCode = null;
        /// <summary>
        /// Atributo para la propiedad StateCode.
        /// </summary>
        private int? _stateCode = null;
        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int? _countryCode = null;
        /// <summary>
        /// Atributo para la propiedad BulletinDate.
        /// </summary>
        private DateTime? _bulletinDate = null;
        /// <summary>
        /// Atributo para la propiedad ResolutionNumber.
        /// </summary>
        private string _resolutionNumber = null;
        /// <summary>
        /// Atributo para la propiedad HasFullRetention.
        /// </summary>
        private bool _hasFullRetention;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="indTaxExemptionId">IndTaxExemptionId key property.</param>
        public IndividualTaxExemption(int indTaxExemptionId) :
            this(IndividualTaxExemption.CreatePrimaryKey(indTaxExemptionId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public IndividualTaxExemption(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndTaxExemptionId.
        /// </summary>
        /// <value>Propiedad IndTaxExemptionId.</value>
        [
        DescriptionKey("IND_TAX_EXEMPTION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "IND_TAX_EXEMPTION_ID", DbType = System.Data.DbType.String),
        ]
        public int IndTaxExemptionId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndTaxExemptionId];
            }
            set
            {
                this._primaryKey[Properties.IndTaxExemptionId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxCode.
        /// </summary>
        /// <value>Propiedad TaxCode.</value>
        [
        DescriptionKey("TAX_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TAX_CD", DbType = System.Data.DbType.String),
        ]
        public int TaxCode
        {
            get
            {
                return this._taxCode;
            }
            set
            {
                this._taxCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExemptionPercentage.
        /// </summary>
        /// <value>Propiedad ExemptionPercentage.</value>
        [
        DescriptionKey("EXEMPTION_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXEMPTION_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal ExemptionPercentage
        {
            get
            {
                return this._exemptionPercentage;
            }
            set
            {
                this._exemptionPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TaxCategoryCode.
        /// </summary>
        /// <value>Propiedad TaxCategoryCode.</value>
        [
        DescriptionKey("TAX_CATEGORY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TAX_CATEGORY_CD", DbType = System.Data.DbType.String),
        ]
        public int? TaxCategoryCode
        {
            get
            {
                return this._taxCategoryCode;
            }
            set
            {
                this._taxCategoryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StateCode.
        /// </summary>
        /// <value>Propiedad StateCode.</value>
        [
        DescriptionKey("STATE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATE_CD", DbType = System.Data.DbType.String),
        ]
        public int? StateCode
        {
            get
            {
                return this._stateCode;
            }
            set
            {
                this._stateCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CountryCode
        {
            get
            {
                return this._countryCode;
            }
            set
            {
                this._countryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BulletinDate.
        /// </summary>
        /// <value>Propiedad BulletinDate.</value>
        [
        DescriptionKey("BULLETIN_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BULLETIN_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? BulletinDate
        {
            get
            {
                return this._bulletinDate;
            }
            set
            {
                this._bulletinDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ResolutionNumber.
        /// </summary>
        /// <value>Propiedad ResolutionNumber.</value>
        [
        DescriptionKey("RESOLUTION_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "RESOLUTION_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string ResolutionNumber
        {
            get
            {
                return this._resolutionNumber;
            }
            set
            {
                this._resolutionNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HasFullRetention.
        /// </summary>
        /// <value>Propiedad HasFullRetention.</value>
        [
        DescriptionKey("HAS_FULL_RETENTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "HAS_FULL_RETENTION", DbType = System.Data.DbType.String),
        ]
        public bool HasFullRetention
        {
            get
            {
                return this._hasFullRetention;
            }
            set
            {
                this._hasFullRetention = value;
            }
        }
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public IndividualTaxExemption() :
          this(IndividualTaxExemption.CreatePrimaryKey(), null)
        {
        }
        /// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<IndividualTaxExemption>();
        }
        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="agencyCommissRateId">Propiedad clave AgencyCommissRateId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IndTaxExemptionId, null);

            return new PrimaryKey<T>(keys);
        }

    }

}