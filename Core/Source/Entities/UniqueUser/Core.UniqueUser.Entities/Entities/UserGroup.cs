/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniqueUser.UserGroup.dict v1.0
 * FileSize=3867 Header=250 CRC=2169865326
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniqueUser.Entities
{
    /// <summary>
    /// Definición de entidad UserGroup.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniqueUser.UserGroup.dict"),
    Serializable(),
    DescriptionKey("USER_GROUP_ENTITY"),
    TableMap(TableName = "USER_GROUP", Schema = "UU"),
    ]
    public partial class UserGroup :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string UserId = "UserId";
            public static readonly string GroupCode = "GroupCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>23/07/2018</date>
        /// <purpose>REQ_#</purpose>
        /// <returns></returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.UserId, null);
            keys.Add(Properties.GroupCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="userId">Propiedad clave UserId.</param>
        /// <param name="groupCode">Propiedad clave GroupCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int userId, int groupCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.UserId, userId);
            keys.Add(Properties.GroupCode, groupCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>23/07/2018</date>
        /// <purpose>validate user groups</purpose>
        /// <returns></returns>
        public static PrimaryKey CreatePrimaryKey() { return InternalCreatePrimaryKey<UserGroup>(); }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="userId">Propiedad clave UserId.</param>
        /// <param name="groupCode">Propiedad clave GroupCode.</param>
        public static PrimaryKey CreatePrimaryKey(int userId, int groupCode)
        {
            return InternalCreatePrimaryKey<UserGroup>(userId, groupCode);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor Vacio
        /// </summary>
        /// <author>Germán F. Grimaldo </author>
        /// <date>23/07/2018</date>
        /// <purpose>Validate users groups</purpose>
        public UserGroup() :
                   this(UserGroup.CreatePrimaryKey(), null)
        { }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="userId">UserId key property.</param>
        /// <param name="groupCode">GroupCode key property.</param>
        public UserGroup(int userId, int groupCode) :
            this(UserGroup.CreatePrimaryKey(userId, groupCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public UserGroup(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return (int)this._primaryKey[Properties.UserId];
            }
            set
            {
                this._primaryKey[Properties.UserId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GroupCode.
        /// </summary>
        /// <value>Propiedad GroupCode.</value>
        [
        DescriptionKey("GROUP_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GROUP_CD", DbType = System.Data.DbType.String),
        ]
        public int GroupCode
        {
            get
            {
                return (int)this._primaryKey[Properties.GroupCode];
            }
            set
            {
                this._primaryKey[Properties.GroupCode] = value;
            }
        }

    }
}