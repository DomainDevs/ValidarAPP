/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.UserBranch.dict v1.0
 * FileSize=6206 Header=247 CRC=3589619794
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.UniqueUser.Entities
{
    /// <summary>
    /// Definición de entidad UserBranch.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniqueUser.UserBranch.dict"),
    Serializable(),
    DescriptionKey("USER_BRANCH_ENTITY"),
    TableMap(TableName = "USER_BRANCH", Schema = "COMM"),
    ]
    public partial class UserBranch :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string UserId = "UserId";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string DefaultBranch = "DefaultBranch";
            public static readonly string DefaultPaymentRequestBranch = "DefaultPaymentRequestBranch";
            public static readonly string DefaultClaimBranch = "DefaultClaimBranch";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="userId">Propiedad clave UserId.</param>
        /// <param name="branchCode">Propiedad clave BranchCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int userId, int branchCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.UserId, userId);
            keys.Add(Properties.BranchCode, branchCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="userId">Propiedad clave UserId.</param>
        /// <param name="branchCode">Propiedad clave BranchCode.</param>
        public static PrimaryKey CreatePrimaryKey(int userId, int branchCode)
        {
            return InternalCreatePrimaryKey<UserBranch>(userId, branchCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DefaultBranch.
        /// </summary>
        private int _defaultBranch;
        /// <summary>
        /// Atributo para la propiedad DefaultPaymentRequestBranch.
        /// </summary>
        private bool? _defaultPaymentRequestBranch = null;
        /// <summary>
        /// Atributo para la propiedad DefaultClaimBranch.
        /// </summary>
        private bool? _defaultClaimBranch = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="userId">UserId key property.</param>
        /// <param name="branchCode">BranchCode key property.</param>
        public UserBranch(int userId, int branchCode) :
            this(UserBranch.CreatePrimaryKey(userId, branchCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public UserBranch(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return (int)this._primaryKey[Properties.UserId];
            }
            set
            {
                this._primaryKey[Properties.UserId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return (int)this._primaryKey[Properties.BranchCode];
            }
            set
            {
                this._primaryKey[Properties.BranchCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DefaultBranch.
        /// </summary>
        /// <value>Propiedad DefaultBranch.</value>
        [
        DescriptionKey("DEFAULT_BRANCH_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DEFAULT_BRANCH", DbType = System.Data.DbType.String),
        ]
        public int DefaultBranch
        {
            get
            {
                return this._defaultBranch;
            }
            set
            {
                this._defaultBranch = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DefaultPaymentRequestBranch.
        /// </summary>
        /// <value>Propiedad DefaultPaymentRequestBranch.</value>
        [
        DescriptionKey("DEFAULT_PAYMENT_REQUEST_BRANCH_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEFAULT_PAYMENT_REQUEST_BRANCH", DbType = System.Data.DbType.String),
        ]
        public bool? DefaultPaymentRequestBranch
        {
            get
            {
                return this._defaultPaymentRequestBranch;
            }
            set
            {
                this._defaultPaymentRequestBranch = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DefaultClaimBranch.
        /// </summary>
        /// <value>Propiedad DefaultClaimBranch.</value>
        [
        DescriptionKey("DEFAULT_CLAIM_BRANCH_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEFAULT_CLAIM_BRANCH", DbType = System.Data.DbType.String),
        ]
        public bool? DefaultClaimBranch
        {
            get
            {
                return this._defaultClaimBranch;
            }
            set
            {
                this._defaultClaimBranch = value;
            }
        }

    }
}