/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniqueUser.UniqueUserSession.dict v1.0
 * FileSize=5180 Header=258 CRC=3637855938
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniqueUser.Entities
{
    /// <summary>
    /// Definición de entidad UniqueUserSession.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniqueUser.UniqueUserSession.dict"),
    Serializable(),
    DescriptionKey("UNIQUE_USER_SESSION_ENTITY"),
    TableMap(TableName = "UNIQUE_USER_SESSION", Schema = "UU"),
    ]
    public partial class UniqueUserSession :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string UserId = "UserId";
            public static readonly string RegistrationDate = "RegistrationDate";
            public static readonly string ExpirationDate = "ExpirationDate";
            public static readonly string LastUpdateDate = "LastUpdateDate";
            public static readonly string SessionId = "SessionId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="userId">Propiedad clave UserId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int userId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.UserId, userId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="userId">Propiedad clave UserId.</param>
        public static PrimaryKey CreatePrimaryKey(int userId)
        {
            return InternalCreatePrimaryKey<UniqueUserSession>(userId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad RegistrationDate.
        /// </summary>
        private DateTime _registrationDate;
        /// <summary>
        /// Atributo para la propiedad ExpirationDate.
        /// </summary>
        private DateTime _expirationDate;
        /// <summary>
        /// Atributo para la propiedad LastUpdateDate.
        /// </summary>
        private DateTime _lastUpdateDate;

        /// <summary>
        /// Atributo para la propiedad LastUpdateDate.
        /// </summary>
        private string _sessionId;

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="userId">UserId key property.</param>
        public UniqueUserSession(int userId) :
            this(UniqueUserSession.CreatePrimaryKey(userId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public UniqueUserSession(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return (int)this._primaryKey[Properties.UserId];
            }
            set
            {
                this._primaryKey[Properties.UserId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RegistrationDate.
        /// </summary>
        /// <value>Propiedad RegistrationDate.</value>
        [
        DescriptionKey("REGISTRATION_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REGISTRATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime RegistrationDate
        {
            get
            {
                return this._registrationDate;
            }
            set
            {
                this._registrationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExpirationDate.
        /// </summary>
        /// <value>Propiedad ExpirationDate.</value>
        [
        DescriptionKey("EXPIRATION_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXPIRATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime ExpirationDate
        {
            get
            {
                return this._expirationDate;
            }
            set
            {
                this._expirationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LastUpdateDate.
        /// </summary>
        /// <value>Propiedad LastUpdateDate.</value>
        [
        DescriptionKey("LAST_UPDATE_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LAST_UPDATE_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime LastUpdateDate
        {
            get
            {
                return this._lastUpdateDate;
            }
            set
            {
                this._lastUpdateDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LastUpdateDate.
        /// </summary>
        /// <value>Propiedad LastUpdateDate.</value>
        [
        DescriptionKey("SESSION_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SESSION_ID", DbType = System.Data.DbType.String),
        ]
        public string SessionId
        {
            get
            {
                return this._sessionId;
            }
            set
            {
                this._sessionId = value;
            }
        }

    }
}