/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniqueUser.Entities.ProfileAccessPermissions.dict v1.0
 * FileSize=4464 Header=274 CRC=3198950441
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniqueUser.Entities
{
    /// <summary>
    /// Definición de entidad ProfileAccessPermissions.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniqueUser.Entities.ProfileAccessPermissions.dict"),
    Serializable(),
    DescriptionKey("PROFILE_ACCESS_PERMISSIONS_ENTITY"),
    TableMap(TableName="PROFILE_ACCESS_PERMISSIONS", Schema="UU"),
    ]
    public partial class ProfileAccessPermissions :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string AccessPermissionsCode = "AccessPermissionsCode";
			public static readonly string ProfileCode = "ProfileCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }
        
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
	    {
			return InternalCreatePrimaryKey<ProfileAccessPermissions>(id);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccessPermissionsCode.
		/// </summary>
        private int _accessPermissionsCode;
		/// <summary>
		/// Atributo para la propiedad ProfileCode.
		/// </summary>
        private int _profileCode;
        //*** Object Constructors ********************************

        public ProfileAccessPermissions() :
        this(ProfileAccessPermissions.CreatePrimaryKey(), null)
        {
        }
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ProfileAccessPermissions>();
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);

            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public ProfileAccessPermissions(int id):
			this(ProfileAccessPermissions.CreatePrimaryKey(id), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ProfileAccessPermissions(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccessPermissionsCode.
		/// </summary>
		/// <value>Propiedad AccessPermissionsCode.</value>
	    [
		DescriptionKey("ACCESS_PERMISSIONS_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCESS_PERMISSIONS_CD", DbType=System.Data.DbType.String),
	    ]
        public int AccessPermissionsCode
	    {
		    get
		    {
			    return this._accessPermissionsCode;
		    }
		    set
		    {
				this._accessPermissionsCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProfileCode.
		/// </summary>
		/// <value>Propiedad ProfileCode.</value>
	    [
		DescriptionKey("PROFILE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROFILE_CD", DbType=System.Data.DbType.String),
	    ]
        public int ProfileCode
	    {
		    get
		    {
			    return this._profileCode;
		    }
		    set
		    {
				this._profileCode = value;
			}
	    }

    }
}