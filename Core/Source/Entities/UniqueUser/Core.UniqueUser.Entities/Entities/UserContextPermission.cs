/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniqueUser.UserContextPermission.dict v1.0
 * FileSize=5123 Header=261 CRC=354265444
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.UniqueUser.Entities
{
    /// <summary>
    /// Definición de entidad UserContextPermission.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.UniqueUser.UserContextPermission.dict"),
    Serializable(),
    DescriptionKey("USER_CONTEXT_PERMISSION_ENTITY"),
    TableMap(TableName="USER_CONTEXT_PERMISSION", Schema="UU"),
    ]
    public partial class UserContextPermission :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string ContextPermissionsCode = "ContextPermissionsCode";
            public static readonly string PermissionCode = "PermissionCode";
            public static readonly string ProfileCode = "ProfileCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
        {
            return InternalCreatePrimaryKey<UserContextPermission>(id);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ContextPermissionsCode.
        /// </summary>
        private int _contextPermissionsCode;
        /// <summary>
        /// Atributo para la propiedad PermissionCode.
        /// </summary>
        private int _permissionCode;
        /// <summary>
        /// Atributo para la propiedad ProfileCode.
        /// </summary>
        private int _profileCode;
        //*** Object Constructors ********************************

        public UserContextPermission() :
        this(UserContextPermission.CreatePrimaryKey(), null)
        {
        }
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<UserContextPermission>();
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);

            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public UserContextPermission(int id):
            this(UserContextPermission.CreatePrimaryKey(id), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public UserContextPermission(PrimaryKey key, IDictionary initialValues):
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
        ]
        public int Id
        {
            get
            {
                return (int)this._primaryKey[Properties.Id];
            }
            set
            {
                this._primaryKey[Properties.Id] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ContextPermissionsCode.
        /// </summary>
        /// <value>Propiedad ContextPermissionsCode.</value>
        [
        DescriptionKey("CONTEXT_PERMISSIONS_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONTEXT_PERMISSIONS_CD", DbType = System.Data.DbType.String),
        ]
        public int ContextPermissionsCode
        {
            get
            {
                return this._contextPermissionsCode;
            }
            set
            {
                this._contextPermissionsCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PermissionCode.
        /// </summary>
        /// <value>Propiedad PermissionCode.</value>
        [
        DescriptionKey("PERMISSION_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName="PERMISSION_CD", DbType=System.Data.DbType.String),
        ]
        public int PermissionCode
        {
            get
            {
                return this._permissionCode;
            }
            set
            {
                this._permissionCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProfileCode.
        /// </summary>
        /// <value>Propiedad ProfileCode.</value>
        [
        DescriptionKey("PROFILE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROFILE_CD", DbType = System.Data.DbType.String),
        ]
        public int ProfileCode
        {
            get
            {
                return this._profileCode;
            }
            set
            {
                this._profileCode = value;
            }
        }

    }
}