/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoReportParameter.dict v1.0
 * FileSize=4993 Header=254 CRC=1881094881
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoReportParameter.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoReportParameter.dict"),
    Serializable(),
    DescriptionKey("CO_REPORT_PARAMETER_ENTITY"),
    TableMap(TableName = "CO_REPORT_PARAMETER", Schema = "REPORT"),
    ]
    public partial class CoReportParameter :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CoveredRiskTypeCode = "CoveredRiskTypeCode";
            public static readonly string ReportLevelCode = "ReportLevelCode";
            public static readonly string SpName = "SpName";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="coveredRiskTypeCode">Propiedad clave CoveredRiskTypeCode.</param>
        /// <param name="reportLevelCode">Propiedad clave ReportLevelCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int coveredRiskTypeCode, int reportLevelCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CoveredRiskTypeCode, coveredRiskTypeCode);
            keys.Add(Properties.ReportLevelCode, reportLevelCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="coveredRiskTypeCode">Propiedad clave CoveredRiskTypeCode.</param>
        /// <param name="reportLevelCode">Propiedad clave ReportLevelCode.</param>
        public static PrimaryKey CreatePrimaryKey(int coveredRiskTypeCode, int reportLevelCode)
        {
            return InternalCreatePrimaryKey<CoReportParameter>(coveredRiskTypeCode, reportLevelCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad SpName.
        /// </summary>
        private string _spName = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="coveredRiskTypeCode">CoveredRiskTypeCode key property.</param>
        /// <param name="reportLevelCode">ReportLevelCode key property.</param>
        public CoReportParameter(int coveredRiskTypeCode, int reportLevelCode) :
            this(CoReportParameter.CreatePrimaryKey(coveredRiskTypeCode, reportLevelCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoReportParameter(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoveredRiskTypeCode.
        /// </summary>
        /// <value>Propiedad CoveredRiskTypeCode.</value>
        [
        DescriptionKey("COVERED_RISK_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERED_RISK_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int CoveredRiskTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CoveredRiskTypeCode];
            }
            set
            {
                this._primaryKey[Properties.CoveredRiskTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ReportLevelCode.
        /// </summary>
        /// <value>Propiedad ReportLevelCode.</value>
        [
        DescriptionKey("REPORT_LEVEL_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "REPORT_LEVEL_CD", DbType = System.Data.DbType.String),
        ]
        public int ReportLevelCode
        {
            get
            {
                return (int)this._primaryKey[Properties.ReportLevelCode];
            }
            set
            {
                this._primaryKey[Properties.ReportLevelCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SpName.
        /// </summary>
        /// <value>Propiedad SpName.</value>
        [
        DescriptionKey("SP_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SP_NAME", DbType = System.Data.DbType.String),
        ]
        public string SpName
        {
            get
            {
                return this._spName;
            }
            set
            {
                this._spName = value;
            }
        }

    }
}