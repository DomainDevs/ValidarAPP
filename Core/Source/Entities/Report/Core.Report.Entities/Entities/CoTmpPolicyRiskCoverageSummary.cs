/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoTmpPolicyRiskCoverageSummary.dict v1.0
 * FileSize=6977 Header=267 CRC=1706068169
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoTmpPolicyRiskCoverageSummary.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoTmpPolicyRiskCoverageSummary.dict"),
    Serializable(),
    DescriptionKey("CO_TMP_POLICY_RISK_COVERAGE_SUMMARY_ENTITY"),
    TableMap(TableName = "CO_TMP_POLICY_RISK_COVERAGE_SUMMARY", Schema = "REPORT"),
    ]
    public partial class CoTmpPolicyRiskCoverageSummary :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string CoverageNum = "CoverageNum";
            public static readonly string Coverage = "Coverage";
            public static readonly string CoveragePremium = "CoveragePremium";
            public static readonly string DeductValue = "DeductValue";
            public static readonly string MinDeductValue = "MinDeductValue";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="coverageNum">Propiedad clave CoverageNum.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int processId, int coverageNum)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProcessId, processId);
            keys.Add(Properties.CoverageNum, coverageNum);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="coverageNum">Propiedad clave CoverageNum.</param>
        public static PrimaryKey CreatePrimaryKey(int processId, int coverageNum)
        {
            return InternalCreatePrimaryKey<CoTmpPolicyRiskCoverageSummary>(processId, coverageNum);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Coverage.
        /// </summary>
        private string _coverage = null;
        /// <summary>
        /// Atributo para la propiedad CoveragePremium.
        /// </summary>
        private string _coveragePremium = null;
        /// <summary>
        /// Atributo para la propiedad DeductValue.
        /// </summary>
        private string _deductValue = null;
        /// <summary>
        /// Atributo para la propiedad MinDeductValue.
        /// </summary>
        private decimal? _minDeductValue = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="processId">ProcessId key property.</param>
        /// <param name="coverageNum">CoverageNum key property.</param>
        public CoTmpPolicyRiskCoverageSummary(int processId, int coverageNum) :
            this(CoTmpPolicyRiskCoverageSummary.CreatePrimaryKey(processId, coverageNum), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoTmpPolicyRiskCoverageSummary(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProcessId];
            }
            set
            {
                this._primaryKey[Properties.ProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageNum.
        /// </summary>
        /// <value>Propiedad CoverageNum.</value>
        [
        DescriptionKey("COVERAGE_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERAGE_NUM", DbType = System.Data.DbType.String),
        ]
        public int CoverageNum
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageNum];
            }
            set
            {
                this._primaryKey[Properties.CoverageNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Coverage.
        /// </summary>
        /// <value>Propiedad Coverage.</value>
        [
        DescriptionKey("COVERAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVERAGE", DbType = System.Data.DbType.String),
        ]
        public string Coverage
        {
            get
            {
                return this._coverage;
            }
            set
            {
                this._coverage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoveragePremium.
        /// </summary>
        /// <value>Propiedad CoveragePremium.</value>
        [
        DescriptionKey("COVERAGE_PREMIUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVERAGE_PREMIUM", DbType = System.Data.DbType.String),
        ]
        public string CoveragePremium
        {
            get
            {
                return this._coveragePremium;
            }
            set
            {
                this._coveragePremium = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeductValue.
        /// </summary>
        /// <value>Propiedad DeductValue.</value>
        [
        DescriptionKey("DEDUCT_VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEDUCT_VALUE", DbType = System.Data.DbType.String),
        ]
        public string DeductValue
        {
            get
            {
                return this._deductValue;
            }
            set
            {
                this._deductValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MinDeductValue.
        /// </summary>
        /// <value>Propiedad MinDeductValue.</value>
        [
        DescriptionKey("MIN_DEDUCT_VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MIN_DEDUCT_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? MinDeductValue
        {
            get
            {
                return this._minDeductValue;
            }
            set
            {
                this._minDeductValue = value;
            }
        }

    }
}