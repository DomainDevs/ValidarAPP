/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoPolicyAgent.dict v1.0
 * FileSize=6365 Header=250 CRC=2588041103
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoPolicyAgent.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoPolicyAgent.dict"),
    Serializable(),
    DescriptionKey("CO_POLICY_AGENT_ENTITY"),
    TableMap(TableName = "CO_POLICY_AGENT", Schema = "REPORT"),
    ]
    public partial class CoPolicyAgent :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string AgentCode = "AgentCode";
            public static readonly string AgentTypeDesc = "AgentTypeDesc";
            public static readonly string AgentName = "AgentName";
            public static readonly string Participation = "Participation";
            public static readonly string IsMain = "IsMain";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CoPolicyAgent>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private int _processId;
        /// <summary>
        /// Atributo para la propiedad AgentCode.
        /// </summary>
        private int _agentCode;
        /// <summary>
        /// Atributo para la propiedad AgentTypeDesc.
        /// </summary>
        private string _agentTypeDesc = null;
        /// <summary>
        /// Atributo para la propiedad AgentName.
        /// </summary>
        private string _agentName = null;
        /// <summary>
        /// Atributo para la propiedad Participation.
        /// </summary>
        private decimal _participation;
        /// <summary>
        /// Atributo para la propiedad IsMain.
        /// </summary>
        private bool _isMain;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public CoPolicyAgent() :
            this(CoPolicyAgent.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoPolicyAgent(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return this._processId;
            }
            set
            {
                this._processId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentCode.
        /// </summary>
        /// <value>Propiedad AgentCode.</value>
        [
        DescriptionKey("AGENT_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AGENT_CODE", DbType = System.Data.DbType.String),
        ]
        public int AgentCode
        {
            get
            {
                return this._agentCode;
            }
            set
            {
                this._agentCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentTypeDesc.
        /// </summary>
        /// <value>Propiedad AgentTypeDesc.</value>
        [
        DescriptionKey("AGENT_TYPE_DESC_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AGENT_TYPE_DESC", DbType = System.Data.DbType.String),
        ]
        public string AgentTypeDesc
        {
            get
            {
                return this._agentTypeDesc;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.AgentTypeDesc);
                }
                this._agentTypeDesc = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentName.
        /// </summary>
        /// <value>Propiedad AgentName.</value>
        [
        DescriptionKey("AGENT_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AGENT_NAME", DbType = System.Data.DbType.String),
        ]
        public string AgentName
        {
            get
            {
                return this._agentName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.AgentName);
                }
                this._agentName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Participation.
        /// </summary>
        /// <value>Propiedad Participation.</value>
        [
        DescriptionKey("PARTICIPATION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PARTICIPATION", DbType = System.Data.DbType.Decimal),
        ]
        public decimal Participation
        {
            get
            {
                return this._participation;
            }
            set
            {
                this._participation = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMain.
        /// </summary>
        /// <value>Propiedad IsMain.</value>
        [
        DescriptionKey("IS_MAIN_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_MAIN", DbType = System.Data.DbType.String),
        ]
        public bool IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                this._isMain = value;
            }
        }

    }
}