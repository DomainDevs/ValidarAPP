/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoPrerenewalProcess.dict v1.0
 * FileSize=13160 Header=257 CRC=1817229342
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoPrerenewalProcess.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoPrerenewalProcess.dict"),
    Serializable(),
    DescriptionKey("CO_PRERENEWAL_PROCESS_ENTITY"),
    TableMap(TableName = "CO_PRERENEWAL_PROCESS", Schema = "REPORT"),
    ]
    public partial class CoPrerenewalProcess :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string SalePointCode = "SalePointCode";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string DocumentNum = "DocumentNum";
            public static readonly string EndorsementNum = "EndorsementNum";
            public static readonly string LicensePlate = "LicensePlate";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string ProductId = "ProductId";
            public static readonly string DescriptionError = "DescriptionError";
            public static readonly string PremiumBefore = "PremiumBefore";
            public static readonly string PremiumCurrent = "PremiumCurrent";
            public static readonly string TempId = "TempId";
            public static readonly string QuotationId = "QuotationId";
            public static readonly string IsError = "IsError";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CoPrerenewalProcess>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private int _processId;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int _branchCode;
        /// <summary>
        /// Atributo para la propiedad SalePointCode.
        /// </summary>
        private decimal? _salePointCode = null;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int _prefixCode;
        /// <summary>
        /// Atributo para la propiedad DocumentNum.
        /// </summary>
        private decimal _documentNum;
        /// <summary>
        /// Atributo para la propiedad EndorsementNum.
        /// </summary>
        private int _endorsementNum;
        /// <summary>
        /// Atributo para la propiedad LicensePlate.
        /// </summary>
        private string _licensePlate = null;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime _currentTo;
        /// <summary>
        /// Atributo para la propiedad ProductId.
        /// </summary>
        private int? _productId = null;
        /// <summary>
        /// Atributo para la propiedad DescriptionError.
        /// </summary>
        private string _descriptionError = null;
        /// <summary>
        /// Atributo para la propiedad PremiumBefore.
        /// </summary>
        private decimal? _premiumBefore = null;
        /// <summary>
        /// Atributo para la propiedad PremiumCurrent.
        /// </summary>
        private decimal? _premiumCurrent = null;
        /// <summary>
        /// Atributo para la propiedad TempId.
        /// </summary>
        private int? _tempId = null;
        /// <summary>
        /// Atributo para la propiedad QuotationId.
        /// </summary>
        private int? _quotationId = null;
        /// <summary>
        /// Atributo para la propiedad IsError.
        /// </summary>
        private bool _isError;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public CoPrerenewalProcess() :
            this(CoPrerenewalProcess.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoPrerenewalProcess(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return this._processId;
            }
            set
            {
                this._processId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SalePointCode.
        /// </summary>
        /// <value>Propiedad SalePointCode.</value>
        [
        DescriptionKey("SALE_POINT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SALE_POINT_CD", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? SalePointCode
        {
            get
            {
                return this._salePointCode;
            }
            set
            {
                this._salePointCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentNum.
        /// </summary>
        /// <value>Propiedad DocumentNum.</value>
        [
        DescriptionKey("DOCUMENT_NUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DOCUMENT_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal DocumentNum
        {
            get
            {
                return this._documentNum;
            }
            set
            {
                this._documentNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementNum.
        /// </summary>
        /// <value>Propiedad EndorsementNum.</value>
        [
        DescriptionKey("ENDORSEMENT_NUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENDORSEMENT_NUM", DbType = System.Data.DbType.String),
        ]
        public int EndorsementNum
        {
            get
            {
                return this._endorsementNum;
            }
            set
            {
                this._endorsementNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicensePlate.
        /// </summary>
        /// <value>Propiedad LicensePlate.</value>
        [
        DescriptionKey("LICENSE_PLATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LICENSE_PLATE", DbType = System.Data.DbType.String),
        ]
        public string LicensePlate
        {
            get
            {
                return this._licensePlate;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.LicensePlate);
                }
                this._licensePlate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int? ProductId
        {
            get
            {
                return this._productId;
            }
            set
            {
                this._productId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionError.
        /// </summary>
        /// <value>Propiedad DescriptionError.</value>
        [
        DescriptionKey("DESCRIPTION_ERROR_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_ERROR", DbType = System.Data.DbType.String),
        ]
        public string DescriptionError
        {
            get
            {
                return this._descriptionError;
            }
            set
            {
                this._descriptionError = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PremiumBefore.
        /// </summary>
        /// <value>Propiedad PremiumBefore.</value>
        [
        DescriptionKey("PREMIUM_BEFORE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREMIUM_BEFORE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PremiumBefore
        {
            get
            {
                return this._premiumBefore;
            }
            set
            {
                this._premiumBefore = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PremiumCurrent.
        /// </summary>
        /// <value>Propiedad PremiumCurrent.</value>
        [
        DescriptionKey("PREMIUM_CURRENT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREMIUM_CURRENT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PremiumCurrent
        {
            get
            {
                return this._premiumCurrent;
            }
            set
            {
                this._premiumCurrent = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int? TempId
        {
            get
            {
                return this._tempId;
            }
            set
            {
                this._tempId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int? QuotationId
        {
            get
            {
                return this._quotationId;
            }
            set
            {
                this._quotationId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsError.
        /// </summary>
        /// <value>Propiedad IsError.</value>
        [
        DescriptionKey("IS_ERROR_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ERROR", DbType = System.Data.DbType.String),
        ]
        public bool IsError
        {
            get
            {
                return this._isError;
            }
            set
            {
                this._isError = value;
            }
        }

    }
}