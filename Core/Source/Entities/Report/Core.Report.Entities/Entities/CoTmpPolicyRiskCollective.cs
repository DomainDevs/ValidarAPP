/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoTmpPolicyRiskCollective.dict v1.0
 * FileSize=11380 Header=263 CRC=4018842272
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoTmpPolicyRiskCollective.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoTmpPolicyRiskCollective.dict"),
    Serializable(),
    DescriptionKey("CO_TMP_POLICY_RISK_COLLECTIVE_ENTITY"),
    TableMap(TableName = "CO_TMP_POLICY_RISK_COLLECTIVE", Schema = "REPORT"),
    ]
    public partial class CoTmpPolicyRiskCollective :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string RiskNum = "RiskNum";
            public static readonly string LimitRc = "LimitRc";
            public static readonly string Deduct = "Deduct";
            public static readonly string Assistance = "Assistance";
            public static readonly string PremiumAmount = "PremiumAmount";
            public static readonly string LimitAmount = "LimitAmount";
            public static readonly string Expenses = "Expenses";
            public static readonly string Tax = "Tax";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string EndorsementId = "EndorsementId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int processId, int riskNum)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProcessId, processId);
            keys.Add(Properties.RiskNum, riskNum);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        public static PrimaryKey CreatePrimaryKey(int processId, int riskNum)
        {
            return InternalCreatePrimaryKey<CoTmpPolicyRiskCollective>(processId, riskNum);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad LimitRc.
        /// </summary>
        private string _limitRc = null;
        /// <summary>
        /// Atributo para la propiedad Deduct.
        /// </summary>
        private string _deduct = null;
        /// <summary>
        /// Atributo para la propiedad Assistance.
        /// </summary>
        private int? _assistance = null;
        /// <summary>
        /// Atributo para la propiedad PremiumAmount.
        /// </summary>
        private decimal? _premiumAmount = null;
        /// <summary>
        /// Atributo para la propiedad LimitAmount.
        /// </summary>
        private decimal? _limitAmount = null;
        /// <summary>
        /// Atributo para la propiedad Expenses.
        /// </summary>
        private decimal? _expenses = null;
        /// <summary>
        /// Atributo para la propiedad Tax.
        /// </summary>
        private decimal? _tax = null;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime? _currentFrom = null;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime? _currentTo = null;
        /// <summary>
        /// Atributo para la propiedad PolicyId.
        /// </summary>
        private int? _policyId = null;
        /// <summary>
        /// Atributo para la propiedad EndorsementId.
        /// </summary>
        private int? _endorsementId = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="processId">ProcessId key property.</param>
        /// <param name="riskNum">RiskNum key property.</param>
        public CoTmpPolicyRiskCollective(int processId, int riskNum) :
            this(CoTmpPolicyRiskCollective.CreatePrimaryKey(processId, riskNum), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoTmpPolicyRiskCollective(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProcessId];
            }
            set
            {
                this._primaryKey[Properties.ProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskNum.
        /// </summary>
        /// <value>Propiedad RiskNum.</value>
        [
        DescriptionKey("RISK_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_NUM", DbType = System.Data.DbType.String),
        ]
        public int RiskNum
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskNum];
            }
            set
            {
                this._primaryKey[Properties.RiskNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitRc.
        /// </summary>
        /// <value>Propiedad LimitRc.</value>
        [
        DescriptionKey("LIMIT_RC_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LIMIT_RC", DbType = System.Data.DbType.String),
        ]
        public string LimitRc
        {
            get
            {
                return this._limitRc;
            }
            set
            {
                this._limitRc = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Deduct.
        /// </summary>
        /// <value>Propiedad Deduct.</value>
        [
        DescriptionKey("DEDUCT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEDUCT", DbType = System.Data.DbType.String),
        ]
        public string Deduct
        {
            get
            {
                return this._deduct;
            }
            set
            {
                this._deduct = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Assistance.
        /// </summary>
        /// <value>Propiedad Assistance.</value>
        [
        DescriptionKey("ASSISTANCE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ASSISTANCE", DbType = System.Data.DbType.String),
        ]
        public int? Assistance
        {
            get
            {
                return this._assistance;
            }
            set
            {
                this._assistance = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PremiumAmount.
        /// </summary>
        /// <value>Propiedad PremiumAmount.</value>
        [
        DescriptionKey("PREMIUM_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREMIUM_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PremiumAmount
        {
            get
            {
                return this._premiumAmount;
            }
            set
            {
                this._premiumAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitAmount.
        /// </summary>
        /// <value>Propiedad LimitAmount.</value>
        [
        DescriptionKey("LIMIT_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LIMIT_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? LimitAmount
        {
            get
            {
                return this._limitAmount;
            }
            set
            {
                this._limitAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Expenses.
        /// </summary>
        /// <value>Propiedad Expenses.</value>
        [
        DescriptionKey("EXPENSES_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EXPENSES", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Expenses
        {
            get
            {
                return this._expenses;
            }
            set
            {
                this._expenses = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Tax.
        /// </summary>
        /// <value>Propiedad Tax.</value>
        [
        DescriptionKey("TAX_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TAX", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Tax
        {
            get
            {
                return this._tax;
            }
            set
            {
                this._tax = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int? PolicyId
        {
            get
            {
                return this._policyId;
            }
            set
            {
                this._policyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int? EndorsementId
        {
            get
            {
                return this._endorsementId;
            }
            set
            {
                this._endorsementId = value;
            }
        }

    }
}