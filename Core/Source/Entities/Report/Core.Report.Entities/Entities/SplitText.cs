/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.SplitText.dict v1.0
 * FileSize=4358 Header=246 CRC=1626926738
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad SplitText.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.SplitText.dict"),
    Serializable(),
    DescriptionKey("SPLIT_TEXT_ENTITY"),
    TableMap(TableName = "SPLIT_TEXT", Schema = "REPORT"),
    ]
    public partial class SplitText :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TextIndex = "TextIndex";
            public static readonly string TextType = "TextType";
            public static readonly string TextValue = "TextValue";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="textIndex">Propiedad clave TextIndex.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int textIndex)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TextIndex, textIndex);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="textIndex">Propiedad clave TextIndex.</param>
        public static PrimaryKey CreatePrimaryKey(int textIndex)
        {
            return InternalCreatePrimaryKey<SplitText>(textIndex);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TextType.
        /// </summary>
        private string _textType = null;
        /// <summary>
        /// Atributo para la propiedad TextValue.
        /// </summary>
        private string _textValue = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="textIndex">TextIndex key property.</param>
        public SplitText(int textIndex) :
            this(SplitText.CreatePrimaryKey(textIndex), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public SplitText(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TextIndex.
        /// </summary>
        /// <value>Propiedad TextIndex.</value>
        [
        DescriptionKey("TEXT_INDEX_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TEXT_INDEX", DbType = System.Data.DbType.String),
        ]
        public int TextIndex
        {
            get
            {
                return (int)this._primaryKey[Properties.TextIndex];
            }
            set
            {
                this._primaryKey[Properties.TextIndex] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TextType.
        /// </summary>
        /// <value>Propiedad TextType.</value>
        [
        DescriptionKey("TEXT_TYPE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEXT_TYPE", DbType = System.Data.DbType.String),
        ]
        public string TextType
        {
            get
            {
                return this._textType;
            }
            set
            {
                this._textType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TextValue.
        /// </summary>
        /// <value>Propiedad TextValue.</value>
        [
        DescriptionKey("TEXT_VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEXT_VALUE", DbType = System.Data.DbType.String),
        ]
        public string TextValue
        {
            get
            {
                return this._textValue;
            }
            set
            {
                this._textValue = value;
            }
        }

    }
}