/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoBranchCollect.dict v1.0
 * FileSize=4931 Header=251 CRC=629512747
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoBranchCollect.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoBranchCollect.dict"),
    Serializable(),
    DescriptionKey("CO_BRANCH_COLLECT_ENTITY"),
    TableMap(TableName = "CO_BRANCH_COLLECT", Schema = "REPORT"),
    ]
    public partial class CoBranchCollect :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string RowDescription = "RowDescription";
            public static readonly string RowState = "RowState";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
        {
            return InternalCreatePrimaryKey<CoBranchCollect>(id);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int _branchCode;
        /// <summary>
        /// Atributo para la propiedad RowDescription.
        /// </summary>
        private string _rowDescription = null;
        /// <summary>
        /// Atributo para la propiedad RowState.
        /// </summary>
        private bool _rowState;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public CoBranchCollect(int id) :
            this(CoBranchCollect.CreatePrimaryKey(id), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoBranchCollect(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID", DbType = System.Data.DbType.String),
        ]
        public int Id
        {
            get
            {
                return (int)this._primaryKey[Properties.Id];
            }
            set
            {
                this._primaryKey[Properties.Id] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RowDescription.
        /// </summary>
        /// <value>Propiedad RowDescription.</value>
        [
        DescriptionKey("ROW_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ROW_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string RowDescription
        {
            get
            {
                return this._rowDescription;
            }
            set
            {
                this._rowDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RowState.
        /// </summary>
        /// <value>Propiedad RowState.</value>
        [
        DescriptionKey("ROW_STATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ROW_STATE", DbType = System.Data.DbType.String),
        ]
        public bool RowState
        {
            get
            {
                return this._rowState;
            }
            set
            {
                this._rowState = value;
            }
        }

    }
}