/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.LogErrorPrint.dict v1.0
 * FileSize=5881 Header=259 CRC=4064545213
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad LogErrorPrint.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.LogErrorPrint.dict"),
    Serializable(),
    DescriptionKey("LOG_ERROR_PRINT_ENTITY"),
    TableMap(TableName="LOG_ERROR_PRINT", Schema="REPORT"),
    ]
    public partial class LogErrorPrint :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string Description = "Description";
			public static readonly string DateError = "DateError";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string PolicyId = "PolicyId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Constructor vacio.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
		protected static PrimaryKey InternalCreatePrimaryKey<T>()
		{
			Dictionary<string, object> keys = new Dictionary<string, object>();
			keys.Add(Properties.Id, null);

			return new PrimaryKey<T>(keys);
		}

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey(int id)
	    {
			return InternalCreatePrimaryKey<LogErrorPrint>(id);
		}

		/// <summary>
		/// Constructor vacio.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey()
		{
			return InternalCreatePrimaryKey<LogErrorPrint>();
		}
		#endregion

		//*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
		private string _description = null;
		/// <summary>
		/// Atributo para la propiedad DateError.
		/// </summary>
        private DateTime _dateError;
		/// <summary>
		/// Atributo para la propiedad EndorsementId.
		/// </summary>
        private int _endorsementId;
		/// <summary>
		/// Atributo para la propiedad PolicyNumber.
		/// </summary>
        private int _policyId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="id">Id key property.</param>
	    public LogErrorPrint(int id):
			this(LogErrorPrint.CreatePrimaryKey(id), null)
	    {
	    }

		/// <summary>
		/// Constructor vacio.
		/// </summary>
		/// <param name="id">Id key property.</param>
		public LogErrorPrint() :
			this(LogErrorPrint.CreatePrimaryKey(), null)
		{
		}
		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
		public LogErrorPrint(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DateError.
		/// </summary>
		/// <value>Propiedad DateError.</value>
	    [
		DescriptionKey("DATE_ERROR_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DATE_ERROR", DbType=System.Data.DbType.String),
	    ]
        public DateTime DateError
	    {
		    get
		    {
			    return this._dateError;
		    }
		    set
		    {
				this._dateError = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
			    return this._endorsementId;
		    }
		    set
		    {
				this._endorsementId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyNumber.
		/// </summary>
		/// <value>Propiedad PolicyNumber.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

    }
}