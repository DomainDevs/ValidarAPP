/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.PrvPrintingLog.dict v1.0
 * FileSize=8396 Header=251 CRC=1957033281
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad PrvPrintingLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.PrvPrintingLog.dict"),
    Serializable(),
    DescriptionKey("PRV_PRINTING_LOG_ENTITY"),
    TableMap(TableName = "PRV_PRINTING_LOG", Schema = "REPORT"),
    ]
    public partial class PrvPrintingLog :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PrintingId = "PrintingId";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string PolicyNumber = "PolicyNumber";
            public static readonly string EndorsementNumber = "EndorsementNumber";
            public static readonly string UserId = "UserId";
            public static readonly string TypeFileId = "TypeFileId";
            public static readonly string Date = "Date";
            public static readonly string Printed = "Printed";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="printingId">Propiedad clave PrintingId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int printingId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PrintingId, printingId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="printingId">Propiedad clave PrintingId.</param>
        public static PrimaryKey CreatePrimaryKey(int printingId)
        {
            return InternalCreatePrimaryKey<PrvPrintingLog>(printingId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int _branchCode;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int _prefixCode;
        /// <summary>
        /// Atributo para la propiedad PolicyNumber.
        /// </summary>
        private string _policyNumber = null;
        /// <summary>
        /// Atributo para la propiedad EndorsementNumber.
        /// </summary>
        private int _endorsementNumber;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int _userId;
        /// <summary>
        /// Atributo para la propiedad TypeFileId.
        /// </summary>
        private int _typeFileId;
        /// <summary>
        /// Atributo para la propiedad Date.
        /// </summary>
        private DateTime _date;
        /// <summary>
        /// Atributo para la propiedad Printed.
        /// </summary>
        private bool _printed;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="printingId">PrintingId key property.</param>
        public PrvPrintingLog(int printingId) :
            this(PrvPrintingLog.CreatePrimaryKey(printingId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PrvPrintingLog(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintingId.
        /// </summary>
        /// <value>Propiedad PrintingId.</value>
        [
        DescriptionKey("PRINTING_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PRINTING_ID", DbType = System.Data.DbType.String),
        ]
        public int PrintingId
        {
            get
            {
                return (int)this._primaryKey[Properties.PrintingId];
            }
            set
            {
                this._primaryKey[Properties.PrintingId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyNumber.
        /// </summary>
        /// <value>Propiedad PolicyNumber.</value>
        [
        DescriptionKey("POLICY_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "POLICY_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string PolicyNumber
        {
            get
            {
                return this._policyNumber;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PolicyNumber);
                }
                this._policyNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementNumber.
        /// </summary>
        /// <value>Propiedad EndorsementNumber.</value>
        [
        DescriptionKey("ENDORSEMENT_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENDORSEMENT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public int EndorsementNumber
        {
            get
            {
                return this._endorsementNumber;
            }
            set
            {
                this._endorsementNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TypeFileId.
        /// </summary>
        /// <value>Propiedad TypeFileId.</value>
        [
        DescriptionKey("TYPE_FILE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TYPE_FILE_ID", DbType = System.Data.DbType.String),
        ]
        public int TypeFileId
        {
            get
            {
                return this._typeFileId;
            }
            set
            {
                this._typeFileId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Date.
        /// </summary>
        /// <value>Propiedad Date.</value>
        [
        DescriptionKey("DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime Date
        {
            get
            {
                return this._date;
            }
            set
            {
                this._date = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Printed.
        /// </summary>
        /// <value>Propiedad Printed.</value>
        [
        DescriptionKey("PRINTED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PRINTED", DbType = System.Data.DbType.String),
        ]
        public bool Printed
        {
            get
            {
                return this._printed;
            }
            set
            {
                this._printed = value;
            }
        }

    }
}