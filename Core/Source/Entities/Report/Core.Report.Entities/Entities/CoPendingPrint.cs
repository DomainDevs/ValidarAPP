/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoPendingPrint.dict v1.0
 * FileSize=8629 Header=250 CRC=657140795
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoPendingPrint.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoPendingPrint.dict"),
    Serializable(),
    DescriptionKey("CO_PENDING_PRINT_ENTITY"),
    TableMap(TableName = "CO_PENDING_PRINT", Schema = "REPORT"),
    ]
    public partial class CoPendingPrint :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string AsyncProcessId = "AsyncProcessId";
            public static readonly string PrintProcessId = "PrintProcessId";
            public static readonly string FileName = "FileName";
            public static readonly string FilePath = "FilePath";
            public static readonly string FileSize = "FileSize";
            public static readonly string RangeMinValue = "RangeMinValue";
            public static readonly string RangeMaxValue = "RangeMaxValue";
            public static readonly string DocTypeDescription = "DocTypeDescription";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="asyncProcessId">Propiedad clave AsyncProcessId.</param>
        /// <param name="printProcessId">Propiedad clave PrintProcessId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int asyncProcessId, int printProcessId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AsyncProcessId, asyncProcessId);
            keys.Add(Properties.PrintProcessId, printProcessId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="asyncProcessId">Propiedad clave AsyncProcessId.</param>
        /// <param name="printProcessId">Propiedad clave PrintProcessId.</param>
        public static PrimaryKey CreatePrimaryKey(int asyncProcessId, int printProcessId)
        {
            return InternalCreatePrimaryKey<CoPendingPrint>(asyncProcessId, printProcessId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FileName.
        /// </summary>
        private string _fileName = null;
        /// <summary>
        /// Atributo para la propiedad FilePath.
        /// </summary>
        private string _filePath = null;
        /// <summary>
        /// Atributo para la propiedad FileSize.
        /// </summary>
        private decimal _fileSize;
        /// <summary>
        /// Atributo para la propiedad RangeMinValue.
        /// </summary>
        private int _rangeMinValue;
        /// <summary>
        /// Atributo para la propiedad RangeMaxValue.
        /// </summary>
        private int _rangeMaxValue;
        /// <summary>
        /// Atributo para la propiedad DocTypeDescription.
        /// </summary>
        private string _docTypeDescription = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="asyncProcessId">AsyncProcessId key property.</param>
        /// <param name="printProcessId">PrintProcessId key property.</param>
        public CoPendingPrint(int asyncProcessId, int printProcessId) :
            this(CoPendingPrint.CreatePrimaryKey(asyncProcessId, printProcessId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoPendingPrint(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad AsyncProcessId.
        /// </summary>
        /// <value>Propiedad AsyncProcessId.</value>
        [
        DescriptionKey("ASYNC_PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ASYNC_PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int AsyncProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.AsyncProcessId];
            }
            set
            {
                this._primaryKey[Properties.AsyncProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintProcessId.
        /// </summary>
        /// <value>Propiedad PrintProcessId.</value>
        [
        DescriptionKey("PRINT_PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PRINT_PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int PrintProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.PrintProcessId];
            }
            set
            {
                this._primaryKey[Properties.PrintProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FileName.
        /// </summary>
        /// <value>Propiedad FileName.</value>
        [
        DescriptionKey("FILE_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FILE_NAME", DbType = System.Data.DbType.String),
        ]
        public string FileName
        {
            get
            {
                return this._fileName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.FileName);
                }
                this._fileName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FilePath.
        /// </summary>
        /// <value>Propiedad FilePath.</value>
        [
        DescriptionKey("FILE_PATH_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FILE_PATH", DbType = System.Data.DbType.String),
        ]
        public string FilePath
        {
            get
            {
                return this._filePath;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.FilePath);
                }
                this._filePath = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FileSize.
        /// </summary>
        /// <value>Propiedad FileSize.</value>
        [
        DescriptionKey("FILE_SIZE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FILE_SIZE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal FileSize
        {
            get
            {
                return this._fileSize;
            }
            set
            {
                this._fileSize = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RangeMinValue.
        /// </summary>
        /// <value>Propiedad RangeMinValue.</value>
        [
        DescriptionKey("RANGE_MIN_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RANGE_MIN_VALUE", DbType = System.Data.DbType.String),
        ]
        public int RangeMinValue
        {
            get
            {
                return this._rangeMinValue;
            }
            set
            {
                this._rangeMinValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RangeMaxValue.
        /// </summary>
        /// <value>Propiedad RangeMaxValue.</value>
        [
        DescriptionKey("RANGE_MAX_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RANGE_MAX_VALUE", DbType = System.Data.DbType.String),
        ]
        public int RangeMaxValue
        {
            get
            {
                return this._rangeMaxValue;
            }
            set
            {
                this._rangeMaxValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocTypeDescription.
        /// </summary>
        /// <value>Propiedad DocTypeDescription.</value>
        [
        DescriptionKey("DOC_TYPE_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DOC_TYPE_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string DocTypeDescription
        {
            get
            {
                return this._docTypeDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.DocTypeDescription);
                }
                this._docTypeDescription = value;
            }
        }

    }
}