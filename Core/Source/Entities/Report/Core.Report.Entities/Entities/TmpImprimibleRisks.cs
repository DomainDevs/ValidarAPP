/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.TmpImprimibleRisks.dict v1.0
 * FileSize=3970 Header=255 CRC=1918136666
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad TmpImprimibleRisks.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.TmpImprimibleRisks.dict"),
    Serializable(),
    DescriptionKey("TMP_IMPRIMIBLE_RISKS_ENTITY"),
    TableMap(TableName = "TMP_IMPRIMIBLE_RISKS", Schema = "REPORT"),
    ]
    public partial class TmpImprimibleRisks :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string RiskNum = "RiskNum";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int processId, int riskNum)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProcessId, processId);
            keys.Add(Properties.RiskNum, riskNum);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        public static PrimaryKey CreatePrimaryKey(int processId, int riskNum)
        {
            return InternalCreatePrimaryKey<TmpImprimibleRisks>(processId, riskNum);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="processId">ProcessId key property.</param>
        /// <param name="riskNum">RiskNum key property.</param>
        public TmpImprimibleRisks(int processId, int riskNum) :
            this(TmpImprimibleRisks.CreatePrimaryKey(processId, riskNum), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public TmpImprimibleRisks(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProcessId];
            }
            set
            {
                this._primaryKey[Properties.ProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskNum.
        /// </summary>
        /// <value>Propiedad RiskNum.</value>
        [
        DescriptionKey("RISK_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_NUM", DbType = System.Data.DbType.String),
        ]
        public int RiskNum
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskNum];
            }
            set
            {
                this._primaryKey[Properties.RiskNum] = value;
            }
        }

    }
}