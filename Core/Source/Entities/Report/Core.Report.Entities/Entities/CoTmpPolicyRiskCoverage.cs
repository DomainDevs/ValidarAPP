/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Report.CoTmpPolicyRiskCoverage.dict v1.0
 * FileSize=21024 Header=261 CRC=2445173538
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Report.Entities
{
    /// <summary>
    /// Definición de entidad CoTmpPolicyRiskCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Report.CoTmpPolicyRiskCoverage.dict"),
    Serializable(),
    DescriptionKey("CO_TMP_POLICY_RISK_COVERAGE_ENTITY"),
    TableMap(TableName = "CO_TMP_POLICY_RISK_COVERAGE", Schema = "REPORT"),
    ]
    public partial class CoTmpPolicyRiskCoverage :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string RiskNum = "RiskNum";
            public static readonly string RowId = "RowId";
            public static readonly string CoverageId = "CoverageId";
            public static readonly string CoverageNum = "CoverageNum";
            public static readonly string Coverage = "Coverage";
            public static readonly string CoveragePremium = "CoveragePremium";
            public static readonly string PremiumAmount = "PremiumAmount";
            public static readonly string CoverageDeduct = "CoverageDeduct";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string LimitOccurrenceAmount = "LimitOccurrenceAmount";
            public static readonly string SubLineBusinessDesc = "SubLineBusinessDesc";
            public static readonly string InsuredObjectDesc = "InsuredObjectDesc";
            public static readonly string IsChild = "IsChild";
            public static readonly string DeductValue = "DeductValue";
            public static readonly string MinDeductValue = "MinDeductValue";
            public static readonly string ConditionText = "ConditionText";
            public static readonly string InoId = "InoId";
            public static readonly string InoDesc = "InoDesc";
            public static readonly string LnbCode = "LnbCode";
            public static readonly string LnbDesc = "LnbDesc";
            public static readonly string IsPrimary = "IsPrimary";
            public static readonly string CoverStatusCode = "CoverStatusCode";
            public static readonly string RiskStatusCode = "RiskStatusCode";
            public static readonly string IsImpression = "IsImpression";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        /// <param name="rowId">Propiedad clave RowId.</param>
        /// <param name="coverageNum">Propiedad clave CoverageNum.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int processId, int riskNum, int rowId, int coverageNum)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProcessId, processId);
            keys.Add(Properties.RiskNum, riskNum);
            keys.Add(Properties.RowId, rowId);
            keys.Add(Properties.CoverageNum, coverageNum);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        /// <param name="rowId">Propiedad clave RowId.</param>
        /// <param name="coverageNum">Propiedad clave CoverageNum.</param>
        public static PrimaryKey CreatePrimaryKey(int processId, int riskNum, int rowId, int coverageNum)
        {
            return InternalCreatePrimaryKey<CoTmpPolicyRiskCoverage>(processId, riskNum, rowId, coverageNum);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CoverageId.
        /// </summary>
        private int _coverageId;
        /// <summary>
        /// Atributo para la propiedad Coverage.
        /// </summary>
        private string _coverage = null;
        /// <summary>
        /// Atributo para la propiedad CoveragePremium.
        /// </summary>
        private string _coveragePremium = null;
        /// <summary>
        /// Atributo para la propiedad PremiumAmount.
        /// </summary>
        private string _premiumAmount = null;
        /// <summary>
        /// Atributo para la propiedad CoverageDeduct.
        /// </summary>
        private string _coverageDeduct = null;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime? _currentFrom = null;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime? _currentTo = null;
        /// <summary>
        /// Atributo para la propiedad LimitOccurrenceAmount.
        /// </summary>
        private decimal? _limitOccurrenceAmount = null;
        /// <summary>
        /// Atributo para la propiedad SubLineBusinessDesc.
        /// </summary>
        private string _subLineBusinessDesc = null;
        /// <summary>
        /// Atributo para la propiedad InsuredObjectDesc.
        /// </summary>
        private string _insuredObjectDesc = null;
        /// <summary>
        /// Atributo para la propiedad IsChild.
        /// </summary>
        private bool _isChild;
        /// <summary>
        /// Atributo para la propiedad DeductValue.
        /// </summary>
        private decimal? _deductValue = null;
        /// <summary>
        /// Atributo para la propiedad MinDeductValue.
        /// </summary>
        private decimal? _minDeductValue = null;
        /// <summary>
        /// Atributo para la propiedad ConditionText.
        /// </summary>
        private string _conditionText = null;
        /// <summary>
        /// Atributo para la propiedad InoId.
        /// </summary>
        private int? _inoId = null;
        /// <summary>
        /// Atributo para la propiedad InoDesc.
        /// </summary>
        private string _inoDesc = null;
        /// <summary>
        /// Atributo para la propiedad LnbCode.
        /// </summary>
        private int? _lnbCode = null;
        /// <summary>
        /// Atributo para la propiedad LnbDesc.
        /// </summary>
        private string _lnbDesc = null;
        /// <summary>
        /// Atributo para la propiedad IsPrimary.
        /// </summary>
        private bool _isPrimary;
        /// <summary>
        /// Atributo para la propiedad CoverStatusCode.
        /// </summary>
        private int? _coverStatusCode = null;
        /// <summary>
        /// Atributo para la propiedad RiskStatusCode.
        /// </summary>
        private int? _riskStatusCode = null;
        /// <summary>
        /// Atributo para la propiedad IsImpression.
        /// </summary>
        private bool? _isImpression = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="processId">ProcessId key property.</param>
        /// <param name="riskNum">RiskNum key property.</param>
        /// <param name="rowId">RowId key property.</param>
        /// <param name="coverageNum">CoverageNum key property.</param>
        public CoTmpPolicyRiskCoverage(int processId, int riskNum, int rowId, int coverageNum) :
            this(CoTmpPolicyRiskCoverage.CreatePrimaryKey(processId, riskNum, rowId, coverageNum), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoTmpPolicyRiskCoverage(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProcessId];
            }
            set
            {
                this._primaryKey[Properties.ProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskNum.
        /// </summary>
        /// <value>Propiedad RiskNum.</value>
        [
        DescriptionKey("RISK_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_NUM", DbType = System.Data.DbType.String),
        ]
        public int RiskNum
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskNum];
            }
            set
            {
                this._primaryKey[Properties.RiskNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RowId.
        /// </summary>
        /// <value>Propiedad RowId.</value>
        [
        DescriptionKey("ROW_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ROW_ID", DbType = System.Data.DbType.String),
        ]
        public int RowId
        {
            get
            {
                return (int)this._primaryKey[Properties.RowId];
            }
            set
            {
                this._primaryKey[Properties.RowId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageId.
        /// </summary>
        /// <value>Propiedad CoverageId.</value>
        [
        DescriptionKey("COVERAGE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int CoverageId
        {
            get
            {
                return this._coverageId;
            }
            set
            {
                this._coverageId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageNum.
        /// </summary>
        /// <value>Propiedad CoverageNum.</value>
        [
        DescriptionKey("COVERAGE_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERAGE_NUM", DbType = System.Data.DbType.String),
        ]
        public int CoverageNum
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageNum];
            }
            set
            {
                this._primaryKey[Properties.CoverageNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Coverage.
        /// </summary>
        /// <value>Propiedad Coverage.</value>
        [
        DescriptionKey("COVERAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVERAGE", DbType = System.Data.DbType.String),
        ]
        public string Coverage
        {
            get
            {
                return this._coverage;
            }
            set
            {
                this._coverage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoveragePremium.
        /// </summary>
        /// <value>Propiedad CoveragePremium.</value>
        [
        DescriptionKey("COVERAGE_PREMIUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVERAGE_PREMIUM", DbType = System.Data.DbType.String),
        ]
        public string CoveragePremium
        {
            get
            {
                return this._coveragePremium;
            }
            set
            {
                this._coveragePremium = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PremiumAmount.
        /// </summary>
        /// <value>Propiedad PremiumAmount.</value>
        [
        DescriptionKey("PREMIUM_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREMIUM_AMT", DbType = System.Data.DbType.String),
        ]
        public string PremiumAmount
        {
            get
            {
                return this._premiumAmount;
            }
            set
            {
                this._premiumAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageDeduct.
        /// </summary>
        /// <value>Propiedad CoverageDeduct.</value>
        [
        DescriptionKey("COVERAGE_DEDUCT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVERAGE_DEDUCT", DbType = System.Data.DbType.String),
        ]
        public string CoverageDeduct
        {
            get
            {
                return this._coverageDeduct;
            }
            set
            {
                this._coverageDeduct = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitOccurrenceAmount.
        /// </summary>
        /// <value>Propiedad LimitOccurrenceAmount.</value>
        [
        DescriptionKey("LIMIT_OCCURRENCE_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LIMIT_OCCURRENCE_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? LimitOccurrenceAmount
        {
            get
            {
                return this._limitOccurrenceAmount;
            }
            set
            {
                this._limitOccurrenceAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubLineBusinessDesc.
        /// </summary>
        /// <value>Propiedad SubLineBusinessDesc.</value>
        [
        DescriptionKey("SUB_LINE_BUSINESS_DESC_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SUB_LINE_BUSINESS_DESC", DbType = System.Data.DbType.String),
        ]
        public string SubLineBusinessDesc
        {
            get
            {
                return this._subLineBusinessDesc;
            }
            set
            {
                this._subLineBusinessDesc = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredObjectDesc.
        /// </summary>
        /// <value>Propiedad InsuredObjectDesc.</value>
        [
        DescriptionKey("INSURED_OBJECT_DESC_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INSURED_OBJECT_DESC", DbType = System.Data.DbType.String),
        ]
        public string InsuredObjectDesc
        {
            get
            {
                return this._insuredObjectDesc;
            }
            set
            {
                this._insuredObjectDesc = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsChild.
        /// </summary>
        /// <value>Propiedad IsChild.</value>
        [
        DescriptionKey("IS_CHILD_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_CHILD", DbType = System.Data.DbType.String),
        ]
        public bool IsChild
        {
            get
            {
                return this._isChild;
            }
            set
            {
                this._isChild = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeductValue.
        /// </summary>
        /// <value>Propiedad DeductValue.</value>
        [
        DescriptionKey("DEDUCT_VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEDUCT_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? DeductValue
        {
            get
            {
                return this._deductValue;
            }
            set
            {
                this._deductValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MinDeductValue.
        /// </summary>
        /// <value>Propiedad MinDeductValue.</value>
        [
        DescriptionKey("MIN_DEDUCT_VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MIN_DEDUCT_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? MinDeductValue
        {
            get
            {
                return this._minDeductValue;
            }
            set
            {
                this._minDeductValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConditionText.
        /// </summary>
        /// <value>Propiedad ConditionText.</value>
        [
        DescriptionKey("CONDITION_TEXT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONDITION_TEXT", DbType = System.Data.DbType.String),
        ]
        public string ConditionText
        {
            get
            {
                return this._conditionText;
            }
            set
            {
                this._conditionText = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InoId.
        /// </summary>
        /// <value>Propiedad InoId.</value>
        [
        DescriptionKey("INO_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INO_ID", DbType = System.Data.DbType.String),
        ]
        public int? InoId
        {
            get
            {
                return this._inoId;
            }
            set
            {
                this._inoId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InoDesc.
        /// </summary>
        /// <value>Propiedad InoDesc.</value>
        [
        DescriptionKey("INO_DESC_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INO_DESC", DbType = System.Data.DbType.String),
        ]
        public string InoDesc
        {
            get
            {
                return this._inoDesc;
            }
            set
            {
                this._inoDesc = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LnbCode.
        /// </summary>
        /// <value>Propiedad LnbCode.</value>
        [
        DescriptionKey("LNB_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LNB_CD", DbType = System.Data.DbType.String),
        ]
        public int? LnbCode
        {
            get
            {
                return this._lnbCode;
            }
            set
            {
                this._lnbCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LnbDesc.
        /// </summary>
        /// <value>Propiedad LnbDesc.</value>
        [
        DescriptionKey("LNB_DESC_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LNB_DESC", DbType = System.Data.DbType.String),
        ]
        public string LnbDesc
        {
            get
            {
                return this._lnbDesc;
            }
            set
            {
                this._lnbDesc = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsPrimary.
        /// </summary>
        /// <value>Propiedad IsPrimary.</value>
        [
        DescriptionKey("IS_PRIMARY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_PRIMARY", DbType = System.Data.DbType.String),
        ]
        public bool IsPrimary
        {
            get
            {
                return this._isPrimary;
            }
            set
            {
                this._isPrimary = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverStatusCode.
        /// </summary>
        /// <value>Propiedad CoverStatusCode.</value>
        [
        DescriptionKey("COVER_STATUS_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVER_STATUS_CD", DbType = System.Data.DbType.String),
        ]
        public int? CoverStatusCode
        {
            get
            {
                return this._coverStatusCode;
            }
            set
            {
                this._coverStatusCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskStatusCode.
        /// </summary>
        /// <value>Propiedad RiskStatusCode.</value>
        [
        DescriptionKey("RISK_STATUS_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "RISK_STATUS_CD", DbType = System.Data.DbType.String),
        ]
        public int? RiskStatusCode
        {
            get
            {
                return this._riskStatusCode;
            }
            set
            {
                this._riskStatusCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsImpression.
        /// </summary>
        /// <value>Propiedad IsImpression.</value>
        [
        DescriptionKey("IS_IMPRESSION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IS_IMPRESSION", DbType = System.Data.DbType.String),
        ]
        public bool? IsImpression
        {
            get
            {
                return this._isImpression;
            }
            set
            {
                this._isImpression = value;
            }
        }

    }
}