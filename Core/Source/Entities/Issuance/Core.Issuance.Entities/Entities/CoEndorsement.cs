/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.CoEndorsement.dict v1.0
 * FileSize=5413 Header=251 CRC=149991626
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad CoEndorsement.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.CoEndorsement.dict"),
    Serializable(),
    DescriptionKey("CO_ENDORSEMENT_ENTITY"),
    TableMap(TableName = "CO_ENDORSEMENT", Schema = "ISS"),
    ]
    public partial class CoEndorsement :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string ProfileId = "ProfileId";
            public static readonly string RefEndorsementId = "RefEndorsementId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int endorsementId, int policyId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EndorsementId, endorsementId);
            keys.Add(Properties.PolicyId, policyId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        public static PrimaryKey CreatePrimaryKey(int endorsementId, int policyId)
        {
            return InternalCreatePrimaryKey<CoEndorsement>(endorsementId, policyId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProfileId.
        /// </summary>
        private int _profileId;
        /// <summary>
        /// Atributo para la propiedad RefEndorsementId.
        /// </summary>
        private int? _refEndorsementId = null;
        /// <summary>
        /// Atributo para la propiedad EndoTypeCd.
        /// </summary>
        private int? _endoTypeCd = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="endorsementId">EndorsementId key property.</param>
        /// <param name="policyId">PolicyId key property.</param>
        public CoEndorsement(int endorsementId, int policyId) :
            this(CoEndorsement.CreatePrimaryKey(endorsementId, policyId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoEndorsement(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyId];
            }
            set
            {
                this._primaryKey[Properties.PolicyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProfileId.
        /// </summary>
        /// <value>Propiedad ProfileId.</value>
        [
        DescriptionKey("PROFILE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROFILE_ID", DbType = System.Data.DbType.String),
        ]
        public int ProfileId
        {
            get
            {
                return this._profileId;
            }
            set
            {
                this._profileId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RefEndorsementId.
        /// </summary>
        /// <value>Propiedad RefEndorsementId.</value>
        [
        DescriptionKey("REF_ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "REF_ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int? RefEndorsementId
        {
            get
            {
                return this._refEndorsementId;
            }
            set
            {
                this._refEndorsementId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoTypeCd.
        /// </summary>
        /// <value>Propiedad RefEndorsementId.</value>
        [
        DescriptionKey("ENDO_TYPE_CD_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDO_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? EndoTypeCd
        {
            get
            {
                return this._endoTypeCd;
            }
            set
            {
                this._endoTypeCd = value;
            }
        }

    }
}