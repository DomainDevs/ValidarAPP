/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.EndorsementRisk.dict v1.0
 * FileSize=8251 Header=254 CRC=3408882183
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad EndorsementRisk.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.EndorsementRisk.dict"),
    Serializable(),
    DescriptionKey("ENDORSEMENT_RISK_ENTITY"),
    TableMap(TableName = "ENDORSEMENT_RISK", Schema = "ISS"),
    ]
    public partial class EndorsementRisk :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RiskNum = "RiskNum";
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string RiskId = "RiskId";
            public static readonly string RiskStatusCode = "RiskStatusCode";
            public static readonly string IsCurrent = "IsCurrent";
            public static readonly string RiskInspTypeCode = "RiskInspTypeCode";
            public static readonly string InspectionId = "InspectionId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int riskNum, int endorsementId, int policyId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RiskNum, riskNum);
            keys.Add(Properties.EndorsementId, endorsementId);
            keys.Add(Properties.PolicyId, policyId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="riskNum">Propiedad clave RiskNum.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        public static PrimaryKey CreatePrimaryKey(int riskNum, int endorsementId, int policyId)
        {
            return InternalCreatePrimaryKey<EndorsementRisk>(riskNum, endorsementId, policyId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad RiskId.
        /// </summary>
        private int _riskId;
        /// <summary>
        /// Atributo para la propiedad RiskStatusCode.
        /// </summary>
        private int _riskStatusCode;
        /// <summary>
        /// Atributo para la propiedad IsCurrent.
        /// </summary>
        private bool _isCurrent;
        /// <summary>
        /// Atributo para la propiedad RiskInspTypeCode.
        /// </summary>
        private int _riskInspTypeCode;
        /// <summary>
        /// Atributo para la propiedad InspectionId.
        /// </summary>
        private int? _inspectionId = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="riskNum">RiskNum key property.</param>
        /// <param name="endorsementId">EndorsementId key property.</param>
        /// <param name="policyId">PolicyId key property.</param>
        public EndorsementRisk(int riskNum, int endorsementId, int policyId) :
            this(EndorsementRisk.CreatePrimaryKey(riskNum, endorsementId, policyId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public EndorsementRisk(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskNum.
        /// </summary>
        /// <value>Propiedad RiskNum.</value>
        [
        DescriptionKey("RISK_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_NUM", DbType = System.Data.DbType.String),
        ]
        public int RiskNum
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskNum];
            }
            set
            {
                this._primaryKey[Properties.RiskNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyId];
            }
            set
            {
                this._primaryKey[Properties.PolicyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return this._riskId;
            }
            set
            {
                this._riskId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskStatusCode.
        /// </summary>
        /// <value>Propiedad RiskStatusCode.</value>
        [
        DescriptionKey("RISK_STATUS_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_STATUS_CD", DbType = System.Data.DbType.String),
        ]
        public int RiskStatusCode
        {
            get
            {
                return this._riskStatusCode;
            }
            set
            {
                this._riskStatusCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsCurrent.
        /// </summary>
        /// <value>Propiedad IsCurrent.</value>
        [
        DescriptionKey("IS_CURRENT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_CURRENT", DbType = System.Data.DbType.String),
        ]
        public bool IsCurrent
        {
            get
            {
                return this._isCurrent;
            }
            set
            {
                this._isCurrent = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskInspTypeCode.
        /// </summary>
        /// <value>Propiedad RiskInspTypeCode.</value>
        [
        DescriptionKey("RISK_INSP_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_INSP_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int RiskInspTypeCode
        {
            get
            {
                return this._riskInspTypeCode;
            }
            set
            {
                this._riskInspTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InspectionId.
        /// </summary>
        /// <value>Propiedad InspectionId.</value>
        [
        DescriptionKey("INSPECTION_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INSPECTION_ID", DbType = System.Data.DbType.String),
        ]
        public int? InspectionId
        {
            get
            {
                return this._inspectionId;
            }
            set
            {
                this._inspectionId = value;
            }
        }

    }
}