/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.RiskCoverPile.dict v1.0
 * FileSize=5749 Header=250 CRC=13289785
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad RiskCoverPile.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.RiskCoverPile.dict"),
    Serializable(),
    DescriptionKey("RISK_COVER_PILE_ENTITY"),
    TableMap(TableName = "RISK_COVER_PILE", Schema = "ISS"),
    ]
    public partial class RiskCoverPile :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RiskCoverId = "RiskCoverId";
            public static readonly string CoverageId = "CoverageId";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string LimitAmount = "LimitAmount";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="riskCoverId">Propiedad clave RiskCoverId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int riskCoverId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RiskCoverId, riskCoverId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="riskCoverId">Propiedad clave RiskCoverId.</param>
        public static PrimaryKey CreatePrimaryKey(int riskCoverId)
        {
            return InternalCreatePrimaryKey<RiskCoverPile>(riskCoverId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CoverageId.
        /// </summary>
        private int _coverageId;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime _currentTo;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad LimitAmount.
        /// </summary>
        private decimal _limitAmount;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="riskCoverId">RiskCoverId key property.</param>
        public RiskCoverPile(int riskCoverId) :
            this(RiskCoverPile.CreatePrimaryKey(riskCoverId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RiskCoverPile(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskCoverId.
        /// </summary>
        /// <value>Propiedad RiskCoverId.</value>
        [
        DescriptionKey("RISK_COVER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_COVER_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskCoverId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskCoverId];
            }
            set
            {
                this._primaryKey[Properties.RiskCoverId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageId.
        /// </summary>
        /// <value>Propiedad CoverageId.</value>
        [
        DescriptionKey("COVERAGE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int CoverageId
        {
            get
            {
                return this._coverageId;
            }
            set
            {
                this._coverageId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitAmount.
        /// </summary>
        /// <value>Propiedad LimitAmount.</value>
        [
        DescriptionKey("LIMIT_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LIMIT_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal LimitAmount
        {
            get
            {
                return this._limitAmount;
            }
            set
            {
                this._limitAmount = value;
            }
        }

    }
}