/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.CoBillingGroupAgent.dict v1.0
 * FileSize=5232 Header=258 CRC=1100774881
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad CoBillingGroupAgent.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.CoBillingGroupAgent.dict"),
    Serializable(),
    DescriptionKey("CO_BILLING_GROUP_AGENT_ENTITY"),
    TableMap(TableName = "CO_BILLING_GROUP_AGENT", Schema = "ISS"),
    ]
    public partial class CoBillingGroupAgent :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BillingGroupCode = "BillingGroupCode";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string AgentAgencyId = "AgentAgencyId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="billingGroupCode">Propiedad clave BillingGroupCode.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int billingGroupCode, int individualId, int agentAgencyId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BillingGroupCode, billingGroupCode);
            keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.AgentAgencyId, agentAgencyId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="billingGroupCode">Propiedad clave BillingGroupCode.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
        public static PrimaryKey CreatePrimaryKey(int billingGroupCode, int individualId, int agentAgencyId)
        {
            return InternalCreatePrimaryKey<CoBillingGroupAgent>(billingGroupCode, individualId, agentAgencyId);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="billingGroupCode">BillingGroupCode key property.</param>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="agentAgencyId">AgentAgencyId key property.</param>
        public CoBillingGroupAgent(int billingGroupCode, int individualId, int agentAgencyId) :
            this(CoBillingGroupAgent.CreatePrimaryKey(billingGroupCode, individualId, agentAgencyId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoBillingGroupAgent(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BillingGroupCode.
        /// </summary>
        /// <value>Propiedad BillingGroupCode.</value>
        [
        DescriptionKey("BILLING_GROUP_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BILLING_GROUP_CD", DbType = System.Data.DbType.String),
        ]
        public int BillingGroupCode
        {
            get
            {
                return (int)this._primaryKey[Properties.BillingGroupCode];
            }
            set
            {
                this._primaryKey[Properties.BillingGroupCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentAgencyId.
        /// </summary>
        /// <value>Propiedad AgentAgencyId.</value>
        [
        DescriptionKey("AGENT_AGENCY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "AGENT_AGENCY_ID", DbType = System.Data.DbType.String),
        ]
        public int AgentAgencyId
        {
            get
            {
                return (int)this._primaryKey[Properties.AgentAgencyId];
            }
            set
            {
                this._primaryKey[Properties.AgentAgencyId] = value;
            }
        }

    }
}