/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.Endorsement.dict v1.0
 * FileSize=15710 Header=251 CRC=1904634839
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad Endorsement.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.Endorsement.dict"),
    Serializable(),
    DescriptionKey("ENDORSEMENT_ENTITY"),
    TableMap(TableName = "ENDORSEMENT", Schema = "ISS"),
    ]
    public partial class Endorsement :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string DocumentNum = "DocumentNum";
            public static readonly string IssueDate = "IssueDate";
            public static readonly string ExchangeRate = "ExchangeRate";
            public static readonly string EndoTypeCode = "EndoTypeCode";
            public static readonly string UserId = "UserId";
            public static readonly string BeginDate = "BeginDate";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string CommitDate = "CommitDate";
            public static readonly string PrintedDate = "PrintedDate";
            public static readonly string QuotationId = "QuotationId";
            public static readonly string ConditionText = "ConditionText";
            public static readonly string EndoReasonCode = "EndoReasonCode";
            public static readonly string SubscriptionReqId = "SubscriptionReqId";
            public static readonly string Annotations = "Annotations";
            public static readonly string CapacityOfCode = "CapacityOfCode";
            public static readonly string IsMassive = "IsMassive";

        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int endorsementId, int policyId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EndorsementId, endorsementId);
            keys.Add(Properties.PolicyId, policyId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        public static PrimaryKey CreatePrimaryKey(int endorsementId, int policyId)
        {
            return InternalCreatePrimaryKey<Endorsement>(endorsementId, policyId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DocumentNum.
        /// </summary>
        private int _documentNum;
        /// <summary>
        /// Atributo para la propiedad IssueDate.
        /// </summary>
        private DateTime _issueDate;
        /// <summary>
        /// Atributo para la propiedad ExchangeRate.
        /// </summary>
        private decimal _exchangeRate;
        /// <summary>
        /// Atributo para la propiedad EndoTypeCode.
        /// </summary>
        private int _endoTypeCode;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int _userId;
        /// <summary>
        /// Atributo para la propiedad BeginDate.
        /// </summary>
        private DateTime _beginDate;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime? _currentTo = null;
        /// <summary>
        /// Atributo para la propiedad CommitDate.
        /// </summary>
        private DateTime? _commitDate = null;
        /// <summary>
        /// Atributo para la propiedad PrintedDate.
        /// </summary>
        private DateTime? _printedDate = null;
        /// <summary>
        /// Atributo para la propiedad QuotationId.
        /// </summary>
        private int? _quotationId = null;
        /// <summary>
        /// Atributo para la propiedad ConditionText.
        /// </summary>
        private string _conditionText = null;
        /// <summary>
        /// Atributo para la propiedad EndoReasonCode.
        /// </summary>
        private int? _endoReasonCode = null;
        /// <summary>
        /// Atributo para la propiedad SubscriptionReqId.
        /// </summary>
        private int? _subscriptionReqId = null;
        /// <summary>
        /// Atributo para la propiedad Annotations.
        /// </summary>
        private string _annotations = null;
        /// <summary>
        /// Atributo para la propiedad CapacityOfCode.
        /// </summary>
        private int? _capacityOfCode = null;

        /// <summary>
        /// Atributo para la propiedad IsMassive.
        /// </summary>
        private bool _isMassive;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="endorsementId">EndorsementId key property.</param>
        /// <param name="policyId">PolicyId key property.</param>
        public Endorsement(int endorsementId, int policyId) :
            this(Endorsement.CreatePrimaryKey(endorsementId, policyId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Endorsement(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyId];
            }
            set
            {
                this._primaryKey[Properties.PolicyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentNum.
        /// </summary>
        /// <value>Propiedad DocumentNum.</value>
        [
        DescriptionKey("DOCUMENT_NUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DOCUMENT_NUM", DbType = System.Data.DbType.String),
        ]
        public int DocumentNum
        {
            get
            {
                return this._documentNum;
            }
            set
            {
                this._documentNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IssueDate.
        /// </summary>
        /// <value>Propiedad IssueDate.</value>
        [
        DescriptionKey("ISSUE_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ISSUE_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime IssueDate
        {
            get
            {
                return this._issueDate;
            }
            set
            {
                this._issueDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExchangeRate.
        /// </summary>
        /// <value>Propiedad ExchangeRate.</value>
        [
        DescriptionKey("EXCHANGE_RATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXCHANGE_RATE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal ExchangeRate
        {
            get
            {
                return this._exchangeRate;
            }
            set
            {
                this._exchangeRate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoTypeCode.
        /// </summary>
        /// <value>Propiedad EndoTypeCode.</value>
        [
        DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENDO_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int EndoTypeCode
        {
            get
            {
                return this._endoTypeCode;
            }
            set
            {
                this._endoTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BeginDate.
        /// </summary>
        /// <value>Propiedad BeginDate.</value>
        [
        DescriptionKey("BEGIN_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BEGIN_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime BeginDate
        {
            get
            {
                return this._beginDate;
            }
            set
            {
                this._beginDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CommitDate.
        /// </summary>
        /// <value>Propiedad CommitDate.</value>
        [
        DescriptionKey("COMMIT_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMMIT_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? CommitDate
        {
            get
            {
                return this._commitDate;
            }
            set
            {
                this._commitDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintedDate.
        /// </summary>
        /// <value>Propiedad PrintedDate.</value>
        [
        DescriptionKey("PRINTED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRINTED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? PrintedDate
        {
            get
            {
                return this._printedDate;
            }
            set
            {
                this._printedDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int? QuotationId
        {
            get
            {
                return this._quotationId;
            }
            set
            {
                this._quotationId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConditionText.
        /// </summary>
        /// <value>Propiedad ConditionText.</value>
        [
        DescriptionKey("CONDITION_TEXT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONDITION_TEXT", DbType = System.Data.DbType.String),
        ]
        public string ConditionText
        {
            get
            {
                return this._conditionText;
            }
            set
            {
                this._conditionText = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoReasonCode.
        /// </summary>
        /// <value>Propiedad EndoReasonCode.</value>
        [
        DescriptionKey("ENDO_REASON_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDO_REASON_CD", DbType = System.Data.DbType.String),
        ]
        public int? EndoReasonCode
        {
            get
            {
                return this._endoReasonCode;
            }
            set
            {
                this._endoReasonCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubscriptionReqId.
        /// </summary>
        /// <value>Propiedad SubscriptionReqId.</value>
        [
        DescriptionKey("SUBSCRIPTION_REQ_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SUBSCRIPTION_REQ_ID", DbType = System.Data.DbType.String),
        ]
        public int? SubscriptionReqId
        {
            get
            {
                return this._subscriptionReqId;
            }
            set
            {
                this._subscriptionReqId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Annotations.
        /// </summary>
        /// <value>Propiedad Annotations.</value>
        [
        DescriptionKey("ANNOTATIONS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ANNOTATIONS", DbType = System.Data.DbType.String),
        ]
        public string Annotations
        {
            get
            {
                return this._annotations;
            }
            set
            {
                this._annotations = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CapacityOfCode.
        /// </summary>
        /// <value>Propiedad CapacityOfCode.</value>
        [
        DescriptionKey("CAPACITY_OF_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CAPACITY_OF_CD", DbType = System.Data.DbType.String),
        ]
        public int? CapacityOfCode
        {
            get
            {
                return this._capacityOfCode;
            }
            set
            {
                this._capacityOfCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMassive.
        /// </summary>
        /// <value>Propiedad IsMassive.</value>
        [
        DescriptionKey("IS_MASSIVE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_MASSIVE", DbType = System.Data.DbType.String),
        ]
        public bool IsMassive
        {
            get
            {
                return this._isMassive;
            }
            set
            {
                this._isMassive = value;
            }
        }


    }
}