/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: tabla.PayerPaymentChange.dict v1.0
 * FileSize=12121 Header=230 CRC=4079932904
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Entidad para Recuotificacion
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.PayerPaymentUpdate.dict"),
    Serializable(),
    DescriptionKey("PAYER_PAYMENT_UPDATE_ENTITY"),
    TableMap(TableName = "PAYER_PAYMENT_UPDATE", Schema = "ISS"),
    ]
    public partial class PayerPaymentUpdate :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades p√∫blicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string PayerId = "PayerId";
            public static readonly string PaymentScheduleId = "PaymentScheduleId";
            public static readonly string PaymentMethodCode = "PaymentMethodCode";
            public static readonly string MailAddressId = "MailAddressId";
            public static readonly string PaymentId = "PaymentId";
            public static readonly string PaymentNum = "PaymentNum";
            public static readonly string PayExpDate = "PayExpDate";
            public static readonly string PaymentPercentage = "PaymentPercentage";
            public static readonly string Amount = "Amount";
            public static readonly string AgtPayExpDate = "AgtPayExpDate";
            public static readonly string IsByPaymentUpdate = "IsByPaymentUpdate";
            public static readonly string SequentialId = "SequentialId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="payerId">Propiedad clave PayerId.</param>
        /// <param name="paymentNum">Propiedad clave PaymentNum.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int endorsementId, int policyId, int payerId, int paymentNum, int sequentialId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EndorsementId, endorsementId);
            keys.Add(Properties.PolicyId, policyId);
            keys.Add(Properties.PayerId, payerId);
            keys.Add(Properties.PaymentNum, paymentNum);
            keys.Add(Properties.SequentialId, sequentialId);
            return new PrimaryKey<T>(keys);
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int endorsementId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EndorsementId, endorsementId);
            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="payerId">Propiedad clave PayerId.</param>
        /// <param name="paymentNum">Propiedad clave PaymentNum.</param>
        public static PrimaryKey CreatePrimaryKey(int endorsementId, int policyId, int payerId, int paymentNum, int sequentialId)
        {
            return InternalCreatePrimaryKey<PayerPaymentUpdate>(endorsementId, policyId, payerId, paymentNum, sequentialId);
        }
        public static PrimaryKey CreatePrimaryKey(int endorsementId)
        {
            return InternalCreatePrimaryKey<PayerPaymentUpdate>(endorsementId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentScheduleId.
        /// </summary>
        private int _paymentScheduleId;
        /// <summary>
        /// Atributo para la propiedad PaymentMethodCode.
        /// </summary>
        private int _paymentMethodCode;
        /// <summary>
        /// Atributo para la propiedad SequentiId.
        /// </summary>
        private int _sequentialId;
        /// <summary>
        /// Atributo para la propiedad MailAddressId.
        /// </summary>
        private int? _mailAddressId = null;
        /// <summary>
        /// Atributo para la propiedad PaymentId.
        /// </summary>
        private int? _paymentId = null;
        /// <summary>
        /// Atributo para la propiedad PayExpDate.
        /// </summary>
        private DateTime _payExpDate;
        /// <summary>
        /// Atributo para la propiedad PaymentPercentage.
        /// </summary>
        private decimal? _paymentPercentage = null;
        /// <summary>
        /// Atributo para la propiedad Amount.
        /// </summary>
        private decimal _amount;
        /// <summary>
        /// Atributo para la propiedad AgtPayExpDate.
        /// </summary>
        private DateTime? _agtPayExpDate = null;
        /// <summary>
        /// Atributo para la propiedad IsByChangePayment.
        /// </summary>
        private bool _isByPaymentUpdate = false;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="endorsementId">EndorsementId key property.</param>
        /// <param name="policyId">PolicyId key property.</param>
        /// <param name="payerId">PayerId key property.</param>
        /// <param name="paymentNum">PaymentNum key property.</param>
        public PayerPaymentUpdate(int endorsementId, int policyId, int payerId, int paymentNum, int sequentialId) :
            this(PayerPaymentUpdate.CreatePrimaryKey(endorsementId, policyId, payerId, paymentNum, sequentialId), null)
        {
        }

        public PayerPaymentUpdate(int endorsementId) :
           this(PayerPaymentUpdate.CreatePrimaryKey(endorsementId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PayerPaymentUpdate(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyId];
            }
            set
            {
                this._primaryKey[Properties.PolicyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PayerId.
        /// </summary>
        /// <value>Propiedad PayerId.</value>
        [
        DescriptionKey("PAYER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYER_ID", DbType = System.Data.DbType.String),
        ]
        public int PayerId
        {
            get
            {
                return (int)this._primaryKey[Properties.PayerId];
            }
            set
            {
                this._primaryKey[Properties.PayerId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentNum.
        /// </summary>
        /// <value>Propiedad PaymentNum.</value>
        [
        DescriptionKey("PAYMENT_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_NUM", DbType = System.Data.DbType.String),
        ]
        public int PaymentNum
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentNum];
            }
            set
            {
                this._primaryKey[Properties.PaymentNum] = value;
            }
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad SequentialId.
        /// </summary>
        /// <value>Propiedad SequentialId.</value>
        [
        DescriptionKey("SEQUENTIAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SEQUENTIAL_ID", DbType = System.Data.DbType.String),
        ]
        public int SequentialId
        {
            get
            {
                return (int)this._primaryKey[Properties.SequentialId];
            }
            set
            {
                this._primaryKey[Properties.SequentialId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentScheduleId.
        /// </summary>
        /// <value>Propiedad PaymentScheduleId.</value>
        [
        DescriptionKey("PAYMENT_SCHEDULE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_SCHEDULE_ID", DbType = System.Data.DbType.String),
        ]
        public int PaymentScheduleId
        {
            get
            {
                return this._paymentScheduleId;
            }
            set
            {
                this._paymentScheduleId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentMethodCode.
        /// </summary>
        /// <value>Propiedad PaymentMethodCode.</value>
        [
        DescriptionKey("PAYMENT_METHOD_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_METHOD_CD", DbType = System.Data.DbType.String),
        ]
        public int PaymentMethodCode
        {
            get
            {
                return this._paymentMethodCode;
            }
            set
            {
                this._paymentMethodCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MailAddressId.
        /// </summary>
        /// <value>Propiedad MailAddressId.</value>
        [
        DescriptionKey("MAIL_ADDRESS_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MAIL_ADDRESS_ID", DbType = System.Data.DbType.String),
        ]
        public int? MailAddressId
        {
            get
            {
                return this._mailAddressId;
            }
            set
            {
                this._mailAddressId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentId.
        /// </summary>
        /// <value>Propiedad PaymentId.</value>
        [
        DescriptionKey("PAYMENT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int? PaymentId
        {
            get
            {
                return this._paymentId;
            }
            set
            {
                this._paymentId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PayExpDate.
        /// </summary>
        /// <value>Propiedad PayExpDate.</value>
        [
        DescriptionKey("PAY_EXP_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAY_EXP_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime PayExpDate
        {
            get
            {
                return this._payExpDate;
            }
            set
            {
                this._payExpDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentPercentage.
        /// </summary>
        /// <value>Propiedad PaymentPercentage.</value>
        [
        DescriptionKey("PAYMENT_PERCENTAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PaymentPercentage
        {
            get
            {
                return this._paymentPercentage;
            }
            set
            {
                this._paymentPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Amount.
        /// </summary>
        /// <value>Propiedad Amount.</value>
        [
        DescriptionKey("AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                this._amount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgtPayExpDate.
        /// </summary>
        /// <value>Propiedad AgtPayExpDate.</value>
        [
        DescriptionKey("AGT_PAY_EXP_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AGT_PAY_EXP_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? AgtPayExpDate
        {
            get
            {
                return this._agtPayExpDate;
            }
            set
            {
                this._agtPayExpDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsByPaymentUpdate.
        /// </summary>
        /// <value>Propiedad IsByPaymentUpdate.</value>
        [
        DescriptionKey("IS_BY_PAYMENT_UPDATE_PROPERTY"),
        ColumnMap(ColumnName = "IS_BY_PAYMENT_UPDATE", DbType = System.Data.DbType.String),
        ]
        public bool IsByPaymentUpdate
        {
            get
            {
                return this._isByPaymentUpdate;
            }
            set
            {
                this._isByPaymentUpdate = value;
            }
        }

    }
}