/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.RiskTransportMean.dict v1.0
 * FileSize=4116 Header=256 CRC=3571958712
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad RiskTransportMean.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.RiskTransportMean.dict"),
    Serializable(),
    DescriptionKey("RISK_TRANSPORT_MEAN_ENTITY"),
    TableMap(TableName="RISK_TRANSPORT_MEAN", Schema="ISS"),
    ]
    public partial class RiskTransportMean :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RiskId = "RiskId";
			public static readonly string TransportMeanCode = "TransportMeanCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <param name="transportMeanCode">Propiedad clave TransportMeanCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int riskId, int transportMeanCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RiskId, riskId);
		    keys.Add(Properties.TransportMeanCode, transportMeanCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <param name="transportMeanCode">Propiedad clave TransportMeanCode.</param>
		public static PrimaryKey CreatePrimaryKey(int riskId, int transportMeanCode)
	    {
			return InternalCreatePrimaryKey<RiskTransportMean>(riskId, transportMeanCode);
		}
#endregion

	    //*** Object Attributes ********************************

	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="riskId">RiskId key property.</param>
		/// <param name="transportMeanCode">TransportMeanCode key property.</param>
	    public RiskTransportMean(int riskId, int transportMeanCode):
			this(RiskTransportMean.CreatePrimaryKey(riskId, transportMeanCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public RiskTransportMean(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskId.
		/// </summary>
		/// <value>Propiedad RiskId.</value>
	    [
		DescriptionKey("RISK_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RISK_ID", DbType=System.Data.DbType.String),
	    ]
        public int RiskId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RiskId];
		    }
		    set
		    {
				this._primaryKey[Properties.RiskId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TransportMeanCode.
		/// </summary>
		/// <value>Propiedad TransportMeanCode.</value>
	    [
		DescriptionKey("TRANSPORT_MEAN_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TRANSPORT_MEAN_CD", DbType=System.Data.DbType.String),
	    ]
        public int TransportMeanCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TransportMeanCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TransportMeanCode] = value;
			}
	    }

    }
}