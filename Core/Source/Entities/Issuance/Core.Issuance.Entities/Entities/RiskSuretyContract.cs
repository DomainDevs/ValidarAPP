/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.RiskSuretyContract.dict v1.0
 * FileSize=3775 Header=257 CRC=1509455619
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad RiskSuretyContract.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.RiskSuretyContract.dict"),
    Serializable(),
    DescriptionKey("RISK_SURETY_CONTRACT_ENTITY"),
    TableMap(TableName = "RISK_SURETY_CONTRACT", Schema = "ISS"),
    ]
    public partial class RiskSuretyContract :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RiskId = "RiskId";
            public static readonly string ObjectContract = "ObjectContract";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int riskId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RiskId, riskId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        public static PrimaryKey CreatePrimaryKey(int riskId)
        {
            return InternalCreatePrimaryKey<RiskSuretyContract>(riskId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ObjectContract.
        /// </summary>
        private string _objectContract = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="riskId">RiskId key property.</param>
        public RiskSuretyContract(int riskId) :
            this(RiskSuretyContract.CreatePrimaryKey(riskId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RiskSuretyContract(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskId];
            }
            set
            {
                this._primaryKey[Properties.RiskId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ObjectContract.
        /// </summary>
        /// <value>Propiedad ObjectContract.</value>
        [
        DescriptionKey("OBJECT_CONTRACT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OBJECT_CONTRACT", DbType = System.Data.DbType.String),
        ]
        public string ObjectContract
        {
            get
            {
                return this._objectContract;
            }
            set
            {
                this._objectContract = value;
            }
        }

    }
}