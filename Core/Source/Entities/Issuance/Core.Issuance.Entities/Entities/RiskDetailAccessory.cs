/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.RiskDetailAccessory.dict v1.0
 * FileSize=5332 Header=258 CRC=3712992339
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad RiskDetailAccessory.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.RiskDetailAccessory.dict"),
    Serializable(),
    DescriptionKey("RISK_DETAIL_ACCESSORY_ENTITY"),
    TableMap(TableName = "RISK_DETAIL_ACCESSORY", Schema = "ISS"),
    ]
    public partial class RiskDetailAccessory :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RiskDetailId = "RiskDetailId";
            public static readonly string DetailId = "DetailId";
            public static readonly string BrandName = "BrandName";
            public static readonly string Model = "Model";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="riskDetailId">Propiedad clave RiskDetailId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int riskDetailId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RiskDetailId, riskDetailId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="riskDetailId">Propiedad clave RiskDetailId.</param>
        public static PrimaryKey CreatePrimaryKey(int riskDetailId)
        {
            return InternalCreatePrimaryKey<RiskDetailAccessory>(riskDetailId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DetailId.
        /// </summary>
        private int _detailId;
        /// <summary>
        /// Atributo para la propiedad BrandName.
        /// </summary>
        private string _brandName = null;
        /// <summary>
        /// Atributo para la propiedad Model.
        /// </summary>
        private string _model = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="riskDetailId">RiskDetailId key property.</param>
        public RiskDetailAccessory(int riskDetailId) :
            this(RiskDetailAccessory.CreatePrimaryKey(riskDetailId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RiskDetailAccessory(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskDetailId.
        /// </summary>
        /// <value>Propiedad RiskDetailId.</value>
        [
        DescriptionKey("RISK_DETAIL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_DETAIL_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskDetailId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskDetailId];
            }
            set
            {
                this._primaryKey[Properties.RiskDetailId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DetailId.
        /// </summary>
        /// <value>Propiedad DetailId.</value>
        [
        DescriptionKey("DETAIL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DETAIL_ID", DbType = System.Data.DbType.String),
        ]
        public int DetailId
        {
            get
            {
                return this._detailId;
            }
            set
            {
                this._detailId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BrandName.
        /// </summary>
        /// <value>Propiedad BrandName.</value>
        [
        DescriptionKey("BRAND_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRAND_NAME", DbType = System.Data.DbType.String),
        ]
        public string BrandName
        {
            get
            {
                return this._brandName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.BrandName);
                }
                this._brandName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Model.
        /// </summary>
        /// <value>Propiedad Model.</value>
        [
        DescriptionKey("MODEL_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MODEL", DbType = System.Data.DbType.String),
        ]
        public string Model
        {
            get
            {
                return this._model;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Model);
                }
                this._model = value;
            }
        }

    }
}