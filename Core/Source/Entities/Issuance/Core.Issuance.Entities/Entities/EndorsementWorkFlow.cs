/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.EndorsementWorkFlow.dict v1.0
 * FileSize=5564 Header=258 CRC=2763435127
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad EndorsementWorkFlow.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.EndorsementWorkFlow.dict"),
    Serializable(),
    DescriptionKey("ENDORSEMENT_WORK_FLOW_ENTITY"),
    TableMap(TableName="ENDORSEMENT_WORK_FLOW", Schema="ISS"),
    ]
    public partial class EndorsementWorkFlow :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PolicyId = "PolicyId";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string FilingNumber = "FilingNumber";
			public static readonly string FilingDate = "FilingDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int policyId, int endorsementId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PolicyId, policyId);
		    keys.Add(Properties.EndorsementId, endorsementId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		public static PrimaryKey CreatePrimaryKey(int policyId, int endorsementId)
	    {
			return InternalCreatePrimaryKey<EndorsementWorkFlow>(policyId, endorsementId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad FilingNumber.
		/// </summary>
        private string _filingNumber = null;
		/// <summary>
		/// Atributo para la propiedad FilingDate.
		/// </summary>
        private DateTime _filingDate;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="policyId">PolicyId key property.</param>
		/// <param name="endorsementId">EndorsementId key property.</param>
	    public EndorsementWorkFlow(int policyId, int endorsementId):
			this(EndorsementWorkFlow.CreatePrimaryKey(policyId, endorsementId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public EndorsementWorkFlow(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PolicyId];
		    }
		    set
		    {
				this._primaryKey[Properties.PolicyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EndorsementId];
		    }
		    set
		    {
				this._primaryKey[Properties.EndorsementId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FilingNumber.
		/// </summary>
		/// <value>Propiedad FilingNumber.</value>
	    [
		DescriptionKey("FILING_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FILING_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string FilingNumber
	    {
		    get
		    {
			    return this._filingNumber;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.FilingNumber);
				}
				this._filingNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FilingDate.
		/// </summary>
		/// <value>Propiedad FilingDate.</value>
	    [
		DescriptionKey("FILING_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FILING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime FilingDate
	    {
		    get
		    {
			    return this._filingDate;
		    }
		    set
		    {
				this._filingDate = value;
			}
	    }

    }
}