/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Issuance.EndorsementDeclarationPeriod.dict v1.0
 * FileSize=7598 Header=267 CRC=3700332306
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad EndorsementDeclarationPeriod.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Issuance.EndorsementDeclarationPeriod.dict"),
    Serializable(),
    DescriptionKey("ENDORSEMENT_DECLARATION_PERIOD_ENTITY"),
    TableMap(TableName = "ENDORSEMENT_DECLARATION_PERIOD", Schema = "ISS"),
    ]
    public partial class EndorsementDeclarationPeriod :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string EndorsementDeclarationPeriodId = "EndorsementDeclarationPeriodId";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string EndoTypeCode = "EndoTypeCode";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string Issued = "Issued";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="endorsementDeclarationPeriodId">Propiedad clave EndorsementDeclarationPeriodId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int endorsementDeclarationPeriodId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EndorsementDeclarationPeriodId, endorsementDeclarationPeriodId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="endorsementDeclarationPeriodId">Propiedad clave EndorsementDeclarationPeriodId.</param>
        public static PrimaryKey CreatePrimaryKey(int endorsementDeclarationPeriodId)
        {
            return InternalCreatePrimaryKey<EndorsementDeclarationPeriod>(endorsementDeclarationPeriodId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PolicyId.
        /// </summary>
        private int _policyId;
        /// <summary>
        /// Atributo para la propiedad EndorsementId.
        /// </summary>
        private int? _endorsementId = null;
        /// <summary>
        /// Atributo para la propiedad EndoTypeCode.
        /// </summary>
        private int _endoTypeCode;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime _currentTo;
        /// <summary>
        /// Atributo para la propiedad Issued.
        /// </summary>
        private bool _issued;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="endorsementDeclarationPeriodId">EndorsementDeclarationPeriodId key property.</param>
        public EndorsementDeclarationPeriod(int endorsementDeclarationPeriodId) :
            this(EndorsementDeclarationPeriod.CreatePrimaryKey(endorsementDeclarationPeriodId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public EndorsementDeclarationPeriod(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementDeclarationPeriodId.
        /// </summary>
        /// <value>Propiedad EndorsementDeclarationPeriodId.</value>
        [
        DescriptionKey("ENDORSEMENT_DECLARATION_PERIOD_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_DECLARATION_PERIOD_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementDeclarationPeriodId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementDeclarationPeriodId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementDeclarationPeriodId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return this._policyId;
            }
            set
            {
                this._policyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int? EndorsementId
        {
            get
            {
                return this._endorsementId;
            }
            set
            {
                this._endorsementId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoTypeCode.
        /// </summary>
        /// <value>Propiedad EndoTypeCode.</value>
        [
        DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENDO_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int EndoTypeCode
        {
            get
            {
                return this._endoTypeCode;
            }
            set
            {
                this._endoTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Issued.
        /// </summary>
        /// <value>Propiedad Issued.</value>
        [
        DescriptionKey("ISSUED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ISSUED", DbType = System.Data.DbType.String),
        ]
        public bool Issued
        {
            get
            {
                return this._issued;
            }
            set
            {
                this._issued = value;
            }
        }

    }
}