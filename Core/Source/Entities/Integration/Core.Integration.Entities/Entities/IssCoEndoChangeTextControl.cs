/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Integration.IssCoEndoChangeTextControl.dict v1.0
 * FileSize=6119 Header=261 CRC=3542299778
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Integration.Entities
{
    /// <summary>
    /// Definición de entidad IssCoEndoChangeTextControl.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Integration.IssCoEndoChangeTextControl.dict"),
    Serializable(),
    DescriptionKey("ISS_CO_ENDO_CHANGE_TEXT_CONTROL_ENTITY"),
    TableMap(TableName = "ISS_CO_ENDO_CHANGE_TEXT_CONTROL", Schema = "INT"),
    ]
    public partial class IssCoEndoChangeTextControl :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ContractControlId = "ContractControlId";
            public static readonly string ContractId = "ContractId";
            public static readonly string PerifericoId = "PerifericoId";
            public static readonly string ProcessId = "ProcessId";
            
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="ContractControlId">Propiedad clave ContractControlId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int contractControlId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ContractControlId, contractControlId);

            return new PrimaryKey<T>(keys);
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ContractControlId, null);

            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualControlId">Propiedad clave IssCoEndoChangeTextControl.</param>
        public static PrimaryKey CreatePrimaryKey(int contractControlId)
        {
            return InternalCreatePrimaryKey<IssCoEndoChangeTextControl>(contractControlId);
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<IssCoEndoChangeTextControl>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad EndorsementId.
        /// </summary>
        private int _contractId;
        /// <summary>
        /// Atributo para la propiedad RiskId.
        /// </summary>
        private int _perifericoId;
        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private int _processId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="contractControlId">contractControlId key property.</param>
        public IssCoEndoChangeTextControl(int contractControlId) :
            this(IssCoEndoChangeTextControl.CreatePrimaryKey(contractControlId), null)
        {
        }

        public IssCoEndoChangeTextControl() :
            this(IssCoEndoChangeTextControl.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public IssCoEndoChangeTextControl(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ContractControlId.
        /// </summary>
        /// <value>Propiedad ContractControlId.</value>
        [
        DescriptionKey("CONTRACT_CONTROL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CONTRACT_CONTROL_ID", DbType = System.Data.DbType.String),
        ]
        public int ContractControlId
        {
            get
            {
                return (int)this._primaryKey[Properties.ContractControlId];
            }
            set
            {
                this._primaryKey[Properties.ContractControlId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CONTRACTID.
        /// </summary>
        /// <value>Propiedad CONTRACTID.</value>
        [
        DescriptionKey("CONTRACT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONTRACT_ID", DbType = System.Data.DbType.String),
        ]
        public int ContractId
        {
            get
            {
                return this._contractId;
            }
            set
            {
                this._contractId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PERIFERICO_ID.
        /// </summary>
        /// <value>Propiedad AppSource.</value>
        [
        DescriptionKey("PERIFERICO_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PERIFERICO_ID", DbType = System.Data.DbType.String),
        ]
        public int PerifericoId
        {
            get
            {
                return this._perifericoId;
            }
            set
            {
                this._perifericoId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PROCESS_ID.
        /// </summary>
        /// <value>Propiedad IndividualOrigin.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return this._processId;
            }
            set
            {
                this._processId = value;
            }
        }

       

    }
}