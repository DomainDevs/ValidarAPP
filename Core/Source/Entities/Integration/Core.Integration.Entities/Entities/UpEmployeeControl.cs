/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Integration.UpEmployeeControl.dict v1.0
 * FileSize=6035 Header=259 CRC=2847908327
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Integration.Entities
{
    /// <summary>
    /// Definición de entidad UpEmployeeControl.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Integration.UpEmployeeControl.dict"),
    Serializable(),
    DescriptionKey("UP_EMPLOYEE_CONTROL_ENTITY"),
    TableMap(TableName = "UP_EMPLOYEE_CONTROL", Schema = "INT"),
    ]
    public partial class UpEmployeeControl :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string EmployeeControlId = "EmployeeControlId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string AppSource = "AppSource";
            public static readonly string EmployeeOrigin = "EmployeeOrigin";
            public static readonly string Action = "Action";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="employeeControlId">Propiedad clave EmployeeControlId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int employeeControlId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EmployeeControlId, employeeControlId);

            return new PrimaryKey<T>(keys);
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EmployeeControlId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="employeeControlId">Propiedad clave EmployeeControlId.</param>
        public static PrimaryKey CreatePrimaryKey(int employeeControlId)
        {
            return InternalCreatePrimaryKey<UpEmployeeControl>(employeeControlId);
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<UpEmployeeControl>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        /// <summary>
        /// Atributo para la propiedad AppSource.
        /// </summary>
        private int _appSource;
        /// <summary>
        /// Atributo para la propiedad EmployeeOrigin.
        /// </summary>
        private int _employeeOrigin;
        /// <summary>
        /// Atributo para la propiedad Action.
        /// </summary>
        private string _action = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="employeeControlId">EmployeeControlId key property.</param>
        public UpEmployeeControl(int employeeControlId) :
            this(UpEmployeeControl.CreatePrimaryKey(employeeControlId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public UpEmployeeControl(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad EmployeeControlId.
        /// </summary>
        /// <value>Propiedad EmployeeControlId.</value>
        [
        DescriptionKey("EMPLOYEE_CONTROL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "EMPLOYEE_CONTROL_ID", DbType = System.Data.DbType.String),
        ]
        public int EmployeeControlId
        {
            get
            {
                return (int)this._primaryKey[Properties.EmployeeControlId];
            }
            set
            {
                this._primaryKey[Properties.EmployeeControlId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AppSource.
        /// </summary>
        /// <value>Propiedad AppSource.</value>
        [
        DescriptionKey("APP_SOURCE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "APP_SOURCE", DbType = System.Data.DbType.String),
        ]
        public int AppSource
        {
            get
            {
                return this._appSource;
            }
            set
            {
                this._appSource = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EmployeeOrigin.
        /// </summary>
        /// <value>Propiedad EmployeeOrigin.</value>
        [
        DescriptionKey("EMPLOYEE_ORIGIN_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EMPLOYEE_ORIGIN", DbType = System.Data.DbType.String),
        ]
        public int EmployeeOrigin
        {
            get
            {
                return this._employeeOrigin;
            }
            set
            {
                this._employeeOrigin = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Action.
        /// </summary>
        /// <value>Propiedad Action.</value>
        [
        DescriptionKey("ACTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ACTION", DbType = System.Data.DbType.String),
        ]
        public string Action
        {
            get
            {
                return this._action;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Action);
                }
                this._action = value;
            }
        }

        public UpEmployeeControl() :
            this(UpEmployeeControl.CreatePrimaryKey(), null)
        {
        }

        


        

        






    }
}