/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Integration.CollectApplicationControl.dict v1.0
 * FileSize=6329 Header=266 CRC=505873210
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Integration.Entities
{
    /// <summary>
    /// Definición de entidad CollectApplicationControl.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Integration.CollectApplicationControl.dict"),
    Serializable(),
    DescriptionKey("COLLECT_APPLICATION_CONTROL_ENTITY"),
    TableMap(TableName="COLLECT_APPLICATION_CONTROL", Schema="INT"),
    ]
    public partial class CollectApplicationControl :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CollectApplicationControlId = "CollectApplicationControlId";
			public static readonly string CollectApplicationId = "CollectApplicationId";
			public static readonly string Origin = "Origin";
			public static readonly string AppSource = "AppSource";
			public static readonly string Action = "Action";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="collectApplicationControlId">Propiedad clave CollectApplicationControlId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int collectApplicationControlId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CollectApplicationControlId, collectApplicationControlId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="collectApplicationControlId">Propiedad clave CollectApplicationControlId.</param>
		public static PrimaryKey CreatePrimaryKey(int collectApplicationControlId)
	    {
			return InternalCreatePrimaryKey<CollectApplicationControl>(collectApplicationControlId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CollectApplicationId.
		/// </summary>
        private int _collectApplicationId;
		/// <summary>
		/// Atributo para la propiedad Origin.
		/// </summary>
        private int _origin;
		/// <summary>
		/// Atributo para la propiedad AppSource.
		/// </summary>
        private int _appSource;
		/// <summary>
		/// Atributo para la propiedad Action.
		/// </summary>
        private string _action = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="collectApplicationControlId">CollectApplicationControlId key property.</param>
	    public CollectApplicationControl(int collectApplicationControlId):
			this(CollectApplicationControl.CreatePrimaryKey(collectApplicationControlId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CollectApplicationControl(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectApplicationControlId.
		/// </summary>
		/// <value>Propiedad CollectApplicationControlId.</value>
	    [
		DescriptionKey("COLLECT_APPLICATION_CONTROL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_APPLICATION_CONTROL_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectApplicationControlId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectApplicationControlId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectApplicationControlId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectApplicationId.
		/// </summary>
		/// <value>Propiedad CollectApplicationId.</value>
	    [
		DescriptionKey("COLLECT_APPLICATION_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COLLECT_APPLICATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectApplicationId
	    {
		    get
		    {
			    return this._collectApplicationId;
		    }
		    set
		    {
				this._collectApplicationId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Origin.
		/// </summary>
		/// <value>Propiedad Origin.</value>
	    [
		DescriptionKey("ORIGIN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ORIGIN", DbType=System.Data.DbType.String),
	    ]
        public int Origin
	    {
		    get
		    {
			    return this._origin;
		    }
		    set
		    {
				this._origin = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AppSource.
		/// </summary>
		/// <value>Propiedad AppSource.</value>
	    [
		DescriptionKey("APP_SOURCE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="APP_SOURCE", DbType=System.Data.DbType.String),
	    ]
        public int AppSource
	    {
		    get
		    {
			    return this._appSource;
		    }
		    set
		    {
				this._appSource = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Action.
		/// </summary>
		/// <value>Propiedad Action.</value>
	    [
		DescriptionKey("ACTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACTION", DbType=System.Data.DbType.String),
	    ]
        public string Action
	    {
		    get
		    {
			    return this._action;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Action);
				}
				this._action = value;
			}
	    }

    }
}