/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Integration.ClmPaymentControl.dict v1.0
 * FileSize=6068 Header=259 CRC=3046323156
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Integration.Entities
{
    /// <summary>
    /// Definición de entidad ClmPaymentControl.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Integration.ClmPaymentControl.dict"),
    Serializable(),
    DescriptionKey("CLM_PAYMENT_CONTROL_ENTITY"),
    TableMap(TableName="CLM_PAYMENT_CONTROL", Schema="INT"),
    ]
    public partial class ClmPaymentControl :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentControlId = "PaymentControlId";
			public static readonly string PaymentRequestCode = "PaymentRequestCode";
			public static readonly string AppSource = "AppSource";
			public static readonly string PaymentOrigin = "PaymentOrigin";
			public static readonly string Action = "Action";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentControlId">Propiedad clave PaymentControlId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentControlId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentControlId, paymentControlId);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentControlId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentControlId">Propiedad clave PaymentControlId.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentControlId)
	    {
			return InternalCreatePrimaryKey<ClmPaymentControl>(paymentControlId);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ClmPaymentControl>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentRequestCode.
        /// </summary>
        private int _paymentRequestCode;
		/// <summary>
		/// Atributo para la propiedad AppSource.
		/// </summary>
        private int _appSource;
		/// <summary>
		/// Atributo para la propiedad PaymentOrigin.
		/// </summary>
        private int _paymentOrigin;
		/// <summary>
		/// Atributo para la propiedad Action.
		/// </summary>
        private string _action = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentControlId">PaymentControlId key property.</param>
	    public ClmPaymentControl(int paymentControlId):
			this(ClmPaymentControl.CreatePrimaryKey(paymentControlId), null)
	    {
	    }

        public ClmPaymentControl() :
            this(ClmPaymentControl.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ClmPaymentControl(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentControlId.
		/// </summary>
		/// <value>Propiedad PaymentControlId.</value>
	    [
		DescriptionKey("PAYMENT_CONTROL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_CONTROL_ID", DbType=System.Data.DbType.String),
	    ]
        public int PaymentControlId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentControlId];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentControlId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestCode.
		/// </summary>
		/// <value>Propiedad PaymentRequestCode.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_REQUEST_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentRequestCode
	    {
		    get
		    {
			    return this._paymentRequestCode;
		    }
		    set
		    {
				this._paymentRequestCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AppSource.
		/// </summary>
		/// <value>Propiedad AppSource.</value>
	    [
		DescriptionKey("APP_SOURCE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="APP_SOURCE", DbType=System.Data.DbType.String),
	    ]
        public int AppSource
	    {
		    get
		    {
			    return this._appSource;
		    }
		    set
		    {
				this._appSource = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentOrigin.
		/// </summary>
		/// <value>Propiedad PaymentOrigin.</value>
	    [
		DescriptionKey("PAYMENT_ORIGIN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_ORIGIN", DbType=System.Data.DbType.String),
	    ]
        public int PaymentOrigin
	    {
		    get
		    {
			    return this._paymentOrigin;
		    }
		    set
		    {
				this._paymentOrigin = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Action.
		/// </summary>
		/// <value>Propiedad Action.</value>
	    [
		DescriptionKey("ACTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACTION", DbType=System.Data.DbType.String),
	    ]
        public string Action
	    {
		    get
		    {
			    return this._action;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Action);
				}
				this._action = value;
			}
	    }

    }
}