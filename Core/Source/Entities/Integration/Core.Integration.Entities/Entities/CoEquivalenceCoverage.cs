/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Integration.Entities.CoEquivalenceCoverage.dict v1.0
 * FileSize=7353 Header=272 CRC=2877378766
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Integration.Entities
{
    /// <summary>
    /// Definición de entidad CoEquivalenceCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Integration.Entities.CoEquivalenceCoverage.dict"),
    Serializable(),
    DescriptionKey("CO_EQUIVALENCE_COVERAGE_ENTITY"),
    TableMap(TableName="CO_EQUIVALENCE_COVERAGE", Schema="INT"),
    ]
    public partial class CoEquivalenceCoverage :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Coverage3gId = "Coverage3gId";
			public static readonly string Coverage2gId = "Coverage2gId";
			public static readonly string InsuredObject3gId = "InsuredObject3gId";
			public static readonly string InsuredObject2gId = "InsuredObject2gId";
			public static readonly string ProductId = "ProductId";
			public static readonly string SubLineBusinessCode = "SubLineBusinessCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="coverage3gId">Propiedad clave Coverage3gId.</param>
		/// <param name="coverage2gId">Propiedad clave Coverage2gId.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int coverage3gId, int coverage2gId, int productId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Coverage3gId, coverage3gId);
		    keys.Add(Properties.Coverage2gId, coverage2gId);
		    keys.Add(Properties.ProductId, productId);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="coverage3gId">Propiedad clave Coverage3gId.</param>
		/// <param name="coverage2gId">Propiedad clave Coverage2gId.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Coverage3gId, null);
            keys.Add(Properties.Coverage2gId, null);
            keys.Add(Properties.ProductId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="coverage3gId">Propiedad clave Coverage3gId.</param>
        /// <param name="coverage2gId">Propiedad clave Coverage2gId.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        public static PrimaryKey CreatePrimaryKey(int coverage3gId, int coverage2gId, int productId)
	    {
			return InternalCreatePrimaryKey<CoEquivalenceCoverage>(coverage3gId, coverage2gId, productId);
		}

        /// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="coverage3gId">Propiedad clave Coverage3gId.</param>
		/// <param name="coverage2gId">Propiedad clave Coverage2gId.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CoEquivalenceCoverage>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad InsuredObject3gId.
        /// </summary>
        private int _insuredObject3gId;
		/// <summary>
		/// Atributo para la propiedad InsuredObject2gId.
		/// </summary>
        private int? _insuredObject2gId = null;
		/// <summary>
		/// Atributo para la propiedad SubLineBusinessCode.
		/// </summary>
        private int? _subLineBusinessCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="coverage3gId">Coverage3gId key property.</param>
		/// <param name="coverage2gId">Coverage2gId key property.</param>
		/// <param name="productId">ProductId key property.</param>
	    public CoEquivalenceCoverage(int coverage3gId, int coverage2gId, int productId):
			this(CoEquivalenceCoverage.CreatePrimaryKey(coverage3gId, coverage2gId, productId), null)
	    {
	    }

        /// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="coverage3gId">Coverage3gId key property.</param>
		/// <param name="coverage2gId">Coverage2gId key property.</param>
		/// <param name="productId">ProductId key property.</param>
	    public CoEquivalenceCoverage() :
            this(CoEquivalenceCoverage.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoEquivalenceCoverage(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Coverage3gId.
		/// </summary>
		/// <value>Propiedad Coverage3gId.</value>
	    [
		DescriptionKey("COVERAGE3G_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_3G_ID", DbType=System.Data.DbType.String),
	    ]
        public int Coverage3gId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Coverage3gId];
		    }
		    set
		    {
				this._primaryKey[Properties.Coverage3gId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Coverage2gId.
		/// </summary>
		/// <value>Propiedad Coverage2gId.</value>
	    [
		DescriptionKey("COVERAGE2G_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_2G_ID", DbType=System.Data.DbType.String),
	    ]
        public int Coverage2gId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Coverage2gId];
		    }
		    set
		    {
				this._primaryKey[Properties.Coverage2gId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredObject3gId.
		/// </summary>
		/// <value>Propiedad InsuredObject3gId.</value>
	    [
		DescriptionKey("INSURED_OBJECT3G_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INSURED_OBJECT_3G_ID", DbType=System.Data.DbType.String),
	    ]
        public int InsuredObject3gId
	    {
		    get
		    {
			    return this._insuredObject3gId;
		    }
		    set
		    {
				this._insuredObject3gId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredObject2gId.
		/// </summary>
		/// <value>Propiedad InsuredObject2gId.</value>
	    [
		DescriptionKey("INSURED_OBJECT2G_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_OBJECT_2G_ID", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredObject2gId
	    {
		    get
		    {
			    return this._insuredObject2gId;
		    }
		    set
		    {
				this._insuredObject2gId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProductId.
		/// </summary>
		/// <value>Propiedad ProductId.</value>
	    [
		DescriptionKey("PRODUCT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PRODUCT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProductId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ProductId];
		    }
		    set
		    {
				this._primaryKey[Properties.ProductId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SubLineBusinessCode.
		/// </summary>
		/// <value>Propiedad SubLineBusinessCode.</value>
	    [
		DescriptionKey("SUB_LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SUB_LINE_BUSINESS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SubLineBusinessCode
	    {
		    get
		    {
			    return this._subLineBusinessCode;
		    }
		    set
		    {
				this._subLineBusinessCode = value;
			}
	    }

    }
}