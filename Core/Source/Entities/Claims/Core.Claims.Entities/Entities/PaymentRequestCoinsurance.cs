/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Claims.PaymentRequestCoinsurance.dict v1.0
 * FileSize=9184 Header=262 CRC=3041767357
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Claims.Entities
{
    /// <summary>
    /// Definición de entidad PaymentRequestCoinsurance.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Claims.PaymentRequestCoinsurance.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_REQUEST_COINSURANCE_ENTITY"),
    TableMap(TableName="PAYMENT_REQUEST_COINSURANCE", Schema="PAYM"),
    ]
    public partial class PaymentRequestCoinsurance :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentRequestCode = "PaymentRequestCode";
			public static readonly string CompanyCode = "CompanyCode";
            public static readonly string CoverageCode = "CoverageCode";
            public static readonly string TypePaymentRequestCode = "TypePaymentRequestCode";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string Number = "Number";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string Amount = "Amount";
			public static readonly string PartCiaPercentage = "PartCiaPercentage";
			public static readonly string UserId = "UserId";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentRequestCode">Propiedad clave PaymentRequestCode.</param>
		/// <param name="companyCode">Propiedad clave CompanyCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentRequestCode, int companyCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentRequestCode, paymentRequestCode);
		    keys.Add(Properties.CompanyCode, companyCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentRequestCode">Propiedad clave PaymentRequestCode.</param>
		/// <param name="companyCode">Propiedad clave CompanyCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentRequestCode, int companyCode)
	    {
			return InternalCreatePrimaryKey<PaymentRequestCoinsurance>(paymentRequestCode, companyCode);
		}
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TypePaymentRequestCode.
        /// </summary>
        private int? _typePaymentRequestCode = null;
        /// <summary>
        /// Atributo para la propiedad CoverageCode.
        /// </summary>
        private int? _coverageCode = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad Number.
		/// </summary>
        private int? _number = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad PartCiaPercentage.
		/// </summary>
        private decimal? _partCiaPercentage = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentRequestCode">PaymentRequestCode key property.</param>
		/// <param name="companyCode">CompanyCode key property.</param>
	    public PaymentRequestCoinsurance(int paymentRequestCode, int companyCode):
			this(PaymentRequestCoinsurance.CreatePrimaryKey(paymentRequestCode, companyCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentRequestCoinsurance(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestCode.
		/// </summary>
		/// <value>Propiedad PaymentRequestCode.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_REQUEST_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public int PaymentRequestCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentRequestCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentRequestCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyCode.
		/// </summary>
		/// <value>Propiedad CompanyCode.</value>
	    [
		DescriptionKey("COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CompanyCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CompanyCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CompanyCode] = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TypePaymentRequestCode.
        /// </summary>
        /// <value>Propiedad TypePaymentRequestCode.</value>
        [
        DescriptionKey("COVERAGE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVERAGE_CD", DbType = System.Data.DbType.String),
        ]
        public int? CoverageCode
        {
            get
            {
                return this._coverageCode;
            }
            set
            {
                this._coverageCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TypePaymentRequestCode.
        /// </summary>
        /// <value>Propiedad TypePaymentRequestCode.</value>
        [
		DescriptionKey("TYPE_PAYMENT_REQUEST_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TYPE_PAYMENT_REQUEST_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TypePaymentRequestCode
	    {
		    get
		    {
			    return this._typePaymentRequestCode;
		    }
		    set
		    {
				this._typePaymentRequestCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Number.
		/// </summary>
		/// <value>Propiedad Number.</value>
	    [
		DescriptionKey("NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? Number
	    {
		    get
		    {
			    return this._number;
		    }
		    set
		    {
				this._number = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PartCiaPercentage.
		/// </summary>
		/// <value>Propiedad PartCiaPercentage.</value>
	    [
		DescriptionKey("PART_CIA_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PART_CIA_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PartCiaPercentage
	    {
		    get
		    {
			    return this._partCiaPercentage;
		    }
		    set
		    {
				this._partCiaPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

    }
}