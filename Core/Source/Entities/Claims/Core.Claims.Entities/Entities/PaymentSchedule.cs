/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Claims.PaymentSchedule.dict v1.0
 * FileSize=6008 Header=253 CRC=1773820911
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Claims.Entities
{
    /// <summary>
    /// Definición de entidad PaymentSchedule.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Claims.PaymentSchedule.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_SCHEDULE_ENTITY"),
    TableMap(TableName="PAYMENT_SCHEDULE", Schema="PAYM"),
    ]
    public partial class PaymentSchedule :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentScheduleCode = "PaymentScheduleCode";
			public static readonly string PaymentPlanCode = "PaymentPlanCode";
			public static readonly string PaymentNum = "PaymentNum";
			public static readonly string NetAmount = "NetAmount";
			public static readonly string ExpirationDate = "ExpirationDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentScheduleCode">Propiedad clave PaymentScheduleCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentScheduleCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentScheduleCode, paymentScheduleCode);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentScheduleCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentScheduleCode">Propiedad clave PaymentScheduleCode.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentScheduleCode)
	    {
			return InternalCreatePrimaryKey<PaymentSchedule>(paymentScheduleCode);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<PaymentSchedule>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentPlanCode.
        /// </summary>
        private int _paymentPlanCode;
		/// <summary>
		/// Atributo para la propiedad PaymentNum.
		/// </summary>
        private int _paymentNum;
		/// <summary>
		/// Atributo para la propiedad NetAmount.
		/// </summary>
        private decimal _netAmount;
		/// <summary>
		/// Atributo para la propiedad ExpirationDate.
		/// </summary>
        private DateTime _expirationDate;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentScheduleCode">PaymentScheduleCode key property.</param>
	    public PaymentSchedule(int paymentScheduleCode):
			this(PaymentSchedule.CreatePrimaryKey(paymentScheduleCode), null)
	    {
	    }

        public PaymentSchedule() :
            this(PaymentSchedule.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PaymentSchedule(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentScheduleCode.
		/// </summary>
		/// <value>Propiedad PaymentScheduleCode.</value>
	    [
		DescriptionKey("PAYMENT_SCHEDULE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_SCHEDULE_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentScheduleCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentScheduleCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentScheduleCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentPlanCode.
		/// </summary>
		/// <value>Propiedad PaymentPlanCode.</value>
	    [
		DescriptionKey("PAYMENT_PLAN_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_PLAN_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentPlanCode
	    {
		    get
		    {
			    return this._paymentPlanCode;
		    }
		    set
		    {
				this._paymentPlanCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentNum.
		/// </summary>
		/// <value>Propiedad PaymentNum.</value>
	    [
		DescriptionKey("PAYMENT_NUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_NUM", DbType=System.Data.DbType.String),
	    ]
        public int PaymentNum
	    {
		    get
		    {
			    return this._paymentNum;
		    }
		    set
		    {
				this._paymentNum = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NetAmount.
		/// </summary>
		/// <value>Propiedad NetAmount.</value>
	    [
		DescriptionKey("NET_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="NET_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal NetAmount
	    {
		    get
		    {
			    return this._netAmount;
		    }
		    set
		    {
				this._netAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExpirationDate.
		/// </summary>
		/// <value>Propiedad ExpirationDate.</value>
	    [
		DescriptionKey("EXPIRATION_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXPIRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime ExpirationDate
	    {
		    get
		    {
			    return this._expirationDate;
		    }
		    set
		    {
				this._expirationDate = value;
			}
	    }

    }
}