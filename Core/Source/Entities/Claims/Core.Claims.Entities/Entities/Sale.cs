/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Claims.Sale.dict v1.0
 * FileSize=9231 Header=240 CRC=989328462
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Claims.Entities
{
    /// <summary>
    /// Definición de entidad Sale.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Claims.Sale.dict"),
    Serializable(),
    DescriptionKey("SALE_ENTITY"),
    TableMap(TableName="SALE", Schema="CLM"),
    ]
    public partial class Sale :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string SaleCode = "SaleCode";
			public static readonly string SalvageCode = "SalvageCode";
			public static readonly string Date = "Date";
			public static readonly string CancellationDate = "CancellationDate";
			public static readonly string Description = "Description";
			public static readonly string SoldQuantity = "SoldQuantity";
			public static readonly string Buyer = "Buyer";
			public static readonly string CancellationReasonCode = "CancellationReasonCode";
			public static readonly string TotalAmount = "TotalAmount";
			public static readonly string PaymentPlanCode = "PaymentPlanCode";
            public static readonly string IsParticipant = "IsParticipant";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="saleCode">Propiedad clave SaleCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int saleCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.SaleCode, saleCode);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SaleCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="saleCode">Propiedad clave SaleCode.</param>
        public static PrimaryKey CreatePrimaryKey(int saleCode)
	    {
			return InternalCreatePrimaryKey<Sale>(saleCode);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Sale>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad SalvageCode.
        /// </summary>
        private int? _salvageCode = null;
		/// <summary>
		/// Atributo para la propiedad Date.
		/// </summary>
        private DateTime? _date = null;
		/// <summary>
		/// Atributo para la propiedad CancellationDate.
		/// </summary>
        private DateTime? _cancellationDate = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad SoldQuantity.
		/// </summary>
        private int? _soldQuantity = null;
		/// <summary>
		/// Atributo para la propiedad Buyer.
		/// </summary>
        private int? _buyer = null;
		/// <summary>
		/// Atributo para la propiedad CancellationReasonCode.
		/// </summary>
        private int? _cancellationReasonCode = null;
		/// <summary>
		/// Atributo para la propiedad TotalAmount.
		/// </summary>
        private decimal? _totalAmount = null;
		/// <summary>
		/// Atributo para la propiedad PaymentPlanCode.
		/// </summary>
        private int? _paymentPlanCode = null;
        /// <summary>
        /// Atributo para la propiedad IsParticipant.
        /// </summary>
        private bool _isParticipant;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="saleCode">SaleCode key property.</param>
        public Sale(int saleCode):
			this(Sale.CreatePrimaryKey(saleCode), null)
	    {
	    }

        public Sale() :
            this(Sale.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Sale(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad SaleCode.
		/// </summary>
		/// <value>Propiedad SaleCode.</value>
	    [
		DescriptionKey("SALE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SALE_CD", DbType=System.Data.DbType.String),
	    ]
        public int SaleCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.SaleCode];
		    }
		    set
		    {
				this._primaryKey[Properties.SaleCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalvageCode.
		/// </summary>
		/// <value>Propiedad SalvageCode.</value>
	    [
		DescriptionKey("SALVAGE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALVAGE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SalvageCode
	    {
		    get
		    {
			    return this._salvageCode;
		    }
		    set
		    {
				this._salvageCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Date.
		/// </summary>
		/// <value>Propiedad Date.</value>
	    [
		DescriptionKey("DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? Date
	    {
		    get
		    {
			    return this._date;
		    }
		    set
		    {
				this._date = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CancellationDate.
		/// </summary>
		/// <value>Propiedad CancellationDate.</value>
	    [
		DescriptionKey("CANCELLATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CANCELLATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CancellationDate
	    {
		    get
		    {
			    return this._cancellationDate;
		    }
		    set
		    {
				this._cancellationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SoldQuantity.
		/// </summary>
		/// <value>Propiedad SoldQuantity.</value>
	    [
		DescriptionKey("SOLD_QUANTITY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SOLD_QTY", DbType=System.Data.DbType.String),
	    ]
        public int? SoldQuantity
	    {
		    get
		    {
			    return this._soldQuantity;
		    }
		    set
		    {
				this._soldQuantity = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Buyer.
		/// </summary>
		/// <value>Propiedad Buyer.</value>
	    [
		DescriptionKey("BUYER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BUYER", DbType=System.Data.DbType.String),
	    ]
        public int? Buyer
	    {
		    get
		    {
			    return this._buyer;
		    }
		    set
		    {
				this._buyer = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CancellationReasonCode.
		/// </summary>
		/// <value>Propiedad CancellationReasonCode.</value>
	    [
		DescriptionKey("CANCELLATION_REASON_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CANCELLATION_REASON_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CancellationReasonCode
	    {
		    get
		    {
			    return this._cancellationReasonCode;
		    }
		    set
		    {
				this._cancellationReasonCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalAmount.
		/// </summary>
		/// <value>Propiedad TotalAmount.</value>
	    [
		DescriptionKey("TOTAL_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalAmount
	    {
		    get
		    {
			    return this._totalAmount;
		    }
		    set
		    {
				this._totalAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentPlanCode.
		/// </summary>
		/// <value>Propiedad PaymentPlanCode.</value>
	    [
		DescriptionKey("PAYMENT_PLAN_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_PLAN_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentPlanCode
	    {
		    get
		    {
			    return this._paymentPlanCode;
		    }
		    set
		    {
				this._paymentPlanCode = value;
			}
	    }

        /// <summary>
		/// Devuelve o setea el valor de la propiedad IsTotalParticipation.
		/// </summary>
		/// <value>Propiedad IsTotalParticipation.</value>
	    [
        DescriptionKey("IS_PARTICIPANT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_PARTICIPANT", DbType = System.Data.DbType.String),
        ]
        public bool IsParticipant
        {
            get
            {
                return this._isParticipant;
            }
            set
            {
                this._isParticipant = value;
            }
        }

    }
}