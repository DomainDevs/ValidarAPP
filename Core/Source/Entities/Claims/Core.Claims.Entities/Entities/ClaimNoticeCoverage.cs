/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Claims.ClaimNoticeCoverage.dict v1.0
 * FileSize=9417 Header=256 CRC=4031720223
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Claims.Entities
{
    /// <summary>
    /// Definición de entidad ClaimNoticeCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Claims.ClaimNoticeCoverage.dict"),
    Serializable(),
    DescriptionKey("CLAIM_NOTICE_COVERAGE_ENTITY"),
    TableMap(TableName="CLAIM_NOTICE_COVERAGE", Schema="CLM"),
    ]
    public partial class ClaimNoticeCoverage :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ClaimNoticeCode = "ClaimNoticeCode";
			public static readonly string RiskNum = "RiskNum";
			public static readonly string CoverNum = "CoverNum";
			public static readonly string CoverageId = "CoverageId";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string IsInsured = "IsInsured";
			public static readonly string EstimateTypeCode = "EstimateTypeCode";
			public static readonly string EstimateAmount = "EstimateAmount";
			public static readonly string IsProspect = "IsProspect";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="claimNoticeCode">Propiedad clave ClaimNoticeCode.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <param name="estimateTypeCode">Propiedad clave EstimateTypeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int claimNoticeCode, int coverageId, int individualId, int estimateTypeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ClaimNoticeCode, claimNoticeCode);
		    keys.Add(Properties.CoverageId, coverageId);
		    keys.Add(Properties.IndividualId, individualId);
		    keys.Add(Properties.EstimateTypeCode, estimateTypeCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="claimNoticeCode">Propiedad clave ClaimNoticeCode.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <param name="estimateTypeCode">Propiedad clave EstimateTypeCode.</param>
		public static PrimaryKey CreatePrimaryKey(int claimNoticeCode, int coverageId, int individualId, int estimateTypeCode)
	    {
			return InternalCreatePrimaryKey<ClaimNoticeCoverage>(claimNoticeCode, coverageId, individualId, estimateTypeCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad RiskNum.
		/// </summary>
        private int _riskNum;
		/// <summary>
		/// Atributo para la propiedad CoverNum.
		/// </summary>
        private int _coverNum;
		/// <summary>
		/// Atributo para la propiedad IsInsured.
		/// </summary>
        private bool _isInsured;
		/// <summary>
		/// Atributo para la propiedad EstimateAmount.
		/// </summary>
        private decimal _estimateAmount;
		/// <summary>
		/// Atributo para la propiedad IsProspect.
		/// </summary>
        private bool _isProspect;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="claimNoticeCode">ClaimNoticeCode key property.</param>
		/// <param name="coverageId">CoverageId key property.</param>
		/// <param name="individualId">IndividualId key property.</param>
		/// <param name="estimateTypeCode">EstimateTypeCode key property.</param>
	    public ClaimNoticeCoverage(int claimNoticeCode, int coverageId, int individualId, int estimateTypeCode):
			this(ClaimNoticeCoverage.CreatePrimaryKey(claimNoticeCode, coverageId, individualId, estimateTypeCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ClaimNoticeCoverage(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimNoticeCode.
		/// </summary>
		/// <value>Propiedad ClaimNoticeCode.</value>
	    [
		DescriptionKey("CLAIM_NOTICE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CLAIM_NOTICE_CD", DbType=System.Data.DbType.String),
	    ]
        public int ClaimNoticeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ClaimNoticeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ClaimNoticeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskNum.
		/// </summary>
		/// <value>Propiedad RiskNum.</value>
	    [
		DescriptionKey("RISK_NUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RISK_NUM", DbType=System.Data.DbType.String),
	    ]
        public int RiskNum
	    {
		    get
		    {
			    return this._riskNum;
		    }
		    set
		    {
				this._riskNum = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverNum.
		/// </summary>
		/// <value>Propiedad CoverNum.</value>
	    [
		DescriptionKey("COVER_NUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COVER_NUM", DbType=System.Data.DbType.String),
	    ]
        public int CoverNum
	    {
		    get
		    {
			    return this._coverNum;
		    }
		    set
		    {
				this._coverNum = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId.
		/// </summary>
		/// <value>Propiedad CoverageId.</value>
	    [
		DescriptionKey("COVERAGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverageId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverageId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsInsured.
		/// </summary>
		/// <value>Propiedad IsInsured.</value>
	    [
		DescriptionKey("IS_INSURED_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_INSURED", DbType=System.Data.DbType.String),
	    ]
        public bool IsInsured
	    {
		    get
		    {
			    return this._isInsured;
		    }
		    set
		    {
				this._isInsured = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimateTypeCode.
		/// </summary>
		/// <value>Propiedad EstimateTypeCode.</value>
	    [
		DescriptionKey("ESTIMATE_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ESTIMATE_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int EstimateTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EstimateTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.EstimateTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimateAmount.
		/// </summary>
		/// <value>Propiedad EstimateAmount.</value>
	    [
		DescriptionKey("ESTIMATE_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ESTIMATE_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal EstimateAmount
	    {
		    get
		    {
			    return this._estimateAmount;
		    }
		    set
		    {
				this._estimateAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsProspect.
		/// </summary>
		/// <value>Propiedad IsProspect.</value>
	    [
		DescriptionKey("IS_PROSPECT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_PROSPECT", DbType=System.Data.DbType.String),
	    ]
        public bool IsProspect
	    {
		    get
		    {
			    return this._isProspect;
		    }
		    set
		    {
				this._isProspect = value;
			}
	    }

    }
}