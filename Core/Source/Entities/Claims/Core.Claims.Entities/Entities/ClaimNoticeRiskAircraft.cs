/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Claims.ClaimNoticeRiskAircraft.dict v1.0
 * FileSize=9286 Header=259 CRC=287532832
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Claims.Entities
{
    /// <summary>
    /// Definición de entidad ClaimNoticeRiskAircraft.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Claims.ClaimNoticeRiskAircraft.dict"),
    Serializable(),
    DescriptionKey("CLAIM_NOTICE_RISK_AIRCRAFT_ENTITY"),
    TableMap(TableName="CLAIM_NOTICE_RISK_AIRCRAFT", Schema="CLM"),
    ]
    public partial class ClaimNoticeRiskAircraft :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ClaimNoticeCode = "ClaimNoticeCode";
			public static readonly string AircraftMakeCode = "AircraftMakeCode";
			public static readonly string AircraftModelCode = "AircraftModelCode";
			public static readonly string AircraftTypeCode = "AircraftTypeCode";
			public static readonly string AircraftUseCode = "AircraftUseCode";
			public static readonly string AircraftRegisterCode = "AircraftRegisterCode";
			public static readonly string AircraftOperatorCode = "AircraftOperatorCode";
			public static readonly string AircraftYear = "AircraftYear";
			public static readonly string AircraftRegisterNo = "AircraftRegisterNo";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="claimNoticeCode">Propiedad clave ClaimNoticeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int claimNoticeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ClaimNoticeCode, claimNoticeCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="claimNoticeCode">Propiedad clave ClaimNoticeCode.</param>
		public static PrimaryKey CreatePrimaryKey(int claimNoticeCode)
	    {
			return InternalCreatePrimaryKey<ClaimNoticeRiskAircraft>(claimNoticeCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AircraftMakeCode.
		/// </summary>
        private int? _aircraftMakeCode = null;
		/// <summary>
		/// Atributo para la propiedad AircraftModelCode.
		/// </summary>
        private int? _aircraftModelCode = null;
		/// <summary>
		/// Atributo para la propiedad AircraftTypeCode.
		/// </summary>
        private int? _aircraftTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad AircraftUseCode.
		/// </summary>
        private int? _aircraftUseCode = null;
		/// <summary>
		/// Atributo para la propiedad AircraftRegisterCode.
		/// </summary>
        private int? _aircraftRegisterCode = null;
		/// <summary>
		/// Atributo para la propiedad AircraftOperatorCode.
		/// </summary>
        private int? _aircraftOperatorCode = null;
		/// <summary>
		/// Atributo para la propiedad AircraftYear.
		/// </summary>
        private int? _aircraftYear = null;
		/// <summary>
		/// Atributo para la propiedad AircraftRegisterNo.
		/// </summary>
        private string _aircraftRegisterNo = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="claimNoticeCode">ClaimNoticeCode key property.</param>
	    public ClaimNoticeRiskAircraft(int claimNoticeCode):
			this(ClaimNoticeRiskAircraft.CreatePrimaryKey(claimNoticeCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ClaimNoticeRiskAircraft(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimNoticeCode.
		/// </summary>
		/// <value>Propiedad ClaimNoticeCode.</value>
	    [
		DescriptionKey("CLAIM_NOTICE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CLAIM_NOTICE_CD", DbType=System.Data.DbType.String),
	    ]
        public int ClaimNoticeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ClaimNoticeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ClaimNoticeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftMakeCode.
		/// </summary>
		/// <value>Propiedad AircraftMakeCode.</value>
	    [
		DescriptionKey("AIRCRAFT_MAKE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_MAKE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AircraftMakeCode
	    {
		    get
		    {
			    return this._aircraftMakeCode;
		    }
		    set
		    {
				this._aircraftMakeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftModelCode.
		/// </summary>
		/// <value>Propiedad AircraftModelCode.</value>
	    [
		DescriptionKey("AIRCRAFT_MODEL_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_MODEL_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AircraftModelCode
	    {
		    get
		    {
			    return this._aircraftModelCode;
		    }
		    set
		    {
				this._aircraftModelCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftTypeCode.
		/// </summary>
		/// <value>Propiedad AircraftTypeCode.</value>
	    [
		DescriptionKey("AIRCRAFT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AircraftTypeCode
	    {
		    get
		    {
			    return this._aircraftTypeCode;
		    }
		    set
		    {
				this._aircraftTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftUseCode.
		/// </summary>
		/// <value>Propiedad AircraftUseCode.</value>
	    [
		DescriptionKey("AIRCRAFT_USE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_USE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AircraftUseCode
	    {
		    get
		    {
			    return this._aircraftUseCode;
		    }
		    set
		    {
				this._aircraftUseCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftRegisterCode.
		/// </summary>
		/// <value>Propiedad AircraftRegisterCode.</value>
	    [
		DescriptionKey("AIRCRAFT_REGISTER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_REGISTER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AircraftRegisterCode
	    {
		    get
		    {
			    return this._aircraftRegisterCode;
		    }
		    set
		    {
				this._aircraftRegisterCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftOperatorCode.
		/// </summary>
		/// <value>Propiedad AircraftOperatorCode.</value>
	    [
		DescriptionKey("AIRCRAFT_OPERATOR_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_OPERATOR_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AircraftOperatorCode
	    {
		    get
		    {
			    return this._aircraftOperatorCode;
		    }
		    set
		    {
				this._aircraftOperatorCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftYear.
		/// </summary>
		/// <value>Propiedad AircraftYear.</value>
	    [
		DescriptionKey("AIRCRAFT_YEAR_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_YEAR", DbType=System.Data.DbType.String),
	    ]
        public int? AircraftYear
	    {
		    get
		    {
			    return this._aircraftYear;
		    }
		    set
		    {
				this._aircraftYear = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftRegisterNo.
		/// </summary>
		/// <value>Propiedad AircraftRegisterNo.</value>
	    [
		DescriptionKey("AIRCRAFT_REGISTER_NO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AIRCRAFT_REGISTER_NO", DbType=System.Data.DbType.String),
	    ]
        public string AircraftRegisterNo
	    {
		    get
		    {
			    return this._aircraftRegisterNo;
		    }
		    set
		    {
				this._aircraftRegisterNo = value;
			}
	    }

    }
}