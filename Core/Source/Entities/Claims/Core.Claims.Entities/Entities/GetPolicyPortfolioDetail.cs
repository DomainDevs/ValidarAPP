/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Claims.GetPolicyPortfolioDetail.dict v1.0
 * FileSize=8425 Header=277 CRC=442537538
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Claims.Entities
{
    /// <summary>
    /// Definición de entidad GetPolicyPortfolioDetail.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Claims.GetPolicyPortfolioDetail.dict"),
    Serializable(),
    DescriptionKey("GET_POLICY_PORTFOLIO_DETAIL_ENTITY"),
    TableMap(TableName = "GET_POLICY_PORTFOLIO_DETAIL", Schema = "CLM"),
    ]
    public partial class GetPolicyPortfolioDetail :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PolicyId = "PolicyId";
            public static readonly string PaymentNum = "PaymentNum";
            public static readonly string PaymentAmount = "PaymentAmount";
            public static readonly string PayExpDate = "PayExpDate";
            public static readonly string PaymentDate = "PaymentDate";
            public static readonly string PaidAmount = "PaidAmount";
            public static readonly string StatusPayment = "StatusPayment";
            public static readonly string Number = "Number";
            public static readonly string Description = "Description";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<GetPolicyPortfolioDetail>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PolicyId.
        /// </summary>
        private int? _policyId = null;
        /// <summary>
        /// Atributo para la propiedad PaymentNum.
        /// </summary>
        private int? _paymentNum = null;
        /// <summary>
        /// Atributo para la propiedad PaymentAmount.
        /// </summary>
        private decimal? _paymentAmount = null;
        /// <summary>
        /// Atributo para la propiedad PayExpDate.
        /// </summary>
        private DateTime _payExpDate;
        /// <summary>
        /// Atributo para la propiedad PaymentDate.
        /// </summary>
        private DateTime? _paymentDate = null;
        /// <summary>
        /// Atributo para la propiedad PaidAmount.
        /// </summary>
        private decimal? _paidAmount = null;
        /// <summary>
        /// Atributo para la propiedad StatusPayment.
        /// </summary>
        private string _statusPayment = null;
        /// <summary>
        /// Atributo para la propiedad Number.
        /// </summary>
        private int? _number = null;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public GetPolicyPortfolioDetail() :
            this(GetPolicyPortfolioDetail.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public GetPolicyPortfolioDetail(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int? PolicyId
        {
            get
            {
                return this._policyId;
            }
            set
            {
                this._policyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentNum.
        /// </summary>
        /// <value>Propiedad PaymentNum.</value>
        [
        DescriptionKey("PAYMENT_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_NUM", DbType = System.Data.DbType.String),
        ]
        public int? PaymentNum
        {
            get
            {
                return this._paymentNum;
            }
            set
            {
                this._paymentNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentAmount.
        /// </summary>
        /// <value>Propiedad PaymentAmount.</value>
        [
        DescriptionKey("PAYMENT_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PaymentAmount
        {
            get
            {
                return this._paymentAmount;
            }
            set
            {
                this._paymentAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PayExpDate.
        /// </summary>
        /// <value>Propiedad PayExpDate.</value>
        [
        DescriptionKey("PAY_EXP_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAY_EXP_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime PayExpDate
        {
            get
            {
                return this._payExpDate;
            }
            set
            {
                this._payExpDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentDate.
        /// </summary>
        /// <value>Propiedad PaymentDate.</value>
        [
        DescriptionKey("PAYMENT_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? PaymentDate
        {
            get
            {
                return this._paymentDate;
            }
            set
            {
                this._paymentDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaidAmount.
        /// </summary>
        /// <value>Propiedad PaidAmount.</value>
        [
        DescriptionKey("PAID_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAID_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PaidAmount
        {
            get
            {
                return this._paidAmount;
            }
            set
            {
                this._paidAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StatusPayment.
        /// </summary>
        /// <value>Propiedad StatusPayment.</value>
        [
        DescriptionKey("STATUS_PAYMENT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATUS_PAYMENT", DbType = System.Data.DbType.String),
        ]
        public string StatusPayment
        {
            get
            {
                return this._statusPayment;
            }
            set
            {
                this._statusPayment = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Number.
        /// </summary>
        /// <value>Propiedad Number.</value>
        [
        DescriptionKey("NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NUMBER", DbType = System.Data.DbType.String),
        ]
        public int? Number
        {
            get
            {
                return this._number;
            }
            set
            {
                this._number = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

    }
}