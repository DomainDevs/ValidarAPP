/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Claims.ClaimCoverageDriverInformation.dict v1.0
 * FileSize=8220 Header=267 CRC=1590964827
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Claims.Entities
{
    /// <summary>
    /// Definición de entidad ClaimCoverageDriverInformation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Claims.ClaimCoverageDriverInformation.dict"),
    Serializable(),
    DescriptionKey("CLAIM_COVERAGE_DRIVER_INFORMATION_ENTITY"),
    TableMap(TableName = "CLAIM_COVERAGE_DRIVER_INFORMATION", Schema = "CLM"),
    ]
    public partial class ClaimCoverageDriverInformation :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ClaimCoverageCode = "ClaimCoverageCode";
            public static readonly string LicenseType = "LicenseType";
            public static readonly string LicenseNumber = "LicenseNumber";
            public static readonly string LicenseValidThru = "LicenseValidThru";
            public static readonly string Age = "Age";
            public static readonly string DocumentTypeCode = "DocumentTypeCode";
            public static readonly string DocumentNumber = "DocumentNumber";
            public static readonly string Name = "Name";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="claimCoverageCode">Propiedad clave ClaimCoverageCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int claimCoverageCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ClaimCoverageCode, claimCoverageCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="claimCoverageCode">Propiedad clave ClaimCoverageCode.</param>
        public static PrimaryKey CreatePrimaryKey(int claimCoverageCode)
        {
            return InternalCreatePrimaryKey<ClaimCoverageDriverInformation>(claimCoverageCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad LicenseType.
        /// </summary>
        private string _licenseType = null;
        /// <summary>
        /// Atributo para la propiedad LicenseNumber.
        /// </summary>
        private string _licenseNumber = null;
        /// <summary>
        /// Atributo para la propiedad LicenseValidThru.
        /// </summary>
        private DateTime? _licenseValidThru = null;
        /// <summary>
        /// Atributo para la propiedad Age.
        /// </summary>
        private int? _age = null;
        /// <summary>
        /// Atributo para la propiedad DocumentTypeCode.
        /// </summary>
        private int? _documentTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad DocumentNumber.
        /// </summary>
        private string _documentNumber = null;
        /// <summary>
        /// Atributo para la propiedad Name.
        /// </summary>
        private string _name = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="claimCoverageCode">ClaimCoverageCode key property.</param>
        public ClaimCoverageDriverInformation(int claimCoverageCode) :
            this(ClaimCoverageDriverInformation.CreatePrimaryKey(claimCoverageCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ClaimCoverageDriverInformation(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClaimCoverageCode.
        /// </summary>
        /// <value>Propiedad ClaimCoverageCode.</value>
        [
        DescriptionKey("CLAIM_COVERAGE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CLAIM_COVERAGE_CD", DbType = System.Data.DbType.String),
        ]
        public int ClaimCoverageCode
        {
            get
            {
                return (int)this._primaryKey[Properties.ClaimCoverageCode];
            }
            set
            {
                this._primaryKey[Properties.ClaimCoverageCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicenseType.
        /// </summary>
        /// <value>Propiedad LicenseType.</value>
        [
        DescriptionKey("LICENSE_TYPE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LICENSE_TYPE", DbType = System.Data.DbType.String),
        ]
        public string LicenseType
        {
            get
            {
                return this._licenseType;
            }
            set
            {
                this._licenseType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicenseNumber.
        /// </summary>
        /// <value>Propiedad LicenseNumber.</value>
        [
        DescriptionKey("LICENSE_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LICENSE_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string LicenseNumber
        {
            get
            {
                return this._licenseNumber;
            }
            set
            {
                this._licenseNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicenseValidThru.
        /// </summary>
        /// <value>Propiedad LicenseValidThru.</value>
        [
        DescriptionKey("LICENSE_VALID_THRU_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LICENSE_VALID_THRU", DbType = System.Data.DbType.String),
        ]
        public DateTime? LicenseValidThru
        {
            get
            {
                return this._licenseValidThru;
            }
            set
            {
                this._licenseValidThru = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Age.
        /// </summary>
        /// <value>Propiedad Age.</value>
        [
        DescriptionKey("AGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AGE", DbType = System.Data.DbType.String),
        ]
        public int? Age
        {
            get
            {
                return this._age;
            }
            set
            {
                this._age = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentTypeCode.
        /// </summary>
        /// <value>Propiedad DocumentTypeCode.</value>
        [
        DescriptionKey("DOCUMENT_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DOCUMENT_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? DocumentTypeCode
        {
            get
            {
                return this._documentTypeCode;
            }
            set
            {
                this._documentTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentNumber.
        /// </summary>
        /// <value>Propiedad DocumentNumber.</value>
        [
        DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DOCUMENT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string DocumentNumber
        {
            get
            {
                return this._documentNumber;
            }
            set
            {
                this._documentNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Name.
        /// </summary>
        /// <value>Propiedad Name.</value>
        [
        DescriptionKey("NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NAME", DbType = System.Data.DbType.String),
        ]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                this._name = value;
            }
        }

    }
}