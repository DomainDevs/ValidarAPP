/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Audit.LogAudit.dict v1.0
 * FileSize=9555 Header=244 CRC=3814996289
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Audit.Entities
{
    /// <summary>
    /// Definición de entidad LogAudit.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Audit.LogAudit.dict"),
    Serializable(),
    DescriptionKey("LOG_AUDIT_ENTITY"),
    TableMap(TableName = "LOG_AUDIT", Schema = "AUD"),
    ]
    public partial class LogAudit :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string UserId = "UserId";
            public static readonly string RegisterDate = "RegisterDate";
            public static readonly string ObjectCode = "ObjectCode";
            public static readonly string ObjectDescription = "ObjectDescription";
            public static readonly string ObjectType = "ObjectType";
            public static readonly string Data = "Data";
            public static readonly string Pk = "PK";
            public static readonly string TypeCode = "TypeCode";
            public static readonly string IsSerialize = "IsSerialize";
            public static readonly string ColumnName = "ColumnName";
            public static readonly string TypeSerializeCode = "TypeSerializeCode";
            public static readonly string IpDescription = "IpDescription";
            public static readonly string ColumnDescription = "ColumnDescription";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(long id)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(long id)
        {
            return InternalCreatePrimaryKey<LogAudit>(id);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int? _userId = null;
        /// <summary>
        /// Atributo para la propiedad RegisterDate.
        /// </summary>
        private DateTime _registerDate;
        /// <summary>
        /// Atributo para la propiedad ObjectCode.
        /// </summary>
        private int? _objectCode = null;
        /// <summary>
        /// Atributo para la propiedad ObjectDescription.
        /// </summary>
        private string _objectDescription = null;
        /// <summary>
        /// Atributo para la propiedad ObjectType.
        /// </summary>
        private string _objectType = null;
        /// <summary>
        /// Atributo para la propiedad Data.
        /// </summary>
        private string _data = null;
        /// <summary>
        /// Atributo para la propiedad PrimaryKey.
        /// </summary>
        private string _pk = null;
        /// <summary>
        /// Atributo para la propiedad TypeCode.
        /// </summary>
        private int? _typeCode = null;
        /// <summary>
        /// Atributo para la propiedad IsSerialize.
        /// </summary>
        private bool _isSerialize;
        /// <summary>
        /// Atributo para la propiedad ColumnName.
        /// </summary>
        private string _columnName = null;
        /// <summary>
        /// Atributo para la propiedad IpDescription.
        /// </summary>
        private string _ipDescription = null;

        /// <summary>
		/// Atributo para la propiedad TypeSerializeCode.
		/// </summary>
        private int? _typeSerializeCode = null;
        /// <summary>
        /// Atributo para la propiedad IpDescription.
        /// </summary>


        private int _packageId;

        /// <summary>
        /// Atributo para la propiedad ColumnDescription.
        /// </summary>
        private string _columnDescription = null;

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public LogAudit(long id) :
            this(LogAudit.CreatePrimaryKey(id), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public LogAudit(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID", DbType = System.Data.DbType.String),
        ]
        public long Id
        {
            get
            {
                return (long)this._primaryKey[Properties.Id];
            }
            set
            {
                this._primaryKey[Properties.Id] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RegisterDate.
        /// </summary>
        /// <value>Propiedad RegisterDate.</value>
        [
        DescriptionKey("REGISTER_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REGISTER_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime RegisterDate
        {
            get
            {
                return this._registerDate;
            }
            set
            {
                this._registerDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ObjectCode.
        /// </summary>
        /// <value>Propiedad ObjectCode.</value>
        [
        DescriptionKey("OBJECT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OBJECT_CD", DbType = System.Data.DbType.Int32),
        ]
        public int? ObjectCode
        {
            get
            {
                return this._objectCode;
            }
            set
            {
                this._objectCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ObjectDescription.
        /// </summary>
        /// <value>Propiedad ObjectDescription.</value>
        [
        DescriptionKey("OBJECT_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OBJECT_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string ObjectDescription
        {
            get
            {
                return this._objectDescription;
            }
            set
            {
                this._objectDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ObjectType.
        /// </summary>
        /// <value>Propiedad ObjectType.</value>
        [
        DescriptionKey("OBJECT_TYPE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OBJECT_TYPE", DbType = System.Data.DbType.String),
        ]
        public string ObjectType
        {
            get
            {
                return this._objectType;
            }
            set
            {
                this._objectType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Data.
        /// </summary>
        /// <value>Propiedad Data.</value>
        [
        DescriptionKey("DATA_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DATA", DbType = System.Data.DbType.String),
        ]
        public string Data
        {
            get
            {
                return this._data;
            }
            set
            {
                this._data = value;
            }
        }
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PK.
        /// </summary>
        /// <value>Propiedad PK.</value>
        [
        DescriptionKey("PK_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PK", DbType = System.Data.DbType.String),
        ]
        public string PK
        {
            get
            {
                return this._pk;
            }
            set
            {
                this._pk = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TypeCode.
        /// </summary>
        /// <value>Propiedad TypeCode.</value>
        [
        DescriptionKey("TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? TypeCode
        {
            get
            {
                return this._typeCode;
            }
            set
            {
                this._typeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsSerialize.
        /// </summary>
        /// <value>Propiedad IsSerialize.</value>
        [
        DescriptionKey("IS_SERIALIZE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_SERIALIZE", DbType = System.Data.DbType.String),
        ]
        public bool IsSerialize
        {
            get
            {
                return this._isSerialize;
            }
            set
            {
                this._isSerialize = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ColumnName.
        /// </summary>
        /// <value>Propiedad ColumnName.</value>
        [
        DescriptionKey("COLUMN_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COLUMN_NAME", DbType = System.Data.DbType.String),
        ]
        public string ColumnName
        {
            get
            {
                return this._columnName;
            }
            set
            {
                this._columnName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TypeSerializeCode.
        /// </summary>
        /// <value>Propiedad TypeSerializeCode.</value>
        [
        DescriptionKey("TYPE_SERIALIZE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TYPE_SERIALIZE_CD", DbType = System.Data.DbType.String),
        ]
        public int? TypeSerializeCode
        {
            get
            {
                return this._typeSerializeCode;
            }
            set
            {
                this._typeSerializeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IpDescription.
        /// </summary>
        /// <value>Propiedad IpDescription.</value>
        [
        DescriptionKey("IP_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IP_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string IpDescription
        {
            get
            {
                return this._ipDescription;
            }
            set
            {
                this._ipDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ColumnDescription.
        /// </summary>
        /// <value>Propiedad ColumnDescription.</value>
        [
        DescriptionKey("COLUMN_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COLUMN_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string ColumnDescription
        {
            get
            {
                return this._columnDescription;
            }
            set
            {
                this._columnDescription = value;
            }
        }
    }
}