/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.OperationType.dict v1.0
 * FileSize=4118 Header=254 CRC=2320026601
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad OperationType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.OperationType.dict"),
    Serializable(),
    DescriptionKey("OPERATION_TYPE_ENTITY"),
    TableMap(TableName="OPERATION_TYPE", Schema="PARAM"),
    ]
    public partial class OperationType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string OperationTypeCode = "OperationTypeCode";
			public static readonly string SmallDescription = "SmallDescription";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="operationTypeCode">Propiedad clave OperationTypeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int operationTypeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.OperationTypeCode, operationTypeCode);

		    return new PrimaryKey<T>(keys);
	    }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.OperationTypeCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="operationTypeCode">Propiedad clave OperationTypeCode.</param>
        public static PrimaryKey CreatePrimaryKey(int operationTypeCode)
	    {
			return InternalCreatePrimaryKey<OperationType>(operationTypeCode);
		}
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<OperationType>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad SmallDescription.
        /// </summary>
        private string _smallDescription = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="operationTypeCode">OperationTypeCode key property.</param>
	    public OperationType(int operationTypeCode):
			this(OperationType.CreatePrimaryKey(operationTypeCode), null)
	    {
	    }
        public OperationType() :
            this(OperationType.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public OperationType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad OperationTypeCode.
		/// </summary>
		/// <value>Propiedad OperationTypeCode.</value>
	    [
		DescriptionKey("OPERATION_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType ="None"),
        ColumnMap(ColumnName="OPERATION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int OperationTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.OperationTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.OperationTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SmallDescription.
		/// </summary>
		/// <value>Propiedad SmallDescription.</value>
	    [
		DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SMALL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SmallDescription
	    {
		    get
		    {
			    return this._smallDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
				}
				this._smallDescription = value;
			}
	    }

    }
}