/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.EstimationTypeStatus.dict v1.0
 * FileSize=4803 Header=260 CRC=131988092
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad EstimationTypeStatus.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.EstimationTypeStatus.dict"),
    Serializable(),
    DescriptionKey("ESTIMATION_TYPE_STATUS_ENTITY"),
    TableMap(TableName = "ESTIMATION_TYPE_STATUS", Schema = "PARAM"),
    ]
    public partial class EstimationTypeStatus :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string EstimationTypeStatusCode = "EstimationTypeStatusCode";
			public static readonly string Description = "Description";
			public static readonly string Enabled = "Enabled";
			public static readonly string InternalStatusCode = "InternalStatusCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="estimationTypeStatusCode">Propiedad clave EstimationTypeStatusCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int estimationTypeStatusCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.EstimationTypeStatusCode, estimationTypeStatusCode);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EstimationTypeStatusCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="estimationTypeStatusCode">Propiedad clave EstimationTypeStatusCode.</param>
        public static PrimaryKey CreatePrimaryKey(int estimationTypeStatusCode)
	    {
			return InternalCreatePrimaryKey<EstimationTypeStatus>(estimationTypeStatusCode);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<EstimationTypeStatus>();
        }

        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad Enabled.
		/// </summary>
        private bool? _enabled;
		/// <summary>
		/// Atributo para la propiedad InternalStatusCode.
		/// </summary>
        private int _internalStatusCode;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="estimationTypeStatusCode">EstimationTypeStatusCode key property.</param>
	    public EstimationTypeStatus(int estimationTypeStatusCode):
			this(EstimationTypeStatus.CreatePrimaryKey(estimationTypeStatusCode), null)
	    {
	    }
        public EstimationTypeStatus() :
            this(EstimationTypeStatus.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public EstimationTypeStatus(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimationTypeStatusCode.
		/// </summary>
		/// <value>Propiedad EstimationTypeStatusCode.</value>
	    [
		DescriptionKey("ESTIMATION_TYPE_STATUS_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName="ESTIMATION_TYPE_STATUS_CD", DbType=System.Data.DbType.String),
	    ]
        public int EstimationTypeStatusCode
        {
            get
            {
                return (int)this._primaryKey[Properties.EstimationTypeStatusCode];
            }
            set
            {
                this._primaryKey[Properties.EstimationTypeStatusCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Enabled.
        /// </summary>
        /// <value>Propiedad Enabled.</value>
        [
        DescriptionKey("ENABLED_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool? Enabled
        {
            get
            {
                return this._enabled;
            }
            set
            {
                this._enabled = value;
            }
        }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InternalStatusCode.
		/// </summary>
		/// <value>Propiedad InternalStatusCode.</value>
	    [
		DescriptionKey("INTERNAL_STATUS_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INTERNAL_STATUS_CD", DbType=System.Data.DbType.String),
	    ]
        public int InternalStatusCode
	    {
		    get
		    {
			    return this._internalStatusCode;
		    }
		    set
		    {
				this._internalStatusCode = value;
			}
	    }

    }
}