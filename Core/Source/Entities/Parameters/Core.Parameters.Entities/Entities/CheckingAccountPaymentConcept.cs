/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.CheckingAccountPaymentConcept.dict v1.0
 * FileSize=10149 Header=275 CRC=1160808934
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad CheckingAccountPaymentConcept.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.CheckingAccountPaymentConcept.dict"),
    Serializable(),
    DescriptionKey("CHECKING_ACCOUNT_PAYMENT_CONCEPT_ENTITY"),
    TableMap(TableName="CHECKING_ACCOUNT_PAYMENT_CONCEPT", Schema="PARAM"),
    ]
    public partial class CheckingAccountPaymentConcept :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CheckingAccountPaymentConceptCode = "CheckingAccountPaymentConceptCode";
			public static readonly string PaymentConceptCode = "PaymentConceptCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string Description = "Description";
			public static readonly string AgentEnabled = "AgentEnabled";
			public static readonly string CoinsuranceEnabled = "CoinsuranceEnabled";
			public static readonly string ReinsuranceEnabled = "ReinsuranceEnabled";
			public static readonly string InsuredEnabled = "InsuredEnabled";
			public static readonly string ItemsEnabled = "ItemsEnabled";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="checkingAccountPaymentConceptCode">Propiedad clave CheckingAccountPaymentConceptCode.</param>
		/// <param name="paymentConceptCode">Propiedad clave PaymentConceptCode.</param>
		/// <param name="branchCode">Propiedad clave BranchCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int checkingAccountPaymentConceptCode, int paymentConceptCode, int branchCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CheckingAccountPaymentConceptCode, checkingAccountPaymentConceptCode);
		    keys.Add(Properties.PaymentConceptCode, paymentConceptCode);
		    keys.Add(Properties.BranchCode, branchCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="checkingAccountPaymentConceptCode">Propiedad clave CheckingAccountPaymentConceptCode.</param>
		/// <param name="paymentConceptCode">Propiedad clave PaymentConceptCode.</param>
		/// <param name="branchCode">Propiedad clave BranchCode.</param>
		public static PrimaryKey CreatePrimaryKey(int checkingAccountPaymentConceptCode, int paymentConceptCode, int branchCode)
	    {
			return InternalCreatePrimaryKey<CheckingAccountPaymentConcept>(checkingAccountPaymentConceptCode, paymentConceptCode, branchCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad AgentEnabled.
		/// </summary>
        private bool? _agentEnabled = null;
		/// <summary>
		/// Atributo para la propiedad CoinsuranceEnabled.
		/// </summary>
        private bool? _coinsuranceEnabled = null;
		/// <summary>
		/// Atributo para la propiedad ReinsuranceEnabled.
		/// </summary>
        private bool? _reinsuranceEnabled = null;
		/// <summary>
		/// Atributo para la propiedad InsuredEnabled.
		/// </summary>
        private bool? _insuredEnabled = null;
		/// <summary>
		/// Atributo para la propiedad ItemsEnabled.
		/// </summary>
        private bool? _itemsEnabled = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="checkingAccountPaymentConceptCode">CheckingAccountPaymentConceptCode key property.</param>
		/// <param name="paymentConceptCode">PaymentConceptCode key property.</param>
		/// <param name="branchCode">BranchCode key property.</param>
	    public CheckingAccountPaymentConcept(int checkingAccountPaymentConceptCode, int paymentConceptCode, int branchCode):
			this(CheckingAccountPaymentConcept.CreatePrimaryKey(checkingAccountPaymentConceptCode, paymentConceptCode, branchCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CheckingAccountPaymentConcept(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckingAccountPaymentConceptCode.
		/// </summary>
		/// <value>Propiedad CheckingAccountPaymentConceptCode.</value>
	    [
		DescriptionKey("CHECKING_ACCOUNT_PAYMENT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, DataName = "CheckingAccountPaymentConceptCode"),
        ColumnMap(ColumnName="CHECKING_ACCOUNT_PAYMENT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int CheckingAccountPaymentConceptCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CheckingAccountPaymentConceptCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CheckingAccountPaymentConceptCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentConceptCode.
		/// </summary>
		/// <value>Propiedad PaymentConceptCode.</value>
	    [
		DescriptionKey("PAYMENT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentConceptCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentConceptCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentConceptCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BranchCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BranchCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentEnabled.
		/// </summary>
		/// <value>Propiedad AgentEnabled.</value>
	    [
		DescriptionKey("AGENT_ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? AgentEnabled
	    {
		    get
		    {
			    return this._agentEnabled;
		    }
		    set
		    {
				this._agentEnabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuranceEnabled.
		/// </summary>
		/// <value>Propiedad CoinsuranceEnabled.</value>
	    [
		DescriptionKey("COINSURANCE_ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURANCE_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? CoinsuranceEnabled
	    {
		    get
		    {
			    return this._coinsuranceEnabled;
		    }
		    set
		    {
				this._coinsuranceEnabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReinsuranceEnabled.
		/// </summary>
		/// <value>Propiedad ReinsuranceEnabled.</value>
	    [
		DescriptionKey("REINSURANCE_ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REINSURANCE_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? ReinsuranceEnabled
	    {
		    get
		    {
			    return this._reinsuranceEnabled;
		    }
		    set
		    {
				this._reinsuranceEnabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredEnabled.
		/// </summary>
		/// <value>Propiedad InsuredEnabled.</value>
	    [
		DescriptionKey("INSURED_ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? InsuredEnabled
	    {
		    get
		    {
			    return this._insuredEnabled;
		    }
		    set
		    {
				this._insuredEnabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ItemsEnabled.
		/// </summary>
		/// <value>Propiedad ItemsEnabled.</value>
	    [
		DescriptionKey("ITEMS_ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ITEMS_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? ItemsEnabled
	    {
		    get
		    {
			    return this._itemsEnabled;
		    }
		    set
		    {
				this._itemsEnabled = value;
			}
	    }

    }
}