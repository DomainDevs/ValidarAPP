/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.CompanyParameter.dict v1.0
 * FileSize=7545 Header=257 CRC=1637804966
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad CompanyParameter.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.CompanyParameter.dict"),
    Serializable(),
    DescriptionKey("COMPANY_PARAMETER_ENTITY"),
    TableMap(TableName = "COMPANY_PARAMETER", Schema = "PARAM"),
    ]
    public partial class CompanyParameter :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CompanyCode = "CompanyCode";
            public static readonly string TradeName = "TradeName";
            public static readonly string SmallTradeName = "SmallTradeName";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string MaxDaysPriorToIss = "MaxDaysPriorToIss";
            public static readonly string MaxDaysSubsToIss = "MaxDaysSubsToIss";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="companyCode">Propiedad clave CompanyCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int companyCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CompanyCode, companyCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="companyCode">Propiedad clave CompanyCode.</param>
        public static PrimaryKey CreatePrimaryKey(int companyCode)
        {
            return InternalCreatePrimaryKey<CompanyParameter>(companyCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TradeName.
        /// </summary>
        private string _tradeName = null;
        /// <summary>
        /// Atributo para la propiedad SmallTradeName.
        /// </summary>
        private string _smallTradeName = null;
        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int _countryCode;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int _currencyCode;
        /// <summary>
        /// Atributo para la propiedad MaxDaysPriorToIss.
        /// </summary>
        private int _maxDaysPriorToIss;
        /// <summary>
        /// Atributo para la propiedad MaxDaysSubsToIss.
        /// </summary>
        private int _maxDaysSubsToIss;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="companyCode">CompanyCode key property.</param>
        public CompanyParameter(int companyCode) :
            this(CompanyParameter.CreatePrimaryKey(companyCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CompanyParameter(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CompanyCode.
        /// </summary>
        /// <value>Propiedad CompanyCode.</value>
        [
        DescriptionKey("COMPANY_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COMPANY_CD", DbType = System.Data.DbType.String),
        ]
        public int CompanyCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CompanyCode];
            }
            set
            {
                this._primaryKey[Properties.CompanyCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TradeName.
        /// </summary>
        /// <value>Propiedad TradeName.</value>
        [
        DescriptionKey("TRADE_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TRADE_NAME", DbType = System.Data.DbType.String),
        ]
        public string TradeName
        {
            get
            {
                return this._tradeName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.TradeName);
                }
                this._tradeName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SmallTradeName.
        /// </summary>
        /// <value>Propiedad SmallTradeName.</value>
        [
        DescriptionKey("SMALL_TRADE_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SMALL_TRADE_NAME", DbType = System.Data.DbType.String),
        ]
        public string SmallTradeName
        {
            get
            {
                return this._smallTradeName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallTradeName);
                }
                this._smallTradeName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int CountryCode
        {
            get
            {
                return this._countryCode;
            }
            set
            {
                this._countryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MaxDaysPriorToIss.
        /// </summary>
        /// <value>Propiedad MaxDaysPriorToIss.</value>
        [
        DescriptionKey("MAX_DAYS_PRIOR_TO_ISS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MAX_DAYS_PRIOR_TO_ISS", DbType = System.Data.DbType.String),
        ]
        public int MaxDaysPriorToIss
        {
            get
            {
                return this._maxDaysPriorToIss;
            }
            set
            {
                this._maxDaysPriorToIss = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MaxDaysSubsToIss.
        /// </summary>
        /// <value>Propiedad MaxDaysSubsToIss.</value>
        [
        DescriptionKey("MAX_DAYS_SUBS_TO_ISS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MAX_DAYS_SUBS_TO_ISS", DbType = System.Data.DbType.String),
        ]
        public int MaxDaysSubsToIss
        {
            get
            {
                return this._maxDaysSubsToIss;
            }
            set
            {
                this._maxDaysSubsToIss = value;
            }
        }

    }
}