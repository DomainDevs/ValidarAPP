/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.GeneralLedger.dict v1.0
 * FileSize=9749 Header=254 CRC=2676458124
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad GeneralLedger.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.GeneralLedger.dict"),
    Serializable(),
    DescriptionKey("GENERAL_LEDGER_ENTITY"),
    TableMap(TableName = "GENERAL_LEDGER", Schema = "PARAM"),
    ]
    public partial class GeneralLedger :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string GeneralLedgerCode = "GeneralLedgerCode";
            public static readonly string AccountingNumber = "AccountingNumber";
            public static readonly string AccountingName = "AccountingName";
            public static readonly string IsMulticurrency = "IsMulticurrency";
            public static readonly string DefaultCurrency = "DefaultCurrency";
            public static readonly string IsMultibranch = "IsMultibranch";
            public static readonly string DefaultBranch = "DefaultBranch";
            public static readonly string BillingEnabled = "BillingEnabled";
            public static readonly string AccountingEnabled = "AccountingEnabled";
            public static readonly string IsOfficialNomenclature = "IsOfficialNomenclature";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="generalLedgerCode">Propiedad clave GeneralLedgerCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int generalLedgerCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.GeneralLedgerCode, generalLedgerCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="generalLedgerCode">Propiedad clave GeneralLedgerCode.</param>
        public static PrimaryKey CreatePrimaryKey(int generalLedgerCode)
        {
            return InternalCreatePrimaryKey<GeneralLedger>(generalLedgerCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad AccountingNumber.
        /// </summary>
        private string _accountingNumber = null;
        /// <summary>
        /// Atributo para la propiedad AccountingName.
        /// </summary>
        private string _accountingName = null;
        /// <summary>
        /// Atributo para la propiedad IsMulticurrency.
        /// </summary>
        private bool _isMulticurrency;
        /// <summary>
        /// Atributo para la propiedad DefaultCurrency.
        /// </summary>
        private int? _defaultCurrency = null;
        /// <summary>
        /// Atributo para la propiedad IsMultibranch.
        /// </summary>
        private bool _isMultibranch;
        /// <summary>
        /// Atributo para la propiedad DefaultBranch.
        /// </summary>
        private int? _defaultBranch = null;
        /// <summary>
        /// Atributo para la propiedad BillingEnabled.
        /// </summary>
        private bool _billingEnabled;
        /// <summary>
        /// Atributo para la propiedad AccountingEnabled.
        /// </summary>
        private bool _accountingEnabled;
        /// <summary>
        /// Atributo para la propiedad IsOfficialNomenclature.
        /// </summary>
        private bool _isOfficialNomenclature;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="generalLedgerCode">GeneralLedgerCode key property.</param>
        public GeneralLedger(int generalLedgerCode) :
            this(GeneralLedger.CreatePrimaryKey(generalLedgerCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public GeneralLedger(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad GeneralLedgerCode.
        /// </summary>
        /// <value>Propiedad GeneralLedgerCode.</value>
        [
        DescriptionKey("GENERAL_LEDGER_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GENERAL_LEDGER_CD", DbType = System.Data.DbType.String),
        ]
        public int GeneralLedgerCode
        {
            get
            {
                return (int)this._primaryKey[Properties.GeneralLedgerCode];
            }
            set
            {
                this._primaryKey[Properties.GeneralLedgerCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingNumber.
        /// </summary>
        /// <value>Propiedad AccountingNumber.</value>
        [
        DescriptionKey("ACCOUNTING_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string AccountingNumber
        {
            get
            {
                return this._accountingNumber;
            }
            set
            {
                this._accountingNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingName.
        /// </summary>
        /// <value>Propiedad AccountingName.</value>
        [
        DescriptionKey("ACCOUNTING_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_NAME", DbType = System.Data.DbType.String),
        ]
        public string AccountingName
        {
            get
            {
                return this._accountingName;
            }
            set
            {
                this._accountingName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMulticurrency.
        /// </summary>
        /// <value>Propiedad IsMulticurrency.</value>
        [
        DescriptionKey("IS_MULTICURRENCY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_MULTICURRENCY", DbType = System.Data.DbType.String),
        ]
        public bool IsMulticurrency
        {
            get
            {
                return this._isMulticurrency;
            }
            set
            {
                this._isMulticurrency = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DefaultCurrency.
        /// </summary>
        /// <value>Propiedad DefaultCurrency.</value>
        [
        DescriptionKey("DEFAULT_CURRENCY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEFAULT_CURRENCY", DbType = System.Data.DbType.String),
        ]
        public int? DefaultCurrency
        {
            get
            {
                return this._defaultCurrency;
            }
            set
            {
                this._defaultCurrency = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMultibranch.
        /// </summary>
        /// <value>Propiedad IsMultibranch.</value>
        [
        DescriptionKey("IS_MULTIBRANCH_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_MULTIBRANCH", DbType = System.Data.DbType.String),
        ]
        public bool IsMultibranch
        {
            get
            {
                return this._isMultibranch;
            }
            set
            {
                this._isMultibranch = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DefaultBranch.
        /// </summary>
        /// <value>Propiedad DefaultBranch.</value>
        [
        DescriptionKey("DEFAULT_BRANCH_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEFAULT_BRANCH", DbType = System.Data.DbType.String),
        ]
        public int? DefaultBranch
        {
            get
            {
                return this._defaultBranch;
            }
            set
            {
                this._defaultBranch = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BillingEnabled.
        /// </summary>
        /// <value>Propiedad BillingEnabled.</value>
        [
        DescriptionKey("BILLING_ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BILLING_ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool BillingEnabled
        {
            get
            {
                return this._billingEnabled;
            }
            set
            {
                this._billingEnabled = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingEnabled.
        /// </summary>
        /// <value>Propiedad AccountingEnabled.</value>
        [
        DescriptionKey("ACCOUNTING_ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ACCOUNTING_ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool AccountingEnabled
        {
            get
            {
                return this._accountingEnabled;
            }
            set
            {
                this._accountingEnabled = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsOfficialNomenclature.
        /// </summary>
        /// <value>Propiedad IsOfficialNomenclature.</value>
        [
        DescriptionKey("IS_OFFICIAL_NOMENCLATURE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_OFFICIAL_NOMENCLATURE", DbType = System.Data.DbType.String),
        ]
        public bool IsOfficialNomenclature
        {
            get
            {
                return this._isOfficialNomenclature;
            }
            set
            {
                this._isOfficialNomenclature = value;
            }
        }

    }
}