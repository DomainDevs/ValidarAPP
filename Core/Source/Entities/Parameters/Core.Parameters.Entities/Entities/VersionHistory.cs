/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.VersionHistory.dict v1.0
 * FileSize=4884 Header=255 CRC=2133418912
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad VersionHistory.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.VersionHistory.dict"),
    Serializable(),
    DescriptionKey("VERSION_HISTORY_ENTITY"),
    TableMap(TableName="VERSION_HISTORY", Schema="PARAM"),
    ]
    public partial class VersionHistory :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string VersionDatetime = "VersionDatetime";
			public static readonly string Guid = "Guid";
			public static readonly string UserId = "UserId";
		}


        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey(int id)
	    {
			return InternalCreatePrimaryKey<VersionHistory>(id);
		}


        /// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<VersionHistory>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad VersionDatetime.
        /// </summary>
        private DateTime _versionDatetime;
		/// <summary>
		/// Atributo para la propiedad Guid.
		/// </summary>
        private string _guid = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="id">Id key property.</param>
	    public VersionHistory(int id):
			this(VersionHistory.CreatePrimaryKey(id), null)
	    {
	    }
        /// <summary>
        /// Constructor de entidad sin parametros<see cref="BusinessConfiguration"/> class.
        /// </summary>
        public VersionHistory()
            : this(VersionHistory.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public VersionHistory(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad VersionDatetime.
		/// </summary>
		/// <value>Propiedad VersionDatetime.</value>
	    [
		DescriptionKey("VERSION_DATETIME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="VERSION_DATETIME", DbType=System.Data.DbType.String),
	    ]
        public DateTime VersionDatetime
	    {
		    get
		    {
			    return this._versionDatetime;
		    }
		    set
		    {
				this._versionDatetime = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Guid.
		/// </summary>
		/// <value>Propiedad Guid.</value>
	    [
		DescriptionKey("GUID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="GUID", DbType=System.Data.DbType.String),
	    ]
        public string Guid
	    {
		    get
		    {
			    return this._guid;
		    }
		    set
		    {
				this._guid = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

    }
}