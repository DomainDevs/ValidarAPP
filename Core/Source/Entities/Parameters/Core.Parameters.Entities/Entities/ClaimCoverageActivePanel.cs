/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.ClaimCoverageActivePanel.dict v1.0
 * FileSize=5444 Header=265 CRC=1344681457
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad ClaimCoverageActivePanel.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.ClaimCoverageActivePanel.dict"),
    Serializable(),
    DescriptionKey("CLAIM_COVERAGE_ACTIVE_PANEL_ENTITY"),
    TableMap(TableName = "CLAIM_COVERAGE_ACTIVE_PANEL", Schema = "PARAM"),
    ]
    public partial class ClaimCoverageActivePanel :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CoverageId = "CoverageId";
            public static readonly string EnabledDriver = "EnabledDriver";
            public static readonly string EnabledThirdPartyVehicle = "EnabledThirdPartyVehicle";
            public static readonly string EnabledThird = "EnabledThird";
            public static readonly string EnabledAffectedProperty = "EnabledAffectedProperty";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="coverageId">Propiedad clave CoverageId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int coverageId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CoverageId, coverageId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="coverageId">Propiedad clave CoverageId.</param>
        public static PrimaryKey CreatePrimaryKey(int coverageId)
        {
            return InternalCreatePrimaryKey<ClaimCoverageActivePanel>(coverageId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad EnabledDriver.
        /// </summary>
        private bool? _enabledDriver = null;
        /// <summary>
        /// Atributo para la propiedad EnabledThirdPartyVehicle.
        /// </summary>
        private bool? _enabledThirdPartyVehicle = null;
        /// <summary>
        /// Atributo para la propiedad EnabledThird.
        /// </summary>
        private bool? _enabledThird = null;
        /// <summary>
        /// Atributo para la propiedad EnabledThird.
        /// </summary>
        private bool? _enabledAffectedProperty = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="coverageId">CoverageId key property.</param>
        public ClaimCoverageActivePanel(int coverageId) :
            this(ClaimCoverageActivePanel.CreatePrimaryKey(coverageId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ClaimCoverageActivePanel(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageId.
        /// </summary>
        /// <value>Propiedad CoverageId.</value>
        [
        DescriptionKey("COVERAGE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int CoverageId
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageId];
            }
            set
            {
                this._primaryKey[Properties.CoverageId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnabledDriver.
        /// </summary>
        /// <value>Propiedad EnabledDriver.</value>
        [
        DescriptionKey("ENABLED_DRIVER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENABLED_DRIVER", DbType = System.Data.DbType.String),
        ]
        public bool? EnabledDriver
        {
            get
            {
                return this._enabledDriver;
            }
            set
            {
                this._enabledDriver = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnabledThirdPartyVehicle.
        /// </summary>
        /// <value>Propiedad EnabledThirdPartyVehicle.</value>
        [
        DescriptionKey("ENABLED_THIRD_PARTY_VEHICLE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENABLED_THIRD_PARTY_VEHICLE", DbType = System.Data.DbType.String),
        ]
        public bool? EnabledThirdPartyVehicle
        {
            get
            {
                return this._enabledThirdPartyVehicle;
            }
            set
            {
                this._enabledThirdPartyVehicle = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnabledThird.
        /// </summary>
        /// <value>Propiedad EnabledThird.</value>
        [
        DescriptionKey("ENABLED_THIRD_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENABLED_THIRD", DbType = System.Data.DbType.String),
        ]
        public bool? EnabledThird
        {
            get
            {
                return this._enabledThird;
            }
            set
            {
                this._enabledThird = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnabledAffectedProperty.
        /// </summary>
        /// <value>Propiedad EnabledAffectedProperty.</value>
        [
        DescriptionKey("ENABLED_AFFECTED_PROPERTY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENABLED_AFFECTED_PROPERTY", DbType = System.Data.DbType.String),
        ]
        public bool? EnabledAffectedProperty
        {
            get
            {
                return this._enabledAffectedProperty;
            }
            set
            {
                this._enabledAffectedProperty = value;
            }
        }

    }
}