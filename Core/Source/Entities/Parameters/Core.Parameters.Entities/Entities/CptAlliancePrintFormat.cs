/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: namespace.CptAlliancePrintFormat.dict v1.0
 * FileSize=6040 Header=237 CRC=3516701418
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad CptAlliancePrintFormat.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.CptAlliancePrintFormat.dict"),
    Serializable(),
    DescriptionKey("CPT_ALLIANCE_PRINT_FORMAT_ENTITY"),
    TableMap(TableName="CPT_ALLIANCE_PRINT_FORMAT", Schema="COMM"),
    ]
    public partial class CptAlliancePrintFormat :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AlliancePrintFormatId = "AlliancePrintFormatId";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string EndoTypeCode = "EndoTypeCode";
			public static readonly string Format = "Format";
			public static readonly string Enable = "Enable";
		}

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static new PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CptAlliancePrintFormat>();
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AlliancePrintFormatId, null);

            return new PrimaryKey<T>(keys);
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="alliancePrintFormatId">Propiedad clave AlliancePrintFormatId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int alliancePrintFormatId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AlliancePrintFormatId, alliancePrintFormatId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="alliancePrintFormatId">Propiedad clave AlliancePrintFormatId.</param>
		public static PrimaryKey CreatePrimaryKey(int alliancePrintFormatId)
	    {
			return InternalCreatePrimaryKey<CptAlliancePrintFormat>(alliancePrintFormatId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad EndoTypeCode.
		/// </summary>
        private int _endoTypeCode;
		/// <summary>
		/// Atributo para la propiedad Format.
		/// </summary>
        private string _format = null;
		/// <summary>
		/// Atributo para la propiedad Enable.
		/// </summary>
        private bool _enable;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="alliancePrintFormatId">AlliancePrintFormatId key property.</param>
	    public CptAlliancePrintFormat(int alliancePrintFormatId):
			this(CptAlliancePrintFormat.CreatePrimaryKey(alliancePrintFormatId), null)
	    {
	    }

        /// <summary>
        /// Constructor de entidad sin parametros<see cref="CptAssistanceText"/> class.
        /// </summary>
        public CptAlliancePrintFormat()
            : this(CreatePrimaryKey(), null)
        {
        }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CptAlliancePrintFormat(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AlliancePrintFormatId.
		/// </summary>
		/// <value>Propiedad AlliancePrintFormatId.</value>
	    [
		DescriptionKey("ALLIANCE_PRINT_FORMAT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ALLIANCE_PRINT_FORMAT_ID", DbType=System.Data.DbType.String),
	    ]
        public int AlliancePrintFormatId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AlliancePrintFormatId];
		    }
		    set
		    {
				this._primaryKey[Properties.AlliancePrintFormatId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndoTypeCode.
		/// </summary>
		/// <value>Propiedad EndoTypeCode.</value>
	    [
		DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDO_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int EndoTypeCode
	    {
		    get
		    {
			    return this._endoTypeCode;
		    }
		    set
		    {
				this._endoTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Format.
		/// </summary>
		/// <value>Propiedad Format.</value>
	    [
		DescriptionKey("FORMAT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FORMAT", DbType=System.Data.DbType.String),
	    ]
        public string Format
	    {
		    get
		    {
			    return this._format;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Format);
				}
				this._format = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Enable.
		/// </summary>
		/// <value>Propiedad Enable.</value>
	    [
		DescriptionKey("ENABLE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENABLE", DbType=System.Data.DbType.String),
	    ]
        public bool Enable
	    {
		    get
		    {
			    return this._enable;
		    }
		    set
		    {
				this._enable = value;
			}
	    }

    }
}