/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.CheckingAccountConceptBranch.dict v1.0
 * FileSize=5416 Header=273 CRC=3099158518
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad CheckingAccountConceptBranch.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.CheckingAccountConceptBranch.dict"),
    Serializable(),
    DescriptionKey("CHECKING_ACCOUNT_CONCEPT_BRANCH_ENTITY"),
    TableMap(TableName="CHECKING_ACCOUNT_CONCEPT_BRANCH", Schema="PARAM"),
    ]
    public partial class CheckingAccountConceptBranch :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CheckingAccountConceptBranchCode = "CheckingAccountConceptBran_940";
			public static readonly string CheCheckingAccountConceptCode = "CheCheckingAccountConceptCode";
			public static readonly string BranchPaymentCode = "BranchPaymentCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="checkingAccountConceptBranchCode">Propiedad clave CheckingAccountConceptBranchCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int checkingAccountConceptBranchCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CheckingAccountConceptBranchCode, checkingAccountConceptBranchCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="checkingAccountConceptBranchCode">Propiedad clave CheckingAccountConceptBranchCode.</param>
		public static PrimaryKey CreatePrimaryKey(int checkingAccountConceptBranchCode)
	    {
			return InternalCreatePrimaryKey<CheckingAccountConceptBranch>(checkingAccountConceptBranchCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CheCheckingAccountConceptCode.
		/// </summary>
        private int? _cheCheckingAccountConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchPaymentCode.
		/// </summary>
        private int? _branchPaymentCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="checkingAccountConceptBranchCode">CheckingAccountConceptBranchCode key property.</param>
	    public CheckingAccountConceptBranch(int checkingAccountConceptBranchCode):
			this(CheckingAccountConceptBranch.CreatePrimaryKey(checkingAccountConceptBranchCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CheckingAccountConceptBranch(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckingAccountConceptBranchCode.
		/// </summary>
		/// <value>Propiedad CheckingAccountConceptBranchCode.</value>
	    [
		DescriptionKey("CHECKING_ACCOUNT_CONCEPT_BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, DataName = "CheckingAccountConceptBran_940"),
        ColumnMap(ColumnName="CHECKING_ACCOUNT_CONCEPT_BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int CheckingAccountConceptBranchCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CheckingAccountConceptBranchCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CheckingAccountConceptBranchCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheCheckingAccountConceptCode.
		/// </summary>
		/// <value>Propiedad CheCheckingAccountConceptCode.</value>
	    [
		DescriptionKey("CHE_CHECKING_ACCOUNT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHE_CHECKING_ACCOUNT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CheCheckingAccountConceptCode
	    {
		    get
		    {
			    return this._cheCheckingAccountConceptCode;
		    }
		    set
		    {
				this._cheCheckingAccountConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchPaymentCode.
		/// </summary>
		/// <value>Propiedad BranchPaymentCode.</value>
	    [
		DescriptionKey("BRANCH_PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchPaymentCode
	    {
		    get
		    {
			    return this._branchPaymentCode;
		    }
		    set
		    {
				this._branchPaymentCode = value;
			}
	    }

    }
}