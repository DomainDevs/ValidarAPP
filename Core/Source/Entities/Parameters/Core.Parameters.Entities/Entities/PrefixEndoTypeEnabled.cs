/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.PrefixEndoTypeEnabled.dict v1.0
 * FileSize=4775 Header=261 CRC=461591168
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad PrefixEndoTypeEnabled.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.PrefixEndoTypeEnabled.dict"),
    Serializable(),
    DescriptionKey("PREFIX_ENDO_TYPE_ENABLED_ENTITY"),
    TableMap(TableName = "PREFIX_ENDO_TYPE_ENABLED", Schema = "PARAM"),
    ]
    public partial class PrefixEndoTypeEnabled :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string EndoTypeCode = "EndoTypeCode";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string IsEnabled = "IsEnabled";
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EndoTypeCode, null);
            keys.Add(Properties.PrefixCode, null);
            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="endoTypeCode">Propiedad clave EndoTypeCode.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int endoTypeCode, int prefixCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EndoTypeCode, endoTypeCode);
            keys.Add(Properties.PrefixCode, prefixCode);

            return new PrimaryKey<T>(keys);
        }
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<PrefixEndoTypeEnabled>();
        }
        

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="endoTypeCode">Propiedad clave EndoTypeCode.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        public static PrimaryKey CreatePrimaryKey(int endoTypeCode, int prefixCode)
        {
            return InternalCreatePrimaryKey<PrefixEndoTypeEnabled>(endoTypeCode, prefixCode);
        }
               

        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IsEnabled.
        /// </summary>
        private bool _isEnabled;
        //*** Object Constructors ********************************
        public PrefixEndoTypeEnabled() :
            this(PrefixEndoTypeEnabled.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="endoTypeCode">EndoTypeCode key property.</param>
        /// <param name="prefixCode">PrefixCode key property.</param>
        public PrefixEndoTypeEnabled(int endoTypeCode, int prefixCode) :
            this(PrefixEndoTypeEnabled.CreatePrimaryKey(endoTypeCode, prefixCode), null)
        {
        }
        
        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PrefixEndoTypeEnabled(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoTypeCode.
        /// </summary>
        /// <value>Propiedad EndoTypeCode.</value>
        [
        DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "ENDO_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int EndoTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.EndoTypeCode];
            }
            set
            {
                this._primaryKey[Properties.EndoTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PrefixCode];
            }
            set
            {
                this._primaryKey[Properties.PrefixCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsEnabled.
        /// </summary>
        /// <value>Propiedad IsEnabled.</value>
        [
        DescriptionKey("IS_ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool IsEnabled
        {
            get
            {
                return this._isEnabled;
            }
            set
            {
                this._isEnabled = value;
            }
        }

    }
}