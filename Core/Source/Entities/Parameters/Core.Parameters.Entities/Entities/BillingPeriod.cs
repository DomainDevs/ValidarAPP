/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Parameters.BillingPeriod.dict v1.0
 * FileSize=4056 Header=254 CRC=4141434237
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Parameters.Entities
{
    /// <summary>
    /// Definición de entidad BillingPeriod.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Parameters.BillingPeriod.dict"),
    Serializable(),
    DescriptionKey("BILLING_PERIOD_ENTITY"),
    TableMap(TableName = "BILLING_PERIOD", Schema = "PARAM"),
    ]
    public partial class BillingPeriod :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BillingPeriodCode = "BillingPeriodCode";
            public static readonly string Description = "Description";
            public static readonly string IsEnabled = "IsEnabled";
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BillingPeriodCode, null);

            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="billingPeriodCode">Propiedad clave BillingPeriodCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int billingPeriodCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BillingPeriodCode, billingPeriodCode);

            return new PrimaryKey<T>(keys);
        }
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<BillingPeriod>();
        }
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="billingPeriodCode">Propiedad clave BillingPeriodCode.</param>
        public static PrimaryKey CreatePrimaryKey(int billingPeriodCode)
        {
            return InternalCreatePrimaryKey<BillingPeriod>(billingPeriodCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;

        /// <summary>
        /// Atributo para la propiedad IsEnabled
        /// </summary>
        private bool _isEnabled;

        //*** Object Constructors ********************************
        public BillingPeriod() :
            this(BillingPeriod.CreatePrimaryKey(), null)
        {
        }
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="billingPeriodCode">BillingPeriodCode key property.</param>
        public BillingPeriod(int billingPeriodCode) :
            this(BillingPeriod.CreatePrimaryKey(billingPeriodCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public BillingPeriod(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BillingPeriodCode.
        /// </summary>
        /// <value>Propiedad BillingPeriodCode.</value>
        [
        DescriptionKey("BILLING_PERIOD_CODE_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "BILLING_PERIOD_CD", DbType = System.Data.DbType.String),
        ]
        public int BillingPeriodCode
        {
            get
            {
                return (int)this._primaryKey[Properties.BillingPeriodCode];
            }
            set
            {
                this._primaryKey[Properties.BillingPeriodCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsEnabled
        /// </summary>
        /// <value>Propiedad IsEnabled.</value>
        [
        DescriptionKey("IS_ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool IsEnabled
        {
            get
            {
                return this._isEnabled;
            }
            set
            {
                this._isEnabled = value;
            }
        }

    }
}