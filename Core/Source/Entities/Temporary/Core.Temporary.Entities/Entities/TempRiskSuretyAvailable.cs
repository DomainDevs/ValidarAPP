/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.TempRiskSuretyAvailable.dict v1.0
 * FileSize=8119 Header=263 CRC=2441567557
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad TempRiskSuretyAvailable.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.TempRiskSuretyAvailable.dict"),
    Serializable(),
    DescriptionKey("TEMP_RISK_SURETY_AVAILABLE_ENTITY"),
    TableMap(TableName = "TEMP_RISK_SURETY_AVAILABLE", Schema = "TMP"),
    ]
    public partial class TempRiskSuretyAvailable :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TempId = "TempId";
            public static readonly string RiskId = "RiskId";
            public static readonly string IndividualHolderId = "IndividualHolderId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string PileAmount = "PileAmount";
            public static readonly string OperatingQuotaAmount = "OperatingQuotaAmount";
            public static readonly string AvailableAmount = "AvailableAmount";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="tempId">Propiedad clave TempId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <param name="individualHolderId">Propiedad clave IndividualHolderId.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempId, int riskId, int individualHolderId, int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TempId, tempId);
            keys.Add(Properties.RiskId, riskId);
            keys.Add(Properties.IndividualHolderId, individualHolderId);
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="tempId">Propiedad clave TempId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <param name="individualHolderId">Propiedad clave IndividualHolderId.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int tempId, int riskId, int individualHolderId, int individualId)
        {
            return InternalCreatePrimaryKey<TempRiskSuretyAvailable>(tempId, riskId, individualHolderId, individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PileAmount.
        /// </summary>
        private decimal _pileAmount;
        /// <summary>
        /// Atributo para la propiedad OperatingQuotaAmount.
        /// </summary>
        private decimal _operatingQuotaAmount;
        /// <summary>
        /// Atributo para la propiedad AvailableAmount.
        /// </summary>
        private decimal _availableAmount;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="tempId">TempId key property.</param>
        /// <param name="riskId">RiskId key property.</param>
        /// <param name="individualHolderId">IndividualHolderId key property.</param>
        /// <param name="individualId">IndividualId key property.</param>
        public TempRiskSuretyAvailable(int tempId, int riskId, int individualHolderId, int individualId) :
            this(TempRiskSuretyAvailable.CreatePrimaryKey(tempId, riskId, individualHolderId, individualId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public TempRiskSuretyAvailable(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int TempId
        {
            get
            {
                return (int)this._primaryKey[Properties.TempId];
            }
            set
            {
                this._primaryKey[Properties.TempId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskId];
            }
            set
            {
                this._primaryKey[Properties.RiskId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualHolderId.
        /// </summary>
        /// <value>Propiedad IndividualHolderId.</value>
        [
        DescriptionKey("INDIVIDUAL_HOLDER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_HOLDER_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualHolderId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualHolderId];
            }
            set
            {
                this._primaryKey[Properties.IndividualHolderId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PileAmount.
        /// </summary>
        /// <value>Propiedad PileAmount.</value>
        [
        DescriptionKey("PILE_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PILE_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PileAmount
        {
            get
            {
                return this._pileAmount;
            }
            set
            {
                this._pileAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OperatingQuotaAmount.
        /// </summary>
        /// <value>Propiedad OperatingQuotaAmount.</value>
        [
        DescriptionKey("OPERATING_QUOTA_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "OPERATING_QUOTA_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal OperatingQuotaAmount
        {
            get
            {
                return this._operatingQuotaAmount;
            }
            set
            {
                this._operatingQuotaAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AvailableAmount.
        /// </summary>
        /// <value>Propiedad AvailableAmount.</value>
        [
        DescriptionKey("AVAILABLE_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AVAILABLE_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal AvailableAmount
        {
            get
            {
                return this._availableAmount;
            }
            set
            {
                this._availableAmount = value;
            }
        }

    }
}