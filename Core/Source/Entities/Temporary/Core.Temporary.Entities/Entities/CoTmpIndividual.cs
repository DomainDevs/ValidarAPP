/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.CoTmpIndividual.dict v1.0
 * FileSize=5494 Header=254 CRC=635611353
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad CoTmpIndividual.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.CoTmpIndividual.dict"),
    Serializable(),
    DescriptionKey("CO_TMP_INDIVIDUAL_ENTITY"),
    TableMap(TableName = "CO_TMP_INDIVIDUAL", Schema = "TMP"),
    ]
    public partial class CoTmpIndividual :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string IdPersona = "IdPersona";
            public static readonly string CodAgente = "CodAgente";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string IndividualIdNew = "IndividualIdNew";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CoTmpIndividual>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private int _processId;
        /// <summary>
        /// Atributo para la propiedad IdPersona.
        /// </summary>
        private int _idPersona;
        /// <summary>
        /// Atributo para la propiedad CodAgente.
        /// </summary>
        private int _codAgente;
        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        /// <summary>
        /// Atributo para la propiedad IndividualIdNew.
        /// </summary>
        private int _individualIdNew;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public CoTmpIndividual() :
            this(CoTmpIndividual.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoTmpIndividual(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return this._processId;
            }
            set
            {
                this._processId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdPersona.
        /// </summary>
        /// <value>Propiedad IdPersona.</value>
        [
        DescriptionKey("ID_PERSONA_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID_PERSONA", DbType = System.Data.DbType.String),
        ]
        public int IdPersona
        {
            get
            {
                return this._idPersona;
            }
            set
            {
                this._idPersona = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CodAgente.
        /// </summary>
        /// <value>Propiedad CodAgente.</value>
        [
        DescriptionKey("COD_AGENTE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COD_AGENTE", DbType = System.Data.DbType.String),
        ]
        public int CodAgente
        {
            get
            {
                return this._codAgente;
            }
            set
            {
                this._codAgente = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualIdNew.
        /// </summary>
        /// <value>Propiedad IndividualIdNew.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_NEW_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID_NEW", DbType = System.Data.DbType.String),
        ]
        public int IndividualIdNew
        {
            get
            {
                return this._individualIdNew;
            }
            set
            {
                this._individualIdNew = value;
            }
        }

    }
}