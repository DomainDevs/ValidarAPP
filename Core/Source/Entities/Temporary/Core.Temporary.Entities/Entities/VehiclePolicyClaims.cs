/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.VehiclePolicyClaims.dict v1.0
 * FileSize=9178 Header=259 CRC=3064938853
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad VehiclePolicyClaims.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.VehiclePolicyClaims.dict"),
    Serializable(),
    DescriptionKey("VEHICLE_POLICY_CLAIMS_ENTITY"),
    TableMap(TableName = "VEHICLE_POLICY_CLAIMS", Schema = "TMP"),
    ]
    public partial class VehiclePolicyClaims :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BranchCode = "BranchCode";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string PolicyNum = "PolicyNum";
            public static readonly string ClaimNum = "ClaimNum";
            public static readonly string EndorsementNum = "EndorsementNum";
            public static readonly string LicensePlate = "LicensePlate";
            public static readonly string TotalLossInd = "TotalLossInd";
            public static readonly string Reserve = "Reserve";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="branchCode">Propiedad clave BranchCode.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <param name="policyNum">Propiedad clave PolicyNum.</param>
        /// <param name="claimNum">Propiedad clave ClaimNum.</param>
        /// <param name="endorsementNum">Propiedad clave EndorsementNum.</param>
        /// <param name="licensePlate">Propiedad clave LicensePlate.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int branchCode, int prefixCode, decimal policyNum, decimal claimNum, decimal endorsementNum, string licensePlate)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BranchCode, branchCode);
            keys.Add(Properties.PrefixCode, prefixCode);
            keys.Add(Properties.PolicyNum, policyNum);
            keys.Add(Properties.ClaimNum, claimNum);
            keys.Add(Properties.EndorsementNum, endorsementNum);
            keys.Add(Properties.LicensePlate, licensePlate);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="branchCode">Propiedad clave BranchCode.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <param name="policyNum">Propiedad clave PolicyNum.</param>
        /// <param name="claimNum">Propiedad clave ClaimNum.</param>
        /// <param name="endorsementNum">Propiedad clave EndorsementNum.</param>
        /// <param name="licensePlate">Propiedad clave LicensePlate.</param>
        public static PrimaryKey CreatePrimaryKey(int branchCode, int prefixCode, decimal policyNum, decimal claimNum, decimal endorsementNum, string licensePlate)
        {
            return InternalCreatePrimaryKey<VehiclePolicyClaims>(branchCode, prefixCode, policyNum, claimNum, endorsementNum, licensePlate);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TotalLossInd.
        /// </summary>
        private bool _totalLossInd;
        /// <summary>
        /// Atributo para la propiedad Reserve.
        /// </summary>
        private decimal _reserve;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="branchCode">BranchCode key property.</param>
        /// <param name="prefixCode">PrefixCode key property.</param>
        /// <param name="policyNum">PolicyNum key property.</param>
        /// <param name="claimNum">ClaimNum key property.</param>
        /// <param name="endorsementNum">EndorsementNum key property.</param>
        /// <param name="licensePlate">LicensePlate key property.</param>
        public VehiclePolicyClaims(int branchCode, int prefixCode, decimal policyNum, decimal claimNum, decimal endorsementNum, string licensePlate) :
            this(VehiclePolicyClaims.CreatePrimaryKey(branchCode, prefixCode, policyNum, claimNum, endorsementNum, licensePlate), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public VehiclePolicyClaims(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return (int)this._primaryKey[Properties.BranchCode];
            }
            set
            {
                this._primaryKey[Properties.BranchCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PrefixCode];
            }
            set
            {
                this._primaryKey[Properties.PrefixCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyNum.
        /// </summary>
        /// <value>Propiedad PolicyNum.</value>
        [
        DescriptionKey("POLICY_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PolicyNum
        {
            get
            {
                return (decimal)this._primaryKey[Properties.PolicyNum];
            }
            set
            {
                this._primaryKey[Properties.PolicyNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClaimNum.
        /// </summary>
        /// <value>Propiedad ClaimNum.</value>
        [
        DescriptionKey("CLAIM_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CLAIM_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal ClaimNum
        {
            get
            {
                return (decimal)this._primaryKey[Properties.ClaimNum];
            }
            set
            {
                this._primaryKey[Properties.ClaimNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementNum.
        /// </summary>
        /// <value>Propiedad EndorsementNum.</value>
        [
        DescriptionKey("ENDORSEMENT_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal EndorsementNum
        {
            get
            {
                return (decimal)this._primaryKey[Properties.EndorsementNum];
            }
            set
            {
                this._primaryKey[Properties.EndorsementNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicensePlate.
        /// </summary>
        /// <value>Propiedad LicensePlate.</value>
        [
        DescriptionKey("LICENSE_PLATE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "LICENSE_PLATE", DbType = System.Data.DbType.String),
        ]
        public string LicensePlate
        {
            get
            {
                return (string)this._primaryKey[Properties.LicensePlate];
            }
            set
            {
                this._primaryKey[Properties.LicensePlate] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TotalLossInd.
        /// </summary>
        /// <value>Propiedad TotalLossInd.</value>
        [
        DescriptionKey("TOTAL_LOSS_IND_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TOTAL_LOSS_IND", DbType = System.Data.DbType.String),
        ]
        public bool TotalLossInd
        {
            get
            {
                return this._totalLossInd;
            }
            set
            {
                this._totalLossInd = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Reserve.
        /// </summary>
        /// <value>Propiedad Reserve.</value>
        [
        DescriptionKey("RESERVE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RESERVE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal Reserve
        {
            get
            {
                return this._reserve;
            }
            set
            {
                this._reserve = value;
            }
        }

    }
}