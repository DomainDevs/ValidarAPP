/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.TempRiskVehicleDriver.dict v1.0
 * FileSize=10906 Header=260 CRC=48540255
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad TempRiskVehicleDriver.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.TempRiskVehicleDriver.dict"),
    Serializable(),
    DescriptionKey("TEMP_RISK_VEHICLE_DRIVER_ENTITY"),
    TableMap(TableName = "TEMP_RISK_VEHICLE_DRIVER", Schema = "TMP"),
    ]
    public partial class TempRiskVehicleDriver :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TempId = "TempId";
            public static readonly string RiskId = "RiskId";
            public static readonly string CustomerTypeCode = "CustomerTypeCode";
            public static readonly string DriverId = "DriverId";
            public static readonly string DriverNum = "DriverNum";
            public static readonly string LicenseNo = "LicenseNo";
            public static readonly string DrivingPercentage = "DrivingPercentage";
            public static readonly string YearsDriving = "YearsDriving";
            public static readonly string LicenseExpDate = "LicenseExpDate";
            public static readonly string LicenseExpOrg = "LicenseExpOrg";
            public static readonly string LicenseCategory = "LicenseCategory";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="tempId">Propiedad clave TempId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <param name="customerTypeCode">Propiedad clave CustomerTypeCode.</param>
        /// <param name="driverId">Propiedad clave DriverId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempId, int riskId, int customerTypeCode, int driverId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TempId, tempId);
            keys.Add(Properties.RiskId, riskId);
            keys.Add(Properties.CustomerTypeCode, customerTypeCode);
            keys.Add(Properties.DriverId, driverId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="tempId">Propiedad clave TempId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <param name="customerTypeCode">Propiedad clave CustomerTypeCode.</param>
        /// <param name="driverId">Propiedad clave DriverId.</param>
        public static PrimaryKey CreatePrimaryKey(int tempId, int riskId, int customerTypeCode, int driverId)
        {
            return InternalCreatePrimaryKey<TempRiskVehicleDriver>(tempId, riskId, customerTypeCode, driverId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DriverNum.
        /// </summary>
        private int? _driverNum = null;
        /// <summary>
        /// Atributo para la propiedad LicenseNo.
        /// </summary>
        private string _licenseNo = null;
        /// <summary>
        /// Atributo para la propiedad DrivingPercentage.
        /// </summary>
        private decimal? _drivingPercentage = null;
        /// <summary>
        /// Atributo para la propiedad YearsDriving.
        /// </summary>
        private int? _yearsDriving = null;
        /// <summary>
        /// Atributo para la propiedad LicenseExpDate.
        /// </summary>
        private DateTime? _licenseExpDate = null;
        /// <summary>
        /// Atributo para la propiedad LicenseExpOrg.
        /// </summary>
        private string _licenseExpOrg = null;
        /// <summary>
        /// Atributo para la propiedad LicenseCategory.
        /// </summary>
        private string _licenseCategory = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="tempId">TempId key property.</param>
        /// <param name="riskId">RiskId key property.</param>
        /// <param name="customerTypeCode">CustomerTypeCode key property.</param>
        /// <param name="driverId">DriverId key property.</param>
        public TempRiskVehicleDriver(int tempId, int riskId, int customerTypeCode, int driverId) :
            this(TempRiskVehicleDriver.CreatePrimaryKey(tempId, riskId, customerTypeCode, driverId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public TempRiskVehicleDriver(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int TempId
        {
            get
            {
                return (int)this._primaryKey[Properties.TempId];
            }
            set
            {
                this._primaryKey[Properties.TempId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskId];
            }
            set
            {
                this._primaryKey[Properties.RiskId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CustomerTypeCode.
        /// </summary>
        /// <value>Propiedad CustomerTypeCode.</value>
        [
        DescriptionKey("CUSTOMER_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CUSTOMER_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int CustomerTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CustomerTypeCode];
            }
            set
            {
                this._primaryKey[Properties.CustomerTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DriverId.
        /// </summary>
        /// <value>Propiedad DriverId.</value>
        [
        DescriptionKey("DRIVER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "DRIVER_ID", DbType = System.Data.DbType.String),
        ]
        public int DriverId
        {
            get
            {
                return (int)this._primaryKey[Properties.DriverId];
            }
            set
            {
                this._primaryKey[Properties.DriverId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DriverNum.
        /// </summary>
        /// <value>Propiedad DriverNum.</value>
        [
        DescriptionKey("DRIVER_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DRIVER_NUM", DbType = System.Data.DbType.String),
        ]
        public int? DriverNum
        {
            get
            {
                return this._driverNum;
            }
            set
            {
                this._driverNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicenseNo.
        /// </summary>
        /// <value>Propiedad LicenseNo.</value>
        [
        DescriptionKey("LICENSE_NO_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LICENSE_NO", DbType = System.Data.DbType.String),
        ]
        public string LicenseNo
        {
            get
            {
                return this._licenseNo;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.LicenseNo);
                }
                this._licenseNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DrivingPercentage.
        /// </summary>
        /// <value>Propiedad DrivingPercentage.</value>
        [
        DescriptionKey("DRIVING_PERCENTAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DRIVING_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? DrivingPercentage
        {
            get
            {
                return this._drivingPercentage;
            }
            set
            {
                this._drivingPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad YearsDriving.
        /// </summary>
        /// <value>Propiedad YearsDriving.</value>
        [
        DescriptionKey("YEARS_DRIVING_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "YEARS_DRIVING", DbType = System.Data.DbType.String),
        ]
        public int? YearsDriving
        {
            get
            {
                return this._yearsDriving;
            }
            set
            {
                this._yearsDriving = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicenseExpDate.
        /// </summary>
        /// <value>Propiedad LicenseExpDate.</value>
        [
        DescriptionKey("LICENSE_EXP_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LICENSE_EXP_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? LicenseExpDate
        {
            get
            {
                return this._licenseExpDate;
            }
            set
            {
                this._licenseExpDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicenseExpOrg.
        /// </summary>
        /// <value>Propiedad LicenseExpOrg.</value>
        [
        DescriptionKey("LICENSE_EXP_ORG_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LICENSE_EXP_ORG", DbType = System.Data.DbType.String),
        ]
        public string LicenseExpOrg
        {
            get
            {
                return this._licenseExpOrg;
            }
            set
            {
                this._licenseExpOrg = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicenseCategory.
        /// </summary>
        /// <value>Propiedad LicenseCategory.</value>
        [
        DescriptionKey("LICENSE_CATEGORY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LICENSE_CATEGORY", DbType = System.Data.DbType.String),
        ]
        public string LicenseCategory
        {
            get
            {
                return this._licenseCategory;
            }
            set
            {
                this._licenseCategory = value;
            }
        }

    }
}