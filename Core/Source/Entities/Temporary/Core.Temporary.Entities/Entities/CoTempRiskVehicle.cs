/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.CoTempRiskVehicle.dict v1.0
 * FileSize=13475 Header=257 CRC=183103255
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad CoTempRiskVehicle.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.CoTempRiskVehicle.dict"),
    Serializable(),
    DescriptionKey("CO_TEMP_RISK_VEHICLE_ENTITY"),
    TableMap(TableName = "CO_TEMP_RISK_VEHICLE", Schema = "TMP"),
    ]
    public partial class CoTempRiskVehicle :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TempId = "TempId";
            public static readonly string RiskId = "RiskId";
            public static readonly string FlatRatePercentage = "FlatRatePercentage";
            public static readonly string Excess = "Excess";
            public static readonly string ShuttleCode = "ShuttleCode";
            public static readonly string DeductId = "DeductId";
            public static readonly string ServiceTypeCode = "ServiceTypeCode";
            public static readonly string MobileNum = "MobileNum";
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string TonsQuantity = "TonsQuantity";
            public static readonly string RateTypeCode = "RateTypeCode";
            public static readonly string GoodExperienceNum = "GoodExperienceNum";
            public static readonly string WorkerType = "WorkerType";
            public static readonly string BirthDate = "BirthDate";
            public static readonly string IsNewRate = "IsNewRate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="tempId">Propiedad clave TempId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempId, int riskId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TempId, tempId);
            keys.Add(Properties.RiskId, riskId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="tempId">Propiedad clave TempId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        public static PrimaryKey CreatePrimaryKey(int tempId, int riskId)
        {
            return InternalCreatePrimaryKey<CoTempRiskVehicle>(tempId, riskId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FlatRatePercentage.
        /// </summary>
        private decimal? _flatRatePercentage = null;
        /// <summary>
        /// Atributo para la propiedad Excess.
        /// </summary>
        private bool _excess;
        /// <summary>
        /// Atributo para la propiedad ShuttleCode.
        /// </summary>
        private int? _shuttleCode = null;
        /// <summary>
        /// Atributo para la propiedad DeductId.
        /// </summary>
        private int? _deductId = null;
        /// <summary>
        /// Atributo para la propiedad ServiceTypeCode.
        /// </summary>
        private int? _serviceTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad MobileNum.
        /// </summary>
        private string _mobileNum = null;
        /// <summary>
        /// Atributo para la propiedad EndorsementId.
        /// </summary>
        private int? _endorsementId = null;
        /// <summary>
        /// Atributo para la propiedad PolicyId.
        /// </summary>
        private int? _policyId = null;
        /// <summary>
        /// Atributo para la propiedad TonsQuantity.
        /// </summary>
        private int? _tonsQuantity = null;
        /// <summary>
        /// Atributo para la propiedad RateTypeCode.
        /// </summary>
        private int? _rateTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad GoodExperienceNum.
        /// </summary>
        private decimal? _goodExperienceNum = null;
        /// <summary>
        /// Atributo para la propiedad WorkerType.
        /// </summary>
        private int? _workerType = null;
        /// <summary>
        /// Atributo para la propiedad BirthDate.
        /// </summary>
        private DateTime? _birthDate = null;
        /// <summary>
        /// Atributo para la propiedad IsNewRate.
        /// </summary>
        private bool _isNewRate;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="tempId">TempId key property.</param>
        /// <param name="riskId">RiskId key property.</param>
        public CoTempRiskVehicle(int tempId, int riskId) :
            this(CoTempRiskVehicle.CreatePrimaryKey(tempId, riskId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoTempRiskVehicle(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int TempId
        {
            get
            {
                return (int)this._primaryKey[Properties.TempId];
            }
            set
            {
                this._primaryKey[Properties.TempId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskId];
            }
            set
            {
                this._primaryKey[Properties.RiskId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FlatRatePercentage.
        /// </summary>
        /// <value>Propiedad FlatRatePercentage.</value>
        [
        DescriptionKey("FLAT_RATE_PERCENTAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FLAT_RATE_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? FlatRatePercentage
        {
            get
            {
                return this._flatRatePercentage;
            }
            set
            {
                this._flatRatePercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Excess.
        /// </summary>
        /// <value>Propiedad Excess.</value>
        [
        DescriptionKey("EXCESS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXCESS", DbType = System.Data.DbType.String),
        ]
        public bool Excess
        {
            get
            {
                return this._excess;
            }
            set
            {
                this._excess = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ShuttleCode.
        /// </summary>
        /// <value>Propiedad ShuttleCode.</value>
        [
        DescriptionKey("SHUTTLE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SHUTTLE_CD", DbType = System.Data.DbType.String),
        ]
        public int? ShuttleCode
        {
            get
            {
                return this._shuttleCode;
            }
            set
            {
                this._shuttleCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeductId.
        /// </summary>
        /// <value>Propiedad DeductId.</value>
        [
        DescriptionKey("DEDUCT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEDUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int? DeductId
        {
            get
            {
                return this._deductId;
            }
            set
            {
                this._deductId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ServiceTypeCode.
        /// </summary>
        /// <value>Propiedad ServiceTypeCode.</value>
        [
        DescriptionKey("SERVICE_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SERVICE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? ServiceTypeCode
        {
            get
            {
                return this._serviceTypeCode;
            }
            set
            {
                this._serviceTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MobileNum.
        /// </summary>
        /// <value>Propiedad MobileNum.</value>
        [
        DescriptionKey("MOBILE_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MOBILE_NUM", DbType = System.Data.DbType.String),
        ]
        public string MobileNum
        {
            get
            {
                return this._mobileNum;
            }
            set
            {
                this._mobileNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int? EndorsementId
        {
            get
            {
                return this._endorsementId;
            }
            set
            {
                this._endorsementId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int? PolicyId
        {
            get
            {
                return this._policyId;
            }
            set
            {
                this._policyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TonsQuantity.
        /// </summary>
        /// <value>Propiedad TonsQuantity.</value>
        [
        DescriptionKey("TONS_QUANTITY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TONS_QTY", DbType = System.Data.DbType.String),
        ]
        public int? TonsQuantity
        {
            get
            {
                return this._tonsQuantity;
            }
            set
            {
                this._tonsQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RateTypeCode.
        /// </summary>
        /// <value>Propiedad RateTypeCode.</value>
        [
        DescriptionKey("RATE_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "RATE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? RateTypeCode
        {
            get
            {
                return this._rateTypeCode;
            }
            set
            {
                this._rateTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GoodExperienceNum.
        /// </summary>
        /// <value>Propiedad GoodExperienceNum.</value>
        [
        DescriptionKey("GOOD_EXPERIENCE_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "GOOD_EXPERIENCE_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? GoodExperienceNum
        {
            get
            {
                return this._goodExperienceNum;
            }
            set
            {
                this._goodExperienceNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad WorkerType.
        /// </summary>
        /// <value>Propiedad WorkerType.</value>
        [
        DescriptionKey("WORKER_TYPE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "WORKER_TYPE", DbType = System.Data.DbType.String),
        ]
        public int? WorkerType
        {
            get
            {
                return this._workerType;
            }
            set
            {
                this._workerType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BirthDate.
        /// </summary>
        /// <value>Propiedad BirthDate.</value>
        [
        DescriptionKey("BIRTH_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BIRTH_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? BirthDate
        {
            get
            {
                return this._birthDate;
            }
            set
            {
                this._birthDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsNewRate.
        /// </summary>
        /// <value>Propiedad IsNewRate.</value>
        [
        DescriptionKey("IS_NEW_RATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_NEW_RATE", DbType = System.Data.DbType.String),
        ]
        public bool IsNewRate
        {
            get
            {
                return this._isNewRate;
            }
            set
            {
                this._isNewRate = value;
            }
        }

    }
}