/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.TempAsynchronousProcess.dict v1.0
 * FileSize=11934 Header=263 CRC=888727642
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad TempAsynchronousProcess.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.TempAsynchronousProcess.dict"),
    Serializable(),
    DescriptionKey("TEMP_ASYNCHRONOUS_PROCESS_ENTITY"),
    TableMap(TableName = "TEMP_ASYNCHRONOUS_PROCESS", Schema = "TMP"),
    ]
    public partial class TempAsynchronousProcess :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProcessId = "ProcessId";
            public static readonly string EndoTypeCode = "EndoTypeCode";
            public static readonly string UserId = "UserId";
            public static readonly string TempId = "TempId";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string TotalRisk = "TotalRisk";
            public static readonly string CountRisk = "CountRisk";
            public static readonly string StatusRisk = "StatusRisk";
            public static readonly string StatusComponet = "StatusComponet";
            public static readonly string StatusCancellation = "StatusCancellation";
            public static readonly string BeginDate = "BeginDate";
            public static readonly string EndDate = "EndDate";
            public static readonly string DescriptionError = "DescriptionError";
            public static readonly string LastUpdate = "LastUpdate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int processId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProcessId, processId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        public static PrimaryKey CreatePrimaryKey(int processId)
        {
            return InternalCreatePrimaryKey<TempAsynchronousProcess>(processId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad EndoTypeCode.
        /// </summary>
        private int? _endoTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int? _userId = null;
        /// <summary>
        /// Atributo para la propiedad TempId.
        /// </summary>
        private int? _tempId = null;
        /// <summary>
        /// Atributo para la propiedad PolicyId.
        /// </summary>
        private int? _policyId = null;
        /// <summary>
        /// Atributo para la propiedad TotalRisk.
        /// </summary>
        private int? _totalRisk = null;
        /// <summary>
        /// Atributo para la propiedad CountRisk.
        /// </summary>
        private int? _countRisk = null;
        /// <summary>
        /// Atributo para la propiedad StatusRisk.
        /// </summary>
        private bool _statusRisk;
        /// <summary>
        /// Atributo para la propiedad StatusComponet.
        /// </summary>
        private bool _statusComponet;
        /// <summary>
        /// Atributo para la propiedad StatusCancellation.
        /// </summary>
        private bool _statusCancellation;
        /// <summary>
        /// Atributo para la propiedad BeginDate.
        /// </summary>
        private DateTime? _beginDate = null;
        /// <summary>
        /// Atributo para la propiedad EndDate.
        /// </summary>
        private DateTime? _endDate = null;
        /// <summary>
        /// Atributo para la propiedad DescriptionError.
        /// </summary>
        private string _descriptionError = null;
        /// <summary>
        /// Atributo para la propiedad LastUpdate.
        /// </summary>
        private DateTime? _lastUpdate = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="processId">ProcessId key property.</param>
        public TempAsynchronousProcess(int processId) :
            this(TempAsynchronousProcess.CreatePrimaryKey(processId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public TempAsynchronousProcess(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProcessId];
            }
            set
            {
                this._primaryKey[Properties.ProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoTypeCode.
        /// </summary>
        /// <value>Propiedad EndoTypeCode.</value>
        [
        DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDO_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? EndoTypeCode
        {
            get
            {
                return this._endoTypeCode;
            }
            set
            {
                this._endoTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int? TempId
        {
            get
            {
                return this._tempId;
            }
            set
            {
                this._tempId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int? PolicyId
        {
            get
            {
                return this._policyId;
            }
            set
            {
                this._policyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TotalRisk.
        /// </summary>
        /// <value>Propiedad TotalRisk.</value>
        [
        DescriptionKey("TOTAL_RISK_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TOTAL_RISK", DbType = System.Data.DbType.String),
        ]
        public int? TotalRisk
        {
            get
            {
                return this._totalRisk;
            }
            set
            {
                this._totalRisk = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountRisk.
        /// </summary>
        /// <value>Propiedad CountRisk.</value>
        [
        DescriptionKey("COUNT_RISK_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COUNT_RISK", DbType = System.Data.DbType.String),
        ]
        public int? CountRisk
        {
            get
            {
                return this._countRisk;
            }
            set
            {
                this._countRisk = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StatusRisk.
        /// </summary>
        /// <value>Propiedad StatusRisk.</value>
        [
        DescriptionKey("STATUS_RISK_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STATUS_RISK", DbType = System.Data.DbType.String),
        ]
        public bool StatusRisk
        {
            get
            {
                return this._statusRisk;
            }
            set
            {
                this._statusRisk = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StatusComponet.
        /// </summary>
        /// <value>Propiedad StatusComponet.</value>
        [
        DescriptionKey("STATUS_COMPONET_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STATUS_COMPONET", DbType = System.Data.DbType.String),
        ]
        public bool StatusComponet
        {
            get
            {
                return this._statusComponet;
            }
            set
            {
                this._statusComponet = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StatusCancellation.
        /// </summary>
        /// <value>Propiedad StatusCancellation.</value>
        [
        DescriptionKey("STATUS_CANCELLATION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STATUS_CANCELLATION", DbType = System.Data.DbType.String),
        ]
        public bool StatusCancellation
        {
            get
            {
                return this._statusCancellation;
            }
            set
            {
                this._statusCancellation = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BeginDate.
        /// </summary>
        /// <value>Propiedad BeginDate.</value>
        [
        DescriptionKey("BEGIN_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BEGIN_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? BeginDate
        {
            get
            {
                return this._beginDate;
            }
            set
            {
                this._beginDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndDate.
        /// </summary>
        /// <value>Propiedad EndDate.</value>
        [
        DescriptionKey("END_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "END_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? EndDate
        {
            get
            {
                return this._endDate;
            }
            set
            {
                this._endDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionError.
        /// </summary>
        /// <value>Propiedad DescriptionError.</value>
        [
        DescriptionKey("DESCRIPTION_ERROR_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_ERROR", DbType = System.Data.DbType.String),
        ]
        public string DescriptionError
        {
            get
            {
                return this._descriptionError;
            }
            set
            {
                this._descriptionError = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LastUpdate.
        /// </summary>
        /// <value>Propiedad LastUpdate.</value>
        [
        DescriptionKey("LAST_UPDATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LAST_UPDATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? LastUpdate
        {
            get
            {
                return this._lastUpdate;
            }
            set
            {
                this._lastUpdate = value;
            }
        }

    }
}