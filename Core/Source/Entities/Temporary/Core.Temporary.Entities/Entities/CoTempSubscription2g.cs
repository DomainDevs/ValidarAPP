/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.CoTempSubscription2g.dict v1.0
 * FileSize=6618 Header=260 CRC=4102464396
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad CoTempSubscription2g.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.CoTempSubscription2g.dict"),
    Serializable(),
    DescriptionKey("CO_TEMP_SUBSCRIPTION2G_ENTITY"),
    TableMap(TableName = "CO_TEMP_SUBSCRIPTION_2G", Schema = "TMP"),
    ]
    public partial class CoTempSubscription2g :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string TempId = "TempId";
            public static readonly string SinisterQuantity = "SinisterQuantity";
            public static readonly string RenewalQuantity = "RenewalQuantity";
            public static readonly string HasTotalLoss = "HasTotalLoss";
            public static readonly string PortfolioBalance = "PortfolioBalance";
            public static readonly string StroLastThreeYears = "StroLastThreeYears";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="tempId">Propiedad clave TempId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.TempId, tempId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="tempId">Propiedad clave TempId.</param>
        public static PrimaryKey CreatePrimaryKey(int tempId)
        {
            return InternalCreatePrimaryKey<CoTempSubscription2g>(tempId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad SinisterQuantity.
        /// </summary>
        private int _sinisterQuantity;
        /// <summary>
        /// Atributo para la propiedad RenewalQuantity.
        /// </summary>
        private int _renewalQuantity;
        /// <summary>
        /// Atributo para la propiedad HasTotalLoss.
        /// </summary>
        private bool _hasTotalLoss;
        /// <summary>
        /// Atributo para la propiedad PortfolioBalance.
        /// </summary>
        private decimal _portfolioBalance;
        /// <summary>
        /// Atributo para la propiedad StroLastThreeYears.
        /// </summary>
        private int _stroLastThreeYears;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="tempId">TempId key property.</param>
        public CoTempSubscription2g(int tempId) :
            this(CoTempSubscription2g.CreatePrimaryKey(tempId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoTempSubscription2g(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int TempId
        {
            get
            {
                return (int)this._primaryKey[Properties.TempId];
            }
            set
            {
                this._primaryKey[Properties.TempId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SinisterQuantity.
        /// </summary>
        /// <value>Propiedad SinisterQuantity.</value>
        [
        DescriptionKey("SINISTER_QUANTITY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SINISTER_QTY", DbType = System.Data.DbType.String),
        ]
        public int SinisterQuantity
        {
            get
            {
                return this._sinisterQuantity;
            }
            set
            {
                this._sinisterQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RenewalQuantity.
        /// </summary>
        /// <value>Propiedad RenewalQuantity.</value>
        [
        DescriptionKey("RENEWAL_QUANTITY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RENEWAL_QTY", DbType = System.Data.DbType.String),
        ]
        public int RenewalQuantity
        {
            get
            {
                return this._renewalQuantity;
            }
            set
            {
                this._renewalQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HasTotalLoss.
        /// </summary>
        /// <value>Propiedad HasTotalLoss.</value>
        [
        DescriptionKey("HAS_TOTAL_LOSS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "HAS_TOTAL_LOSS", DbType = System.Data.DbType.String),
        ]
        public bool HasTotalLoss
        {
            get
            {
                return this._hasTotalLoss;
            }
            set
            {
                this._hasTotalLoss = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PortfolioBalance.
        /// </summary>
        /// <value>Propiedad PortfolioBalance.</value>
        [
        DescriptionKey("PORTFOLIO_BALANCE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PORTFOLIO_BALANCE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PortfolioBalance
        {
            get
            {
                return this._portfolioBalance;
            }
            set
            {
                this._portfolioBalance = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StroLastThreeYears.
        /// </summary>
        /// <value>Propiedad StroLastThreeYears.</value>
        [
        DescriptionKey("STRO_LAST_THREE_YEARS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STRO_LAST_THREE_YEARS", DbType = System.Data.DbType.String),
        ]
        public int StroLastThreeYears
        {
            get
            {
                return this._stroLastThreeYears;
            }
            set
            {
                this._stroLastThreeYears = value;
            }
        }

    }
}