/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.ControlMassiveLoad.dict v1.0
 * FileSize=12693 Header=259 CRC=3480608151
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad ControlMassiveLoad.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.ControlMassiveLoad.dict"),
    Serializable(),
    DescriptionKey("CONTROL_MASSIVE_LOAD_ENTITY"),
    TableMap(TableName = "CONTROL_MASSIVE_LOAD", Schema = "TMP"),
    ]
    public partial class ControlMassiveLoad :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string IdConsecutivo = "IdConsecutivo";
            public static readonly string IdMassive = "IdMassive";
            public static readonly string IdMasivePolicy = "IdMasivePolicy";
            public static readonly string TempId = "TempId";
            public static readonly string SnError = "SnError";
            public static readonly string Error = "Error";
            public static readonly string SnTarifado = "SnTarifado";
            public static readonly string SnFinalizado = "SnFinalizado";
            public static readonly string SnEmitido = "SnEmitido";
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string IssueDate = "IssueDate";
            public static readonly string ProcessId = "ProcessId";
            public static readonly string SubprocessId = "SubprocessId";
            public static readonly string EndorsementType = "EndorsementType";
            public static readonly string LicencePlate = "LicencePlate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="idConsecutivo">Propiedad clave IdConsecutivo.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int idConsecutivo)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.IdConsecutivo, idConsecutivo);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="idConsecutivo">Propiedad clave IdConsecutivo.</param>
        public static PrimaryKey CreatePrimaryKey(int idConsecutivo)
        {
            return InternalCreatePrimaryKey<ControlMassiveLoad>(idConsecutivo);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IdMassive.
        /// </summary>
        private int? _idMassive = null;
        /// <summary>
        /// Atributo para la propiedad IdMasivePolicy.
        /// </summary>
        private int? _idMasivePolicy = null;
        /// <summary>
        /// Atributo para la propiedad TempId.
        /// </summary>
        private int? _tempId = null;
        /// <summary>
        /// Atributo para la propiedad SnError.
        /// </summary>
        private bool? _snError = null;
        /// <summary>
        /// Atributo para la propiedad Error.
        /// </summary>
        private string _error = null;
        /// <summary>
        /// Atributo para la propiedad SnTarifado.
        /// </summary>
        private bool? _snTarifado = null;
        /// <summary>
        /// Atributo para la propiedad SnFinalizado.
        /// </summary>
        private bool? _snFinalizado = null;
        /// <summary>
        /// Atributo para la propiedad SnEmitido.
        /// </summary>
        private bool? _snEmitido = null;
        /// <summary>
        /// Atributo para la propiedad EndorsementId.
        /// </summary>
        private int? _endorsementId = null;
        /// <summary>
        /// Atributo para la propiedad IssueDate.
        /// </summary>
        private DateTime? _issueDate = null;
        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private int? _processId = null;
        /// <summary>
        /// Atributo para la propiedad SubprocessId.
        /// </summary>
        private int? _subprocessId = null;
        /// <summary>
        /// Atributo para la propiedad EndorsementType.
        /// </summary>
        private int? _endorsementType = null;
        /// <summary>
        /// Atributo para la propiedad LicencePlate.
        /// </summary>
        private string _licencePlate = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="idConsecutivo">IdConsecutivo key property.</param>
        public ControlMassiveLoad(int idConsecutivo) :
            this(ControlMassiveLoad.CreatePrimaryKey(idConsecutivo), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ControlMassiveLoad(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdConsecutivo.
        /// </summary>
        /// <value>Propiedad IdConsecutivo.</value>
        [
        DescriptionKey("ID_CONSECUTIVO_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID_CONSECUTIVO", DbType = System.Data.DbType.String),
        ]
        public int IdConsecutivo
        {
            get
            {
                return (int)this._primaryKey[Properties.IdConsecutivo];
            }
            set
            {
                this._primaryKey[Properties.IdConsecutivo] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdMassive.
        /// </summary>
        /// <value>Propiedad IdMassive.</value>
        [
        DescriptionKey("ID_MASSIVE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ID_MASSIVE", DbType = System.Data.DbType.String),
        ]
        public int? IdMassive
        {
            get
            {
                return this._idMassive;
            }
            set
            {
                this._idMassive = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdMasivePolicy.
        /// </summary>
        /// <value>Propiedad IdMasivePolicy.</value>
        [
        DescriptionKey("ID_MASIVE_POLICY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ID_MASIVE_POLICY", DbType = System.Data.DbType.String),
        ]
        public int? IdMasivePolicy
        {
            get
            {
                return this._idMasivePolicy;
            }
            set
            {
                this._idMasivePolicy = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempId.
        /// </summary>
        /// <value>Propiedad TempId.</value>
        [
        DescriptionKey("TEMP_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEMP_ID", DbType = System.Data.DbType.String),
        ]
        public int? TempId
        {
            get
            {
                return this._tempId;
            }
            set
            {
                this._tempId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SnError.
        /// </summary>
        /// <value>Propiedad SnError.</value>
        [
        DescriptionKey("SN_ERROR_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SN_ERROR", DbType = System.Data.DbType.String),
        ]
        public bool? SnError
        {
            get
            {
                return this._snError;
            }
            set
            {
                this._snError = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Error.
        /// </summary>
        /// <value>Propiedad Error.</value>
        [
        DescriptionKey("ERROR_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ERROR", DbType = System.Data.DbType.String),
        ]
        public string Error
        {
            get
            {
                return this._error;
            }
            set
            {
                this._error = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SnTarifado.
        /// </summary>
        /// <value>Propiedad SnTarifado.</value>
        [
        DescriptionKey("SN_TARIFADO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SN_TARIFADO", DbType = System.Data.DbType.String),
        ]
        public bool? SnTarifado
        {
            get
            {
                return this._snTarifado;
            }
            set
            {
                this._snTarifado = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SnFinalizado.
        /// </summary>
        /// <value>Propiedad SnFinalizado.</value>
        [
        DescriptionKey("SN_FINALIZADO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SN_FINALIZADO", DbType = System.Data.DbType.String),
        ]
        public bool? SnFinalizado
        {
            get
            {
                return this._snFinalizado;
            }
            set
            {
                this._snFinalizado = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SnEmitido.
        /// </summary>
        /// <value>Propiedad SnEmitido.</value>
        [
        DescriptionKey("SN_EMITIDO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SN_EMITIDO", DbType = System.Data.DbType.String),
        ]
        public bool? SnEmitido
        {
            get
            {
                return this._snEmitido;
            }
            set
            {
                this._snEmitido = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int? EndorsementId
        {
            get
            {
                return this._endorsementId;
            }
            set
            {
                this._endorsementId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IssueDate.
        /// </summary>
        /// <value>Propiedad IssueDate.</value>
        [
        DescriptionKey("ISSUE_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ISSUE_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? IssueDate
        {
            get
            {
                return this._issueDate;
            }
            set
            {
                this._issueDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int? ProcessId
        {
            get
            {
                return this._processId;
            }
            set
            {
                this._processId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubprocessId.
        /// </summary>
        /// <value>Propiedad SubprocessId.</value>
        [
        DescriptionKey("SUBPROCESS_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SUBPROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int? SubprocessId
        {
            get
            {
                return this._subprocessId;
            }
            set
            {
                this._subprocessId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementType.
        /// </summary>
        /// <value>Propiedad EndorsementType.</value>
        [
        DescriptionKey("ENDORSEMENT_TYPE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENDORSEMENT_TYPE", DbType = System.Data.DbType.String),
        ]
        public int? EndorsementType
        {
            get
            {
                return this._endorsementType;
            }
            set
            {
                this._endorsementType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LicencePlate.
        /// </summary>
        /// <value>Propiedad LicencePlate.</value>
        [
        DescriptionKey("LICENCE_PLATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LICENCE_PLATE", DbType = System.Data.DbType.String),
        ]
        public string LicencePlate
        {
            get
            {
                return this._licencePlate;
            }
            set
            {
                this._licencePlate = value;
            }
        }

    }
}