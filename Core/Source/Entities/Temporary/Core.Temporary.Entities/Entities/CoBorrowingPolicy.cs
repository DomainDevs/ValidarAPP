/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.CoBorrowingPolicy.dict v1.0
 * FileSize=8187 Header=257 CRC=3946380089
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad CoBorrowingPolicy.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.CoBorrowingPolicy.dict"),
    Serializable(),
    DescriptionKey("CO_BORROWING_POLICY_ENTITY"),
    TableMap(TableName="CO_BORROWING_POLICY", Schema="TMP"),
    ]
    public partial class CoBorrowingPolicy :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BranchCode = "BranchCode";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string PolicyNum = "PolicyNum";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string InsuredCode = "InsuredCode";
			public static readonly string PremiumAmount = "PremiumAmount";
			public static readonly string StateCode = "StateCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="branchCode">Propiedad clave BranchCode.</param>
		/// <param name="prefixCode">Propiedad clave PrefixCode.</param>
		/// <param name="policyNum">Propiedad clave PolicyNum.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <param name="insuredCode">Propiedad clave InsuredCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int branchCode, int prefixCode, decimal policyNum, int individualId, int insuredCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BranchCode, branchCode);
		    keys.Add(Properties.PrefixCode, prefixCode);
		    keys.Add(Properties.PolicyNum, policyNum);
		    keys.Add(Properties.IndividualId, individualId);
		    keys.Add(Properties.InsuredCode, insuredCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="branchCode">Propiedad clave BranchCode.</param>
		/// <param name="prefixCode">Propiedad clave PrefixCode.</param>
		/// <param name="policyNum">Propiedad clave PolicyNum.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <param name="insuredCode">Propiedad clave InsuredCode.</param>
		public static PrimaryKey CreatePrimaryKey(int branchCode, int prefixCode, decimal policyNum, int individualId, int insuredCode)
	    {
			return InternalCreatePrimaryKey<CoBorrowingPolicy>(branchCode, prefixCode, policyNum, individualId, insuredCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PremiumAmount.
		/// </summary>
        private decimal _premiumAmount;
		/// <summary>
		/// Atributo para la propiedad StateCode.
		/// </summary>
        private int _stateCode;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="branchCode">BranchCode key property.</param>
		/// <param name="prefixCode">PrefixCode key property.</param>
		/// <param name="policyNum">PolicyNum key property.</param>
		/// <param name="individualId">IndividualId key property.</param>
		/// <param name="insuredCode">InsuredCode key property.</param>
	    public CoBorrowingPolicy(int branchCode, int prefixCode, decimal policyNum, int individualId, int insuredCode):
			this(CoBorrowingPolicy.CreatePrimaryKey(branchCode, prefixCode, policyNum, individualId, insuredCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoBorrowingPolicy(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BranchCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BranchCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PrefixCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PrefixCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyNum.
		/// </summary>
		/// <value>Propiedad PolicyNum.</value>
	    [
		DescriptionKey("POLICY_NUM_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="POLICY_NUM", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PolicyNum
	    {
		    get
		    {
				return (decimal)this._primaryKey[Properties.PolicyNum];
		    }
		    set
		    {
				this._primaryKey[Properties.PolicyNum] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredCode.
		/// </summary>
		/// <value>Propiedad InsuredCode.</value>
	    [
		DescriptionKey("INSURED_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INSURED_CD", DbType=System.Data.DbType.String),
	    ]
        public int InsuredCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.InsuredCode];
		    }
		    set
		    {
				this._primaryKey[Properties.InsuredCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PremiumAmount.
		/// </summary>
		/// <value>Propiedad PremiumAmount.</value>
	    [
		DescriptionKey("PREMIUM_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREMIUM_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PremiumAmount
	    {
		    get
		    {
			    return this._premiumAmount;
		    }
		    set
		    {
				this._premiumAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StateCode.
		/// </summary>
		/// <value>Propiedad StateCode.</value>
	    [
		DescriptionKey("STATE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="STATE_CD", DbType=System.Data.DbType.String),
	    ]
        public int StateCode
	    {
		    get
		    {
			    return this._stateCode;
		    }
		    set
		    {
				this._stateCode = value;
			}
	    }

    }
}