/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Temporary.Riskclause.dict v1.0
 * FileSize=10462 Header=251 CRC=2497320765
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Temporary.Entities
{
    /// <summary>
    /// Definición de entidad Riskclause.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Temporary.Riskclause.dict"),
    Serializable(),
    DescriptionKey("RISKCLAUSE_ENTITY"),
    TableMap(TableName = "RISKCLAUSE", Schema = "TMP"),
    ]
    public partial class Riskclause :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PolicyId = "PolicyId";
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string RiskId = "RiskId";
            public static readonly string RiskNum = "RiskNum";
            public static readonly string CoverGroupId = "CoverGroupId";
            public static readonly string PolicyholderIdCardNo = "PolicyholderIdCardNo";
            public static readonly string PolicyholderName = "PolicyholderName";
            public static readonly string InsuredIdCardNo = "InsuredIdCardNo";
            public static readonly string InsuredName = "InsuredName";
            public static readonly string FormNumber = "FormNumber";
            public static readonly string PrefixCode = "PrefixCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int policyId, int endorsementId, int riskId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PolicyId, policyId);
            keys.Add(Properties.EndorsementId, endorsementId);
            keys.Add(Properties.RiskId, riskId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        public static PrimaryKey CreatePrimaryKey(int policyId, int endorsementId, int riskId)
        {
            return InternalCreatePrimaryKey<Riskclause>(policyId, endorsementId, riskId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad RiskNum.
        /// </summary>
        private int _riskNum;
        /// <summary>
        /// Atributo para la propiedad CoverGroupId.
        /// </summary>
        private int? _coverGroupId = null;
        /// <summary>
        /// Atributo para la propiedad PolicyholderIdCardNo.
        /// </summary>
        private string _policyholderIdCardNo = null;
        /// <summary>
        /// Atributo para la propiedad PolicyholderName.
        /// </summary>
        private string _policyholderName = null;
        /// <summary>
        /// Atributo para la propiedad InsuredIdCardNo.
        /// </summary>
        private string _insuredIdCardNo = null;
        /// <summary>
        /// Atributo para la propiedad InsuredName.
        /// </summary>
        private string _insuredName = null;
        /// <summary>
        /// Atributo para la propiedad FormNumber.
        /// </summary>
        private string _formNumber = null;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int? _prefixCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="policyId">PolicyId key property.</param>
        /// <param name="endorsementId">EndorsementId key property.</param>
        /// <param name="riskId">RiskId key property.</param>
        public Riskclause(int policyId, int endorsementId, int riskId) :
            this(Riskclause.CreatePrimaryKey(policyId, endorsementId, riskId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Riskclause(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyId];
            }
            set
            {
                this._primaryKey[Properties.PolicyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskId];
            }
            set
            {
                this._primaryKey[Properties.RiskId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskNum.
        /// </summary>
        /// <value>Propiedad RiskNum.</value>
        [
        DescriptionKey("RISK_NUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_NUM", DbType = System.Data.DbType.String),
        ]
        public int RiskNum
        {
            get
            {
                return this._riskNum;
            }
            set
            {
                this._riskNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverGroupId.
        /// </summary>
        /// <value>Propiedad CoverGroupId.</value>
        [
        DescriptionKey("COVER_GROUP_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVER_GROUP_ID", DbType = System.Data.DbType.String),
        ]
        public int? CoverGroupId
        {
            get
            {
                return this._coverGroupId;
            }
            set
            {
                this._coverGroupId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyholderIdCardNo.
        /// </summary>
        /// <value>Propiedad PolicyholderIdCardNo.</value>
        [
        DescriptionKey("POLICYHOLDER_ID_CARD_NO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICYHOLDER_ID_CARD_NO", DbType = System.Data.DbType.String),
        ]
        public string PolicyholderIdCardNo
        {
            get
            {
                return this._policyholderIdCardNo;
            }
            set
            {
                this._policyholderIdCardNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyholderName.
        /// </summary>
        /// <value>Propiedad PolicyholderName.</value>
        [
        DescriptionKey("POLICYHOLDER_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICYHOLDER_NAME", DbType = System.Data.DbType.String),
        ]
        public string PolicyholderName
        {
            get
            {
                return this._policyholderName;
            }
            set
            {
                this._policyholderName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredIdCardNo.
        /// </summary>
        /// <value>Propiedad InsuredIdCardNo.</value>
        [
        DescriptionKey("INSURED_ID_CARD_NO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INSURED_ID_CARD_NO", DbType = System.Data.DbType.String),
        ]
        public string InsuredIdCardNo
        {
            get
            {
                return this._insuredIdCardNo;
            }
            set
            {
                this._insuredIdCardNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredName.
        /// </summary>
        /// <value>Propiedad InsuredName.</value>
        [
        DescriptionKey("INSURED_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INSURED_NAME", DbType = System.Data.DbType.String),
        ]
        public string InsuredName
        {
            get
            {
                return this._insuredName;
            }
            set
            {
                this._insuredName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FormNumber.
        /// </summary>
        /// <value>Propiedad FormNumber.</value>
        [
        DescriptionKey("FORM_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FORM_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string FormNumber
        {
            get
            {
                return this._formNumber;
            }
            set
            {
                this._formNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int? PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

    }
}