/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.ProductForm.dict v1.0
 * FileSize=5757 Header=249 CRC=1606812793
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad ProductForm.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.ProductForm.dict"),
    Serializable(),
    DescriptionKey("PRODUCT_FORM_ENTITY"),
    TableMap(TableName = "PRODUCT_FORM", Schema = "PROD"),
    ]
    public partial class ProductForm :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string FormId = "FormId";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string FormNumber = "FormNumber";
            public static readonly string ProductId = "ProductId";
            public static readonly string CoverGroupId = "CoverGroupId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="formId">Propiedad clave FormId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int formId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.FormId, formId);

            return new PrimaryKey<T>(keys);
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.FormId, null);

            return new PrimaryKey<T>(keys);
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ProductForm>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="formId">Propiedad clave FormId.</param>
        public static PrimaryKey CreatePrimaryKey(int formId)
        {
            return InternalCreatePrimaryKey<ProductForm>(formId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad FormNumber.
        /// </summary>
        private string _formNumber = null;
        /// <summary>
        /// Atributo para la propiedad ProductId.
        /// </summary>
        private int _productId;
        /// <summary>
        /// Atributo para la propiedad CoverGroupId.
        /// </summary>
        private int _coverGroupId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="formId">FormId key property.</param>

        /// 
        public ProductForm() :
            this(ProductForm.CreatePrimaryKey(), null)
        {
        }


        public ProductForm(int formId) :
            this(ProductForm.CreatePrimaryKey(formId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ProductForm(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        public ProductForm(PrimaryKey key) : base(key)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad FormId.
        /// </summary>
        /// <value>Propiedad FormId.</value>
        [
            DescriptionKey("FORM_ID_PROPERTY"),
            PersistentProperty(IsKey = true),
            ColumnMap(ColumnName = "FORM_ID", DbType = System.Data.DbType.String),
        ]
        public int FormId
        {
            get
            {
                return (int)this._primaryKey[Properties.FormId];
            }
            set
            {
                this._primaryKey[Properties.FormId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
            DescriptionKey("CURRENT_FROM_PROPERTY"),
            PersistentProperty(),
            ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FormNumber.
        /// </summary>
        /// <value>Propiedad FormNumber.</value>
        [
            DescriptionKey("FORM_NUMBER_PROPERTY"),
            PersistentProperty(),
            ColumnMap(ColumnName = "FORM_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string FormNumber
        {
            get
            {
                return this._formNumber;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.FormNumber);
                }
                this._formNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
            DescriptionKey("PRODUCT_ID_PROPERTY"),
            PersistentProperty(),
            ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProductId
        {
            get
            {
                return this._productId;
            }
            set
            {
                this._productId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverGroupId.
        /// </summary>
        /// <value>Propiedad CoverGroupId.</value>
        [
            DescriptionKey("COVER_GROUP_ID_PROPERTY"),
            PersistentProperty(),
            ColumnMap(ColumnName = "COVER_GROUP_ID", DbType = System.Data.DbType.String),
        ]
        public int CoverGroupId
        {
            get
            {
                return this._coverGroupId;
            }
            set
            {
                this._coverGroupId = value;
            }
        }

    }
}