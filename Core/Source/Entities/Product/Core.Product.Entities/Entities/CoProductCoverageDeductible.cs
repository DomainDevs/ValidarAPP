/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.CoProductCoverageDeductible.dict v1.0
 * FileSize=7712 Header=264 CRC=188616867
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad CoProductCoverageDeductible.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.CoProductCoverageDeductible.dict"),
    Serializable(),
    DescriptionKey("CO_PRODUCT_COVERAGE_DEDUCTIBLE_ENTITY"),
    TableMap(TableName="CO_PRODUCT_COVERAGE_DEDUCTIBLE", Schema="PROD"),
    ]
    public partial class CoProductCoverageDeductible :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ProductId = "ProductId";
			public static readonly string CoverGroupId = "CoverGroupId";
			public static readonly string CoverageId = "CoverageId";
			public static readonly string DeductId = "DeductId";
			public static readonly string BeneficiaryTypeCode = "BeneficiaryTypeCode";
			public static readonly string IsDefault = "IsDefault";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <param name="coverGroupId">Propiedad clave CoverGroupId.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="deductId">Propiedad clave DeductId.</param>
		/// <param name="beneficiaryTypeCode">Propiedad clave BeneficiaryTypeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int productId, int coverGroupId, int coverageId, int deductId, int beneficiaryTypeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ProductId, productId);
		    keys.Add(Properties.CoverGroupId, coverGroupId);
		    keys.Add(Properties.CoverageId, coverageId);
		    keys.Add(Properties.DeductId, deductId);
		    keys.Add(Properties.BeneficiaryTypeCode, beneficiaryTypeCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <param name="coverGroupId">Propiedad clave CoverGroupId.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="deductId">Propiedad clave DeductId.</param>
		/// <param name="beneficiaryTypeCode">Propiedad clave BeneficiaryTypeCode.</param>
		public static PrimaryKey CreatePrimaryKey(int productId, int coverGroupId, int coverageId, int deductId, int beneficiaryTypeCode)
	    {
			return InternalCreatePrimaryKey<CoProductCoverageDeductible>(productId, coverGroupId, coverageId, deductId, beneficiaryTypeCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IsDefault.
		/// </summary>
        private bool _isDefault;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="productId">ProductId key property.</param>
		/// <param name="coverGroupId">CoverGroupId key property.</param>
		/// <param name="coverageId">CoverageId key property.</param>
		/// <param name="deductId">DeductId key property.</param>
		/// <param name="beneficiaryTypeCode">BeneficiaryTypeCode key property.</param>
	    public CoProductCoverageDeductible(int productId, int coverGroupId, int coverageId, int deductId, int beneficiaryTypeCode):
			this(CoProductCoverageDeductible.CreatePrimaryKey(productId, coverGroupId, coverageId, deductId, beneficiaryTypeCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoProductCoverageDeductible(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProductId.
		/// </summary>
		/// <value>Propiedad ProductId.</value>
	    [
		DescriptionKey("PRODUCT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PRODUCT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProductId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ProductId];
		    }
		    set
		    {
				this._primaryKey[Properties.ProductId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverGroupId.
		/// </summary>
		/// <value>Propiedad CoverGroupId.</value>
	    [
		DescriptionKey("COVER_GROUP_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVER_GROUP_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverGroupId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverGroupId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverGroupId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId.
		/// </summary>
		/// <value>Propiedad CoverageId.</value>
	    [
		DescriptionKey("COVERAGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverageId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverageId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeductId.
		/// </summary>
		/// <value>Propiedad DeductId.</value>
	    [
		DescriptionKey("DEDUCT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="DEDUCT_ID", DbType=System.Data.DbType.String),
	    ]
        public int DeductId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.DeductId];
		    }
		    set
		    {
				this._primaryKey[Properties.DeductId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryTypeCode.
		/// </summary>
		/// <value>Propiedad BeneficiaryTypeCode.</value>
	    [
		DescriptionKey("BENEFICIARY_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BENEFICIARY_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int BeneficiaryTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BeneficiaryTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BeneficiaryTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsDefault.
		/// </summary>
		/// <value>Propiedad IsDefault.</value>
	    [
		DescriptionKey("IS_DEFAULT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_DEFAULT", DbType=System.Data.DbType.String),
	    ]
        public bool IsDefault
	    {
		    get
		    {
			    return this._isDefault;
		    }
		    set
		    {
				this._isDefault = value;
			}
	    }

    }
}