/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.FinancialPlan.dict v1.0
 * FileSize=7458 Header=250 CRC=135113157
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad FinancialPlan.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.FinancialPlan.dict"),
    Serializable(),
    DescriptionKey("FINANCIAL_PLAN_ENTITY"),
    TableMap(TableName="FINANCIAL_PLAN", Schema="PROD"),
    ]
    public partial class FinancialPlan :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string FinancialPlanId = "FinancialPlanId";
			public static readonly string PaymentMethodCode = "PaymentMethodCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string SurchargePercentage = "SurchargePercentage";
			public static readonly string PaymentScheduleId = "PaymentScheduleId";
			public static readonly string MinPayAmount = "MinPayAmount";
			public static readonly string DisabledDate = "DisabledDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="financialPlanId">Propiedad clave FinancialPlanId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int financialPlanId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.FinancialPlanId, financialPlanId);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.FinancialPlanId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="financialPlanId">Propiedad clave FinancialPlanId.</param>
        public static PrimaryKey CreatePrimaryKey(int financialPlanId)
	    {
			return InternalCreatePrimaryKey<FinancialPlan>(financialPlanId);
		}

        /// <summary>
        /// Crea una clave primaria para esta clase sin parametros.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<FinancialPlan>();
        }

        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentMethodCode.
        /// </summary>
        private int _paymentMethodCode;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int _currencyCode;
		/// <summary>
		/// Atributo para la propiedad SurchargePercentage.
		/// </summary>
        private decimal _surchargePercentage;
		/// <summary>
		/// Atributo para la propiedad PaymentScheduleId.
		/// </summary>
        private int _paymentScheduleId;
		/// <summary>
		/// Atributo para la propiedad MinPayAmount.
		/// </summary>
        private decimal _minPayAmount;
		/// <summary>
		/// Atributo para la propiedad DisabledDate.
		/// </summary>
        private DateTime? _disabledDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="financialPlanId">FinancialPlanId key property.</param>
	    public FinancialPlan(int financialPlanId):
			this(FinancialPlan.CreatePrimaryKey(financialPlanId), null)
	    {
	    }
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public FinancialPlan() :
            this(FinancialPlan.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public FinancialPlan(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad FinancialPlanId.
		/// </summary>
		/// <value>Propiedad FinancialPlanId.</value>
	    [
		DescriptionKey("FINANCIAL_PLAN_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="FINANCIAL_PLAN_ID", DbType=System.Data.DbType.String),
	    ]
        public int FinancialPlanId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.FinancialPlanId];
		    }
		    set
		    {
				this._primaryKey[Properties.FinancialPlanId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_METHOD_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentMethodCode
	    {
		    get
		    {
			    return this._paymentMethodCode;
		    }
		    set
		    {
				this._paymentMethodCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SurchargePercentage.
		/// </summary>
		/// <value>Propiedad SurchargePercentage.</value>
	    [
		DescriptionKey("SURCHARGE_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SURCHARGE_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal SurchargePercentage
	    {
		    get
		    {
			    return this._surchargePercentage;
		    }
		    set
		    {
				this._surchargePercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentScheduleId.
		/// </summary>
		/// <value>Propiedad PaymentScheduleId.</value>
	    [
		DescriptionKey("PAYMENT_SCHEDULE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_SCHEDULE_ID", DbType=System.Data.DbType.String),
	    ]
        public int PaymentScheduleId
	    {
		    get
		    {
			    return this._paymentScheduleId;
		    }
		    set
		    {
				this._paymentScheduleId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MinPayAmount.
		/// </summary>
		/// <value>Propiedad MinPayAmount.</value>
	    [
		DescriptionKey("MIN_PAY_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="MIN_PAY_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal MinPayAmount
	    {
		    get
		    {
			    return this._minPayAmount;
		    }
		    set
		    {
				this._minPayAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DisabledDate.
		/// </summary>
		/// <value>Propiedad DisabledDate.</value>
	    [
		DescriptionKey("DISABLED_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DISABLED_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DisabledDate
	    {
		    get
		    {
			    return this._disabledDate;
		    }
		    set
		    {
				this._disabledDate = value;
			}
	    }

    }
}