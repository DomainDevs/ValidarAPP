/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.PaymentSchedule.dict v1.0
 * FileSize=11919 Header=254 CRC=2612622881
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad PaymentSchedule.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.PaymentSchedule.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_SCHEDULE_ENTITY"),
    TableMap(TableName = "PAYMENT_SCHEDULE", Schema = "PROD"),
    ]
    public partial class PaymentSchedule :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PaymentScheduleId = "PaymentScheduleId";
            public static readonly string Description = "Description";
            public static readonly string SmallDescription = "SmallDescription";
            public static readonly string IsGreaterDate = "IsGreaterDate";
            public static readonly string IsIssueDate = "IsIssueDate";
            public static readonly string FirstPayQuantity = "FirstPayQuantity";
            public static readonly string PaymentQuantity = "PaymentQuantity";
            public static readonly string GapUnitCode = "GapUnitCode";
            public static readonly string GapQuantity = "GapQuantity";
            public static readonly string LastPayQuantity = "LastPayQuantity";
            public static readonly string DisabledDate = "DisabledDate";
            public static readonly string PremiumFinancing = "PremiumFinancing";
            public static readonly string AutoDistribution = "AutoDistribution";
            public static readonly string Financing = "Financing";
        }

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentScheduleId">Propiedad clave PaymentScheduleId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentScheduleId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="paymentScheduleId">Propiedad clave PaymentScheduleId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentScheduleId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentScheduleId, paymentScheduleId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentScheduleId">Propiedad clave PaymentScheduleId.</param>
		public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<PaymentSchedule>();
        }
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentScheduleId">Propiedad clave PaymentScheduleId.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentScheduleId)
        {
            return InternalCreatePrimaryKey<PaymentSchedule>(paymentScheduleId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad SmallDescription.
        /// </summary>
        private string _smallDescription = null;
        /// <summary>
        /// Atributo para la propiedad IsGreaterDate.
        /// </summary>
        private bool _isGreaterDate;
        /// <summary>
        /// Atributo para la propiedad IsIssueDate.
        /// </summary>
        private bool _isIssueDate;
        /// <summary>
        /// Atributo para la propiedad FirstPayQuantity.
        /// </summary>
        private int _firstPayQuantity;
        /// <summary>
        /// Atributo para la propiedad PaymentQuantity.
        /// </summary>
        private int _paymentQuantity;
        /// <summary>
        /// Atributo para la propiedad GapUnitCode.
        /// </summary>
        private int? _gapUnitCode = null;
        /// <summary>
        /// Atributo para la propiedad GapQuantity.
        /// </summary>
        private int? _gapQuantity = null;
        /// <summary>
        /// Atributo para la propiedad LastPayQuantity.
        /// </summary>
        private int? _lastPayQuantity = null;
        /// <summary>
        /// Atributo para la propiedad DisabledDate.
        /// </summary>
        private DateTime? _disabledDate = null;
        /// <summary>
        /// Atributo para la propiedad PremiumFinancing.
        /// </summary>
        private bool _premiumFinancing;
        /// <summary>
        /// Atributo para la propiedad AutoDistribution.
        /// </summary>
        private bool _autoDistribution;

        /// <summary>
        /// Atributo para la propiedad AutoDistribution.
        /// </summary>
        private bool _financing;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="paymentScheduleId">PaymentScheduleId key property.</param>
        public PaymentSchedule(int paymentScheduleId) :
            this(PaymentSchedule.CreatePrimaryKey(paymentScheduleId), null)
        {
        }

        /// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentScheduleId">PaymentScheduleId key property.</param>
	    public PaymentSchedule() :
            this(PaymentSchedule.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PaymentSchedule(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentScheduleId.
        /// </summary>
        /// <value>Propiedad PaymentScheduleId.</value>
        [
        DescriptionKey("PAYMENT_SCHEDULE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_SCHEDULE_ID", DbType = System.Data.DbType.String),
        ]
        public int PaymentScheduleId
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentScheduleId];
            }
            set
            {
                this._primaryKey[Properties.PaymentScheduleId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SmallDescription.
        /// </summary>
        /// <value>Propiedad SmallDescription.</value>
        [
        DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SMALL_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string SmallDescription
        {
            get
            {
                return this._smallDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
                }
                this._smallDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsGreaterDate.
        /// </summary>
        /// <value>Propiedad IsGreaterDate.</value>
        [
        DescriptionKey("IS_GREATER_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_GREATER_DATE", DbType = System.Data.DbType.String),
        ]
        public bool IsGreaterDate
        {
            get
            {
                return this._isGreaterDate;
            }
            set
            {
                this._isGreaterDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsIssueDate.
        /// </summary>
        /// <value>Propiedad IsIssueDate.</value>
        [
        DescriptionKey("IS_ISSUE_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ISSUE_DATE", DbType = System.Data.DbType.String),
        ]
        public bool IsIssueDate
        {
            get
            {
                return this._isIssueDate;
            }
            set
            {
                this._isIssueDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FirstPayQuantity.
        /// </summary>
        /// <value>Propiedad FirstPayQuantity.</value>
        [
        DescriptionKey("FIRST_PAY_QUANTITY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FIRST_PAY_QTY", DbType = System.Data.DbType.String),
        ]
        public int FirstPayQuantity
        {
            get
            {
                return this._firstPayQuantity;
            }
            set
            {
                this._firstPayQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentQuantity.
        /// </summary>
        /// <value>Propiedad PaymentQuantity.</value>
        [
        DescriptionKey("PAYMENT_QUANTITY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_QTY", DbType = System.Data.DbType.String),
        ]
        public int PaymentQuantity
        {
            get
            {
                return this._paymentQuantity;
            }
            set
            {
                this._paymentQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GapUnitCode.
        /// </summary>
        /// <value>Propiedad GapUnitCode.</value>
        [
        DescriptionKey("GAP_UNIT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "GAP_UNIT_CD", DbType = System.Data.DbType.String),
        ]
        public int? GapUnitCode
        {
            get
            {
                return this._gapUnitCode;
            }
            set
            {
                this._gapUnitCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GapQuantity.
        /// </summary>
        /// <value>Propiedad GapQuantity.</value>
        [
        DescriptionKey("GAP_QUANTITY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "GAP_QTY", DbType = System.Data.DbType.String),
        ]
        public int? GapQuantity
        {
            get
            {
                return this._gapQuantity;
            }
            set
            {
                this._gapQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LastPayQuantity.
        /// </summary>
        /// <value>Propiedad LastPayQuantity.</value>
        [
        DescriptionKey("LAST_PAY_QUANTITY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LAST_PAY_QTY", DbType = System.Data.DbType.String),
        ]
        public int? LastPayQuantity
        {
            get
            {
                return this._lastPayQuantity;
            }
            set
            {
                this._lastPayQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DisabledDate.
        /// </summary>
        /// <value>Propiedad DisabledDate.</value>
        [
        DescriptionKey("DISABLED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DISABLED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? DisabledDate
        {
            get
            {
                return this._disabledDate;
            }
            set
            {
                this._disabledDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PremiumFinancing.
        /// </summary>
        /// <value>Propiedad PremiumFinancing.</value>
        [
        DescriptionKey("PREMIUM_FINANCING_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PREMIUM_FINANCING", DbType = System.Data.DbType.String),
        ]
        public bool PremiumFinancing
        {
            get
            {
                return this._premiumFinancing;
            }
            set
            {
                this._premiumFinancing = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AutoDistribution.
        /// </summary>
        /// <value>Propiedad AutoDistribution.</value>
        [
        DescriptionKey("AUTO_DISTRIBUTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AUTO_DISTRIBUTION", DbType = System.Data.DbType.String),
        ]
        public bool AutoDistribution
        {
            get
            {
                return this._autoDistribution;
            }
            set
            {
                this._autoDistribution = value;
            }
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsGreaterDate.
        /// </summary>
        /// <value>Propiedad IsGreaterDate.</value>
        [
        DescriptionKey("FINANCING_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FINANCING", DbType = System.Data.DbType.String),
        ]
        public bool Financing
        {
            get
            {
                return this._financing;
            }
            set
            {
                this._financing = value;
            }
        }

    }
}