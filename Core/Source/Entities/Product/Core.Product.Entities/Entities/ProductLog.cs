/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.ProductLog.dict v1.0
 * FileSize=7479 Header=248 CRC=2493058439
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad ProductLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.ProductLog.dict"),
    Serializable(),
    DescriptionKey("PRODUCT_LOG_ENTITY"),
    TableMap(TableName = "PRODUCT_LOG", Schema = "PROD"),
    ]
    public partial class ProductLog :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string ProductCode = "ProductCode";
            public static readonly string TableName = "TableName";
            public static readonly string ColumName = "ColumName";
            public static readonly string ValueOld = "ValueOld";
            public static readonly string Value = "Value";
            public static readonly string IssueDate = "IssueDate";
            public static readonly string UserCode = "UserCode";
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey(typeof(ProductLog));
        }
        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(
            Type concreteClass)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.Id, null);
            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
        {
            return InternalCreatePrimaryKey<ProductLog>(id);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProductCode.
        /// </summary>
        private int _productCode;
        /// <summary>
        /// Atributo para la propiedad TableName.
        /// </summary>
        private string _tableName = null;
        /// <summary>
        /// Atributo para la propiedad ColumName.
        /// </summary>
        private string _columName = null;
        /// <summary>
        /// Atributo para la propiedad ValueOld.
        /// </summary>
        private string _valueOld = null;
        /// <summary>
        /// Atributo para la propiedad Value.
        /// </summary>
        private string _value = null;
        /// <summary>
        /// Atributo para la propiedad IssueDate.
        /// </summary>
        private DateTime? _issueDate = null;
        /// <summary>
        /// Atributo para la propiedad UserCode.
        /// </summary>
        private int? _userCode = null;
        //*** Object Constructors ********************************


        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public ProductLog()
            : this(ProductLog.CreatePrimaryKey(), null)
        { }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public ProductLog(int id) :
            this(ProductLog.CreatePrimaryKey(id), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ProductLog(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID", DbType = System.Data.DbType.String),
        ]
        public int Id
        {
            get
            {
                return (int)this._primaryKey[Properties.Id];
            }
            set
            {
                this._primaryKey[Properties.Id] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductCode.
        /// </summary>
        /// <value>Propiedad ProductCode.</value>
        [
        DescriptionKey("PRODUCT_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PRODUCT_CD", DbType = System.Data.DbType.String),
        ]
        public int ProductCode
        {
            get
            {
                return this._productCode;
            }
            set
            {
                this._productCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TableName.
        /// </summary>
        /// <value>Propiedad TableName.</value>
        [
        DescriptionKey("TABLE_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TABLE_NAME", DbType = System.Data.DbType.String),
        ]
        public string TableName
        {
            get
            {
                return this._tableName;
            }
            set
            {
                this._tableName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ColumName.
        /// </summary>
        /// <value>Propiedad ColumName.</value>
        [
        DescriptionKey("COLUM_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COLUM_NAME", DbType = System.Data.DbType.String),
        ]
        public string ColumName
        {
            get
            {
                return this._columName;
            }
            set
            {
                this._columName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ValueOld.
        /// </summary>
        /// <value>Propiedad ValueOld.</value>
        [
        DescriptionKey("VALUE_OLD_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "VALUE_OLD", DbType = System.Data.DbType.String),
        ]
        public string ValueOld
        {
            get
            {
                return this._valueOld;
            }
            set
            {
                this._valueOld = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Value.
        /// </summary>
        /// <value>Propiedad Value.</value>
        [
        DescriptionKey("VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "VALUE", DbType = System.Data.DbType.String),
        ]
        public string Value
        {
            get
            {
                return this._value;
            }
            set
            {
                this._value = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IssueDate.
        /// </summary>
        /// <value>Propiedad IssueDate.</value>
        [
        DescriptionKey("ISSUE_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ISSUE_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? IssueDate
        {
            get
            {
                return this._issueDate;
            }
            set
            {
                this._issueDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserCode.
        /// </summary>
        /// <value>Propiedad UserCode.</value>
        [
        DescriptionKey("USER_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_CD", DbType = System.Data.DbType.String),
        ]
        public int? UserCode
        {
            get
            {
                return this._userCode;
            }
            set
            {
                this._userCode = value;
            }
        }

    }
}