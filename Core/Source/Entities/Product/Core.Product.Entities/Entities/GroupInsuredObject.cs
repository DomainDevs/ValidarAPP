/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.GroupInsuredObject.dict v1.0
 * FileSize=6485 Header=256 CRC=2571654974
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad GroupInsuredObject.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.GroupInsuredObject.dict"),
    Serializable(),
    DescriptionKey("GROUP_INSURED_OBJECT_ENTITY"),
    TableMap(TableName = "GROUP_INSURED_OBJECT", Schema = "PROD"),
    ]
    public partial class GroupInsuredObject :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProductId = "ProductId";
            public static readonly string CoverageGroupCode = "CoverageGroupCode";
            public static readonly string InsuredObject = "InsuredObject";
            public static readonly string IsSelected = "IsSelected";
            public static readonly string IsMandatory = "IsMandatory";
            public static readonly string CoveredRiskTypeCode = "CoveredRiskTypeCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <param name="coverageGroupCode">Propiedad clave CoverageGroupCode.</param>
        /// <param name="insuredObject">Propiedad clave InsuredObject.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int productId, int coverageGroupCode, int insuredObject)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProductId, productId);
            keys.Add(Properties.CoverageGroupCode, coverageGroupCode);
            keys.Add(Properties.InsuredObject, insuredObject);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <param name="coverageGroupCode">Propiedad clave CoverageGroupCode.</param>
        /// <param name="insuredObject">Propiedad clave InsuredObject.</param>
        public static PrimaryKey CreatePrimaryKey(int productId, int coverageGroupCode, int insuredObject)
        {
            return InternalCreatePrimaryKey<GroupInsuredObject>(productId, coverageGroupCode, insuredObject);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IsSelected.
        /// </summary>
        private bool? _isSelected;
        /// <summary>
        /// Atributo para la propiedad IsMandatory.
        /// </summary>
        private bool? _isMandatory;
        /// <summary>
        /// Atributo para la propiedad CoveredRiskTypeCode.
        /// </summary>
        private int? _coveredRiskTypeCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="productId">ProductId key property.</param>
        /// <param name="coverageGroupCode">CoverageGroupCode key property.</param>
        /// <param name="insuredObject">InsuredObject key property.</param>
        public GroupInsuredObject(int productId, int coverageGroupCode, int insuredObject) :
            this(GroupInsuredObject.CreatePrimaryKey(productId, coverageGroupCode, insuredObject), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public GroupInsuredObject(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProductId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProductId];
            }
            set
            {
                this._primaryKey[Properties.ProductId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageGroupCode.
        /// </summary>
        /// <value>Propiedad CoverageGroupCode.</value>
        [
        DescriptionKey("COVERAGE_GROUP_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERAGE_GROUP_CD", DbType = System.Data.DbType.String),
        ]
        public int CoverageGroupCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageGroupCode];
            }
            set
            {
                this._primaryKey[Properties.CoverageGroupCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredObject.
        /// </summary>
        /// <value>Propiedad InsuredObject.</value>
        [
        DescriptionKey("INSURED_OBJECT_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INSURED_OBJECT", DbType = System.Data.DbType.String),
        ]
        public int InsuredObject
        {
            get
            {
                return (int)this._primaryKey[Properties.InsuredObject];
            }
            set
            {
                this._primaryKey[Properties.InsuredObject] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsSelected.
        /// </summary>
        /// <value>Propiedad IsSelected.</value>
        [
        DescriptionKey("IS_SELECTED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_SELECTED", DbType = System.Data.DbType.String),
        ]
        public bool? IsSelected
        {
            get
            {
                return this._isSelected;
            }
            set
            {
                this._isSelected = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMandatory.
        /// </summary>
        /// <value>Propiedad IsMandatory.</value>
        [
        DescriptionKey("IS_MANDATORY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_MANDATORY", DbType = System.Data.DbType.String),
        ]
        public bool? IsMandatory
        {
            get
            {
                return this._isMandatory;
            }
            set
            {
                this._isMandatory = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoveredRiskTypeCode.
        /// </summary>
        /// <value>Propiedad CoveredRiskTypeCode.</value>
        [
        DescriptionKey("COVERED_RISK_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COVERED_RISK_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? CoveredRiskTypeCode
        {
            get
            {
                return this._coveredRiskTypeCode;
            }
            set
            {
                this._coveredRiskTypeCode = value;
            }
        }

    }
}