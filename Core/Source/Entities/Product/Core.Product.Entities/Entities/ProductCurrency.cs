/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.ProductCurrency.dict v1.0
 * FileSize=4747 Header=252 CRC=256218459
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad ProductCurrency.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.ProductCurrency.dict"),
    Serializable(),
    DescriptionKey("PRODUCT_CURRENCY_ENTITY"),
    TableMap(TableName = "PRODUCT_CURRENCY", Schema = "PROD"),
    ]
    public partial class ProductCurrency :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProductId = "ProductId";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string DecimalQuantity = "DecimalQuantity";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <param name="currencyCode">Propiedad clave CurrencyCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int productId, int currencyCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProductId, productId);
            keys.Add(Properties.CurrencyCode, currencyCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <param name="currencyCode">Propiedad clave CurrencyCode.</param>
        public static PrimaryKey CreatePrimaryKey(int productId, int currencyCode)
        {
            return InternalCreatePrimaryKey<ProductCurrency>(productId, currencyCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DecimalQuantity.
        /// </summary>
        private int _decimalQuantity;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="productId">ProductId key property.</param>
        /// <param name="currencyCode">CurrencyCode key property.</param>
        public ProductCurrency(int productId, int currencyCode) :
            this(ProductCurrency.CreatePrimaryKey(productId, currencyCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ProductCurrency(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProductId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProductId];
            }
            set
            {
                this._primaryKey[Properties.ProductId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int CurrencyCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CurrencyCode];
            }
            set
            {
                this._primaryKey[Properties.CurrencyCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DecimalQuantity.
        /// </summary>
        /// <value>Propiedad DecimalQuantity.</value>
        [
        DescriptionKey("DECIMAL_QUANTITY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DECIMAL_QTY", DbType = System.Data.DbType.String),
        ]
        public int DecimalQuantity
        {
            get
            {
                return this._decimalQuantity;
            }
            set
            {
                this._decimalQuantity = value;
            }
        }

    }
}