/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Product.CoProduct.dict v1.0
 * FileSize=7360 Header=247 CRC=2919679226
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad CoProduct.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Product.CoProduct.dict"),
    Serializable(),
    DescriptionKey("CO_PRODUCT_ENTITY"),
    TableMap(TableName = "CO_PRODUCT", Schema = "PROD"),
    ]
    public partial class CoProduct :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ProductId = "ProductId";
            public static readonly string CommissionRulesetId = "CommissionRulesetId";
            public static readonly string PreCommissionRulesetId = "PreCommissionRulesetId";
            public static readonly string IsRequest = "IsRequest";
            public static readonly string IsFlatRate = "IsFlatRate";
            public static readonly string IsCollective = "IsCollective";
            public static readonly string CalculateMinPremium = "CalculateMinPremium";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int productId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ProductId, productId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="productId">Propiedad clave ProductId.</param>
        public static PrimaryKey CreatePrimaryKey(int productId)
        {
            return InternalCreatePrimaryKey<CoProduct>(productId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CommissionRulesetId.
        /// </summary>
        private int? _commissionRulesetId = null;
        /// <summary>
        /// Atributo para la propiedad PreCommissionRulesetId.
        /// </summary>
        private int? _preCommissionRulesetId = null;
        /// <summary>
        /// Atributo para la propiedad IsRequest.
        /// </summary>
        private bool _isRequest;
        /// <summary>
        /// Atributo para la propiedad IsFlatRate.
        /// </summary>
        private bool _isFlatRate;
        /// <summary>
        /// Atributo para la propiedad IsCollective.
        /// </summary>
        private bool? _isCollective = null;
        /// <summary>
        /// Atributo para la propiedad CalculateMinPremium.
        /// </summary>
        private bool? _calculateMinPremium;

        /// <summary>
        /// Atributo para la propiedad IsInteractive.
        /// </summary>
        private bool? _isInteractive = null;

        /// <summary>
        /// Atributo para la propiedad IsMassive.
        /// </summary>
        private bool? _isMassive = null;

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="productId">ProductId key property.</param>
        public CoProduct(int productId) :
            this(CoProduct.CreatePrimaryKey(productId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoProduct(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProductId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProductId];
            }
            set
            {
                this._primaryKey[Properties.ProductId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CommissionRulesetId.
        /// </summary>
        /// <value>Propiedad CommissionRulesetId.</value>
        [
        DescriptionKey("COMMISSION_RULESET_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMMISSION_RULESET_ID", DbType = System.Data.DbType.String),
        ]
        public int? CommissionRulesetId
        {
            get
            {
                return this._commissionRulesetId;
            }
            set
            {
                this._commissionRulesetId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PreCommissionRulesetId.
        /// </summary>
        /// <value>Propiedad PreCommissionRulesetId.</value>
        [
        DescriptionKey("PRE_COMMISSION_RULESET_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRE_COMMISSION_RULESET_ID", DbType = System.Data.DbType.String),
        ]
        public int? PreCommissionRulesetId
        {
            get
            {
                return this._preCommissionRulesetId;
            }
            set
            {
                this._preCommissionRulesetId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsRequest.
        /// </summary>
        /// <value>Propiedad IsRequest.</value>
        [
        DescriptionKey("IS_REQUEST_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_REQUEST", DbType = System.Data.DbType.String),
        ]
        public bool IsRequest
        {
            get
            {
                return this._isRequest;
            }
            set
            {
                this._isRequest = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsFlatRate.
        /// </summary>
        /// <value>Propiedad IsFlatRate.</value>
        [
        DescriptionKey("IS_FLAT_RATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_FLAT_RATE", DbType = System.Data.DbType.String),
        ]
        public bool IsFlatRate
        {
            get
            {
                return this._isFlatRate;
            }
            set
            {
                this._isFlatRate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsCollective.
        /// </summary>
        /// <value>Propiedad IsCollective.</value>
        [
        DescriptionKey("IS_COLLECTIVE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IS_COLLECTIVE", DbType = System.Data.DbType.String),
        ]
        public bool? IsCollective
        {
            get
            {
                return this._isCollective;
            }
            set
            {
                this._isCollective = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CalculateMinPremium.
        /// </summary>
        /// <value>Propiedad CalculateMinPremium.</value>
        [
        DescriptionKey("CALCULATE_MIN_PREMIUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CALCULATE_MIN_PREMIUM", DbType = System.Data.DbType.String),
        ]
        public bool? CalculateMinPremium
        {
            get
            {
                return this._calculateMinPremium == null ? false : this._calculateMinPremium;
            }
            set
            {
                this._calculateMinPremium = value;
            }
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsInteractive.
        /// </summary>
        /// <value>Propiedad IsInteractive.</value>
        [
        DescriptionKey("IS_INTERACTIVE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IS_INTERACTIVE", DbType = System.Data.DbType.String),
        ]
        public bool? IsInteractive
        {
            get
            {
                return this._isInteractive;
            }
            set
            {
                this._isInteractive = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMassive.
        /// </summary>
        /// <value>Propiedad IsMassive.</value>
        [
        DescriptionKey("IS_MASSIVE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IS_MASSIVE", DbType = System.Data.DbType.String),
        ]
        public bool? IsMassive
        {
            get
            {
                return this._isMassive;
            }
            set
            {
                this._isMassive = value;
            }
        }
    }
}