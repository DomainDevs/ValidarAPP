/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.QuotationClause.dict v1.0
 * FileSize=4010 Header=255 CRC=1434516636
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad QuotationClause.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.QuotationClause.dict"),
    Serializable(),
    DescriptionKey("QUOTATION_CLAUSE_ENTITY"),
    TableMap(TableName = "QUOTATION_CLAUSE", Schema = "QUO"),
    ]
    public partial class QuotationClause :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string QuotationId = "QuotationId";
            public static readonly string ClauseId = "ClauseId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="clauseId">Propiedad clave ClauseId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId, int clauseId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.QuotationId, quotationId);
            keys.Add(Properties.ClauseId, clauseId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="clauseId">Propiedad clave ClauseId.</param>
        public static PrimaryKey CreatePrimaryKey(int quotationId, int clauseId)
        {
            return InternalCreatePrimaryKey<QuotationClause>(quotationId, clauseId);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="quotationId">QuotationId key property.</param>
        /// <param name="clauseId">ClauseId key property.</param>
        public QuotationClause(int quotationId, int clauseId) :
            this(QuotationClause.CreatePrimaryKey(quotationId, clauseId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public QuotationClause(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int QuotationId
        {
            get
            {
                return (int)this._primaryKey[Properties.QuotationId];
            }
            set
            {
                this._primaryKey[Properties.QuotationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClauseId.
        /// </summary>
        /// <value>Propiedad ClauseId.</value>
        [
        DescriptionKey("CLAUSE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CLAUSE_ID", DbType = System.Data.DbType.String),
        ]
        public int ClauseId
        {
            get
            {
                return (int)this._primaryKey[Properties.ClauseId];
            }
            set
            {
                this._primaryKey[Properties.ClauseId] = value;
            }
        }

    }
}