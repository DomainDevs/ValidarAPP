/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.RiskCrop.dict v1.0
 * FileSize=12052 Header=248 CRC=786852007
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad RiskCrop.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.RiskCrop.dict"),
    Serializable(),
    DescriptionKey("RISK_CROP_ENTITY"),
    TableMap(TableName="RISK_CROP", Schema="QUO"),
    ]
    public partial class RiskCrop :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string QuotationId = "QuotationId";
			public static readonly string RiskId = "RiskId";
			public static readonly string Establishment = "Establishment";
			public static readonly string Location = "Location";
			public static readonly string CityCode = "CityCode";
			public static readonly string StateCode = "StateCode";
			public static readonly string CountryCode = "CountryCode";
			public static readonly string CropCode = "CropCode";
			public static readonly string BoardTradeCode = "BoardTradeCode";
			public static readonly string PlantDate = "PlantDate";
			public static readonly string AssuredSurface = "AssuredSurface";
			public static readonly string Yield = "Yield";
			public static readonly string SurfaceUnitCode = "SurfaceUnitCode";
			public static readonly string WeightUnitCode = "WeightUnitCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="quotationId">Propiedad clave QuotationId.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId, int riskId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.QuotationId, quotationId);
		    keys.Add(Properties.RiskId, riskId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="quotationId">Propiedad clave QuotationId.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		public static PrimaryKey CreatePrimaryKey(int quotationId, int riskId)
	    {
			return InternalCreatePrimaryKey<RiskCrop>(quotationId, riskId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Establishment.
		/// </summary>
        private string _establishment = null;
		/// <summary>
		/// Atributo para la propiedad Location.
		/// </summary>
        private string _location = null;
		/// <summary>
		/// Atributo para la propiedad CityCode.
		/// </summary>
        private int _cityCode;
		/// <summary>
		/// Atributo para la propiedad StateCode.
		/// </summary>
        private int _stateCode;
		/// <summary>
		/// Atributo para la propiedad CountryCode.
		/// </summary>
        private int _countryCode;
		/// <summary>
		/// Atributo para la propiedad CropCode.
		/// </summary>
        private int _cropCode;
		/// <summary>
		/// Atributo para la propiedad BoardTradeCode.
		/// </summary>
        private int _boardTradeCode;
		/// <summary>
		/// Atributo para la propiedad PlantDate.
		/// </summary>
        private DateTime _plantDate;
		/// <summary>
		/// Atributo para la propiedad AssuredSurface.
		/// </summary>
        private int _assuredSurface;
		/// <summary>
		/// Atributo para la propiedad Yield.
		/// </summary>
        private int _yield;
		/// <summary>
		/// Atributo para la propiedad SurfaceUnitCode.
		/// </summary>
        private int _surfaceUnitCode;
		/// <summary>
		/// Atributo para la propiedad WeightUnitCode.
		/// </summary>
        private int _weightUnitCode;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="quotationId">QuotationId key property.</param>
		/// <param name="riskId">RiskId key property.</param>
	    public RiskCrop(int quotationId, int riskId):
			this(RiskCrop.CreatePrimaryKey(quotationId, riskId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public RiskCrop(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad QuotationId.
		/// </summary>
		/// <value>Propiedad QuotationId.</value>
	    [
		DescriptionKey("QUOTATION_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="QUOTATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int QuotationId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.QuotationId];
		    }
		    set
		    {
				this._primaryKey[Properties.QuotationId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskId.
		/// </summary>
		/// <value>Propiedad RiskId.</value>
	    [
		DescriptionKey("RISK_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RISK_ID", DbType=System.Data.DbType.String),
	    ]
        public int RiskId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RiskId];
		    }
		    set
		    {
				this._primaryKey[Properties.RiskId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Establishment.
		/// </summary>
		/// <value>Propiedad Establishment.</value>
	    [
		DescriptionKey("ESTABLISHMENT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ESTABLISHMENT", DbType=System.Data.DbType.String),
	    ]
        public string Establishment
	    {
		    get
		    {
			    return this._establishment;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Establishment);
				}
				this._establishment = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Location.
		/// </summary>
		/// <value>Propiedad Location.</value>
	    [
		DescriptionKey("LOCATION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LOCATION", DbType=System.Data.DbType.String),
	    ]
        public string Location
	    {
		    get
		    {
			    return this._location;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Location);
				}
				this._location = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CityCode.
		/// </summary>
		/// <value>Propiedad CityCode.</value>
	    [
		DescriptionKey("CITY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CityCode
	    {
		    get
		    {
			    return this._cityCode;
		    }
		    set
		    {
				this._cityCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StateCode.
		/// </summary>
		/// <value>Propiedad StateCode.</value>
	    [
		DescriptionKey("STATE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="STATE_CD", DbType=System.Data.DbType.String),
	    ]
        public int StateCode
	    {
		    get
		    {
			    return this._stateCode;
		    }
		    set
		    {
				this._stateCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CountryCode.
		/// </summary>
		/// <value>Propiedad CountryCode.</value>
	    [
		DescriptionKey("COUNTRY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COUNTRY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CountryCode
	    {
		    get
		    {
			    return this._countryCode;
		    }
		    set
		    {
				this._countryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CropCode.
		/// </summary>
		/// <value>Propiedad CropCode.</value>
	    [
		DescriptionKey("CROP_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CROP_CD", DbType=System.Data.DbType.String),
	    ]
        public int CropCode
	    {
		    get
		    {
			    return this._cropCode;
		    }
		    set
		    {
				this._cropCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BoardTradeCode.
		/// </summary>
		/// <value>Propiedad BoardTradeCode.</value>
	    [
		DescriptionKey("BOARD_TRADE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BOARD_TRADE_CD", DbType=System.Data.DbType.String),
	    ]
        public int BoardTradeCode
	    {
		    get
		    {
			    return this._boardTradeCode;
		    }
		    set
		    {
				this._boardTradeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PlantDate.
		/// </summary>
		/// <value>Propiedad PlantDate.</value>
	    [
		DescriptionKey("PLANT_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PLANT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime PlantDate
	    {
		    get
		    {
			    return this._plantDate;
		    }
		    set
		    {
				this._plantDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AssuredSurface.
		/// </summary>
		/// <value>Propiedad AssuredSurface.</value>
	    [
		DescriptionKey("ASSURED_SURFACE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ASSURED_SURFACE", DbType=System.Data.DbType.String),
	    ]
        public int AssuredSurface
	    {
		    get
		    {
			    return this._assuredSurface;
		    }
		    set
		    {
				this._assuredSurface = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Yield.
		/// </summary>
		/// <value>Propiedad Yield.</value>
	    [
		DescriptionKey("YIELD_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="YIELD", DbType=System.Data.DbType.String),
	    ]
        public int Yield
	    {
		    get
		    {
			    return this._yield;
		    }
		    set
		    {
				this._yield = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SurfaceUnitCode.
		/// </summary>
		/// <value>Propiedad SurfaceUnitCode.</value>
	    [
		DescriptionKey("SURFACE_UNIT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SURFACE_UNIT_CD", DbType=System.Data.DbType.String),
	    ]
        public int SurfaceUnitCode
	    {
		    get
		    {
			    return this._surfaceUnitCode;
		    }
		    set
		    {
				this._surfaceUnitCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad WeightUnitCode.
		/// </summary>
		/// <value>Propiedad WeightUnitCode.</value>
	    [
		DescriptionKey("WEIGHT_UNIT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="WEIGHT_UNIT_CD", DbType=System.Data.DbType.String),
	    ]
        public int WeightUnitCode
	    {
		    get
		    {
			    return this._weightUnitCode;
		    }
		    set
		    {
				this._weightUnitCode = value;
			}
	    }

    }
}