/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.CoCoverage.dict v1.0
 * FileSize=8224 Header=250 CRC=1507848884
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad CoCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.CoCoverage.dict"),
    Serializable(),
    DescriptionKey("CO_COVERAGE_ENTITY"),
    TableMap(TableName = "CO_COVERAGE", Schema = "QUO"),
    ]
    public partial class CoCoverage :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CoverageId = "CoverageId";
            public static readonly string CoverageNum = "CoverageNum";
            public static readonly string IsImpression = "IsImpression";
            public static readonly string PrintDescription = "PrintDescription";
            public static readonly string PrintDescriptionLimit = "PrintDescriptionLimit";
            public static readonly string IsChild = "IsChild";
            public static readonly string IsAccMinPremium = "IsAccMinPremium";
            public static readonly string IsAssistance = "IsAssistance";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="coverageId">Propiedad clave CoverageId.</param>
        /// <param name="coverageNum">Propiedad clave CoverageNum.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int coverageId, int coverageNum)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CoverageId, coverageId);
            keys.Add(Properties.CoverageNum, coverageNum);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="coverageId">Propiedad clave CoverageId.</param>
        /// <param name="coverageNum">Propiedad clave CoverageNum.</param>
        public static PrimaryKey CreatePrimaryKey(int coverageId, int coverageNum)
        {
            return InternalCreatePrimaryKey<CoCoverage>(coverageId, coverageNum);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IsImpression.
        /// </summary>
        private bool _isImpression;
        /// <summary>
        /// Atributo para la propiedad PrintDescription.
        /// </summary>
        private string _printDescription = null;
        /// <summary>
        /// Atributo para la propiedad PrintDescriptionLimit.
        /// </summary>
        private string _printDescriptionLimit = null;
        /// <summary>
        /// Atributo para la propiedad IsChild.
        /// </summary>
        private bool _isChild;
        /// <summary>
        /// Atributo para la propiedad IsAccMinPremium.
        /// </summary>
        private bool _isAccMinPremium;
        /// <summary>
        /// Atributo para la propiedad IsAssistance.
        /// </summary>
        private bool _isAssistance;
        /// <summary>
        /// Atributo para la propiedad IsSeriousOffer.
        /// </summary>
        private bool _isSeriousOffer;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="coverageId">CoverageId key property.</param>
        /// <param name="coverageNum">CoverageNum key property.</param>
        public CoCoverage(int coverageId, int coverageNum) :
            this(CoCoverage.CreatePrimaryKey(coverageId, coverageNum), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoCoverage(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageId.
        /// </summary>
        /// <value>Propiedad CoverageId.</value>
        [
        DescriptionKey("COVERAGE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int CoverageId
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageId];
            }
            set
            {
                this._primaryKey[Properties.CoverageId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageNum.
        /// </summary>
        /// <value>Propiedad CoverageNum.</value>
        [
        DescriptionKey("COVERAGE_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERAGE_NUM", DbType = System.Data.DbType.String),
        ]
        public int CoverageNum
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageNum];
            }
            set
            {
                this._primaryKey[Properties.CoverageNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsImpression.
        /// </summary>
        /// <value>Propiedad IsImpression.</value>
        [
        DescriptionKey("IS_IMPRESSION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_IMPRESSION", DbType = System.Data.DbType.String),
        ]
        public bool IsImpression
        {
            get
            {
                return this._isImpression;
            }
            set
            {
                this._isImpression = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintDescription.
        /// </summary>
        /// <value>Propiedad PrintDescription.</value>
        [
        DescriptionKey("PRINT_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRINT_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string PrintDescription
        {
            get
            {
                return this._printDescription;
            }
            set
            {
                this._printDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintDescriptionLimit.
        /// </summary>
        /// <value>Propiedad PrintDescriptionLimit.</value>
        [
        DescriptionKey("PRINT_DESCRIPTION_LIMIT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRINT_DESCRIPTION_LIMIT", DbType = System.Data.DbType.String),
        ]
        public string PrintDescriptionLimit
        {
            get
            {
                return this._printDescriptionLimit;
            }
            set
            {
                this._printDescriptionLimit = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsChild.
        /// </summary>
        /// <value>Propiedad IsChild.</value>
        [
        DescriptionKey("IS_CHILD_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_CHILD", DbType = System.Data.DbType.String),
        ]
        public bool IsChild
        {
            get
            {
                return this._isChild;
            }
            set
            {
                this._isChild = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsAccMinPremium.
        /// </summary>
        /// <value>Propiedad IsAccMinPremium.</value>
        [
        DescriptionKey("IS_ACC_MIN_PREMIUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ACC_MIN_PREMIUM", DbType = System.Data.DbType.String),
        ]
        public bool IsAccMinPremium
        {
            get
            {
                return this._isAccMinPremium;
            }
            set
            {
                this._isAccMinPremium = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsAssistance.
        /// </summary>
        /// <value>Propiedad IsAssistance.</value>
        [
        DescriptionKey("IS_ASSISTANCE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ASSISTANCE", DbType = System.Data.DbType.String),
        ]
        public bool IsAssistance
        {
            get
            {
                return this._isAssistance;
            }
            set
            {
                this._isAssistance = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsSeriousOffer.
        /// </summary>
        /// <value>Propiedad IsSeriousOffer.</value>
        [
        DescriptionKey("IS_SERIOUS_OFFER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_SERIOUS_OFFER", DbType = System.Data.DbType.String),
        ]
        public bool IsSeriousOffer
        {
            get
            {
                return this._isSeriousOffer;
            }
            set
            {
                this._isSeriousOffer = value;
            }
        }
    }
}