/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.CoRiskSurety.dict v1.0
 * FileSize=6471 Header=252 CRC=3433836096
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad CoRiskSurety.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.CoRiskSurety.dict"),
    Serializable(),
    DescriptionKey("CO_RISK_SURETY_ENTITY"),
    TableMap(TableName = "CO_RISK_SURETY", Schema = "QUO"),
    ]
    public partial class CoRiskSurety :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string QuotationId = "QuotationId";
            public static readonly string RiskId = "RiskId";
            public static readonly string NameNum = "NameNum";
            public static readonly string InsuredId = "InsuredId";
            public static readonly string AddressId = "AddressId";
            public static readonly string PhoneId = "PhoneId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId, int riskId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.QuotationId, quotationId);
            keys.Add(Properties.RiskId, riskId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        public static PrimaryKey CreatePrimaryKey(int quotationId, int riskId)
        {
            return InternalCreatePrimaryKey<CoRiskSurety>(quotationId, riskId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad NameNum.
        /// </summary>
        private int? _nameNum = null;
        /// <summary>
        /// Atributo para la propiedad InsuredId.
        /// </summary>
        private int _insuredId;
        /// <summary>
        /// Atributo para la propiedad AddressId.
        /// </summary>
        private int _addressId;
        /// <summary>
        /// Atributo para la propiedad PhoneId.
        /// </summary>
        private int _phoneId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="quotationId">QuotationId key property.</param>
        /// <param name="riskId">RiskId key property.</param>
        public CoRiskSurety(int quotationId, int riskId) :
            this(CoRiskSurety.CreatePrimaryKey(quotationId, riskId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoRiskSurety(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int QuotationId
        {
            get
            {
                return (int)this._primaryKey[Properties.QuotationId];
            }
            set
            {
                this._primaryKey[Properties.QuotationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskId];
            }
            set
            {
                this._primaryKey[Properties.RiskId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad NameNum.
        /// </summary>
        /// <value>Propiedad NameNum.</value>
        [
        DescriptionKey("NAME_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NAME_NUM", DbType = System.Data.DbType.String),
        ]
        public int? NameNum
        {
            get
            {
                return this._nameNum;
            }
            set
            {
                this._nameNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredId.
        /// </summary>
        /// <value>Propiedad InsuredId.</value>
        [
        DescriptionKey("INSURED_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INSURED_ID", DbType = System.Data.DbType.String),
        ]
        public int InsuredId
        {
            get
            {
                return this._insuredId;
            }
            set
            {
                this._insuredId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AddressId.
        /// </summary>
        /// <value>Propiedad AddressId.</value>
        [
        DescriptionKey("ADDRESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ADDRESS_ID", DbType = System.Data.DbType.String),
        ]
        public int AddressId
        {
            get
            {
                return this._addressId;
            }
            set
            {
                this._addressId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PhoneId.
        /// </summary>
        /// <value>Propiedad PhoneId.</value>
        [
        DescriptionKey("PHONE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PHONE_ID", DbType = System.Data.DbType.String),
        ]
        public int PhoneId
        {
            get
            {
                return this._phoneId;
            }
            set
            {
                this._phoneId = value;
            }
        }

    }
}