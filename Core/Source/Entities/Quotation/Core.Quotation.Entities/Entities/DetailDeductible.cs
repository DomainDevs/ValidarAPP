/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.DetailDeductible.dict v1.0
 * FileSize=5884 Header=256 CRC=2721503595
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad DetailDeductible.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.DetailDeductible.dict"),
    Serializable(),
    DescriptionKey("DETAIL_DEDUCTIBLE_ENTITY"),
    TableMap(TableName = "DETAIL_DEDUCTIBLE", Schema = "QUO"),
    ]
    public partial class DetailDeductible :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string DetailId = "DetailId";
            public static readonly string DeductValue = "DeductValue";
            public static readonly string DeductUnitCode = "DeductUnitCode";
            public static readonly string DeductSubjectCode = "DeductSubjectCode";
            public static readonly string CurrencyCode = "CurrencyCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="detailId">Propiedad clave DetailId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int detailId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.DetailId, detailId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="detailId">Propiedad clave DetailId.</param>
        public static PrimaryKey CreatePrimaryKey(int detailId)
        {
            return InternalCreatePrimaryKey<DetailDeductible>(detailId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DeductValue.
        /// </summary>
        private decimal _deductValue;
        /// <summary>
        /// Atributo para la propiedad DeductUnitCode.
        /// </summary>
        private int _deductUnitCode;
        /// <summary>
        /// Atributo para la propiedad DeductSubjectCode.
        /// </summary>
        private int? _deductSubjectCode = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int? _currencyCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="detailId">DetailId key property.</param>
        public DetailDeductible(int detailId) :
            this(DetailDeductible.CreatePrimaryKey(detailId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public DetailDeductible(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad DetailId.
        /// </summary>
        /// <value>Propiedad DetailId.</value>
        [
        DescriptionKey("DETAIL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "DETAIL_ID", DbType = System.Data.DbType.String),
        ]
        public int DetailId
        {
            get
            {
                return (int)this._primaryKey[Properties.DetailId];
            }
            set
            {
                this._primaryKey[Properties.DetailId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeductValue.
        /// </summary>
        /// <value>Propiedad DeductValue.</value>
        [
        DescriptionKey("DEDUCT_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DEDUCT_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal DeductValue
        {
            get
            {
                return this._deductValue;
            }
            set
            {
                this._deductValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeductUnitCode.
        /// </summary>
        /// <value>Propiedad DeductUnitCode.</value>
        [
        DescriptionKey("DEDUCT_UNIT_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DEDUCT_UNIT_CD", DbType = System.Data.DbType.String),
        ]
        public int DeductUnitCode
        {
            get
            {
                return this._deductUnitCode;
            }
            set
            {
                this._deductUnitCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeductSubjectCode.
        /// </summary>
        /// <value>Propiedad DeductSubjectCode.</value>
        [
        DescriptionKey("DEDUCT_SUBJECT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEDUCT_SUBJECT_CD", DbType = System.Data.DbType.String),
        ]
        public int? DeductSubjectCode
        {
            get
            {
                return this._deductSubjectCode;
            }
            set
            {
                this._deductSubjectCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

    }
}