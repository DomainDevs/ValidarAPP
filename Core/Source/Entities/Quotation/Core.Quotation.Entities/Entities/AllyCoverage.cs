/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.AllyCoverage.dict v1.0
 * FileSize=4833 Header=252 CRC=3385390758
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad AllyCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.AllyCoverage.dict"),
    Serializable(),
    DescriptionKey("ALLY_COVERAGE_ENTITY"),
    TableMap(TableName = "ALLY_COVERAGE", Schema = "QUO"),
    ]
    public partial class AllyCoverage :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string AllyCoverageId = "AllyCoverageId";
            public static readonly string CoverageId = "CoverageId";
            public static readonly string CoveragePercentage = "CoveragePercentage";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="allyCoverageId">Propiedad clave AllyCoverageId.</param>
        /// <param name="coverageId">Propiedad clave CoverageId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int allyCoverageId, int coverageId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AllyCoverageId, allyCoverageId);
            keys.Add(Properties.CoverageId, coverageId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>17/08/2018</date>
        /// <purpose>REQ_58</purpose>
        /// <returns></returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AllyCoverageId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>17/08/2018</date>
        /// <purpose>REQ_58</purpose>
        /// <returns></returns>
        public static PrimaryKey CreatePrimaryKey() { return InternalCreatePrimaryKey<AllyCoverage>(); }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="allyCoverageId">Propiedad clave AllyCoverageId.</param>
        /// <param name="coverageId">Propiedad clave CoverageId.</param>
        public static PrimaryKey CreatePrimaryKey(int allyCoverageId, int coverageId)
        {
            return InternalCreatePrimaryKey<AllyCoverage>(allyCoverageId, coverageId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CoveragePercentage.
        /// </summary>
        private decimal _coveragePercentage;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="allyCoverageId">AllyCoverageId key property.</param>
        /// <param name="coverageId">CoverageId key property.</param>
        public AllyCoverage(int allyCoverageId, int coverageId) :
            this(AllyCoverage.CreatePrimaryKey(allyCoverageId, coverageId), null)
        {
        }
        /// <summary>
        /// Constructor Vacio
        /// </summary>
        /// <author>Germán F. Grimaldo </author>
        /// <date>17/08/2018</date>
        /// <purpose>REQ_58</purpose>
        public AllyCoverage() :
                   this(AllyCoverage.CreatePrimaryKey(), null)
        { }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public AllyCoverage(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad AllyCoverageId.
        /// </summary>
        /// <value>Propiedad AllyCoverageId.</value>
        [
        DescriptionKey("ALLY_COVERAGE_ID_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "ALLY_COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int AllyCoverageId
        {
            get
            {
                return (int)this._primaryKey[Properties.AllyCoverageId];
            }
            set
            {
                this._primaryKey[Properties.AllyCoverageId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageId.
        /// </summary>
        /// <value>Propiedad CoverageId.</value>
        [
        DescriptionKey("COVERAGE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int CoverageId
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageId];
            }
            set
            {
                this._primaryKey[Properties.CoverageId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoveragePercentage.
        /// </summary>
        /// <value>Propiedad CoveragePercentage.</value>
        [
        DescriptionKey("COVERAGE_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COVERAGE_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal CoveragePercentage
        {
            get
            {
                return this._coveragePercentage;
            }
            set
            {
                this._coveragePercentage = value;
            }
        }

    }
}