/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.MassiveLoadFields.dict v1.0
 * FileSize=5456 Header=257 CRC=1069217511
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad MassiveLoadFields.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.MassiveLoadFields.dict"),
    Serializable(),
    DescriptionKey("MASSIVE_LOAD_FIELDS_ENTITY"),
    TableMap(TableName = "MASSIVE_LOAD_FIELDS", Schema = "QUO"),
    ]
    public partial class MassiveLoadFields :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string MassiveFieldId = "MassiveFieldId";
            public static readonly string MassiveFieldName = "MassiveFieldName";
            public static readonly string MassiveFieldDescription = "MassiveFieldDescription";
            public static readonly string FieldLong = "FieldLong";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.MassiveFieldId, null);

            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey(typeof(MassiveLoadFields));
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="massiveFieldId">Propiedad clave MassiveFieldId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int massiveFieldId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.MassiveFieldId, massiveFieldId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="massiveFieldId">Propiedad clave MassiveFieldId.</param>
        public static PrimaryKey CreatePrimaryKey(int massiveFieldId)
        {
            return InternalCreatePrimaryKey<MassiveLoadFields>(massiveFieldId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad MassiveFieldName.
        /// </summary>
        private string _massiveFieldName = null;
        /// <summary>
        /// Atributo para la propiedad MassiveFieldDescription.
        /// </summary>
        private string _massiveFieldDescription = null;
        /// <summary>
        /// Atributo para la propiedad FieldLong.
        /// </summary>
        private int? _fieldLong = null;
        //*** Object Constructors ********************************


        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves que no son autonumeradas.
        /// </summary>
        /// <returns>Primary key.</returns>
        public MassiveLoadFields() :
            this(MassiveLoadFields.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="massiveFieldId">MassiveFieldId key property.</param>
        public MassiveLoadFields(int massiveFieldId) :
            this(MassiveLoadFields.CreatePrimaryKey(massiveFieldId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public MassiveLoadFields(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad MassiveFieldId.
        /// </summary>
        /// <value>Propiedad MassiveFieldId.</value>
        [
        DescriptionKey("MASSIVE_FIELD_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "MASSIVE_FIELD_ID", DbType = System.Data.DbType.String),
        ]
        public int MassiveFieldId
        {
            get
            {
                return (int)this._primaryKey[Properties.MassiveFieldId];
            }
            set
            {
                this._primaryKey[Properties.MassiveFieldId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MassiveFieldName.
        /// </summary>
        /// <value>Propiedad MassiveFieldName.</value>
        [
        DescriptionKey("MASSIVE_FIELD_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MASSIVE_FIELD_NAME", DbType = System.Data.DbType.String),
        ]
        public string MassiveFieldName
        {
            get
            {
                return this._massiveFieldName;
            }
            set
            {
                this._massiveFieldName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MassiveFieldDescription.
        /// </summary>
        /// <value>Propiedad MassiveFieldDescription.</value>
        [
        DescriptionKey("MASSIVE_FIELD_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MASSIVE_FIELD_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string MassiveFieldDescription
        {
            get
            {
                return this._massiveFieldDescription;
            }
            set
            {
                this._massiveFieldDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FieldLong.
        /// </summary>
        /// <value>Propiedad FieldLong.</value>
        [
        DescriptionKey("FIELD_LONG_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FIELD_LONG", DbType = System.Data.DbType.String),
        ]
        public int? FieldLong
        {
            get
            {
                return this._fieldLong;
            }
            set
            {
                this._fieldLong = value;
            }
        }

    }
}