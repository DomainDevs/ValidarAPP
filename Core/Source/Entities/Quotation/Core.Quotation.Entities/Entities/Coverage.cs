/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.Coverage.dict v1.0
 * FileSize=9521 Header=248 CRC=1608022443
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad Coverage.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.Coverage.dict"),
    Serializable(),
    DescriptionKey("COVERAGE_ENTITY"),
    TableMap(TableName = "COVERAGE", Schema = "QUO"),
    ]
    public partial class Coverage :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CoverageId = "CoverageId";
            public static readonly string PerilCode = "PerilCode";
            public static readonly string SubLineBusinessCode = "SubLineBusinessCode";
            public static readonly string LineBusinessCode = "LineBusinessCode";
            public static readonly string InsuredObjectId = "InsuredObjectId";
            public static readonly string PrintDescription = "PrintDescription";
            public static readonly string IsPrimary = "IsPrimary";
            public static readonly string ExpirationDate = "ExpirationDate";
            public static readonly string CompositionTypeCode = "CompositionTypeCode";
            public static readonly string RuleSetId = "RuleSetId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>17/08/2018</date>
        /// <purpose>REQ_058</purpose>
        /// <returns></returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CoverageId, null);

            return new PrimaryKey<T>(keys);
        }
        protected static PrimaryKey InternalCreatePrimaryKey()
        {
            var keys = new Dictionary<string, object>
            {
                { Properties.CoverageId,null }
            };
            return new PrimaryKey<Coverage>(keys);
        }

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int coverageId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CoverageId, coverageId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>23/08/2018</date>
        /// <purpose>REQ_058</purpose>
        /// <returns></returns>
        public static PrimaryKey CreatePrimaryKey() { return InternalCreatePrimaryKey<Coverage>(); }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="coverageId">Propiedad clave CoverageId.</param>
        public static PrimaryKey CreatePrimaryKey(int coverageId)
        {
            return InternalCreatePrimaryKey<Coverage>(coverageId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PerilCode.
        /// </summary>
        private int _perilCode;
        /// <summary>
        /// Atributo para la propiedad SubLineBusinessCode.
        /// </summary>
        private int _subLineBusinessCode;
        /// <summary>
        /// Atributo para la propiedad LineBusinessCode.
        /// </summary>
        private int _lineBusinessCode;
        /// <summary>
        /// Atributo para la propiedad InsuredObjectId.
        /// </summary>
        private int _insuredObjectId;
        /// <summary>
        /// Atributo para la propiedad PrintDescription.
        /// </summary>
        private string _printDescription = null;
        /// <summary>
        /// Atributo para la propiedad IsPrimary.
        /// </summary>
        private bool _isPrimary;
        /// <summary>
        /// Atributo para la propiedad ExpirationDate.
        /// </summary>
        private DateTime? _expirationDate = null;
        /// <summary>
        /// Atributo para la propiedad CompositionTypeCode.
        /// </summary>
        private int? _compositionTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad RuleSetId.
        /// </summary>
        private int? _ruleSetId = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="coverageId">CoverageId key property.</param>
        public Coverage(int coverageId) :
            this(Coverage.CreatePrimaryKey(coverageId), null)
        {
        }
        /// <summary>
        /// Constructor Vacio
        /// </summary>
        /// <author>Germán F. Grimaldo </author>
        /// <date>23/08/2018</date>
        /// <purpose>REQ_058</purpose>
        public Coverage() :
                   this(Coverage.CreatePrimaryKey(), null)
        { }
        //Se comenta debido a que debe validar contra PrimaryKey Primero
        ///// <summary>
        ///// Constructor de instancia con id autogenerado
        ///// </summary>
        //public Coverage() : this(InternalCreatePrimaryKey(), null) { }

        /// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Coverage(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoverageId.
        /// </summary>
        /// <value>Propiedad CoverageId.</value>
        [
        DescriptionKey("COVERAGE_ID_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int CoverageId
        {
            get
            {
                return (int)this._primaryKey[Properties.CoverageId];
            }
            set
            {
                this._primaryKey[Properties.CoverageId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PerilCode.
        /// </summary>
        /// <value>Propiedad PerilCode.</value>
        [
        DescriptionKey("PERIL_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PERIL_CD", DbType = System.Data.DbType.String),
        ]
        public int PerilCode
        {
            get
            {
                return this._perilCode;
            }
            set
            {
                this._perilCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubLineBusinessCode.
        /// </summary>
        /// <value>Propiedad SubLineBusinessCode.</value>
        [
        DescriptionKey("SUB_LINE_BUSINESS_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SUB_LINE_BUSINESS_CD", DbType = System.Data.DbType.String),
        ]
        public int SubLineBusinessCode
        {
            get
            {
                return this._subLineBusinessCode;
            }
            set
            {
                this._subLineBusinessCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LineBusinessCode.
        /// </summary>
        /// <value>Propiedad LineBusinessCode.</value>
        [
        DescriptionKey("LINE_BUSINESS_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LINE_BUSINESS_CD", DbType = System.Data.DbType.String),
        ]
        public int LineBusinessCode
        {
            get
            {
                return this._lineBusinessCode;
            }
            set
            {
                this._lineBusinessCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredObjectId.
        /// </summary>
        /// <value>Propiedad InsuredObjectId.</value>
        [
        DescriptionKey("INSURED_OBJECT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INSURED_OBJECT_ID", DbType = System.Data.DbType.String),
        ]
        public int InsuredObjectId
        {
            get
            {
                return this._insuredObjectId;
            }
            set
            {
                this._insuredObjectId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintDescription.
        /// </summary>
        /// <value>Propiedad PrintDescription.</value>
        [
        DescriptionKey("PRINT_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PRINT_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string PrintDescription
        {
            get
            {
                return this._printDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PrintDescription);
                }
                this._printDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsPrimary.
        /// </summary>
        /// <value>Propiedad IsPrimary.</value>
        [
        DescriptionKey("IS_PRIMARY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_PRIMARY", DbType = System.Data.DbType.String),
        ]
        public bool IsPrimary
        {
            get
            {
                return this._isPrimary;
            }
            set
            {
                this._isPrimary = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExpirationDate.
        /// </summary>
        /// <value>Propiedad ExpirationDate.</value>
        [
        DescriptionKey("EXPIRATION_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EXPIRATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? ExpirationDate
        {
            get
            {
                return this._expirationDate;
            }
            set
            {
                this._expirationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CompositionTypeCode.
        /// </summary>
        /// <value>Propiedad CompositionTypeCode.</value>
        [
        DescriptionKey("COMPOSITION_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMPOSITION_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? CompositionTypeCode
        {
            get
            {
                return this._compositionTypeCode;
            }
            set
            {
                this._compositionTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleSetId.
        /// </summary>
        /// <value>Propiedad RuleSetId.</value>
        [
        DescriptionKey("RULE_SET_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "RULE_SET_ID", DbType = System.Data.DbType.String),
        ]
        public int? RuleSetId
        {
            get
            {
                return this._ruleSetId;
            }
            set
            {
                this._ruleSetId = value;
            }
        }

    }
}