/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.ClauseLevel.dict v1.0
 * FileSize=5175 Header=251 CRC=3744947092
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad ClauseLevel.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.ClauseLevel.dict"),
    Serializable(),
    DescriptionKey("CLAUSE_LEVEL_ENTITY"),
    TableMap(TableName = "CLAUSE_LEVEL", Schema = "QUO"),
    ]
    public partial class ClauseLevel :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ClauseLevelId = "ClauseLevelId";
            public static readonly string ClauseId = "ClauseId";
            public static readonly string ConditionLevelId = "ConditionLevelId";
            public static readonly string IsMandatory = "IsMandatory";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="clauseLevelId">Propiedad clave ClauseLevelId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int clauseLevelId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ClauseLevelId, clauseLevelId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="clauseLevelId">Propiedad clave ClauseLevelId.</param>
        public static PrimaryKey CreatePrimaryKey(int clauseLevelId)
        {
            return InternalCreatePrimaryKey<ClauseLevel>(clauseLevelId);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<ClauseLevel>();
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ClauseLevelId, null);

            return new PrimaryKey<T>(keys);
        }

        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ClauseId.
        /// </summary>
        private int _clauseId;
        /// <summary>
        /// Atributo para la propiedad ConditionLevelId.
        /// </summary>
        private int? _conditionLevelId = null;
        /// <summary>
        /// Atributo para la propiedad IsMandatory.
        /// </summary>
        private bool _isMandatory;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public ClauseLevel() :
            this(ClauseLevel.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="clauseLevelId">ClauseLevelId key property.</param>
        public ClauseLevel(int clauseLevelId) :
            this(ClauseLevel.CreatePrimaryKey(clauseLevelId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ClauseLevel(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClauseLevelId.
        /// </summary>
        /// <value>Propiedad ClauseLevelId.</value>
        [
        DescriptionKey("CLAUSE_LEVEL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CLAUSE_LEVEL_ID", DbType = System.Data.DbType.String),
        ]
        public int ClauseLevelId
        {
            get
            {
                return (int)this._primaryKey[Properties.ClauseLevelId];
            }
            set
            {
                this._primaryKey[Properties.ClauseLevelId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClauseId.
        /// </summary>
        /// <value>Propiedad ClauseId.</value>
        [
        DescriptionKey("CLAUSE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CLAUSE_ID", DbType = System.Data.DbType.String),
        ]
        public int ClauseId
        {
            get
            {
                return this._clauseId;
            }
            set
            {
                this._clauseId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConditionLevelId.
        /// </summary>
        /// <value>Propiedad ConditionLevelId.</value>
        [
        DescriptionKey("CONDITION_LEVEL_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONDITION_LEVEL_ID", DbType = System.Data.DbType.String),
        ]
        public int? ConditionLevelId
        {
            get
            {
                return this._conditionLevelId;
            }
            set
            {
                this._conditionLevelId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMandatory.
        /// </summary>
        /// <value>Propiedad IsMandatory.</value>
        [
        DescriptionKey("IS_MANDATORY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_MANDATORY", DbType = System.Data.DbType.String),
        ]
        public bool IsMandatory
        {
            get
            {
                return this._isMandatory;
            }
            set
            {
                this._isMandatory = value;
            }
        }

    }
}