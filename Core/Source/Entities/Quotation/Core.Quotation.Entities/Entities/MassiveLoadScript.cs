/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.MassiveLoadScript.dict v1.0
 * FileSize=9400 Header=257 CRC=3363412094
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad MassiveLoadScript.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.MassiveLoadScript.dict"),
    Serializable(),
    DescriptionKey("MASSIVE_LOAD_SCRIPT_ENTITY"),
    TableMap(TableName = "MASSIVE_LOAD_SCRIPT", Schema = "QUO"),
    ]
    public partial class MassiveLoadScript :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string MassiveLoadScriptId = "MassiveLoadScriptId";
            public static readonly string MassiveLoadId = "MassiveLoadId";
            public static readonly string MassiveLoadCollectiveVehicleId = "MassiveLoadCollectiveVehicleId";
            public static readonly string ScriptId = "ScriptId";
            public static readonly string EntityId = "EntityId";
            public static readonly string ConceptId = "ConceptId";
            public static readonly string ConceptValue = "ConceptValue";
            public static readonly string ExcelRowError = "ExcelRowError";
            public static readonly string ErrorMessage = "ErrorMessage";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="massiveLoadScriptId">Propiedad clave MassiveLoadScriptId.</param>
        /// <param name="massiveLoadId">Propiedad clave MassiveLoadId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int massiveLoadScriptId, int massiveLoadId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.MassiveLoadScriptId, massiveLoadScriptId);
            keys.Add(Properties.MassiveLoadId, massiveLoadId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="massiveLoadScriptId">Propiedad clave MassiveLoadScriptId.</param>
        /// <param name="massiveLoadId">Propiedad clave MassiveLoadId.</param>
        public static PrimaryKey CreatePrimaryKey(int massiveLoadScriptId, int massiveLoadId)
        {
            return InternalCreatePrimaryKey<MassiveLoadScript>(massiveLoadScriptId, massiveLoadId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad MassiveLoadCollectiveVehicleId.
        /// </summary>
        private int _massiveLoadCollectiveVehicleId;
        /// <summary>
        /// Atributo para la propiedad ScriptId.
        /// </summary>
        private int _scriptId;
        /// <summary>
        /// Atributo para la propiedad EntityId.
        /// </summary>
        private int _entityId;
        /// <summary>
        /// Atributo para la propiedad ConceptId.
        /// </summary>
        private int _conceptId;
        /// <summary>
        /// Atributo para la propiedad ConceptValue.
        /// </summary>
        private string _conceptValue = null;
        /// <summary>
        /// Atributo para la propiedad ExcelRowError.
        /// </summary>
        private int _excelRowError;
        /// <summary>
        /// Atributo para la propiedad ErrorMessage.
        /// </summary>
        private string _errorMessage = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="massiveLoadScriptId">MassiveLoadScriptId key property.</param>
        /// <param name="massiveLoadId">MassiveLoadId key property.</param>
        public MassiveLoadScript(int massiveLoadScriptId, int massiveLoadId) :
            this(MassiveLoadScript.CreatePrimaryKey(massiveLoadScriptId, massiveLoadId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public MassiveLoadScript(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad MassiveLoadScriptId.
        /// </summary>
        /// <value>Propiedad MassiveLoadScriptId.</value>
        [
        DescriptionKey("MASSIVE_LOAD_SCRIPT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "MASSIVE_LOAD_SCRIPT_ID", DbType = System.Data.DbType.String),
        ]
        public int MassiveLoadScriptId
        {
            get
            {
                return (int)this._primaryKey[Properties.MassiveLoadScriptId];
            }
            set
            {
                this._primaryKey[Properties.MassiveLoadScriptId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MassiveLoadId.
        /// </summary>
        /// <value>Propiedad MassiveLoadId.</value>
        [
        DescriptionKey("MASSIVE_LOAD_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "MASSIVE_LOAD_ID", DbType = System.Data.DbType.String),
        ]
        public int MassiveLoadId
        {
            get
            {
                return (int)this._primaryKey[Properties.MassiveLoadId];
            }
            set
            {
                this._primaryKey[Properties.MassiveLoadId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MassiveLoadCollectiveVehicleId.
        /// </summary>
        /// <value>Propiedad MassiveLoadCollectiveVehicleId.</value>
        [
        DescriptionKey("MASSIVE_LOAD_COLLECTIVE_VEHICLE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MASSIVE_LOAD_COLLECTIVE_VEHICLE_ID", DbType = System.Data.DbType.String),
        ]
        public int MassiveLoadCollectiveVehicleId
        {
            get
            {
                return this._massiveLoadCollectiveVehicleId;
            }
            set
            {
                this._massiveLoadCollectiveVehicleId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ScriptId.
        /// </summary>
        /// <value>Propiedad ScriptId.</value>
        [
        DescriptionKey("SCRIPT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SCRIPT_ID", DbType = System.Data.DbType.String),
        ]
        public int ScriptId
        {
            get
            {
                return this._scriptId;
            }
            set
            {
                this._scriptId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EntityId.
        /// </summary>
        /// <value>Propiedad EntityId.</value>
        [
        DescriptionKey("ENTITY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENTITY_ID", DbType = System.Data.DbType.String),
        ]
        public int EntityId
        {
            get
            {
                return this._entityId;
            }
            set
            {
                this._entityId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConceptId.
        /// </summary>
        /// <value>Propiedad ConceptId.</value>
        [
        DescriptionKey("CONCEPT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONCEPT_ID", DbType = System.Data.DbType.String),
        ]
        public int ConceptId
        {
            get
            {
                return this._conceptId;
            }
            set
            {
                this._conceptId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConceptValue.
        /// </summary>
        /// <value>Propiedad ConceptValue.</value>
        [
        DescriptionKey("CONCEPT_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONCEPT_VALUE", DbType = System.Data.DbType.String),
        ]
        public string ConceptValue
        {
            get
            {
                return this._conceptValue;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.ConceptValue);
                }
                this._conceptValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExcelRowError.
        /// </summary>
        /// <value>Propiedad ExcelRowError.</value>
        [
        DescriptionKey("EXCEL_ROW_ERROR_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXCEL_ROW_ERROR", DbType = System.Data.DbType.String),
        ]
        public int ExcelRowError
        {
            get
            {
                return this._excelRowError;
            }
            set
            {
                this._excelRowError = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ErrorMessage.
        /// </summary>
        /// <value>Propiedad ErrorMessage.</value>
        [
        DescriptionKey("ERROR_MESSAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ERROR_MESSAGE", DbType = System.Data.DbType.String),
        ]
        public string ErrorMessage
        {
            get
            {
                return this._errorMessage;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.ErrorMessage);
                }
                this._errorMessage = value;
            }
        }

    }
}