/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.Clause.dict v1.0
 * FileSize=7338 Header=245 CRC=905423904
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad Clause.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.Clause.dict"),
    Serializable(),
    DescriptionKey("CLAUSE_ENTITY"),
    TableMap(TableName="CLAUSE", Schema="QUO"),
    ]
    public partial class Clause :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ClauseId = "ClauseId";
			public static readonly string ClauseName = "ClauseName";
			public static readonly string ClauseTitle = "ClauseTitle";
			public static readonly string CurrentFrom = "CurrentFrom";
			public static readonly string CurrentTo = "CurrentTo";
			public static readonly string ConditionLevelCode = "ConditionLevelCode";
			public static readonly string ClauseText = "ClauseText";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="clauseId">Propiedad clave ClauseId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int clauseId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ClauseId, clauseId);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ClauseId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="">Propiedad clave PaymentScheduleId.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Clause>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="clauseId">Propiedad clave ClauseId.</param>
        public static PrimaryKey CreatePrimaryKey(int clauseId)
	    {
			return InternalCreatePrimaryKey<Clause>(clauseId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ClauseName.
		/// </summary>
        private string _clauseName = null;
		/// <summary>
		/// Atributo para la propiedad ClauseTitle.
		/// </summary>
        private string _clauseTitle = null;
		/// <summary>
		/// Atributo para la propiedad CurrentFrom.
		/// </summary>
        private DateTime _currentFrom;
		/// <summary>
		/// Atributo para la propiedad CurrentTo.
		/// </summary>
        private DateTime? _currentTo = null;
		/// <summary>
		/// Atributo para la propiedad ConditionLevelCode.
		/// </summary>
        private int _conditionLevelCode;
		/// <summary>
		/// Atributo para la propiedad ClauseText.
		/// </summary>
        private string _clauseText = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="clauseId">ClauseId key property.</param>
	    public Clause(int clauseId):
			this(Clause.CreatePrimaryKey(clauseId), null)
	    {
	    }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="">PaymentScheduleId key property.</param>
        public Clause() :
            this(Clause.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Clause(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }
       

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClauseId.
        /// </summary>
        /// <value>Propiedad ClauseId.</value>
        [
		DescriptionKey("CLAUSE_ID_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName="CLAUSE_ID", DbType=System.Data.DbType.String),
	    ]
        public int ClauseId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ClauseId];
		    }
		    set
		    {
				this._primaryKey[Properties.ClauseId] = value;
			}
	    }

        

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClauseName.
        /// </summary>
        /// <value>Propiedad ClauseName.</value>
        [
		DescriptionKey("CLAUSE_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CLAUSE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string ClauseName
	    {
		    get
		    {
			    return this._clauseName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.ClauseName);
				}
				this._clauseName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClauseTitle.
		/// </summary>
		/// <value>Propiedad ClauseTitle.</value>
	    [
		DescriptionKey("CLAUSE_TITLE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CLAUSE_TITLE", DbType=System.Data.DbType.String),
	    ]
        public string ClauseTitle
	    {
		    get
		    {
			    return this._clauseTitle;
		    }
		    set
		    {
				this._clauseTitle = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentFrom.
		/// </summary>
		/// <value>Propiedad CurrentFrom.</value>
	    [
		DescriptionKey("CURRENT_FROM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENT_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime CurrentFrom
	    {
		    get
		    {
			    return this._currentFrom;
		    }
		    set
		    {
				this._currentFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentTo.
		/// </summary>
		/// <value>Propiedad CurrentTo.</value>
	    [
		DescriptionKey("CURRENT_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentTo
	    {
		    get
		    {
			    return this._currentTo;
		    }
		    set
		    {
				this._currentTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConditionLevelCode.
		/// </summary>
		/// <value>Propiedad ConditionLevelCode.</value>
	    [
		DescriptionKey("CONDITION_LEVEL_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CONDITION_LEVEL_CD", DbType=System.Data.DbType.String),
	    ]
        public int ConditionLevelCode
	    {
		    get
		    {
			    return this._conditionLevelCode;
		    }
		    set
		    {
				this._conditionLevelCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClauseText.
		/// </summary>
		/// <value>Propiedad ClauseText.</value>
	    [
		DescriptionKey("CLAUSE_TEXT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CLAUSE_TEXT", DbType=System.Data.DbType.String),
	    ]
        public string ClauseText
	    {
		    get
		    {
			    return this._clauseText;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.ClauseText);
				}
				this._clauseText = value;
			}
	    }

    }
}