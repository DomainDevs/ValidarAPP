/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.RiskSurety.dict v1.0
 * FileSize=10123 Header=251 CRC=2507360922
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad RiskSurety.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.RiskSurety.dict"),
    Serializable(),
    DescriptionKey("RISK_SURETY_ENTITY"),
    TableMap(TableName = "RISK_SURETY", Schema = "QUO"),
    ]
    public partial class RiskSurety :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string QuotationId = "QuotationId";
            public static readonly string RiskId = "RiskId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string SuretyContractTypeCode = "SuretyContractTypeCode";
            public static readonly string SuretyContractCategoriesCode = "SuretyContractCategoriesCode";
            public static readonly string BidNumber = "BidNumber";
            public static readonly string ProyectName = "ProyectName";
            public static readonly string FundedBy = "FundedBy";
            public static readonly string ContractAddress = "ContractAddress";
            public static readonly string ContractAmount = "ContractAmount";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId, int riskId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.QuotationId, quotationId);
            keys.Add(Properties.RiskId, riskId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="riskId">Propiedad clave RiskId.</param>
        public static PrimaryKey CreatePrimaryKey(int quotationId, int riskId)
        {
            return InternalCreatePrimaryKey<RiskSurety>(quotationId, riskId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        /// <summary>
        /// Atributo para la propiedad SuretyContractTypeCode.
        /// </summary>
        private int _suretyContractTypeCode;
        /// <summary>
        /// Atributo para la propiedad SuretyContractCategoriesCode.
        /// </summary>
        private int _suretyContractCategoriesCode;
        /// <summary>
        /// Atributo para la propiedad BidNumber.
        /// </summary>
        private string _bidNumber = null;
        /// <summary>
        /// Atributo para la propiedad ProyectName.
        /// </summary>
        private string _proyectName = null;
        /// <summary>
        /// Atributo para la propiedad FundedBy.
        /// </summary>
        private string _fundedBy = null;
        /// <summary>
        /// Atributo para la propiedad ContractAddress.
        /// </summary>
        private string _contractAddress = null;
        /// <summary>
        /// Atributo para la propiedad ContractAmount.
        /// </summary>
        private decimal _contractAmount;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="quotationId">QuotationId key property.</param>
        /// <param name="riskId">RiskId key property.</param>
        public RiskSurety(int quotationId, int riskId) :
            this(RiskSurety.CreatePrimaryKey(quotationId, riskId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RiskSurety(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int QuotationId
        {
            get
            {
                return (int)this._primaryKey[Properties.QuotationId];
            }
            set
            {
                this._primaryKey[Properties.QuotationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return (int)this._primaryKey[Properties.RiskId];
            }
            set
            {
                this._primaryKey[Properties.RiskId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SuretyContractTypeCode.
        /// </summary>
        /// <value>Propiedad SuretyContractTypeCode.</value>
        [
        DescriptionKey("SURETY_CONTRACT_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SURETY_CONTRACT_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int SuretyContractTypeCode
        {
            get
            {
                return this._suretyContractTypeCode;
            }
            set
            {
                this._suretyContractTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SuretyContractCategoriesCode.
        /// </summary>
        /// <value>Propiedad SuretyContractCategoriesCode.</value>
        [
        DescriptionKey("SURETY_CONTRACT_CATEGORIES_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SURETY_CONTRACT_CATEGORIES_CD", DbType = System.Data.DbType.String),
        ]
        public int SuretyContractCategoriesCode
        {
            get
            {
                return this._suretyContractCategoriesCode;
            }
            set
            {
                this._suretyContractCategoriesCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BidNumber.
        /// </summary>
        /// <value>Propiedad BidNumber.</value>
        [
        DescriptionKey("BID_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BID_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string BidNumber
        {
            get
            {
                return this._bidNumber;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.BidNumber);
                }
                this._bidNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProyectName.
        /// </summary>
        /// <value>Propiedad ProyectName.</value>
        [
        DescriptionKey("PROYECT_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROYECT_NAME", DbType = System.Data.DbType.String),
        ]
        public string ProyectName
        {
            get
            {
                return this._proyectName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.ProyectName);
                }
                this._proyectName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FundedBy.
        /// </summary>
        /// <value>Propiedad FundedBy.</value>
        [
        DescriptionKey("FUNDED_BY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FUNDED_BY", DbType = System.Data.DbType.String),
        ]
        public string FundedBy
        {
            get
            {
                return this._fundedBy;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.FundedBy);
                }
                this._fundedBy = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ContractAddress.
        /// </summary>
        /// <value>Propiedad ContractAddress.</value>
        [
        DescriptionKey("CONTRACT_ADDRESS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONTRACT_ADDRESS", DbType = System.Data.DbType.String),
        ]
        public string ContractAddress
        {
            get
            {
                return this._contractAddress;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.ContractAddress);
                }
                this._contractAddress = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ContractAmount.
        /// </summary>
        /// <value>Propiedad ContractAmount.</value>
        [
        DescriptionKey("CONTRACT_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONTRACT_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal ContractAmount
        {
            get
            {
                return this._contractAmount;
            }
            set
            {
                this._contractAmount = value;
            }
        }

    }
}