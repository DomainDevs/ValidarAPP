/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.MassiveLoadFieldSetRelation.dict v1.0
 * FileSize=4548 Header=267 CRC=3092776160
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad MassiveLoadFieldSetRelation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.MassiveLoadFieldSetRelation.dict"),
    Serializable(),
    DescriptionKey("MASSIVE_LOAD_FIELD_SET_RELATION_ENTITY"),
    TableMap(TableName = "MASSIVE_LOAD_FIELD_SET_RELATION", Schema = "QUO"),
    ]
    public partial class MassiveLoadFieldSetRelation :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string FieldSetId = "FieldSetId";
            public static readonly string EndoTypeCode = "EndoTypeCode";
            public static readonly string RelationId = "RelationId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="relationId">Propiedad clave RelationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int relationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RelationId, relationId);

            return new PrimaryKey<T>(keys);
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RelationId, null);

            return new PrimaryKey<T>(keys);
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<MassiveLoadFieldSetRelation>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="relationId">Propiedad clave RelationId.</param>
        public static PrimaryKey CreatePrimaryKey(int relationId)
        {
            return InternalCreatePrimaryKey<MassiveLoadFieldSetRelation>(relationId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FieldSetId.
        /// </summary>
        private int _fieldSetId;
        /// <summary>
        /// Atributo para la propiedad EndoTypeCode.
        /// </summary>
        private int _endoTypeCode;
        //*** Object Constructors ********************************

        //*** Object Constructors ********************************
        public MassiveLoadFieldSetRelation() :
          this(MassiveLoadFieldSetRelation.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="relationId">RelationId key property.</param>
        public MassiveLoadFieldSetRelation(int relationId) :
            this(MassiveLoadFieldSetRelation.CreatePrimaryKey(relationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public MassiveLoadFieldSetRelation(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad FieldSetId.
        /// </summary>
        /// <value>Propiedad FieldSetId.</value>
        [
        DescriptionKey("FIELD_SET_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FIELD_SET_ID", DbType = System.Data.DbType.String),
        ]
        public int FieldSetId
        {
            get
            {
                return this._fieldSetId;
            }
            set
            {
                this._fieldSetId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoTypeCode.
        /// </summary>
        /// <value>Propiedad EndoTypeCode.</value>
        [
        DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENDO_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int EndoTypeCode
        {
            get
            {
                return this._endoTypeCode;
            }
            set
            {
                this._endoTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RelationId.
        /// </summary>
        /// <value>Propiedad RelationId.</value>
        [
        DescriptionKey("RELATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RELATION_ID", DbType = System.Data.DbType.String),
        ]
        public int RelationId
        {
            get
            {
                return (int)this._primaryKey[Properties.RelationId];
            }
            set
            {
                this._primaryKey[Properties.RelationId] = value;
            }
        }

    }
}