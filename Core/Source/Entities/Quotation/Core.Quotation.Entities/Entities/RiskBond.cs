/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.RiskBond.dict v1.0
 * FileSize=9599 Header=248 CRC=2982933564
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad RiskBond.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.RiskBond.dict"),
    Serializable(),
    DescriptionKey("RISK_BOND_ENTITY"),
    TableMap(TableName = "RISK_BOND", Schema = "QUO"),
    ]
    public partial class RiskBond :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string QuotationId = "QuotationId";
            public static readonly string RiskId = "RiskId";
            public static readonly string BondContractTypeCode = "BondContractTypeCode";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string BidNumber = "BidNumber";
            public static readonly string BondContractCategoriesCode = "BondContractCategoriesCode";
            public static readonly string ProyectName = "ProyectName";
            public static readonly string FundedBy = "FundedBy";
            public static readonly string BondContractAddress = "BondContractAddress";
            public static readonly string BondContractAmount = "BondContractAmount";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<RiskBond>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad QuotationId.
        /// </summary>
        private int _quotationId;
        /// <summary>
        /// Atributo para la propiedad RiskId.
        /// </summary>
        private int _riskId;
        /// <summary>
        /// Atributo para la propiedad BondContractTypeCode.
        /// </summary>
        private int? _bondContractTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int _individualId;
        /// <summary>
        /// Atributo para la propiedad BidNumber.
        /// </summary>
        private string _bidNumber = null;
        /// <summary>
        /// Atributo para la propiedad BondContractCategoriesCode.
        /// </summary>
        private int _bondContractCategoriesCode;
        /// <summary>
        /// Atributo para la propiedad ProyectName.
        /// </summary>
        private string _proyectName = null;
        /// <summary>
        /// Atributo para la propiedad FundedBy.
        /// </summary>
        private string _fundedBy = null;
        /// <summary>
        /// Atributo para la propiedad BondContractAddress.
        /// </summary>
        private string _bondContractAddress = null;
        /// <summary>
        /// Atributo para la propiedad BondContractAmount.
        /// </summary>
        private decimal? _bondContractAmount = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public RiskBond() :
            this(RiskBond.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RiskBond(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int QuotationId
        {
            get
            {
                return this._quotationId;
            }
            set
            {
                this._quotationId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskId.
        /// </summary>
        /// <value>Propiedad RiskId.</value>
        [
        DescriptionKey("RISK_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_ID", DbType = System.Data.DbType.String),
        ]
        public int RiskId
        {
            get
            {
                return this._riskId;
            }
            set
            {
                this._riskId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BondContractTypeCode.
        /// </summary>
        /// <value>Propiedad BondContractTypeCode.</value>
        [
        DescriptionKey("BOND_CONTRACT_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BOND_CONTRACT_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? BondContractTypeCode
        {
            get
            {
                return this._bondContractTypeCode;
            }
            set
            {
                this._bondContractTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BidNumber.
        /// </summary>
        /// <value>Propiedad BidNumber.</value>
        [
        DescriptionKey("BID_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BID_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string BidNumber
        {
            get
            {
                return this._bidNumber;
            }
            set
            {
                this._bidNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BondContractCategoriesCode.
        /// </summary>
        /// <value>Propiedad BondContractCategoriesCode.</value>
        [
        DescriptionKey("BOND_CONTRACT_CATEGORIES_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BOND_CONTRACT_CATEGORIES_CD", DbType = System.Data.DbType.String),
        ]
        public int BondContractCategoriesCode
        {
            get
            {
                return this._bondContractCategoriesCode;
            }
            set
            {
                this._bondContractCategoriesCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProyectName.
        /// </summary>
        /// <value>Propiedad ProyectName.</value>
        [
        DescriptionKey("PROYECT_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROYECT_NAME", DbType = System.Data.DbType.String),
        ]
        public string ProyectName
        {
            get
            {
                return this._proyectName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.ProyectName);
                }
                this._proyectName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FundedBy.
        /// </summary>
        /// <value>Propiedad FundedBy.</value>
        [
        DescriptionKey("FUNDED_BY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FUNDED_BY", DbType = System.Data.DbType.String),
        ]
        public string FundedBy
        {
            get
            {
                return this._fundedBy;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.FundedBy);
                }
                this._fundedBy = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BondContractAddress.
        /// </summary>
        /// <value>Propiedad BondContractAddress.</value>
        [
        DescriptionKey("BOND_CONTRACT_ADDRESS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BOND_CONTRACT_ADDRESS", DbType = System.Data.DbType.String),
        ]
        public string BondContractAddress
        {
            get
            {
                return this._bondContractAddress;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.BondContractAddress);
                }
                this._bondContractAddress = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BondContractAmount.
        /// </summary>
        /// <value>Propiedad BondContractAmount.</value>
        [
        DescriptionKey("BOND_CONTRACT_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BOND_CONTRACT_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? BondContractAmount
        {
            get
            {
                return this._bondContractAmount;
            }
            set
            {
                this._bondContractAmount = value;
            }
        }

    }
}