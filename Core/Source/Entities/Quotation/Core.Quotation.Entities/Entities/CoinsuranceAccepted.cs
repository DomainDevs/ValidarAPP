/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.CoinsuranceAccepted.dict v1.0
 * FileSize=12136 Header=260 CRC=2965617970
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad CoinsuranceAccepted.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.CoinsuranceAccepted.dict"),
    Serializable(),
    DescriptionKey("COINSURANCE_ACCEPTED_ENTITY"),
    TableMap(TableName = "COINSURANCE_ACCEPTED", Schema = "QUO"),
    ]
    public partial class CoinsuranceAccepted :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string QuotationId = "QuotationId";
            public static readonly string InsuranceCompanyId = "InsuranceCompanyId";
            public static readonly string PolicyNumMain = "PolicyNumMain";
            public static readonly string DocumentNumMain = "DocumentNumMain";
            public static readonly string PartMainPercentage = "PartMainPercentage";
            public static readonly string PartAccepPercentage = "PartAccepPercentage";
            public static readonly string StComissionPercentage = "StComissionPercentage";
            public static readonly string IsAdmCommNormal = "IsAdmCommNormal";
            public static readonly string IsAdmCommExtra = "IsAdmCommExtra";
            public static readonly string IsCoinsuranceAccep = "IsCoinsuranceAccep";
            public static readonly string IsIncidentAccep = "IsIncidentAccep";
            public static readonly string CoinsuranceAccepDate = "CoinsuranceAccepDate";
            public static readonly string IncidentAccepDate = "IncidentAccepDate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.QuotationId, quotationId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        public static PrimaryKey CreatePrimaryKey(int quotationId)
        {
            return InternalCreatePrimaryKey<CoinsuranceAccepted>(quotationId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad InsuranceCompanyId.
        /// </summary>
        private decimal _insuranceCompanyId;
        /// <summary>
        /// Atributo para la propiedad PolicyNumMain.
        /// </summary>
        private string _policyNumMain = null;
        /// <summary>
        /// Atributo para la propiedad DocumentNumMain.
        /// </summary>
        private decimal _documentNumMain;
        /// <summary>
        /// Atributo para la propiedad PartMainPercentage.
        /// </summary>
        private decimal _partMainPercentage;
        /// <summary>
        /// Atributo para la propiedad PartAccepPercentage.
        /// </summary>
        private decimal _partAccepPercentage;
        /// <summary>
        /// Atributo para la propiedad StComissionPercentage.
        /// </summary>
        private decimal _stComissionPercentage;
        /// <summary>
        /// Atributo para la propiedad IsAdmCommNormal.
        /// </summary>
        private bool _isAdmCommNormal;
        /// <summary>
        /// Atributo para la propiedad IsAdmCommExtra.
        /// </summary>
        private bool _isAdmCommExtra;
        /// <summary>
        /// Atributo para la propiedad IsCoinsuranceAccep.
        /// </summary>
        private bool _isCoinsuranceAccep;
        /// <summary>
        /// Atributo para la propiedad IsIncidentAccep.
        /// </summary>
        private bool _isIncidentAccep;
        /// <summary>
        /// Atributo para la propiedad CoinsuranceAccepDate.
        /// </summary>
        private DateTime? _coinsuranceAccepDate = null;
        /// <summary>
        /// Atributo para la propiedad IncidentAccepDate.
        /// </summary>
        private DateTime? _incidentAccepDate = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="quotationId">QuotationId key property.</param>
        public CoinsuranceAccepted(int quotationId) :
            this(CoinsuranceAccepted.CreatePrimaryKey(quotationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoinsuranceAccepted(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int QuotationId
        {
            get
            {
                return (int)this._primaryKey[Properties.QuotationId];
            }
            set
            {
                this._primaryKey[Properties.QuotationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuranceCompanyId.
        /// </summary>
        /// <value>Propiedad InsuranceCompanyId.</value>
        [
        DescriptionKey("INSURANCE_COMPANY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INSURANCE_COMPANY_ID", DbType = System.Data.DbType.Decimal),
        ]
        public decimal InsuranceCompanyId
        {
            get
            {
                return this._insuranceCompanyId;
            }
            set
            {
                this._insuranceCompanyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyNumMain.
        /// </summary>
        /// <value>Propiedad PolicyNumMain.</value>
        [
        DescriptionKey("POLICY_NUM_MAIN_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "POLICY_NUM_MAIN", DbType = System.Data.DbType.String),
        ]
        public string PolicyNumMain
        {
            get
            {
                return this._policyNumMain;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PolicyNumMain);
                }
                this._policyNumMain = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentNumMain.
        /// </summary>
        /// <value>Propiedad DocumentNumMain.</value>
        [
        DescriptionKey("DOCUMENT_NUM_MAIN_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DOCUMENT_NUM_MAIN", DbType = System.Data.DbType.Decimal),
        ]
        public decimal DocumentNumMain
        {
            get
            {
                return this._documentNumMain;
            }
            set
            {
                this._documentNumMain = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PartMainPercentage.
        /// </summary>
        /// <value>Propiedad PartMainPercentage.</value>
        [
        DescriptionKey("PART_MAIN_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PART_MAIN_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PartMainPercentage
        {
            get
            {
                return this._partMainPercentage;
            }
            set
            {
                this._partMainPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PartAccepPercentage.
        /// </summary>
        /// <value>Propiedad PartAccepPercentage.</value>
        [
        DescriptionKey("PART_ACCEP_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PART_ACCEP_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PartAccepPercentage
        {
            get
            {
                return this._partAccepPercentage;
            }
            set
            {
                this._partAccepPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StComissionPercentage.
        /// </summary>
        /// <value>Propiedad StComissionPercentage.</value>
        [
        DescriptionKey("ST_COMISSION_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ST_COMISSION_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal StComissionPercentage
        {
            get
            {
                return this._stComissionPercentage;
            }
            set
            {
                this._stComissionPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsAdmCommNormal.
        /// </summary>
        /// <value>Propiedad IsAdmCommNormal.</value>
        [
        DescriptionKey("IS_ADM_COMM_NORMAL_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ADM_COMM_NORMAL", DbType = System.Data.DbType.String),
        ]
        public bool IsAdmCommNormal
        {
            get
            {
                return this._isAdmCommNormal;
            }
            set
            {
                this._isAdmCommNormal = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsAdmCommExtra.
        /// </summary>
        /// <value>Propiedad IsAdmCommExtra.</value>
        [
        DescriptionKey("IS_ADM_COMM_EXTRA_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ADM_COMM_EXTRA", DbType = System.Data.DbType.String),
        ]
        public bool IsAdmCommExtra
        {
            get
            {
                return this._isAdmCommExtra;
            }
            set
            {
                this._isAdmCommExtra = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsCoinsuranceAccep.
        /// </summary>
        /// <value>Propiedad IsCoinsuranceAccep.</value>
        [
        DescriptionKey("IS_COINSURANCE_ACCEP_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_COINSURANCE_ACCEP", DbType = System.Data.DbType.String),
        ]
        public bool IsCoinsuranceAccep
        {
            get
            {
                return this._isCoinsuranceAccep;
            }
            set
            {
                this._isCoinsuranceAccep = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsIncidentAccep.
        /// </summary>
        /// <value>Propiedad IsIncidentAccep.</value>
        [
        DescriptionKey("IS_INCIDENT_ACCEP_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_INCIDENT_ACCEP", DbType = System.Data.DbType.String),
        ]
        public bool IsIncidentAccep
        {
            get
            {
                return this._isIncidentAccep;
            }
            set
            {
                this._isIncidentAccep = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoinsuranceAccepDate.
        /// </summary>
        /// <value>Propiedad CoinsuranceAccepDate.</value>
        [
        DescriptionKey("COINSURANCE_ACCEP_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COINSURANCE_ACCEP_DT", DbType = System.Data.DbType.String),
        ]
        public DateTime? CoinsuranceAccepDate
        {
            get
            {
                return this._coinsuranceAccepDate;
            }
            set
            {
                this._coinsuranceAccepDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IncidentAccepDate.
        /// </summary>
        /// <value>Propiedad IncidentAccepDate.</value>
        [
        DescriptionKey("INCIDENT_ACCEP_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INCIDENT_ACCEP_DT", DbType = System.Data.DbType.String),
        ]
        public DateTime? IncidentAccepDate
        {
            get
            {
                return this._incidentAccepDate;
            }
            set
            {
                this._incidentAccepDate = value;
            }
        }

    }
}