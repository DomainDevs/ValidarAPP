/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.Quotation.dict v1.0
 * FileSize=26747 Header=250 CRC=2881874467
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad Quotation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.Quotation.dict"),
    Serializable(),
    DescriptionKey("QUOTATION_ENTITY"),
    TableMap(TableName = "QUOTATION", Schema = "QUO"),
    ]
    public partial class Quotation :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string QuotationId = "QuotationId";
            public static readonly string DocumentNum = "DocumentNum";
            public static readonly string QuotVersion = "QuotVersion";
            public static readonly string PolicyholderId = "PolicyholderId";
            public static readonly string CustomerTypeCode = "CustomerTypeCode";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string EndoTypeCode = "EndoTypeCode";
            public static readonly string UserId = "UserId";
            public static readonly string ExchangeRate = "ExchangeRate";
            public static readonly string IsPolicyholderBill = "IsPolicyholderBill";
            public static readonly string IssueDate = "IssueDate";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string CurrentTo = "CurrentTo";
            public static readonly string BeginDate = "BeginDate";
            public static readonly string CommitDate = "CommitDate";
            public static readonly string BillingDate = "BillingDate";
            public static readonly string MailAddressId = "MailAddressId";
            public static readonly string PrintedDate = "PrintedDate";
            public static readonly string SalePointCode = "SalePointCode";
            public static readonly string ProductId = "ProductId";
            public static readonly string BillingPeriodCode = "BillingPeriodCode";
            public static readonly string AggAnnualLmtAmount = "AggAnnualLmtAmount";
            public static readonly string PolicyNum = "PolicyNum";
            public static readonly string ConditionText = "ConditionText";
            public static readonly string QuoFolderId = "QuoFolderId";
            public static readonly string SubscriptionReqId = "SubscriptionReqId";
            public static readonly string MailAgentAddressId = "MailAgentAddressId";
            public static readonly string MailAgentIndId = "MailAgentIndId";
            public static readonly string CalculateMinPremium = "CalculateMinPremium";
            public static readonly string Annotations = "Annotations";
            public static readonly string BusinessTypeCode = "BusinessTypeCode";
            public static readonly string CoissuePercentage = "CoissuePercentage";
            public static readonly string CapacityOfCode = "CapacityOfCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.QuotationId, quotationId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        public static PrimaryKey CreatePrimaryKey(int quotationId)
        {
            return InternalCreatePrimaryKey<Quotation>(quotationId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DocumentNum.
        /// </summary>
        private decimal? _documentNum = null;
        /// <summary>
        /// Atributo para la propiedad QuotVersion.
        /// </summary>
        private int _quotVersion;
        /// <summary>
        /// Atributo para la propiedad PolicyholderId.
        /// </summary>
        private int _policyholderId;
        /// <summary>
        /// Atributo para la propiedad CustomerTypeCode.
        /// </summary>
        private int _customerTypeCode;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int _prefixCode;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int _branchCode;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int _currencyCode;
        /// <summary>
        /// Atributo para la propiedad EndoTypeCode.
        /// </summary>
        private int _endoTypeCode;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int _userId;
        /// <summary>
        /// Atributo para la propiedad ExchangeRate.
        /// </summary>
        private decimal _exchangeRate;
        /// <summary>
        /// Atributo para la propiedad IsPolicyholderBill.
        /// </summary>
        private bool _isPolicyholderBill;
        /// <summary>
        /// Atributo para la propiedad IssueDate.
        /// </summary>
        private DateTime _issueDate;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad CurrentTo.
        /// </summary>
        private DateTime? _currentTo = null;
        /// <summary>
        /// Atributo para la propiedad BeginDate.
        /// </summary>
        private DateTime _beginDate;
        /// <summary>
        /// Atributo para la propiedad CommitDate.
        /// </summary>
        private DateTime? _commitDate = null;
        /// <summary>
        /// Atributo para la propiedad BillingDate.
        /// </summary>
        private DateTime? _billingDate = null;
        /// <summary>
        /// Atributo para la propiedad MailAddressId.
        /// </summary>
        private int? _mailAddressId = null;
        /// <summary>
        /// Atributo para la propiedad PrintedDate.
        /// </summary>
        private DateTime? _printedDate = null;
        /// <summary>
        /// Atributo para la propiedad SalePointCode.
        /// </summary>
        private decimal? _salePointCode = null;
        /// <summary>
        /// Atributo para la propiedad ProductId.
        /// </summary>
        private int? _productId = null;
        /// <summary>
        /// Atributo para la propiedad BillingPeriodCode.
        /// </summary>
        private int? _billingPeriodCode = null;
        /// <summary>
        /// Atributo para la propiedad AggAnnualLmtAmount.
        /// </summary>
        private decimal? _aggAnnualLmtAmount = null;
        /// <summary>
        /// Atributo para la propiedad PolicyNum.
        /// </summary>
        private decimal? _policyNum = null;
        /// <summary>
        /// Atributo para la propiedad ConditionText.
        /// </summary>
        private string _conditionText = null;
        /// <summary>
        /// Atributo para la propiedad QuoFolderId.
        /// </summary>
        private int? _quoFolderId = null;
        /// <summary>
        /// Atributo para la propiedad SubscriptionReqId.
        /// </summary>
        private int? _subscriptionReqId = null;
        /// <summary>
        /// Atributo para la propiedad MailAgentAddressId.
        /// </summary>
        private int? _mailAgentAddressId = null;
        /// <summary>
        /// Atributo para la propiedad MailAgentIndId.
        /// </summary>
        private int? _mailAgentIndId = null;
        /// <summary>
        /// Atributo para la propiedad CalculateMinPremium.
        /// </summary>
        private bool _calculateMinPremium;
        /// <summary>
        /// Atributo para la propiedad Annotations.
        /// </summary>
        private string _annotations = null;
        /// <summary>
        /// Atributo para la propiedad BusinessTypeCode.
        /// </summary>
        private int _businessTypeCode;
        /// <summary>
        /// Atributo para la propiedad CoissuePercentage.
        /// </summary>
        private decimal? _coissuePercentage = null;
        /// <summary>
        /// Atributo para la propiedad CapacityOfCode.
        /// </summary>
        private int? _capacityOfCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="quotationId">QuotationId key property.</param>
        public Quotation(int quotationId) :
            this(Quotation.CreatePrimaryKey(quotationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Quotation(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int QuotationId
        {
            get
            {
                return (int)this._primaryKey[Properties.QuotationId];
            }
            set
            {
                this._primaryKey[Properties.QuotationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DocumentNum.
        /// </summary>
        /// <value>Propiedad DocumentNum.</value>
        [
        DescriptionKey("DOCUMENT_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DOCUMENT_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? DocumentNum
        {
            get
            {
                return this._documentNum;
            }
            set
            {
                this._documentNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotVersion.
        /// </summary>
        /// <value>Propiedad QuotVersion.</value>
        [
        DescriptionKey("QUOT_VERSION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "QUOT_VERSION", DbType = System.Data.DbType.String),
        ]
        public int QuotVersion
        {
            get
            {
                return this._quotVersion;
            }
            set
            {
                this._quotVersion = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyholderId.
        /// </summary>
        /// <value>Propiedad PolicyholderId.</value>
        [
        DescriptionKey("POLICYHOLDER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "POLICYHOLDER_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyholderId
        {
            get
            {
                return this._policyholderId;
            }
            set
            {
                this._policyholderId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CustomerTypeCode.
        /// </summary>
        /// <value>Propiedad CustomerTypeCode.</value>
        [
        DescriptionKey("CUSTOMER_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CUSTOMER_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int CustomerTypeCode
        {
            get
            {
                return this._customerTypeCode;
            }
            set
            {
                this._customerTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndoTypeCode.
        /// </summary>
        /// <value>Propiedad EndoTypeCode.</value>
        [
        DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENDO_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int EndoTypeCode
        {
            get
            {
                return this._endoTypeCode;
            }
            set
            {
                this._endoTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExchangeRate.
        /// </summary>
        /// <value>Propiedad ExchangeRate.</value>
        [
        DescriptionKey("EXCHANGE_RATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EXCHANGE_RATE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal ExchangeRate
        {
            get
            {
                return this._exchangeRate;
            }
            set
            {
                this._exchangeRate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsPolicyholderBill.
        /// </summary>
        /// <value>Propiedad IsPolicyholderBill.</value>
        [
        DescriptionKey("IS_POLICYHOLDER_BILL_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_POLICYHOLDER_BILL", DbType = System.Data.DbType.String),
        ]
        public bool IsPolicyholderBill
        {
            get
            {
                return this._isPolicyholderBill;
            }
            set
            {
                this._isPolicyholderBill = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IssueDate.
        /// </summary>
        /// <value>Propiedad IssueDate.</value>
        [
        DescriptionKey("ISSUE_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ISSUE_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime IssueDate
        {
            get
            {
                return this._issueDate;
            }
            set
            {
                this._issueDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentTo.
        /// </summary>
        /// <value>Propiedad CurrentTo.</value>
        [
        DescriptionKey("CURRENT_TO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENT_TO", DbType = System.Data.DbType.String),
        ]
        public DateTime? CurrentTo
        {
            get
            {
                return this._currentTo;
            }
            set
            {
                this._currentTo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BeginDate.
        /// </summary>
        /// <value>Propiedad BeginDate.</value>
        [
        DescriptionKey("BEGIN_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BEGIN_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime BeginDate
        {
            get
            {
                return this._beginDate;
            }
            set
            {
                this._beginDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CommitDate.
        /// </summary>
        /// <value>Propiedad CommitDate.</value>
        [
        DescriptionKey("COMMIT_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMMIT_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? CommitDate
        {
            get
            {
                return this._commitDate;
            }
            set
            {
                this._commitDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BillingDate.
        /// </summary>
        /// <value>Propiedad BillingDate.</value>
        [
        DescriptionKey("BILLING_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BILLING_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? BillingDate
        {
            get
            {
                return this._billingDate;
            }
            set
            {
                this._billingDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MailAddressId.
        /// </summary>
        /// <value>Propiedad MailAddressId.</value>
        [
        DescriptionKey("MAIL_ADDRESS_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MAIL_ADDRESS_ID", DbType = System.Data.DbType.String),
        ]
        public int? MailAddressId
        {
            get
            {
                return this._mailAddressId;
            }
            set
            {
                this._mailAddressId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintedDate.
        /// </summary>
        /// <value>Propiedad PrintedDate.</value>
        [
        DescriptionKey("PRINTED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRINTED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? PrintedDate
        {
            get
            {
                return this._printedDate;
            }
            set
            {
                this._printedDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SalePointCode.
        /// </summary>
        /// <value>Propiedad SalePointCode.</value>
        [
        DescriptionKey("SALE_POINT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SALE_POINT_CD", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? SalePointCode
        {
            get
            {
                return this._salePointCode;
            }
            set
            {
                this._salePointCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int? ProductId
        {
            get
            {
                return this._productId;
            }
            set
            {
                this._productId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BillingPeriodCode.
        /// </summary>
        /// <value>Propiedad BillingPeriodCode.</value>
        [
        DescriptionKey("BILLING_PERIOD_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BILLING_PERIOD_CD", DbType = System.Data.DbType.String),
        ]
        public int? BillingPeriodCode
        {
            get
            {
                return this._billingPeriodCode;
            }
            set
            {
                this._billingPeriodCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AggAnnualLmtAmount.
        /// </summary>
        /// <value>Propiedad AggAnnualLmtAmount.</value>
        [
        DescriptionKey("AGG_ANNUAL_LMT_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AGG_ANNUAL_LMT_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? AggAnnualLmtAmount
        {
            get
            {
                return this._aggAnnualLmtAmount;
            }
            set
            {
                this._aggAnnualLmtAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyNum.
        /// </summary>
        /// <value>Propiedad PolicyNum.</value>
        [
        DescriptionKey("POLICY_NUM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_NUM", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PolicyNum
        {
            get
            {
                return this._policyNum;
            }
            set
            {
                this._policyNum = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConditionText.
        /// </summary>
        /// <value>Propiedad ConditionText.</value>
        [
        DescriptionKey("CONDITION_TEXT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONDITION_TEXT", DbType = System.Data.DbType.String),
        ]
        public string ConditionText
        {
            get
            {
                return this._conditionText;
            }
            set
            {
                this._conditionText = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuoFolderId.
        /// </summary>
        /// <value>Propiedad QuoFolderId.</value>
        [
        DescriptionKey("QUO_FOLDER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "QUO_FOLDER_ID", DbType = System.Data.DbType.String),
        ]
        public int? QuoFolderId
        {
            get
            {
                return this._quoFolderId;
            }
            set
            {
                this._quoFolderId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubscriptionReqId.
        /// </summary>
        /// <value>Propiedad SubscriptionReqId.</value>
        [
        DescriptionKey("SUBSCRIPTION_REQ_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SUBSCRIPTION_REQ_ID", DbType = System.Data.DbType.String),
        ]
        public int? SubscriptionReqId
        {
            get
            {
                return this._subscriptionReqId;
            }
            set
            {
                this._subscriptionReqId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MailAgentAddressId.
        /// </summary>
        /// <value>Propiedad MailAgentAddressId.</value>
        [
        DescriptionKey("MAIL_AGENT_ADDRESS_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MAIL_AGENT_ADDRESS_ID", DbType = System.Data.DbType.String),
        ]
        public int? MailAgentAddressId
        {
            get
            {
                return this._mailAgentAddressId;
            }
            set
            {
                this._mailAgentAddressId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MailAgentIndId.
        /// </summary>
        /// <value>Propiedad MailAgentIndId.</value>
        [
        DescriptionKey("MAIL_AGENT_IND_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MAIL_AGENT_IND_ID", DbType = System.Data.DbType.String),
        ]
        public int? MailAgentIndId
        {
            get
            {
                return this._mailAgentIndId;
            }
            set
            {
                this._mailAgentIndId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CalculateMinPremium.
        /// </summary>
        /// <value>Propiedad CalculateMinPremium.</value>
        [
        DescriptionKey("CALCULATE_MIN_PREMIUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CALCULATE_MIN_PREMIUM", DbType = System.Data.DbType.String),
        ]
        public bool CalculateMinPremium
        {
            get
            {
                return this._calculateMinPremium;
            }
            set
            {
                this._calculateMinPremium = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Annotations.
        /// </summary>
        /// <value>Propiedad Annotations.</value>
        [
        DescriptionKey("ANNOTATIONS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ANNOTATIONS", DbType = System.Data.DbType.String),
        ]
        public string Annotations
        {
            get
            {
                return this._annotations;
            }
            set
            {
                this._annotations = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BusinessTypeCode.
        /// </summary>
        /// <value>Propiedad BusinessTypeCode.</value>
        [
        DescriptionKey("BUSINESS_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BUSINESS_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int BusinessTypeCode
        {
            get
            {
                return this._businessTypeCode;
            }
            set
            {
                this._businessTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoissuePercentage.
        /// </summary>
        /// <value>Propiedad CoissuePercentage.</value>
        [
        DescriptionKey("COISSUE_PERCENTAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COISSUE_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? CoissuePercentage
        {
            get
            {
                return this._coissuePercentage;
            }
            set
            {
                this._coissuePercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CapacityOfCode.
        /// </summary>
        /// <value>Propiedad CapacityOfCode.</value>
        [
        DescriptionKey("CAPACITY_OF_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CAPACITY_OF_CD", DbType = System.Data.DbType.String),
        ]
        public int? CapacityOfCode
        {
            get
            {
                return this._capacityOfCode;
            }
            set
            {
                this._capacityOfCode = value;
            }
        }

    }
}