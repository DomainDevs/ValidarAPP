/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.MassiveLoadFieldSetDetail.dict v1.0
 * FileSize=5597 Header=265 CRC=1766940164
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad MassiveLoadFieldSetDetail.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.MassiveLoadFieldSetDetail.dict"),
    Serializable(),
    DescriptionKey("MASSIVE_LOAD_FIELD_SET_DETAIL_ENTITY"),
    TableMap(TableName = "MASSIVE_LOAD_FIELD_SET_DETAIL", Schema = "QUO"),
    ]
    public partial class MassiveLoadFieldSetDetail :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string FieldName = "FieldName";
            public static readonly string FieldSetId = "FieldSetId";
            public static readonly string FieldOrder = "FieldOrder";
            public static readonly string FieldMandatory = "FieldMandatory";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<MassiveLoadFieldSetDetail>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Id.
        /// </summary>
        private int _id;
        /// <summary>
        /// Atributo para la propiedad FieldName.
        /// </summary>
        private string _fieldName = null;
        /// <summary>
        /// Atributo para la propiedad FieldSetId.
        /// </summary>
        private int? _fieldSetId = null;
        /// <summary>
        /// Atributo para la propiedad FieldOrder.
        /// </summary>
        private int? _fieldOrder = null;
        /// <summary>
        /// Atributo para la propiedad FieldMandatory.
        /// </summary>
        private bool? _fieldMandatory = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public MassiveLoadFieldSetDetail() :
            this(MassiveLoadFieldSetDetail.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public MassiveLoadFieldSetDetail(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ID", DbType = System.Data.DbType.String),
        ]
        public int Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FieldName.
        /// </summary>
        /// <value>Propiedad FieldName.</value>
        [
        DescriptionKey("FIELD_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FIELD_NAME", DbType = System.Data.DbType.String),
        ]
        public string FieldName
        {
            get
            {
                return this._fieldName;
            }
            set
            {
                this._fieldName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FieldSetId.
        /// </summary>
        /// <value>Propiedad FieldSetId.</value>
        [
        DescriptionKey("FIELD_SET_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FIELD_SET_ID", DbType = System.Data.DbType.String),
        ]
        public int? FieldSetId
        {
            get
            {
                return this._fieldSetId;
            }
            set
            {
                this._fieldSetId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FieldOrder.
        /// </summary>
        /// <value>Propiedad FieldOrder.</value>
        [
        DescriptionKey("FIELD_ORDER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FIELD_ORDER", DbType = System.Data.DbType.String),
        ]
        public int? FieldOrder
        {
            get
            {
                return this._fieldOrder;
            }
            set
            {
                this._fieldOrder = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FieldMandatory.
        /// </summary>
        /// <value>Propiedad FieldMandatory.</value>
        [
        DescriptionKey("FIELD_MANDATORY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FIELD_MANDATORY", DbType = System.Data.DbType.String),
        ]
        public bool? FieldMandatory
        {
            get
            {
                return this._fieldMandatory;
            }
            set
            {
                this._fieldMandatory = value;
            }
        }

    }
}