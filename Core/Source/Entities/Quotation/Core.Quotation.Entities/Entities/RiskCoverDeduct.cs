/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.RiskCoverDeduct.dict v1.0
 * FileSize=14978 Header=256 CRC=2499597913
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad RiskCoverDeduct.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.RiskCoverDeduct.dict"),
    Serializable(),
    DescriptionKey("RISK_COVER_DEDUCT_ENTITY"),
    TableMap(TableName="RISK_COVER_DEDUCT", Schema="QUO"),
    ]
    public partial class RiskCoverDeduct :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string QuotationId = "QuotationId";
			public static readonly string RiskId = "RiskId";
			public static readonly string CoverageId = "CoverageId";
			public static readonly string RateTypeCode = "RateTypeCode";
			public static readonly string Rate = "Rate";
			public static readonly string DeductPremiumAmount = "DeductPremiumAmount";
			public static readonly string DeductValue = "DeductValue";
			public static readonly string DeductUnitCode = "DeductUnitCode";
			public static readonly string DeductSubjectCode = "DeductSubjectCode";
			public static readonly string MinDeductValue = "MinDeductValue";
			public static readonly string MinDeductUnitCode = "MinDeductUnitCode";
			public static readonly string MinDeductSubjectCode = "MinDeductSubjectCode";
			public static readonly string MaxDeductValue = "MaxDeductValue";
			public static readonly string MaxDeductUnitCode = "MaxDeductUnitCode";
			public static readonly string MaxDeductSubjectCode = "MaxDeductSubjectCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string AccDeductAmount = "AccDeductAmount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="quotationId">Propiedad clave QuotationId.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId, int riskId, int coverageId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.QuotationId, quotationId);
		    keys.Add(Properties.RiskId, riskId);
		    keys.Add(Properties.CoverageId, coverageId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="quotationId">Propiedad clave QuotationId.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		public static PrimaryKey CreatePrimaryKey(int quotationId, int riskId, int coverageId)
	    {
			return InternalCreatePrimaryKey<RiskCoverDeduct>(quotationId, riskId, coverageId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad RateTypeCode.
		/// </summary>
        private int _rateTypeCode;
		/// <summary>
		/// Atributo para la propiedad Rate.
		/// </summary>
        private decimal? _rate = null;
		/// <summary>
		/// Atributo para la propiedad DeductPremiumAmount.
		/// </summary>
        private decimal _deductPremiumAmount;
		/// <summary>
		/// Atributo para la propiedad DeductValue.
		/// </summary>
        private decimal _deductValue;
		/// <summary>
		/// Atributo para la propiedad DeductUnitCode.
		/// </summary>
        private int _deductUnitCode;
		/// <summary>
		/// Atributo para la propiedad DeductSubjectCode.
		/// </summary>
        private int? _deductSubjectCode = null;
		/// <summary>
		/// Atributo para la propiedad MinDeductValue.
		/// </summary>
        private decimal? _minDeductValue = null;
		/// <summary>
		/// Atributo para la propiedad MinDeductUnitCode.
		/// </summary>
        private int? _minDeductUnitCode = null;
		/// <summary>
		/// Atributo para la propiedad MinDeductSubjectCode.
		/// </summary>
        private int? _minDeductSubjectCode = null;
		/// <summary>
		/// Atributo para la propiedad MaxDeductValue.
		/// </summary>
        private decimal? _maxDeductValue = null;
		/// <summary>
		/// Atributo para la propiedad MaxDeductUnitCode.
		/// </summary>
        private int? _maxDeductUnitCode = null;
		/// <summary>
		/// Atributo para la propiedad MaxDeductSubjectCode.
		/// </summary>
        private int? _maxDeductSubjectCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad AccDeductAmount.
		/// </summary>
        private decimal _accDeductAmount;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="quotationId">QuotationId key property.</param>
		/// <param name="riskId">RiskId key property.</param>
		/// <param name="coverageId">CoverageId key property.</param>
	    public RiskCoverDeduct(int quotationId, int riskId, int coverageId):
			this(RiskCoverDeduct.CreatePrimaryKey(quotationId, riskId, coverageId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public RiskCoverDeduct(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad QuotationId.
		/// </summary>
		/// <value>Propiedad QuotationId.</value>
	    [
		DescriptionKey("QUOTATION_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="QUOTATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int QuotationId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.QuotationId];
		    }
		    set
		    {
				this._primaryKey[Properties.QuotationId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskId.
		/// </summary>
		/// <value>Propiedad RiskId.</value>
	    [
		DescriptionKey("RISK_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RISK_ID", DbType=System.Data.DbType.String),
	    ]
        public int RiskId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RiskId];
		    }
		    set
		    {
				this._primaryKey[Properties.RiskId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId.
		/// </summary>
		/// <value>Propiedad CoverageId.</value>
	    [
		DescriptionKey("COVERAGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverageId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverageId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RateTypeCode.
		/// </summary>
		/// <value>Propiedad RateTypeCode.</value>
	    [
		DescriptionKey("RATE_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RATE_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int RateTypeCode
	    {
		    get
		    {
			    return this._rateTypeCode;
		    }
		    set
		    {
				this._rateTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Rate.
		/// </summary>
		/// <value>Propiedad Rate.</value>
	    [
		DescriptionKey("RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Rate
	    {
		    get
		    {
			    return this._rate;
		    }
		    set
		    {
				this._rate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeductPremiumAmount.
		/// </summary>
		/// <value>Propiedad DeductPremiumAmount.</value>
	    [
		DescriptionKey("DEDUCT_PREMIUM_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DEDUCT_PREMIUM_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal DeductPremiumAmount
	    {
		    get
		    {
			    return this._deductPremiumAmount;
		    }
		    set
		    {
				this._deductPremiumAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeductValue.
		/// </summary>
		/// <value>Propiedad DeductValue.</value>
	    [
		DescriptionKey("DEDUCT_VALUE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DEDUCT_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal DeductValue
	    {
		    get
		    {
			    return this._deductValue;
		    }
		    set
		    {
				this._deductValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeductUnitCode.
		/// </summary>
		/// <value>Propiedad DeductUnitCode.</value>
	    [
		DescriptionKey("DEDUCT_UNIT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DEDUCT_UNIT_CD", DbType=System.Data.DbType.String),
	    ]
        public int DeductUnitCode
	    {
		    get
		    {
			    return this._deductUnitCode;
		    }
		    set
		    {
				this._deductUnitCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeductSubjectCode.
		/// </summary>
		/// <value>Propiedad DeductSubjectCode.</value>
	    [
		DescriptionKey("DEDUCT_SUBJECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DEDUCT_SUBJECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? DeductSubjectCode
	    {
		    get
		    {
			    return this._deductSubjectCode;
		    }
		    set
		    {
				this._deductSubjectCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MinDeductValue.
		/// </summary>
		/// <value>Propiedad MinDeductValue.</value>
	    [
		DescriptionKey("MIN_DEDUCT_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MIN_DEDUCT_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? MinDeductValue
	    {
		    get
		    {
			    return this._minDeductValue;
		    }
		    set
		    {
				this._minDeductValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MinDeductUnitCode.
		/// </summary>
		/// <value>Propiedad MinDeductUnitCode.</value>
	    [
		DescriptionKey("MIN_DEDUCT_UNIT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MIN_DEDUCT_UNIT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? MinDeductUnitCode
	    {
		    get
		    {
			    return this._minDeductUnitCode;
		    }
		    set
		    {
				this._minDeductUnitCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MinDeductSubjectCode.
		/// </summary>
		/// <value>Propiedad MinDeductSubjectCode.</value>
	    [
		DescriptionKey("MIN_DEDUCT_SUBJECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MIN_DEDUCT_SUBJECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? MinDeductSubjectCode
	    {
		    get
		    {
			    return this._minDeductSubjectCode;
		    }
		    set
		    {
				this._minDeductSubjectCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MaxDeductValue.
		/// </summary>
		/// <value>Propiedad MaxDeductValue.</value>
	    [
		DescriptionKey("MAX_DEDUCT_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MAX_DEDUCT_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? MaxDeductValue
	    {
		    get
		    {
			    return this._maxDeductValue;
		    }
		    set
		    {
				this._maxDeductValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MaxDeductUnitCode.
		/// </summary>
		/// <value>Propiedad MaxDeductUnitCode.</value>
	    [
		DescriptionKey("MAX_DEDUCT_UNIT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MAX_DEDUCT_UNIT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? MaxDeductUnitCode
	    {
		    get
		    {
			    return this._maxDeductUnitCode;
		    }
		    set
		    {
				this._maxDeductUnitCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MaxDeductSubjectCode.
		/// </summary>
		/// <value>Propiedad MaxDeductSubjectCode.</value>
	    [
		DescriptionKey("MAX_DEDUCT_SUBJECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MAX_DEDUCT_SUBJECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? MaxDeductSubjectCode
	    {
		    get
		    {
			    return this._maxDeductSubjectCode;
		    }
		    set
		    {
				this._maxDeductSubjectCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccDeductAmount.
		/// </summary>
		/// <value>Propiedad AccDeductAmount.</value>
	    [
		DescriptionKey("ACC_DEDUCT_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACC_DEDUCT_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal AccDeductAmount
	    {
		    get
		    {
			    return this._accDeductAmount;
		    }
		    set
		    {
				this._accDeductAmount = value;
			}
	    }

    }
}