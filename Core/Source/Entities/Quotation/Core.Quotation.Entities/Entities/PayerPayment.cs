/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.PayerPayment.dict v1.0
 * FileSize=8648 Header=252 CRC=1007613079
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad PayerPayment.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.PayerPayment.dict"),
    Serializable(),
    DescriptionKey("PAYER_PAYMENT_ENTITY"),
    TableMap(TableName = "PAYER_PAYMENT", Schema = "QUO"),
    ]
    public partial class PayerPayment :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string QuotationId = "QuotationId";
            public static readonly string CustomerTypeCode = "CustomerTypeCode";
            public static readonly string PayerId = "PayerId";
            public static readonly string PaymentNum = "PaymentNum";
            public static readonly string PayExpDate = "PayExpDate";
            public static readonly string PaymentPercentage = "PaymentPercentage";
            public static readonly string Amount = "Amount";
            public static readonly string AgtPayExpDate = "AgtPayExpDate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="customerTypeCode">Propiedad clave CustomerTypeCode.</param>
        /// <param name="payerId">Propiedad clave PayerId.</param>
        /// <param name="paymentNum">Propiedad clave PaymentNum.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int quotationId, int customerTypeCode, int payerId, int paymentNum)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.QuotationId, quotationId);
            keys.Add(Properties.CustomerTypeCode, customerTypeCode);
            keys.Add(Properties.PayerId, payerId);
            keys.Add(Properties.PaymentNum, paymentNum);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="quotationId">Propiedad clave QuotationId.</param>
        /// <param name="customerTypeCode">Propiedad clave CustomerTypeCode.</param>
        /// <param name="payerId">Propiedad clave PayerId.</param>
        /// <param name="paymentNum">Propiedad clave PaymentNum.</param>
        public static PrimaryKey CreatePrimaryKey(int quotationId, int customerTypeCode, int payerId, int paymentNum)
        {
            return InternalCreatePrimaryKey<PayerPayment>(quotationId, customerTypeCode, payerId, paymentNum);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PayExpDate.
        /// </summary>
        private DateTime _payExpDate;
        /// <summary>
        /// Atributo para la propiedad PaymentPercentage.
        /// </summary>
        private decimal _paymentPercentage;
        /// <summary>
        /// Atributo para la propiedad Amount.
        /// </summary>
        private decimal _amount;
        /// <summary>
        /// Atributo para la propiedad AgtPayExpDate.
        /// </summary>
        private DateTime? _agtPayExpDate = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="quotationId">QuotationId key property.</param>
        /// <param name="customerTypeCode">CustomerTypeCode key property.</param>
        /// <param name="payerId">PayerId key property.</param>
        /// <param name="paymentNum">PaymentNum key property.</param>
        public PayerPayment(int quotationId, int customerTypeCode, int payerId, int paymentNum) :
            this(PayerPayment.CreatePrimaryKey(quotationId, customerTypeCode, payerId, paymentNum), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PayerPayment(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad QuotationId.
        /// </summary>
        /// <value>Propiedad QuotationId.</value>
        [
        DescriptionKey("QUOTATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "QUOTATION_ID", DbType = System.Data.DbType.String),
        ]
        public int QuotationId
        {
            get
            {
                return (int)this._primaryKey[Properties.QuotationId];
            }
            set
            {
                this._primaryKey[Properties.QuotationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CustomerTypeCode.
        /// </summary>
        /// <value>Propiedad CustomerTypeCode.</value>
        [
        DescriptionKey("CUSTOMER_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CUSTOMER_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int CustomerTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CustomerTypeCode];
            }
            set
            {
                this._primaryKey[Properties.CustomerTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PayerId.
        /// </summary>
        /// <value>Propiedad PayerId.</value>
        [
        DescriptionKey("PAYER_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYER_ID", DbType = System.Data.DbType.String),
        ]
        public int PayerId
        {
            get
            {
                return (int)this._primaryKey[Properties.PayerId];
            }
            set
            {
                this._primaryKey[Properties.PayerId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentNum.
        /// </summary>
        /// <value>Propiedad PaymentNum.</value>
        [
        DescriptionKey("PAYMENT_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_NUM", DbType = System.Data.DbType.String),
        ]
        public int PaymentNum
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentNum];
            }
            set
            {
                this._primaryKey[Properties.PaymentNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PayExpDate.
        /// </summary>
        /// <value>Propiedad PayExpDate.</value>
        [
        DescriptionKey("PAY_EXP_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAY_EXP_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime PayExpDate
        {
            get
            {
                return this._payExpDate;
            }
            set
            {
                this._payExpDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentPercentage.
        /// </summary>
        /// <value>Propiedad PaymentPercentage.</value>
        [
        DescriptionKey("PAYMENT_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_PCT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PaymentPercentage
        {
            get
            {
                return this._paymentPercentage;
            }
            set
            {
                this._paymentPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Amount.
        /// </summary>
        /// <value>Propiedad Amount.</value>
        [
        DescriptionKey("AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                this._amount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgtPayExpDate.
        /// </summary>
        /// <value>Propiedad AgtPayExpDate.</value>
        [
        DescriptionKey("AGT_PAY_EXP_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AGT_PAY_EXP_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? AgtPayExpDate
        {
            get
            {
                return this._agtPayExpDate;
            }
            set
            {
                this._agtPayExpDate = value;
            }
        }

    }
}