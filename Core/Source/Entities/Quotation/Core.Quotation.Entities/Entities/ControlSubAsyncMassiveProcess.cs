/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.ControlSubAsyncMassiveProcess.dict v1.0
 * FileSize=4866 Header=269 CRC=3541926796
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad ControlSubAsyncMassiveProcess.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Quotation.ControlSubAsyncMassiveProcess.dict"),
    Serializable(),
    DescriptionKey("CONTROL_SUB_ASYNC_MASSIVE_PROCESS_ENTITY"),
    TableMap(TableName = "CONTROL_SUB_ASYNC_MASSIVE_PROCESS", Schema = "QUO"),
    ]
    public partial class ControlSubAsyncMassiveProcess :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string MassiveLoadId = "MassiveLoadId";
            public static readonly string TotalRecsToTarificate = "TotalRecsToTarificate";
            public static readonly string CountRecsTariffed = "CountRecsTariffed";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="massiveLoadId">Propiedad clave MassiveLoadId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int massiveLoadId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.MassiveLoadId, massiveLoadId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="massiveLoadId">Propiedad clave MassiveLoadId.</param>
        public static PrimaryKey CreatePrimaryKey(int massiveLoadId)
        {
            return InternalCreatePrimaryKey<ControlSubAsyncMassiveProcess>(massiveLoadId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad TotalRecsToTarificate.
        /// </summary>
        private int? _totalRecsToTarificate = null;
        /// <summary>
        /// Atributo para la propiedad CountRecsTariffed.
        /// </summary>
        private int? _countRecsTariffed = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="massiveLoadId">MassiveLoadId key property.</param>
        public ControlSubAsyncMassiveProcess(int massiveLoadId) :
            this(ControlSubAsyncMassiveProcess.CreatePrimaryKey(massiveLoadId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ControlSubAsyncMassiveProcess(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad MassiveLoadId.
        /// </summary>
        /// <value>Propiedad MassiveLoadId.</value>
        [
        DescriptionKey("MASSIVE_LOAD_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "MASSIVE_LOAD_ID", DbType = System.Data.DbType.String),
        ]
        public int MassiveLoadId
        {
            get
            {
                return (int)this._primaryKey[Properties.MassiveLoadId];
            }
            set
            {
                this._primaryKey[Properties.MassiveLoadId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TotalRecsToTarificate.
        /// </summary>
        /// <value>Propiedad TotalRecsToTarificate.</value>
        [
        DescriptionKey("TOTAL_RECS_TO_TARIFICATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TOTAL_RECS_TO_TARIFICATE", DbType = System.Data.DbType.String),
        ]
        public int? TotalRecsToTarificate
        {
            get
            {
                return this._totalRecsToTarificate;
            }
            set
            {
                this._totalRecsToTarificate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountRecsTariffed.
        /// </summary>
        /// <value>Propiedad CountRecsTariffed.</value>
        [
        DescriptionKey("COUNT_RECS_TARIFFED_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COUNT_RECS_TARIFFED", DbType = System.Data.DbType.String),
        ]
        public int? CountRecsTariffed
        {
            get
            {
                return this._countRecsTariffed;
            }
            set
            {
                this._countRecsTariffed = value;
            }
        }

    }
}