/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Script.RuleCondition.dict v1.0
 * FileSize=8861 Header=250 CRC=3592278895
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Script.Entities
{
    /// <summary>
    /// Definición de entidad RuleCondition.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Script.RuleCondition.dict"),
    Serializable(),
    DescriptionKey("RULE_CONDITION_ENTITY"),
    TableMap(TableName = "RULE_CONDITION", Schema = "SCR"),
    ]
    public partial class RuleCondition :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RuleBaseId = "RuleBaseId";
            public static readonly string RuleId = "RuleId";
            public static readonly string ConditionId = "ConditionId";
            public static readonly string EntityId = "EntityId";
            public static readonly string ConceptId = "ConceptId";
            public static readonly string ComparatorCode = "ComparatorCode";
            public static readonly string RuleValueTypeCode = "RuleValueTypeCode";
            public static readonly string CondValue = "CondValue";
            public static readonly string OrderNum = "OrderNum";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
        /// <param name="ruleId">Propiedad clave RuleId.</param>
        /// <param name="conditionId">Propiedad clave ConditionId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int ruleBaseId, int ruleId, int conditionId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RuleBaseId, ruleBaseId);
            keys.Add(Properties.RuleId, ruleId);
            keys.Add(Properties.ConditionId, conditionId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
        /// <param name="ruleId">Propiedad clave RuleId.</param>
        /// <param name="conditionId">Propiedad clave ConditionId.</param>
        public static PrimaryKey CreatePrimaryKey(int ruleBaseId, int ruleId, int conditionId)
        {
            return InternalCreatePrimaryKey<RuleCondition>(ruleBaseId, ruleId, conditionId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad EntityId.
        /// </summary>
        private int _entityId;
        /// <summary>
        /// Atributo para la propiedad ConceptId.
        /// </summary>
        private int _conceptId;
        /// <summary>
        /// Atributo para la propiedad ComparatorCode.
        /// </summary>
        private int? _comparatorCode = null;
        /// <summary>
        /// Atributo para la propiedad RuleValueTypeCode.
        /// </summary>
        private int _ruleValueTypeCode;
        /// <summary>
        /// Atributo para la propiedad CondValue.
        /// </summary>
        private string _condValue = null;
        /// <summary>
        /// Atributo para la propiedad OrderNum.
        /// </summary>
        private int _orderNum;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="ruleBaseId">RuleBaseId key property.</param>
        /// <param name="ruleId">RuleId key property.</param>
        /// <param name="conditionId">ConditionId key property.</param>
        public RuleCondition(int ruleBaseId, int ruleId, int conditionId) :
            this(RuleCondition.CreatePrimaryKey(ruleBaseId, ruleId, conditionId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RuleCondition(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleBaseId.
        /// </summary>
        /// <value>Propiedad RuleBaseId.</value>
        [
        DescriptionKey("RULE_BASE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RULE_BASE_ID", DbType = System.Data.DbType.String),
        ]
        public int RuleBaseId
        {
            get
            {
                return (int)this._primaryKey[Properties.RuleBaseId];
            }
            set
            {
                this._primaryKey[Properties.RuleBaseId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleId.
        /// </summary>
        /// <value>Propiedad RuleId.</value>
        [
        DescriptionKey("RULE_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RULE_ID", DbType = System.Data.DbType.String),
        ]
        public int RuleId
        {
            get
            {
                return (int)this._primaryKey[Properties.RuleId];
            }
            set
            {
                this._primaryKey[Properties.RuleId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConditionId.
        /// </summary>
        /// <value>Propiedad ConditionId.</value>
        [
        DescriptionKey("CONDITION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CONDITION_ID", DbType = System.Data.DbType.String),
        ]
        public int ConditionId
        {
            get
            {
                return (int)this._primaryKey[Properties.ConditionId];
            }
            set
            {
                this._primaryKey[Properties.ConditionId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EntityId.
        /// </summary>
        /// <value>Propiedad EntityId.</value>
        [
        DescriptionKey("ENTITY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENTITY_ID", DbType = System.Data.DbType.String),
        ]
        public int EntityId
        {
            get
            {
                return this._entityId;
            }
            set
            {
                this._entityId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConceptId.
        /// </summary>
        /// <value>Propiedad ConceptId.</value>
        [
        DescriptionKey("CONCEPT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CONCEPT_ID", DbType = System.Data.DbType.String),
        ]
        public int ConceptId
        {
            get
            {
                return this._conceptId;
            }
            set
            {
                this._conceptId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ComparatorCode.
        /// </summary>
        /// <value>Propiedad ComparatorCode.</value>
        [
        DescriptionKey("COMPARATOR_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMPARATOR_CD", DbType = System.Data.DbType.String),
        ]
        public int? ComparatorCode
        {
            get
            {
                return this._comparatorCode;
            }
            set
            {
                this._comparatorCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleValueTypeCode.
        /// </summary>
        /// <value>Propiedad RuleValueTypeCode.</value>
        [
        DescriptionKey("RULE_VALUE_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RULE_VALUE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int RuleValueTypeCode
        {
            get
            {
                return this._ruleValueTypeCode;
            }
            set
            {
                this._ruleValueTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CondValue.
        /// </summary>
        /// <value>Propiedad CondValue.</value>
        [
        DescriptionKey("COND_VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COND_VALUE", DbType = System.Data.DbType.String),
        ]
        public string CondValue
        {
            get
            {
                return this._condValue;
            }
            set
            {
                this._condValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OrderNum.
        /// </summary>
        /// <value>Propiedad OrderNum.</value>
        [
        DescriptionKey("ORDER_NUM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ORDER_NUM", DbType = System.Data.DbType.String),
        ]
        public int OrderNum
        {
            get
            {
                return this._orderNum;
            }
            set
            {
                this._orderNum = value;
            }
        }

    }
}