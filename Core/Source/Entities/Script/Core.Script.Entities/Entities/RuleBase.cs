/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Script.RuleBase.dict v1.0
 * FileSize=9161 Header=245 CRC=1193421782
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Script.Entities
{
    /// <summary>
    /// Definición de entidad RuleBase.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Script.RuleBase.dict"),
    Serializable(),
    DescriptionKey("RULE_BASE_ENTITY"),
    TableMap(TableName = "RULE_BASE", Schema = "SCR"),
    ]
    public partial class RuleBase :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RuleBaseId = "RuleBaseId";
            public static readonly string Description = "Description";
            public static readonly string RuleBaseTypeCode = "RuleBaseTypeCode";
            public static readonly string PackageId = "PackageId";
            public static readonly string LevelId = "LevelId";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string RuleBaseVersion = "RuleBaseVersion";
            public static readonly string IsPublished = "IsPublished";
            public static readonly string RuleEnumerator = "RuleEnumerator";
            public static readonly string IsEvent = "IsEvent";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int ruleBaseId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RuleBaseId, ruleBaseId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RuleBaseId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
        public static PrimaryKey CreatePrimaryKey(int ruleBaseId)
        {
            return InternalCreatePrimaryKey<RuleBase>(ruleBaseId);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<RuleBase>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad RuleBaseTypeCode.
        /// </summary>
        private int _ruleBaseTypeCode;
        /// <summary>
        /// Atributo para la propiedad PackageId.
        /// </summary>
        private int _packageId;
        /// <summary>
        /// Atributo para la propiedad LevelId.
        /// </summary>
        private int _levelId;
        /// <summary>
        /// Atributo para la propiedad CurrentFrom.
        /// </summary>
        private DateTime _currentFrom;
        /// <summary>
        /// Atributo para la propiedad RuleBaseVersion.
        /// </summary>
        private int _ruleBaseVersion;
        /// <summary>
        /// Atributo para la propiedad IsPublished.
        /// </summary>
        private bool _isPublished;
        /// <summary>
        /// Atributo para la propiedad RuleEnumerator.
        /// </summary>
        private int _ruleEnumerator;
        /// <summary>
        /// Atributo para la propiedad IsEvent.
        /// </summary>
        private bool _isEvent;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="ruleBaseId">RuleBaseId key property.</param>
        public RuleBase(int ruleBaseId) :
            this(RuleBase.CreatePrimaryKey(ruleBaseId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="ruleBaseId">RuleBaseId key property.</param>
        public RuleBase() :
            this(RuleBase.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RuleBase(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleBaseId.
        /// </summary>
        /// <value>Propiedad RuleBaseId.</value>
        [
        DescriptionKey("RULE_BASE_ID_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "RULE_BASE_ID", DbType = System.Data.DbType.String),
        ]
        public int RuleBaseId
        {
            get
            {
                return (int)this._primaryKey[Properties.RuleBaseId];
            }
            set
            {
                this._primaryKey[Properties.RuleBaseId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleBaseTypeCode.
        /// </summary>
        /// <value>Propiedad RuleBaseTypeCode.</value>
        [
        DescriptionKey("RULE_BASE_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RULE_BASE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int RuleBaseTypeCode
        {
            get
            {
                return this._ruleBaseTypeCode;
            }
            set
            {
                this._ruleBaseTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PackageId.
        /// </summary>
        /// <value>Propiedad PackageId.</value>
        [
        DescriptionKey("PACKAGE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PACKAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int PackageId
        {
            get
            {
                return this._packageId;
            }
            set
            {
                this._packageId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LevelId.
        /// </summary>
        /// <value>Propiedad LevelId.</value>
        [
        DescriptionKey("LEVEL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LEVEL_ID", DbType = System.Data.DbType.String),
        ]
        public int LevelId
        {
            get
            {
                return this._levelId;
            }
            set
            {
                this._levelId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return this._currentFrom;
            }
            set
            {
                this._currentFrom = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleBaseVersion.
        /// </summary>
        /// <value>Propiedad RuleBaseVersion.</value>
        [
        DescriptionKey("RULE_BASE_VERSION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RULE_BASE_VERSION", DbType = System.Data.DbType.String),
        ]
        public int RuleBaseVersion
        {
            get
            {
                return this._ruleBaseVersion;
            }
            set
            {
                this._ruleBaseVersion = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsPublished.
        /// </summary>
        /// <value>Propiedad IsPublished.</value>
        [
        DescriptionKey("IS_PUBLISHED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_PUBLISHED", DbType = System.Data.DbType.String),
        ]
        public bool IsPublished
        {
            get
            {
                return this._isPublished;
            }
            set
            {
                this._isPublished = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RuleEnumerator.
        /// </summary>
        /// <value>Propiedad RuleEnumerator.</value>
        [
        DescriptionKey("RULE_ENUMERATOR_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RULE_ENUMERATOR", DbType = System.Data.DbType.String),
        ]
        public int RuleEnumerator
        {
            get
            {
                return this._ruleEnumerator;
            }
            set
            {
                this._ruleEnumerator = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsEvent.
        /// </summary>
        /// <value>Propiedad IsEvent.</value>
        [
        DescriptionKey("IS_EVENT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_EVENT", DbType = System.Data.DbType.String),
        ]
        public bool IsEvent
        {
            get
            {
                return this._isEvent;
            }
            set
            {
                this._isEvent = value;
            }
        }

    }
}