/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Script.RangeEntityValue.dict v1.0
 * FileSize=5487 Header=253 CRC=4107444545
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Script.Entities
{
    /// <summary>
    /// Definición de entidad RangeEntityValue.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Script.RangeEntityValue.dict"),
    Serializable(),
    DescriptionKey("RANGE_ENTITY_VALUE_ENTITY"),
    TableMap(TableName = "RANGE_ENTITY_VALUE", Schema = "SCR"),
    ]
    public partial class RangeEntityValue :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string RangeEntityCode = "RangeEntityCode";
            public static readonly string RangeValueCode = "RangeValueCode";
            public static readonly string FromValue = "FromValue";
            public static readonly string ToValue = "ToValue";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="rangeEntityCode">Propiedad clave RangeEntityCode.</param>
        /// <param name="rangeValueCode">Propiedad clave RangeValueCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int rangeEntityCode, int rangeValueCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RangeEntityCode, rangeEntityCode);
            keys.Add(Properties.RangeValueCode, rangeValueCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="rangeEntityCode">Propiedad clave RangeEntityCode.</param>
        /// <param name="rangeValueCode">Propiedad clave RangeValueCode.</param>
        public static PrimaryKey CreatePrimaryKey(int rangeEntityCode, int rangeValueCode)
        {
            return InternalCreatePrimaryKey<RangeEntityValue>(rangeEntityCode, rangeValueCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FromValue.
        /// </summary>
        private int _fromValue;
        /// <summary>
        /// Atributo para la propiedad ToValue.
        /// </summary>
        private int _toValue;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="rangeEntityCode">RangeEntityCode key property.</param>
        /// <param name="rangeValueCode">RangeValueCode key property.</param>
        public RangeEntityValue(int rangeEntityCode, int rangeValueCode) :
            this(RangeEntityValue.CreatePrimaryKey(rangeEntityCode, rangeValueCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public RangeEntityValue(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RangeEntityCode.
        /// </summary>
        /// <value>Propiedad RangeEntityCode.</value>
        [
        DescriptionKey("RANGE_ENTITY_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RANGE_ENTITY_CD", DbType = System.Data.DbType.String),
        ]
        public int RangeEntityCode
        {
            get
            {
                return (int)this._primaryKey[Properties.RangeEntityCode];
            }
            set
            {
                this._primaryKey[Properties.RangeEntityCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RangeValueCode.
        /// </summary>
        /// <value>Propiedad RangeValueCode.</value>
        [
        DescriptionKey("RANGE_VALUE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RANGE_VALUE_CD", DbType = System.Data.DbType.String),
        ]
        public int RangeValueCode
        {
            get
            {
                return (int)this._primaryKey[Properties.RangeValueCode];
            }
            set
            {
                this._primaryKey[Properties.RangeValueCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FromValue.
        /// </summary>
        /// <value>Propiedad FromValue.</value>
        [
        DescriptionKey("FROM_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FROM_VALUE", DbType = System.Data.DbType.String),
        ]
        public int FromValue
        {
            get
            {
                return this._fromValue;
            }
            set
            {
                this._fromValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ToValue.
        /// </summary>
        /// <value>Propiedad ToValue.</value>
        [
        DescriptionKey("TO_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TO_VALUE", DbType = System.Data.DbType.String),
        ]
        public int ToValue
        {
            get
            {
                return this._toValue;
            }
            set
            {
                this._toValue = value;
            }
        }

    }
}