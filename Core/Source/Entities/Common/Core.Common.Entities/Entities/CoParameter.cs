/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CoParameter.dict v1.0
 * FileSize=8142 Header=248 CRC=2009757288
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CoParameter.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CoParameter.dict"),
    Serializable(),
    DescriptionKey("CO_PARAMETER_ENTITY"),
    TableMap(TableName = "CO_PARAMETER", Schema = "COMM"),
    ]
    public partial class CoParameter :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ParameterId = "ParameterId";
            public static readonly string Description = "Description";
            public static readonly string BoolParameter = "BoolParameter";
            public static readonly string DateParameter = "DateParameter";
            public static readonly string NumberParameter = "NumberParameter";
            public static readonly string TextParameter = "TextParameter";
            public static readonly string PercentageParameter = "PercentageParameter";
            public static readonly string AmountParameter = "AmountParameter";
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>( )
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ParameterId, null);

            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="parameterId">Propiedad clave ParameterId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int parameterId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ParameterId, parameterId);

            return new PrimaryKey<T>(keys);
        }
        public static PrimaryKey CreatePrimaryKey( )
        {
            return InternalCreatePrimaryKey<CoParameter>();
        }
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="parameterId">Propiedad clave ParameterId.</param>
        public static PrimaryKey CreatePrimaryKey(int parameterId)
        {
            return InternalCreatePrimaryKey<CoParameter>(parameterId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad BoolParameter.
        /// </summary>
        private bool? _boolParameter;
        /// <summary>
        /// Atributo para la propiedad DateParameter.
        /// </summary>
        private DateTime? _dateParameter = null;
        /// <summary>
        /// Atributo para la propiedad NumberParameter.
        /// </summary>
        private int? _numberParameter = null;
        /// <summary>
        /// Atributo para la propiedad TextParameter.
        /// </summary>
        private string _textParameter = null;
        /// <summary>
        /// Atributo para la propiedad PercentageParameter.
        /// </summary>
        private decimal? _percentageParameter = null;
        /// <summary>
        /// Atributo para la propiedad AmountParameter.
        /// </summary>
        private decimal? _amountParameter = null;
        //*** Object Constructors ********************************
        public CoParameter( ) :
            this(CoParameter.CreatePrimaryKey(), null)
        {
        }
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="parameterId">ParameterId key property.</param>
        public CoParameter(int parameterId) :
            this(CoParameter.CreatePrimaryKey(parameterId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoParameter(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ParameterId.
        /// </summary>
        /// <value>Propiedad ParameterId.</value>
        [
        DescriptionKey("PARAMETER_ID_PROPERTY"),
        PersistentProperty(IsKey = true,KeyType ="None"),
        ColumnMap(ColumnName = "PARAMETER_ID", DbType = System.Data.DbType.String),
        ]
        public int ParameterId
        {
            get
            {
                return (int)this._primaryKey[Properties.ParameterId];
            }
            set
            {
                this._primaryKey[Properties.ParameterId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BoolParameter.
        /// </summary>
        /// <value>Propiedad BoolParameter.</value>
        [
        DescriptionKey("BOOL_PARAMETER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BOOL_PARAMETER", DbType = System.Data.DbType.String),
        ]
        public bool? BoolParameter
        {
            get
            {
                return this._boolParameter;
            }
            set
            {
                this._boolParameter = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DateParameter.
        /// </summary>
        /// <value>Propiedad DateParameter.</value>
        [
        DescriptionKey("DATE_PARAMETER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DATE_PARAMETER", DbType = System.Data.DbType.String),
        ]
        public DateTime? DateParameter
        {
            get
            {
                return this._dateParameter;
            }
            set
            {
                this._dateParameter = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad NumberParameter.
        /// </summary>
        /// <value>Propiedad NumberParameter.</value>
        [
        DescriptionKey("NUMBER_PARAMETER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NUMBER_PARAMETER", DbType = System.Data.DbType.String),
        ]
        public int? NumberParameter
        {
            get
            {
                return this._numberParameter;
            }
            set
            {
                this._numberParameter = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TextParameter.
        /// </summary>
        /// <value>Propiedad TextParameter.</value>
        [
        DescriptionKey("TEXT_PARAMETER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEXT_PARAMETER", DbType = System.Data.DbType.String),
        ]
        public string TextParameter
        {
            get
            {
                return this._textParameter;
            }
            set
            {
                this._textParameter = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PercentageParameter.
        /// </summary>
        /// <value>Propiedad PercentageParameter.</value>
        [
        DescriptionKey("PERCENTAGE_PARAMETER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PERCENTAGE_PARAMETER", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PercentageParameter
        {
            get
            {
                return this._percentageParameter;
            }
            set
            {
                this._percentageParameter = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AmountParameter.
        /// </summary>
        /// <value>Propiedad AmountParameter.</value>
        [
        DescriptionKey("AMOUNT_PARAMETER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AMOUNT_PARAMETER", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? AmountParameter
        {
            get
            {
                return this._amountParameter;
            }
            set
            {
                this._amountParameter = value;
            }
        }

    }
}