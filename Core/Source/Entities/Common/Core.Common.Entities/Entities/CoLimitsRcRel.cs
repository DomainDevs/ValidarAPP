/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CoLimitsRcRel.dict v1.0
 * FileSize=6574 Header=249 CRC=996542755
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CoLimitsRcRel.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CoLimitsRcRel.dict"),
    Serializable(),
    DescriptionKey("CO_LIMITS_RC_REL_ENTITY"),
    TableMap(TableName = "CO_LIMITS_RC_REL", Schema = "COMM"),
    ]
    public partial class CoLimitsRcRel :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string PolicyTypeCode = "PolicyTypeCode";
            public static readonly string ProductId = "ProductId";
            public static readonly string LimitRcCode = "LimitRcCode";
            public static readonly string IsDefault = "IsDefault";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <param name="policyTypeCode">Propiedad clave PolicyTypeCode.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <param name="limitRcCode">Propiedad clave LimitRcCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int prefixCode, int policyTypeCode, int productId, int limitRcCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PrefixCode, prefixCode);
            keys.Add(Properties.PolicyTypeCode, policyTypeCode);
            keys.Add(Properties.ProductId, productId);
            keys.Add(Properties.LimitRcCode, limitRcCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <param name="policyTypeCode">Propiedad clave PolicyTypeCode.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <param name="limitRcCode">Propiedad clave LimitRcCode.</param>
        public static PrimaryKey CreatePrimaryKey(int prefixCode, int policyTypeCode, int productId, int limitRcCode)
        {
            return InternalCreatePrimaryKey<CoLimitsRcRel>(prefixCode, policyTypeCode, productId, limitRcCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad IsDefault.
        /// </summary>
        private bool _isDefault;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="prefixCode">PrefixCode key property.</param>
        /// <param name="policyTypeCode">PolicyTypeCode key property.</param>
        /// <param name="productId">ProductId key property.</param>
        /// <param name="limitRcCode">LimitRcCode key property.</param>
        public CoLimitsRcRel(int prefixCode, int policyTypeCode, int productId, int limitRcCode) :
            this(CoLimitsRcRel.CreatePrimaryKey(prefixCode, policyTypeCode, productId, limitRcCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoLimitsRcRel(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PrefixCode];
            }
            set
            {
                this._primaryKey[Properties.PrefixCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyTypeCode.
        /// </summary>
        /// <value>Propiedad PolicyTypeCode.</value>
        [
        DescriptionKey("POLICY_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int PolicyTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyTypeCode];
            }
            set
            {
                this._primaryKey[Properties.PolicyTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProductId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProductId];
            }
            set
            {
                this._primaryKey[Properties.ProductId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitRcCode.
        /// </summary>
        /// <value>Propiedad LimitRcCode.</value>
        [
        DescriptionKey("LIMIT_RC_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "LIMIT_RC_CD", DbType = System.Data.DbType.String),
        ]
        public int LimitRcCode
        {
            get
            {
                return (int)this._primaryKey[Properties.LimitRcCode];
            }
            set
            {
                this._primaryKey[Properties.LimitRcCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsDefault.
        /// </summary>
        /// <value>Propiedad IsDefault.</value>
        [
        DescriptionKey("IS_DEFAULT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_DEFAULT", DbType = System.Data.DbType.String),
        ]
        public bool IsDefault
        {
            get
            {
                return this._isDefault;
            }
            set
            {
                this._isDefault = value;
            }
        }

    }
}