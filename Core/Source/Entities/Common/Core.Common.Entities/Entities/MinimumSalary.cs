/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.MinimumSalary.dict v1.0
 * FileSize=5504 Header=249 CRC=114892094
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad MinimumSalary.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.MinimumSalary.dict"),
    Serializable(),
    DescriptionKey("MINIMUM_SALARY_ENTITY"),
    TableMap(TableName="MINIMUM_SALARY", Schema="COMM"),
    ]
    public partial class MinimumSalary :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string Year = "Year";
			public static readonly string SalaryMinimumMonth = "SalaryMinimumMonth";
			public static readonly string SalaryMinimumDay = "SalaryMinimumDay";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="registrationDate">Propiedad clave RegistrationDate.</param>
		/// <param name="year">Propiedad clave Year.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(DateTime registrationDate, int year)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RegistrationDate, registrationDate);
		    keys.Add(Properties.Year, year);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.RegistrationDate, null);
            keys.Add(Properties.Year, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="registrationDate">Propiedad clave RegistrationDate.</param>
        /// <param name="year">Propiedad clave Year.</param>
        public static PrimaryKey CreatePrimaryKey(DateTime registrationDate, int year)
	    {
			return InternalCreatePrimaryKey<MinimumSalary>(registrationDate, year);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<MinimumSalary>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad SalaryMinimumMonth.
        /// </summary>
        private decimal _salaryMinimumMonth;
		/// <summary>
		/// Atributo para la propiedad SalaryMinimumDay.
		/// </summary>
        private decimal _salaryMinimumDay;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="registrationDate">RegistrationDate key property.</param>
		/// <param name="year">Year key property.</param>
	    public MinimumSalary(DateTime registrationDate, int year):
			this(MinimumSalary.CreatePrimaryKey(registrationDate, year), null)
	    {
	    }

        public MinimumSalary() :
            this(MinimumSalary.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public MinimumSalary(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime RegistrationDate
	    {
		    get
		    {
				return (DateTime)this._primaryKey[Properties.RegistrationDate];
		    }
		    set
		    {
				this._primaryKey[Properties.RegistrationDate] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Year.
		/// </summary>
		/// <value>Propiedad Year.</value>
	    [
		DescriptionKey("YEAR_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="YEAR", DbType=System.Data.DbType.String),
	    ]
        public int Year
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Year];
		    }
		    set
		    {
				this._primaryKey[Properties.Year] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalaryMinimumMonth.
		/// </summary>
		/// <value>Propiedad SalaryMinimumMonth.</value>
	    [
		DescriptionKey("SALARY_MINIMUM_MONTH_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SALARY_MINIMUM_MONTH", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal SalaryMinimumMonth
	    {
		    get
		    {
			    return this._salaryMinimumMonth;
		    }
		    set
		    {
				this._salaryMinimumMonth = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalaryMinimumDay.
		/// </summary>
		/// <value>Propiedad SalaryMinimumDay.</value>
	    [
		DescriptionKey("SALARY_MINIMUM_DAY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SALARY_MINIMUM_DAY", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal SalaryMinimumDay
	    {
		    get
		    {
			    return this._salaryMinimumDay;
		    }
		    set
		    {
				this._salaryMinimumDay = value;
			}
	    }

    }
}