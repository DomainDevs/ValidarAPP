/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.GuaranteeStatusUser.dict v1.0
 * FileSize=4175 Header=256 CRC=1331311663
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad GuaranteeStatusUser.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.GuaranteeStatusUser.dict"),
    Serializable(),
    DescriptionKey("GUARANTEE_STATUS_USER_ENTITY"),
    TableMap(TableName="GUARANTEE_STATUS_USER", Schema="COMM"),
    ]
    public partial class GuaranteeStatusUser :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string GuaranteeStatusCode = "GuaranteeStatusCode";
			public static readonly string UserId = "UserId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="guaranteeStatusCode">Propiedad clave GuaranteeStatusCode.</param>
		/// <param name="userId">Propiedad clave UserId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int guaranteeStatusCode, int userId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.GuaranteeStatusCode, guaranteeStatusCode);
		    keys.Add(Properties.UserId, userId);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
        /// <author>Kevin Vargas</author>
		/// </summary>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.GuaranteeStatusCode, null);
            keys.Add(Properties.UserId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="guaranteeStatusCode">Propiedad clave GuaranteeStatusCode.</param>
        /// <param name="userId">Propiedad clave UserId.</param>
        public static PrimaryKey CreatePrimaryKey(int guaranteeStatusCode, int userId)
	    {
			return InternalCreatePrimaryKey<GuaranteeStatusUser>(guaranteeStatusCode, userId);
		}

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <author>Kevin Vargas</author>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<GuaranteeStatusUser>();
        }

        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="guaranteeStatusCode">GuaranteeStatusCode key property.</param>
        /// <param name="userId">UserId key property.</param>
        public GuaranteeStatusUser(int guaranteeStatusCode, int userId):
			this(GuaranteeStatusUser.CreatePrimaryKey(guaranteeStatusCode, userId), null)
	    {
	    }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <author>Kevin Vargas</author>
        public GuaranteeStatusUser() :
            this(GuaranteeStatusUser.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public GuaranteeStatusUser(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad GuaranteeStatusCode.
		/// </summary>
		/// <value>Propiedad GuaranteeStatusCode.</value>
	    [
		DescriptionKey("GUARANTEE_STATUS_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName="GUARANTEE_STATUS_CD", DbType=System.Data.DbType.String),
	    ]
        public int GuaranteeStatusCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.GuaranteeStatusCode];
		    }
		    set
		    {
				this._primaryKey[Properties.GuaranteeStatusCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.UserId];
		    }
		    set
		    {
				this._primaryKey[Properties.UserId] = value;
			}
	    }

    }
}