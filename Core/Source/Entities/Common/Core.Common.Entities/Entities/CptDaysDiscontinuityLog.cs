/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CptDaysDiscontinuityLog.dict v1.0
 * FileSize=5511 Header=260 CRC=3115918214
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System.Collections.Specialized;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CptDaysDiscontinuityLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CptDaysDiscontinuityLog.dict"),
    Serializable(),
    DescriptionKey("CPT_DAYS_DISCONTINUITY_LOG_ENTITY"),
    TableMap(TableName="CPT_DAYS_DISCONTINUITY_LOG", Schema="COMM"),
    ]
    public partial class CptDaysDiscontinuityLog :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string DaysDiscontinuityLogId = "DaysDiscontinuityLogId";
			public static readonly string DaysDiscontinuity = "DaysDiscontinuity";
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string UserId = "UserId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="daysDiscontinuityLogId">Propiedad clave DaysDiscontinuityLogId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(long daysDiscontinuityLogId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.DaysDiscontinuityLogId, daysDiscontinuityLogId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="daysDiscontinuityLogId">Propiedad clave DaysDiscontinuityLogId.</param>
		public static PrimaryKey CreatePrimaryKey(long daysDiscontinuityLogId)
	    {
			return InternalCreatePrimaryKey<CptDaysDiscontinuityLog>(daysDiscontinuityLogId);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.DaysDiscontinuityLogId, null);
            return new PrimaryKey(typeof(CptDaysDiscontinuityLog), keys);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DaysDiscontinuity.
        /// </summary>
        private int _daysDiscontinuity;
		/// <summary>
		/// Atributo para la propiedad RegistrationDate.
		/// </summary>
        private DateTime _registrationDate;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="daysDiscontinuityLogId">DaysDiscontinuityLogId key property.</param>
	    public CptDaysDiscontinuityLog(long daysDiscontinuityLogId):
			this(CptDaysDiscontinuityLog.CreatePrimaryKey(daysDiscontinuityLogId), null)
	    {
	    }

        public CptDaysDiscontinuityLog() :
            this(CptDaysDiscontinuityLog.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CptDaysDiscontinuityLog(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad DaysDiscontinuityLogId.
		/// </summary>
		/// <value>Propiedad DaysDiscontinuityLogId.</value>
	    [
		DescriptionKey("DAYS_DISCONTINUITY_LOG_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="DAYS_DISCONTINUITY_LOG_ID", DbType=System.Data.DbType.String),
	    ]
        public long DaysDiscontinuityLogId
	    {
		    get
		    {
				return (long)this._primaryKey[Properties.DaysDiscontinuityLogId];
		    }
		    set
		    {
				this._primaryKey[Properties.DaysDiscontinuityLogId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DaysDiscontinuity.
		/// </summary>
		/// <value>Propiedad DaysDiscontinuity.</value>
	    [
		DescriptionKey("DAYS_DISCONTINUITY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DAYS_DISCONTINUITY", DbType=System.Data.DbType.String),
	    ]
        public int DaysDiscontinuity
	    {
		    get
		    {
			    return this._daysDiscontinuity;
		    }
		    set
		    {
				this._daysDiscontinuity = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime RegistrationDate
	    {
		    get
		    {
			    return this._registrationDate;
		    }
		    set
		    {
				this._registrationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

    }
}