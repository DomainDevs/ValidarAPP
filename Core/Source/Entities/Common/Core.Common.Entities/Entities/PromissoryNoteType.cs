/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.PromissoryNoteType.dict v1.0
 * FileSize=4206 Header=255 CRC=1905309468
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad PromissoryNoteType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.PromissoryNoteType.dict"), 
    Serializable(),
    DescriptionKey("PROMISSORY_NOTE_TYPE_ENTITY"),
    TableMap(TableName="PROMISSORY_NOTE_TYPE", Schema="COMM"),
    ]
    public partial class PromissoryNoteType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PromissoryNoteTypeCode = "PromissoryNoteTypeCode";
			public static readonly string Description = "Description";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="promissoryNoteTypeCode">Propiedad clave PromissoryNoteTypeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int promissoryNoteTypeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PromissoryNoteTypeCode, promissoryNoteTypeCode);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PromissoryNoteTypeCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="promissoryNoteTypeCode">Propiedad clave PromissoryNoteTypeCode.</param>
        public static PrimaryKey CreatePrimaryKey(int promissoryNoteTypeCode)
	    {
			return InternalCreatePrimaryKey<PromissoryNoteType>(promissoryNoteTypeCode);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<PromissoryNoteType>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="promissoryNoteTypeCode">PromissoryNoteTypeCode key property.</param>
	    public PromissoryNoteType(int promissoryNoteTypeCode):
			this(PromissoryNoteType.CreatePrimaryKey(promissoryNoteTypeCode), null)
	    {
	    }

        public PromissoryNoteType() :
            this(PromissoryNoteType.CreatePrimaryKey(), null)
        {
        }


        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PromissoryNoteType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PromissoryNoteTypeCode.
		/// </summary>
		/// <value>Propiedad PromissoryNoteTypeCode.</value>
	    [
		DescriptionKey("PROMISSORY_NOTE_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType ="None"),
        ColumnMap(ColumnName="PROMISSORY_NOTE_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int PromissoryNoteTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PromissoryNoteTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PromissoryNoteTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

    }
}