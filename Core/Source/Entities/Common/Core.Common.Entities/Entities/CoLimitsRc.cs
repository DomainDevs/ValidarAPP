/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CoLimitsRc.dict v1.0
 * FileSize=6383 Header=247 CRC=3805797765
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CoLimitsRc.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CoLimitsRc.dict"),
    Serializable(),
    DescriptionKey("CO_LIMITS_RC_ENTITY"),
    TableMap(TableName = "CO_LIMITS_RC", Schema = "COMM"),
    ]
    public partial class CoLimitsRc :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string LimitRcCode = "LimitRcCode";
            public static readonly string Limit1 = "Limit1";
            public static readonly string Limit2 = "Limit2";
            public static readonly string Limit3 = "Limit3";
            public static readonly string LimitUnique = "LimitUnique";
            public static readonly string Description = "Description";
        }
        
        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="limitRcCode">Propiedad clave LimitRcCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int limitRcCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.LimitRcCode, limitRcCode);

            return new PrimaryKey<T>(keys);
        }
        
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="limitRcCode">Propiedad clave LimitRcCode.</param>
        public static PrimaryKey CreatePrimaryKey(int limitRcCode)
        {
            return InternalCreatePrimaryKey<CoLimitsRc>(limitRcCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Limit1.
        /// </summary>
        private decimal? _limit1 = null;
        /// <summary>
        /// Atributo para la propiedad Limit2.
        /// </summary>
        private decimal? _limit2 = null;
        /// <summary>
        /// Atributo para la propiedad Limit3.
        /// </summary>
        private decimal? _limit3 = null;
        /// <summary>
        /// Atributo para la propiedad LimitUnique.
        /// </summary>
        private decimal? _limitUnique = null;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        
        
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="limitRcCode">LimitRcCode key property.</param>
        public CoLimitsRc(int limitRcCode) :
            this(CoLimitsRc.CreatePrimaryKey(limitRcCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoLimitsRc(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitRcCode.
        /// </summary>
        /// <value>Propiedad LimitRcCode.</value>
        [
        DescriptionKey("LIMIT_RC_CODE_PROPERTY"),
        PersistentProperty(IsKey = true,KeyType ="None"),
        ColumnMap(ColumnName = "LIMIT_RC_CD", DbType = System.Data.DbType.String),
        ]
        public int LimitRcCode
        {
            get
            {
                return (int)this._primaryKey[Properties.LimitRcCode];
            }
            set
            {
                this._primaryKey[Properties.LimitRcCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Limit1.
        /// </summary>
        /// <value>Propiedad Limit1.</value>
        [
        DescriptionKey("LIMIT1_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LIMIT_1", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Limit1
        {
            get
            {
                return this._limit1;
            }
            set
            {
                this._limit1 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Limit2.
        /// </summary>
        /// <value>Propiedad Limit2.</value>
        [
        DescriptionKey("LIMIT2_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LIMIT_2", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Limit2
        {
            get
            {
                return this._limit2;
            }
            set
            {
                this._limit2 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Limit3.
        /// </summary>
        /// <value>Propiedad Limit3.</value>
        [
        DescriptionKey("LIMIT3_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LIMIT_3", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Limit3
        {
            get
            {
                return this._limit3;
            }
            set
            {
                this._limit3 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitUnique.
        /// </summary>
        /// <value>Propiedad LimitUnique.</value>
        [
        DescriptionKey("LIMIT_UNIQUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "LIMIT_UNIQUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? LimitUnique
        {
            get
            {
                return this._limitUnique;
            }
            set
            {
                this._limitUnique = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        ///<summary>
        ///Creación de 3 nuevos constructores necesarios para poder realizar el proceso de creación, modificación y eliminación. 
        ///</summary>
        ///<author>Diego Leon</author>                                            
        ///<date>17/07/2018</date>
        ///<purpose>REQ_#084</purpose>
        ///<returns></returns>     
        public CoLimitsRc() :
           this(CoLimitsRc.CreatePrimaryKey(), null)
        {
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CoLimitsRc>();
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.LimitRcCode, null);

            return new PrimaryKey<T>(keys);
        }
    }
}