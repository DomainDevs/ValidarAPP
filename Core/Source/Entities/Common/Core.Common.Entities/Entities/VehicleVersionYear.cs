/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.VehicleVersionYear.dict v1.0
 * FileSize=7679 Header=255 CRC=1770908506
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad VehicleVersionYear.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.VehicleVersionYear.dict"),
    Serializable(),
    DescriptionKey("VEHICLE_VERSION_YEAR_ENTITY"),
    TableMap(TableName = "VEHICLE_VERSION_YEAR", Schema = "COMM"),
    ]
    public partial class VehicleVersionYear :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string VehicleVersionCode = "VehicleVersionCode";
            public static readonly string VehicleModelCode = "VehicleModelCode";
            public static readonly string VehicleMakeCode = "VehicleMakeCode";
            public static readonly string VehicleYear = "VehicleYear";
            public static readonly string VehiclePrice = "VehiclePrice";
            public static readonly string CurrencyCode = "CurrencyCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="vehicleVersionCode">Propiedad clave VehicleVersionCode.</param>
        /// <param name="vehicleModelCode">Propiedad clave VehicleModelCode.</param>
        /// <param name="vehicleMakeCode">Propiedad clave VehicleMakeCode.</param>
        /// <param name="vehicleYear">Propiedad clave VehicleYear.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int vehicleVersionCode, int vehicleModelCode, int vehicleMakeCode, int vehicleYear)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.VehicleVersionCode, vehicleVersionCode);
            keys.Add(Properties.VehicleModelCode, vehicleModelCode);
            keys.Add(Properties.VehicleMakeCode, vehicleMakeCode);
            keys.Add(Properties.VehicleYear, vehicleYear);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="vehicleVersionCode">Propiedad clave VehicleVersionCode.</param>
        /// <param name="vehicleModelCode">Propiedad clave VehicleModelCode.</param>
        /// <param name="vehicleMakeCode">Propiedad clave VehicleMakeCode.</param>
        /// <param name="vehicleYear">Propiedad clave VehicleYear.</param>
        public static PrimaryKey CreatePrimaryKey(int vehicleVersionCode, int vehicleModelCode, int vehicleMakeCode, int vehicleYear)
        {
            return InternalCreatePrimaryKey<VehicleVersionYear>(vehicleVersionCode, vehicleModelCode, vehicleMakeCode, vehicleYear);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad VehiclePrice.
        /// </summary>
        private decimal _vehiclePrice;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int _currencyCode;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="vehicleVersionCode">VehicleVersionCode key property.</param>
        /// <param name="vehicleModelCode">VehicleModelCode key property.</param>
        /// <param name="vehicleMakeCode">VehicleMakeCode key property.</param>
        /// <param name="vehicleYear">VehicleYear key property.</param>
        public VehicleVersionYear(int vehicleVersionCode, int vehicleModelCode, int vehicleMakeCode, int vehicleYear) :
            this(VehicleVersionYear.CreatePrimaryKey(vehicleVersionCode, vehicleModelCode, vehicleMakeCode, vehicleYear), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public VehicleVersionYear(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad VehicleVersionCode.
        /// </summary>
        /// <value>Propiedad VehicleVersionCode.</value>
        [
        DescriptionKey("VEHICLE_VERSION_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "VEHICLE_VERSION_CD", DbType = System.Data.DbType.String),
        ]
        public int VehicleVersionCode
        {
            get
            {
                return (int)this._primaryKey[Properties.VehicleVersionCode];
            }
            set
            {
                this._primaryKey[Properties.VehicleVersionCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VehicleModelCode.
        /// </summary>
        /// <value>Propiedad VehicleModelCode.</value>
        [
        DescriptionKey("VEHICLE_MODEL_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "VEHICLE_MODEL_CD", DbType = System.Data.DbType.String),
        ]
        public int VehicleModelCode
        {
            get
            {
                return (int)this._primaryKey[Properties.VehicleModelCode];
            }
            set
            {
                this._primaryKey[Properties.VehicleModelCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VehicleMakeCode.
        /// </summary>
        /// <value>Propiedad VehicleMakeCode.</value>
        [
        DescriptionKey("VEHICLE_MAKE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "VEHICLE_MAKE_CD", DbType = System.Data.DbType.String),
        ]
        public int VehicleMakeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.VehicleMakeCode];
            }
            set
            {
                this._primaryKey[Properties.VehicleMakeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VehicleYear.
        /// </summary>
        /// <value>Propiedad VehicleYear.</value>
        [
        DescriptionKey("VEHICLE_YEAR_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "VEHICLE_YEAR", DbType = System.Data.DbType.String),
        ]
        public int VehicleYear
        {
            get
            {
                return (int)this._primaryKey[Properties.VehicleYear];
            }
            set
            {
                this._primaryKey[Properties.VehicleYear] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VehiclePrice.
        /// </summary>
        /// <value>Propiedad VehiclePrice.</value>
        [
        DescriptionKey("VEHICLE_PRICE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "VEHICLE_PRICE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal VehiclePrice
        {
            get
            {
                return this._vehiclePrice;
            }
            set
            {
                this._vehiclePrice = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        ///<summary>
        ///Creación de 3 nuevos constructores necesarios para poder realizar el proceso de creación, modificación y eliminación. 
        ///</summary>
        ///<author>Diego Leon</author>                                            
        ///<date>17/07/2018</date>
        ///<purpose>REQ_#080</purpose>
        ///<returns></returns>
        public VehicleVersionYear() :
       this(VehicleVersionYear.CreatePrimaryKey(), null)
        {
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<VehicleVersionYear>();
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.VehicleVersionCode, null);
            keys.Add(Properties.VehicleModelCode, null);
            keys.Add(Properties.VehicleMakeCode, null);
            keys.Add(Properties.VehicleYear, null);

            return new PrimaryKey<T>(keys);
        }

    }
}