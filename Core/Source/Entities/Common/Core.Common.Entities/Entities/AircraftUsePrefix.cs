/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.AircraftUsePrefix.dict v1.0
 * FileSize=4155 Header=254 CRC=2033283363
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad AircraftUsePrefix.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.AircraftUsePrefix.dict"),
    Serializable(),
    DescriptionKey("AIRCRAFT_USE_PREFIX_ENTITY"),
    TableMap(TableName="AIRCRAFT_USE_PREFIX", Schema="COMM"),
    ]
    public partial class AircraftUsePrefix :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AircraftUseCode = "AircraftUseCode";
			public static readonly string PrefixCode = "PrefixCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="aircraftUseCode">Propiedad clave AircraftUseCode.</param>
		/// <param name="prefixCode">Propiedad clave PrefixCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int aircraftUseCode, int prefixCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AircraftUseCode, aircraftUseCode);
		    keys.Add(Properties.PrefixCode, prefixCode);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AircraftUseCode, null);
            keys.Add(Properties.PrefixCode, null);

            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="aircraftUseCode">Propiedad clave AircraftUseCode.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        public static PrimaryKey CreatePrimaryKey(int aircraftUseCode, int prefixCode)
	    {
			return InternalCreatePrimaryKey<AircraftUsePrefix>(aircraftUseCode, prefixCode);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<AircraftUsePrefix>();
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="aircraftUseCode">AircraftUseCode key property.</param>
        /// <param name="prefixCode">PrefixCode key property.</param>
        public AircraftUsePrefix(int aircraftUseCode, int prefixCode):
			this(AircraftUsePrefix.CreatePrimaryKey(aircraftUseCode, prefixCode), null)
	    {
	    }

        public AircraftUsePrefix() :
           this(AircraftUsePrefix.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public AircraftUsePrefix(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AircraftUseCode.
		/// </summary>
		/// <value>Propiedad AircraftUseCode.</value>
	    [
		DescriptionKey("AIRCRAFT_USE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType ="None"),
        ColumnMap(ColumnName="AIRCRAFT_USE_CD", DbType=System.Data.DbType.String),
	    ]
        public int AircraftUseCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AircraftUseCode];
		    }
		    set
		    {
				this._primaryKey[Properties.AircraftUseCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PrefixCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PrefixCode] = value;
			}
	    }

    }
}