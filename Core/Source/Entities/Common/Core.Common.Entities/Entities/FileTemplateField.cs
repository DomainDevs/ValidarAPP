/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.FileTemplateField.dict v1.0
 * FileSize=8086 Header=254 CRC=2682795501
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad FileTemplateField.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.FileTemplateField.dict"),
    Serializable(),
    DescriptionKey("FILE_TEMPLATE_FIELD_ENTITY"),
    TableMap(TableName = "FILE_TEMPLATE_FIELD", Schema = "COMM"),
    ]
    public partial class FileTemplateField :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string FileTemplateId = "FileTemplateId";
            public static readonly string FieldId = "FieldId";
            public static readonly string Order = "Order";
            public static readonly string ColumnSpan = "ColumnSpan";
            public static readonly string RowPosition = "RowPosition";
            public static readonly string IsMandatory = "IsMandatory";
            public static readonly string IsEnabled = "IsEnabled";
            public static readonly string Description = "Description";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
        {
            return InternalCreatePrimaryKey<FileTemplateField>(id);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FileTemplateId.
        /// </summary>
        private int _fileTemplateId;
        /// <summary>
        /// Atributo para la propiedad FieldId.
        /// </summary>
        private int _fieldId;
        /// <summary>
        /// Atributo para la propiedad Order.
        /// </summary>
        private int _order;
        /// <summary>
        /// Atributo para la propiedad ColumnSpan.
        /// </summary>
        private int _columnSpan;
        /// <summary>
        /// Atributo para la propiedad RowPosition.
        /// </summary>
        private int _rowPosition;
        /// <summary>
        /// Atributo para la propiedad IsMandatory.
        /// </summary>
        private bool _isMandatory;
        /// <summary>
        /// Atributo para la propiedad IsEnabled.
        /// </summary>
        private bool _isEnabled;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public FileTemplateField(int id) :
            this(FileTemplateField.CreatePrimaryKey(id), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public FileTemplateField(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID", DbType = System.Data.DbType.String),
        ]
        public int Id
        {
            get
            {
                return (int)this._primaryKey[Properties.Id];
            }
            set
            {
                this._primaryKey[Properties.Id] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FileTemplateId.
        /// </summary>
        /// <value>Propiedad FileTemplateId.</value>
        [
        DescriptionKey("FILE_TEMPLATE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FILE_TEMPLATE_ID", DbType = System.Data.DbType.String),
        ]
        public int FileTemplateId
        {
            get
            {
                return this._fileTemplateId;
            }
            set
            {
                this._fileTemplateId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FieldId.
        /// </summary>
        /// <value>Propiedad FieldId.</value>
        [
        DescriptionKey("FIELD_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FIELD_ID", DbType = System.Data.DbType.String),
        ]
        public int FieldId
        {
            get
            {
                return this._fieldId;
            }
            set
            {
                this._fieldId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Order.
        /// </summary>
        /// <value>Propiedad Order.</value>
        [
        DescriptionKey("ORDER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ORDER", DbType = System.Data.DbType.String),
        ]
        public int Order
        {
            get
            {
                return this._order;
            }
            set
            {
                this._order = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ColumnSpan.
        /// </summary>
        /// <value>Propiedad ColumnSpan.</value>
        [
        DescriptionKey("COLUMN_SPAN_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COLUMN_SPAN", DbType = System.Data.DbType.String),
        ]
        public int ColumnSpan
        {
            get
            {
                return this._columnSpan;
            }
            set
            {
                this._columnSpan = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RowPosition.
        /// </summary>
        /// <value>Propiedad RowPosition.</value>
        [
        DescriptionKey("ROW_POSITION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ROW_POSITION", DbType = System.Data.DbType.String),
        ]
        public int RowPosition
        {
            get
            {
                return this._rowPosition;
            }
            set
            {
                this._rowPosition = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMandatory.
        /// </summary>
        /// <value>Propiedad IsMandatory.</value>
        [
        DescriptionKey("IS_MANDATORY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_MANDATORY", DbType = System.Data.DbType.String),
        ]
        public bool IsMandatory
        {
            get
            {
                return this._isMandatory;
            }
            set
            {
                this._isMandatory = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsEnabled.
        /// </summary>
        /// <value>Propiedad IsEnabled.</value>
        [
        DescriptionKey("IS_ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool IsEnabled
        {
            get
            {
                return this._isEnabled;
            }
            set
            {
                this._isEnabled = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }
    }
}