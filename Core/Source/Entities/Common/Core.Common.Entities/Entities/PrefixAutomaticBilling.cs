/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.PrefixAutomaticBilling.dict v1.0
 * FileSize=4872 Header=259 CRC=1726859921
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad PrefixAutomaticBilling.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.PrefixAutomaticBilling.dict"),
    Serializable(),
    DescriptionKey("PREFIX_AUTOMATIC_BILLING_ENTITY"),
    TableMap(TableName="PREFIX_AUTOMATIC_BILLING", Schema="COMM"),
    ]
    public partial class PrefixAutomaticBilling :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PrefixAutomaticBillingId = "PrefixAutomaticBillingId";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string IsAutomaticBilling = "IsAutomaticBilling";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="prefixAutomaticBillingId">Propiedad clave PrefixAutomaticBillingId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int prefixAutomaticBillingId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PrefixAutomaticBillingId, prefixAutomaticBillingId);

		    return new PrimaryKey<T>(keys);
	    }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PrefixAutomaticBillingId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="prefixAutomaticBillingId">Propiedad clave PrefixAutomaticBillingId.</param>
        public static PrimaryKey CreatePrimaryKey(int prefixAutomaticBillingId)
	    {
			return InternalCreatePrimaryKey<PrefixAutomaticBilling>(prefixAutomaticBillingId);
		}
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<PrefixAutomaticBilling>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad IsAutomaticBilling.
		/// </summary>
        private bool _isAutomaticBilling;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="prefixAutomaticBillingId">PrefixAutomaticBillingId key property.</param>
	    public PrefixAutomaticBilling(int prefixAutomaticBillingId):
			this(PrefixAutomaticBilling.CreatePrimaryKey(prefixAutomaticBillingId), null)
	    {
	    }
        public PrefixAutomaticBilling() :
            this(PrefixAutomaticBilling.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PrefixAutomaticBilling(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixAutomaticBillingId.
		/// </summary>
		/// <value>Propiedad PrefixAutomaticBillingId.</value>
	    [
		DescriptionKey("PREFIX_AUTOMATIC_BILLING_ID_PROPERTY"),
		PersistentProperty(IsKey = true,KeyType ="None"),
        ColumnMap(ColumnName="PREFIX_AUTOMATIC_BILLING_ID", DbType=System.Data.DbType.String),
	    ]
        public int PrefixAutomaticBillingId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PrefixAutomaticBillingId];
		    }
		    set
		    {
				this._primaryKey[Properties.PrefixAutomaticBillingId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsAutomaticBilling.
		/// </summary>
		/// <value>Propiedad IsAutomaticBilling.</value>
	    [
		DescriptionKey("IS_AUTOMATIC_BILLING_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_AUTOMATIC_BILLING", DbType=System.Data.DbType.String),
	    ]
        public bool IsAutomaticBilling
	    {
		    get
		    {
			    return this._isAutomaticBilling;
		    }
		    set
		    {
				this._isAutomaticBilling = value;
			}
	    }

    }
}