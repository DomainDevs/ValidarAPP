/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: test2.Court.dict v1.0
 * FileSize=5298 Header=216 CRC=3224914566
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad Court.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.Court.dict"),
    Serializable(),
    DescriptionKey("COURT_ENTITY"),
    TableMap(TableName = "COURT", Schema = "COMM"),
    ]
    public partial class Court :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CourtCode = "CourtCode";
            public static readonly string DescriptionCode = "DescriptionCode";
            public static readonly string SmallDescription = "SmallDescription";
            public static readonly string Enabled = "Enabled";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="courtCode">Propiedad clave CourtCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int courtCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CourtCode, courtCode);

            return new PrimaryKey<T>(keys);
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>( )
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CourtCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="courtCode">Propiedad clave CourtCode.</param>
        public static PrimaryKey CreatePrimaryKey(int courtCode)
        {
            return InternalCreatePrimaryKey<Court>(courtCode);
        }
        public static PrimaryKey CreatePrimaryKey( )
        {
            return InternalCreatePrimaryKey<Court>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad DescriptionCode.
        /// </summary>
        private string _descriptionCode = null;
        /// <summary>
        /// Atributo para la propiedad SmallDescription.
        /// </summary>
        private string _smallDescription = null;
        /// <summary>
        /// Atributo para la propiedad Enabled.
        /// </summary>
        private bool _enabled;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="courtCode">CourtCode key property.</param>
        public Court(int courtCode) :
            this(Court.CreatePrimaryKey(courtCode), null)
        {
        }
        public Court( ) :
            this(Court.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Court(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CourtCode.
        /// </summary>
        /// <value>Propiedad CourtCode.</value>
        [
        DescriptionKey("COURT_CODE_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "COURT_CD", DbType = System.Data.DbType.String),
        ]
        public int CourtCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CourtCode];
            }
            set
            {
                this._primaryKey[Properties.CourtCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionCode.
        /// </summary>
        /// <value>Propiedad DescriptionCode.</value>
        [
        DescriptionKey("DESCRIPTION_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION_CD", DbType = System.Data.DbType.String),
        ]
        public string DescriptionCode
        {
            get
            {
                return this._descriptionCode;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.DescriptionCode);
                }
                this._descriptionCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SmallDescription.
        /// </summary>
        /// <value>Propiedad SmallDescription.</value>
        [
        DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SMALL_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string SmallDescription
        {
            get
            {
                return this._smallDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
                }
                this._smallDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Enabled.
        /// </summary>
        /// <value>Propiedad Enabled.</value>
        [
        DescriptionKey("ENABLED_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool Enabled
        {
            get
            {
                return this._enabled;
            }
            set
            {
                this._enabled = value;
            }
        }

    }
}