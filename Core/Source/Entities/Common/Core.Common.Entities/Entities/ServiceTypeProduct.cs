/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.ServiceTypeProduct.dict v1.0
 * FileSize=4144 Header=255 CRC=1788485775
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad ServiceTypeProduct.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.ServiceTypeProduct.dict"),
    Serializable(),
    DescriptionKey("SERVICE_TYPE_PRODUCT_ENTITY"),
    TableMap(TableName = "SERVICE_TYPE_PRODUCT", Schema = "COMM"),
    ]
    public partial class ServiceTypeProduct :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ServiceTypeCode = "ServiceTypeCode";
            public static readonly string ProductId = "ProductId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="serviceTypeCode">Propiedad clave ServiceTypeCode.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int serviceTypeCode, int productId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ServiceTypeCode, serviceTypeCode);
            keys.Add(Properties.ProductId, productId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="serviceTypeCode">Propiedad clave ServiceTypeCode.</param>
        /// <param name="productId">Propiedad clave ProductId.</param>
        public static PrimaryKey CreatePrimaryKey(int serviceTypeCode, int productId)
        {
            return InternalCreatePrimaryKey<ServiceTypeProduct>(serviceTypeCode, productId);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="serviceTypeCode">ServiceTypeCode key property.</param>
        /// <param name="productId">ProductId key property.</param>
        public ServiceTypeProduct(int serviceTypeCode, int productId) :
            this(ServiceTypeProduct.CreatePrimaryKey(serviceTypeCode, productId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public ServiceTypeProduct(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ServiceTypeCode.
        /// </summary>
        /// <value>Propiedad ServiceTypeCode.</value>
        [
        DescriptionKey("SERVICE_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SERVICE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int ServiceTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.ServiceTypeCode];
            }
            set
            {
                this._primaryKey[Properties.ServiceTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProductId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProductId];
            }
            set
            {
                this._primaryKey[Properties.ProductId] = value;
            }
        }

    }
}