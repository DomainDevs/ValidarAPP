/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.LogError.dict v1.0
 * FileSize=8845 Header=244 CRC=141516310
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad LogError.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.LogError.dict"),
    Serializable(),
    DescriptionKey("LOG_ERROR_ENTITY"),
    TableMap(TableName = "LOG_ERROR", Schema = "COMM"),
    ]
    public partial class LogError :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string LogErrorCode = "LogErrorCode";
            public static readonly string ProcessId = "ProcessId";
            public static readonly string RecordType = "RecordType";
            public static readonly string ProcessDate = "ProcessDate";
            public static readonly string ClaimCode = "ClaimCode";
            public static readonly string PaymentRequestCode = "PaymentRequestCode";
            public static readonly string ClaimNumber = "ClaimNumber";
            public static readonly string DescriptionError = "DescriptionError";
            public static readonly string UserId = "UserId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="logErrorCode">Propiedad clave LogErrorCode.</param>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int logErrorCode, int processId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.LogErrorCode, logErrorCode);
            keys.Add(Properties.ProcessId, processId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="logErrorCode">Propiedad clave LogErrorCode.</param>
        /// <param name="processId">Propiedad clave ProcessId.</param>
        public static PrimaryKey CreatePrimaryKey(int logErrorCode, int processId)
        {
            return InternalCreatePrimaryKey<LogError>(logErrorCode, processId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad RecordType.
        /// </summary>
        private string _recordType = null;
        /// <summary>
        /// Atributo para la propiedad ProcessDate.
        /// </summary>
        private DateTime? _processDate = null;
        /// <summary>
        /// Atributo para la propiedad ClaimCode.
        /// </summary>
        private int? _claimCode = null;
        /// <summary>
        /// Atributo para la propiedad PaymentRequestCode.
        /// </summary>
        private int? _paymentRequestCode = null;
        /// <summary>
        /// Atributo para la propiedad ClaimNumber.
        /// </summary>
        private int? _claimNumber = null;
        /// <summary>
        /// Atributo para la propiedad DescriptionError.
        /// </summary>
        private string _descriptionError = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private string _userId = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="logErrorCode">LogErrorCode key property.</param>
        /// <param name="processId">ProcessId key property.</param>
        public LogError(int logErrorCode, int processId) :
            this(LogError.CreatePrimaryKey(logErrorCode, processId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public LogError(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad LogErrorCode.
        /// </summary>
        /// <value>Propiedad LogErrorCode.</value>
        [
        DescriptionKey("LOG_ERROR_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "LOG_ERROR_CD", DbType = System.Data.DbType.String),
        ]
        public int LogErrorCode
        {
            get
            {
                return (int)this._primaryKey[Properties.LogErrorCode];
            }
            set
            {
                this._primaryKey[Properties.LogErrorCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessId.
        /// </summary>
        /// <value>Propiedad ProcessId.</value>
        [
        DescriptionKey("PROCESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PROCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int ProcessId
        {
            get
            {
                return (int)this._primaryKey[Properties.ProcessId];
            }
            set
            {
                this._primaryKey[Properties.ProcessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RecordType.
        /// </summary>
        /// <value>Propiedad RecordType.</value>
        [
        DescriptionKey("RECORD_TYPE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "RECORD_TYPE", DbType = System.Data.DbType.String),
        ]
        public string RecordType
        {
            get
            {
                return this._recordType;
            }
            set
            {
                this._recordType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessDate.
        /// </summary>
        /// <value>Propiedad ProcessDate.</value>
        [
        DescriptionKey("PROCESS_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PROCESS_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? ProcessDate
        {
            get
            {
                return this._processDate;
            }
            set
            {
                this._processDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClaimCode.
        /// </summary>
        /// <value>Propiedad ClaimCode.</value>
        [
        DescriptionKey("CLAIM_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CLAIM_CD", DbType = System.Data.DbType.String),
        ]
        public int? ClaimCode
        {
            get
            {
                return this._claimCode;
            }
            set
            {
                this._claimCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentRequestCode.
        /// </summary>
        /// <value>Propiedad PaymentRequestCode.</value>
        [
        DescriptionKey("PAYMENT_REQUEST_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_REQUEST_CD", DbType = System.Data.DbType.String),
        ]
        public int? PaymentRequestCode
        {
            get
            {
                return this._paymentRequestCode;
            }
            set
            {
                this._paymentRequestCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClaimNumber.
        /// </summary>
        /// <value>Propiedad ClaimNumber.</value>
        [
        DescriptionKey("CLAIM_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CLAIM_NUMBER", DbType = System.Data.DbType.String),
        ]
        public int? ClaimNumber
        {
            get
            {
                return this._claimNumber;
            }
            set
            {
                this._claimNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionError.
        /// </summary>
        /// <value>Propiedad DescriptionError.</value>
        [
        DescriptionKey("DESCRIPTION_ERROR_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_ERROR", DbType = System.Data.DbType.String),
        ]
        public string DescriptionError
        {
            get
            {
                return this._descriptionError;
            }
            set
            {
                this._descriptionError = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public string UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

    }
}