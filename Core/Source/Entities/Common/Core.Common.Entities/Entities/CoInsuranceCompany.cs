/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: entidades.CoInsuranceCompany.dict v1.0
 * FileSize=21123 Header=234 CRC=1555583969
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CoInsuranceCompany.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CoInsuranceCompany.dict"),
    Serializable(),
    DescriptionKey("CO_INSURANCE_COMPANY_ENTITY"),
    TableMap(TableName = "CO_INSURANCE_COMPANY", Schema = "COMM"),
    ]
    public partial class CoInsuranceCompany :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string InsuranceCompanyId = "InsuranceCompanyId";
            public static readonly string Description = "Description";
            public static readonly string AddressTypeCode = "AddressTypeCode";
            public static readonly string Street = "Street";
            public static readonly string PostalCode = "PostalCode";
            public static readonly string AreaCode = "AreaCode";
            public static readonly string ColonyCode = "ColonyCode";
            public static readonly string CityCode = "CityCode";
            public static readonly string StateCode = "StateCode";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string PhoneTypeCode = "PhoneTypeCode";
            public static readonly string PhoneNumber = "PhoneNumber";
            public static readonly string IvaTypeCode = "IvaTypeCode";
            public static readonly string TributaryIdNo = "TributaryIdNo";
            public static readonly string PilotingSpendAmount = "PilotingSpendAmount";
            public static readonly string YearMinSignInQuantity = "YearMinSignInQuantity";
            public static readonly string YearMaxSignInQuantity = "YearMaxSignInQuantity";
            public static readonly string YearMaxLongQuantity = "YearMaxLongQuantity";
            public static readonly string SmallDescription = "SmallDescription";
            public static readonly string EnsureInd = "EnsureInd";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string EnteredDate = "EnteredDate";
            public static readonly string ModifyDate = "ModifyDate";
            public static readonly string DeclinedDate = "DeclinedDate";
            public static readonly string ComDeclinedTypeCode = "ComDeclinedTypeCode";
            public static readonly string Annotations = "Annotations";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="insuranceCompanyId">Propiedad clave InsuranceCompanyId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(decimal insuranceCompanyId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.InsuranceCompanyId, insuranceCompanyId);

            return new PrimaryKey<T>(keys);
        }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.InsuranceCompanyId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="insuranceCompanyId">Propiedad clave InsuranceCompanyId.</param>
        public static PrimaryKey CreatePrimaryKey(decimal insuranceCompanyId)
        {
            return InternalCreatePrimaryKey<CoInsuranceCompany>(insuranceCompanyId);
        }
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CoInsuranceCompany>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad AddressTypeCode.
        /// </summary>
        private int _addressTypeCode;
        /// <summary>
        /// Atributo para la propiedad Street.
        /// </summary>
        private string _street = null;
        /// <summary>
        /// Atributo para la propiedad PostalCode.
        /// </summary>
        private decimal? _postalCode = null;
        /// <summary>
        /// Atributo para la propiedad AreaCode.
        /// </summary>
        private decimal? _areaCode = null;
        /// <summary>
        /// Atributo para la propiedad ColonyCode.
        /// </summary>
        private decimal? _colonyCode = null;
        /// <summary>
        /// Atributo para la propiedad CityCode.
        /// </summary>
        private int _cityCode;
        /// <summary>
        /// Atributo para la propiedad StateCode.
        /// </summary>
        private int _stateCode;
        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int _countryCode;
        /// <summary>
        /// Atributo para la propiedad PhoneTypeCode.
        /// </summary>
        private int _phoneTypeCode;
        /// <summary>
        /// Atributo para la propiedad PhoneNumber.
        /// </summary>
        private string _phoneNumber = null;
        /// <summary>
        /// Atributo para la propiedad IvaTypeCode.
        /// </summary>
        private decimal _ivaTypeCode;
        /// <summary>
        /// Atributo para la propiedad TributaryIdNo.
        /// </summary>
        private string _tributaryIdNo = null;
        /// <summary>
        /// Atributo para la propiedad PilotingSpendAmount.
        /// </summary>
        private decimal _pilotingSpendAmount;
        /// <summary>
        /// Atributo para la propiedad YearMinSignInQuantity.
        /// </summary>
        private decimal? _yearMinSignInQuantity = null;
        /// <summary>
        /// Atributo para la propiedad YearMaxSignInQuantity.
        /// </summary>
        private decimal? _yearMaxSignInQuantity = null;
        /// <summary>
        /// Atributo para la propiedad YearMaxLongQuantity.
        /// </summary>
        private decimal? _yearMaxLongQuantity = null;
        /// <summary>
        /// Atributo para la propiedad SmallDescription.
        /// </summary>
        private string _smallDescription = null;
        /// <summary>
        /// Atributo para la propiedad EnsureInd.
        /// </summary>
        private bool _ensureInd;
        /// <summary>
        /// Atributo para la propiedad IndividualId.
        /// </summary>
        private int? _individualId = null;
        /// <summary>
        /// Atributo para la propiedad EnteredDate.
        /// </summary>
        private DateTime? _enteredDate = null;
        /// <summary>
        /// Atributo para la propiedad ModifyDate.
        /// </summary>
        private DateTime? _modifyDate = null;
        /// <summary>
        /// Atributo para la propiedad DeclinedDate.
        /// </summary>
        private DateTime? _declinedDate = null;
        /// <summary>
        /// Atributo para la propiedad ComDeclinedTypeCode.
        /// </summary>
        private int? _comDeclinedTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad Annotations.
        /// </summary>
        private string _annotations = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="insuranceCompanyId">InsuranceCompanyId key property.</param>
        public CoInsuranceCompany(decimal insuranceCompanyId) :
            this(CoInsuranceCompany.CreatePrimaryKey(insuranceCompanyId), null)
        {
        }
        public CoInsuranceCompany() :
            this(CoInsuranceCompany.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoInsuranceCompany(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuranceCompanyId.
        /// </summary>
        /// <value>Propiedad InsuranceCompanyId.</value>
        [
        DescriptionKey("INSURANCE_COMPANY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INSURANCE_COMPANY_ID", DbType = System.Data.DbType.Decimal),
        ]
        public decimal InsuranceCompanyId
        {
            get
            {
                return (decimal)this._primaryKey[Properties.InsuranceCompanyId];
            }
            set
            {
                this._primaryKey[Properties.InsuranceCompanyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AddressTypeCode.
        /// </summary>
        /// <value>Propiedad AddressTypeCode.</value>
        [
        DescriptionKey("ADDRESS_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ADDRESS_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int AddressTypeCode
        {
            get
            {
                return this._addressTypeCode;
            }
            set
            {
                this._addressTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Street.
        /// </summary>
        /// <value>Propiedad Street.</value>
        [
        DescriptionKey("STREET_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STREET", DbType = System.Data.DbType.String),
        ]
        public string Street
        {
            get
            {
                return this._street;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Street);
                }
                this._street = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PostalCode.
        /// </summary>
        /// <value>Propiedad PostalCode.</value>
        [
        DescriptionKey("POSTAL_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POSTAL_CODE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PostalCode
        {
            get
            {
                return this._postalCode;
            }
            set
            {
                this._postalCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AreaCode.
        /// </summary>
        /// <value>Propiedad AreaCode.</value>
        [
        DescriptionKey("AREA_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AREA_CODE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? AreaCode
        {
            get
            {
                return this._areaCode;
            }
            set
            {
                this._areaCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ColonyCode.
        /// </summary>
        /// <value>Propiedad ColonyCode.</value>
        [
        DescriptionKey("COLONY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COLONY_CODE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? ColonyCode
        {
            get
            {
                return this._colonyCode;
            }
            set
            {
                this._colonyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CityCode.
        /// </summary>
        /// <value>Propiedad CityCode.</value>
        [
        DescriptionKey("CITY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CITY_CD", DbType = System.Data.DbType.String),
        ]
        public int CityCode
        {
            get
            {
                return this._cityCode;
            }
            set
            {
                this._cityCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StateCode.
        /// </summary>
        /// <value>Propiedad StateCode.</value>
        [
        DescriptionKey("STATE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STATE_CD", DbType = System.Data.DbType.String),
        ]
        public int StateCode
        {
            get
            {
                return this._stateCode;
            }
            set
            {
                this._stateCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int CountryCode
        {
            get
            {
                return this._countryCode;
            }
            set
            {
                this._countryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PhoneTypeCode.
        /// </summary>
        /// <value>Propiedad PhoneTypeCode.</value>
        [
        DescriptionKey("PHONE_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PHONE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int PhoneTypeCode
        {
            get
            {
                return this._phoneTypeCode;
            }
            set
            {
                this._phoneTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PhoneNumber.
        /// </summary>
        /// <value>Propiedad PhoneNumber.</value>
        [
        DescriptionKey("PHONE_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PHONE_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string PhoneNumber
        {
            get
            {
                return this._phoneNumber;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PhoneNumber);
                }
                this._phoneNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IvaTypeCode.
        /// </summary>
        /// <value>Propiedad IvaTypeCode.</value>
        [
        DescriptionKey("IVA_TYPE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IVA_TYPE_CODE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal IvaTypeCode
        {
            get
            {
                return this._ivaTypeCode;
            }
            set
            {
                this._ivaTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TributaryIdNo.
        /// </summary>
        /// <value>Propiedad TributaryIdNo.</value>
        [
        DescriptionKey("TRIBUTARY_ID_NO_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TRIBUTARY_ID_NO", DbType = System.Data.DbType.String),
        ]
        public string TributaryIdNo
        {
            get
            {
                return this._tributaryIdNo;
            }
            set
            {
                this._tributaryIdNo = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PilotingSpendAmount.
        /// </summary>
        /// <value>Propiedad PilotingSpendAmount.</value>
        [
        DescriptionKey("PILOTING_SPEND_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PILOTING_SPEND_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PilotingSpendAmount
        {
            get
            {
                return this._pilotingSpendAmount;
            }
            set
            {
                this._pilotingSpendAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad YearMinSignInQuantity.
        /// </summary>
        /// <value>Propiedad YearMinSignInQuantity.</value>
        [
        DescriptionKey("YEAR_MIN_SIGN_IN_QUANTITY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "YEAR_MIN_SIGN_IN_QTY", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? YearMinSignInQuantity
        {
            get
            {
                return this._yearMinSignInQuantity;
            }
            set
            {
                this._yearMinSignInQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad YearMaxSignInQuantity.
        /// </summary>
        /// <value>Propiedad YearMaxSignInQuantity.</value>
        [
        DescriptionKey("YEAR_MAX_SIGN_IN_QUANTITY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "YEAR_MAX_SIGN_IN_QTY", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? YearMaxSignInQuantity
        {
            get
            {
                return this._yearMaxSignInQuantity;
            }
            set
            {
                this._yearMaxSignInQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad YearMaxLongQuantity.
        /// </summary>
        /// <value>Propiedad YearMaxLongQuantity.</value>
        [
        DescriptionKey("YEAR_MAX_LONG_QUANTITY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "YEAR_MAX_LONG_QTY", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? YearMaxLongQuantity
        {
            get
            {
                return this._yearMaxLongQuantity;
            }
            set
            {
                this._yearMaxLongQuantity = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SmallDescription.
        /// </summary>
        /// <value>Propiedad SmallDescription.</value>
        [
        DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SMALL_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string SmallDescription
        {
            get
            {
                return this._smallDescription;
            }
            set
            {
                this._smallDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnsureInd.
        /// </summary>
        /// <value>Propiedad EnsureInd.</value>
        [
        DescriptionKey("ENSURE_IND_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENSURE_IND", DbType = System.Data.DbType.String),
        ]
        public bool EnsureInd
        {
            get
            {
                return this._ensureInd;
            }
            set
            {
                this._ensureInd = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int? IndividualId
        {
            get
            {
                return this._individualId;
            }
            set
            {
                this._individualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnteredDate.
        /// </summary>
        /// <value>Propiedad EnteredDate.</value>
        [
        DescriptionKey("ENTERED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENTERED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? EnteredDate
        {
            get
            {
                return this._enteredDate;
            }
            set
            {
                this._enteredDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ModifyDate.
        /// </summary>
        /// <value>Propiedad ModifyDate.</value>
        [
        DescriptionKey("MODIFY_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MODIFY_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? ModifyDate
        {
            get
            {
                return this._modifyDate;
            }
            set
            {
                this._modifyDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DeclinedDate.
        /// </summary>
        /// <value>Propiedad DeclinedDate.</value>
        [
        DescriptionKey("DECLINED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DECLINED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? DeclinedDate
        {
            get
            {
                return this._declinedDate;
            }
            set
            {
                this._declinedDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ComDeclinedTypeCode.
        /// </summary>
        /// <value>Propiedad ComDeclinedTypeCode.</value>
        [
        DescriptionKey("COM_DECLINED_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COM_DECLINED_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? ComDeclinedTypeCode
        {
            get
            {
                return this._comDeclinedTypeCode;
            }
            set
            {
                this._comDeclinedTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Annotations.
        /// </summary>
        /// <value>Propiedad Annotations.</value>
        [
        DescriptionKey("ANNOTATIONS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ANNOTATIONS", DbType = System.Data.DbType.String),
        ]
        public string Annotations
        {
            get
            {
                return this._annotations;
            }
            set
            {
                this._annotations = value;
            }
        }

    }
}