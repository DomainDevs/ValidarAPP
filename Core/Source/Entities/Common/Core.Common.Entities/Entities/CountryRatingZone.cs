/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CountryRatingZone.dict v1.0
 * FileSize=6637 Header=254 CRC=3825914664
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CountryRatingZone.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CountryRatingZone.dict"),
    Serializable(),
    DescriptionKey("COUNTRY_RATING_ZONE_ENTITY"),
    TableMap(TableName="COUNTRY_RATING_ZONE", Schema="COMM"),
    ]
    public partial class CountryRatingZone :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CountryRatingZoneId = "CountryRatingZoneId";
			public static readonly string RatingZoneCode = "RatingZoneCode";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string CountryCode = "CountryCode";
			public static readonly string StateCode = "StateCode";
			public static readonly string CityCode = "CityCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="countryRatingZoneId">Propiedad clave CountryRatingZoneId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int countryRatingZoneId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CountryRatingZoneId, countryRatingZoneId);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CountryRatingZoneId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="countryRatingZoneId">Propiedad clave CountryRatingZoneId.</param>
        public static PrimaryKey CreatePrimaryKey(int countryRatingZoneId)
	    {
			return InternalCreatePrimaryKey<CountryRatingZone>(countryRatingZoneId);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CountryRatingZone>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad RatingZoneCode.
        /// </summary>
        private int _ratingZoneCode;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad CountryCode.
		/// </summary>
        private int _countryCode;
		/// <summary>
		/// Atributo para la propiedad StateCode.
		/// </summary>
        private int? _stateCode = null;
		/// <summary>
		/// Atributo para la propiedad CityCode.
		/// </summary>
        private int? _cityCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="countryRatingZoneId">CountryRatingZoneId key property.</param>
	    public CountryRatingZone(int countryRatingZoneId):
			this(CountryRatingZone.CreatePrimaryKey(countryRatingZoneId), null)
	    {
	    }

        public CountryRatingZone() :
            this(CountryRatingZone.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CountryRatingZone(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CountryRatingZoneId.
		/// </summary>
		/// <value>Propiedad CountryRatingZoneId.</value>
	    [
		DescriptionKey("COUNTRY_RATING_ZONE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COUNTRY_RATING_ZONE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CountryRatingZoneId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CountryRatingZoneId];
		    }
		    set
		    {
				this._primaryKey[Properties.CountryRatingZoneId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RatingZoneCode.
		/// </summary>
		/// <value>Propiedad RatingZoneCode.</value>
	    [
		DescriptionKey("RATING_ZONE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RATING_ZONE_CD", DbType=System.Data.DbType.String),
	    ]
        public int RatingZoneCode
	    {
		    get
		    {
			    return this._ratingZoneCode;
		    }
		    set
		    {
				this._ratingZoneCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CountryCode.
		/// </summary>
		/// <value>Propiedad CountryCode.</value>
	    [
		DescriptionKey("COUNTRY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COUNTRY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CountryCode
	    {
		    get
		    {
			    return this._countryCode;
		    }
		    set
		    {
				this._countryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StateCode.
		/// </summary>
		/// <value>Propiedad StateCode.</value>
	    [
		DescriptionKey("STATE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? StateCode
	    {
		    get
		    {
			    return this._stateCode;
		    }
		    set
		    {
				this._stateCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CityCode.
		/// </summary>
		/// <value>Propiedad CityCode.</value>
	    [
		DescriptionKey("CITY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CityCode
	    {
		    get
		    {
			    return this._cityCode;
		    }
		    set
		    {
				this._cityCode = value;
			}
	    }

    }
}