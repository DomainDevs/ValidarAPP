/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: CPT.CoCptGroupInfringementLog.dict v1.0
 * FileSize=7748 Header=234 CRC=4001636772
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CoCptGroupInfringementLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CoCptGroupInfringementLog.dict"),
    Serializable(),
    DescriptionKey("CO_CPT_GROUP_INFRINGEMENT_LOG_ENTITY"),
    TableMap(TableName="CO_CPT_GROUP_INFRINGEMENT_LOG", Schema="COMM"),
    ]
    public partial class CoCptGroupInfringementLog :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string GroupInfringementLogCode = "GroupInfringementLogCode";
			public static readonly string Description = "Description";
			public static readonly string SnActive = "SnActive";
			public static readonly string InfringementOneYear = "InfringementOneYear";
			public static readonly string InfringementThreeYears = "InfringementThreeYears";
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string UserId = "UserId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="groupInfringementLogCode">Propiedad clave GroupInfringementLogCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int groupInfringementLogCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.GroupInfringementLogCode, groupInfringementLogCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="groupInfringementLogCode">Propiedad clave GroupInfringementLogCode.</param>
		public static PrimaryKey CreatePrimaryKey(int groupInfringementLogCode)
	    {
			return InternalCreatePrimaryKey<CoCptGroupInfringementLog>(groupInfringementLogCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad SnActive.
		/// </summary>
        private bool _snActive;
		/// <summary>
		/// Atributo para la propiedad InfringementOneYear.
		/// </summary>
        private int _infringementOneYear;
		/// <summary>
		/// Atributo para la propiedad InfringementThreeYears.
		/// </summary>
        private int _infringementThreeYears;
		/// <summary>
		/// Atributo para la propiedad RegistrationDate.
		/// </summary>
        private DateTime _registrationDate;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="groupInfringementLogCode">GroupInfringementLogCode key property.</param>
	    public CoCptGroupInfringementLog(int groupInfringementLogCode):
			this(CoCptGroupInfringementLog.CreatePrimaryKey(groupInfringementLogCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoCptGroupInfringementLog(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad GroupInfringementLogCode.
		/// </summary>
		/// <value>Propiedad GroupInfringementLogCode.</value>
	    [
		DescriptionKey("GROUP_INFRINGEMENT_LOG_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="GROUP_INFRINGEMENT_LOG_CD", DbType=System.Data.DbType.String),
	    ]
        public int GroupInfringementLogCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.GroupInfringementLogCode];
		    }
		    set
		    {
				this._primaryKey[Properties.GroupInfringementLogCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SnActive.
		/// </summary>
		/// <value>Propiedad SnActive.</value>
	    [
		DescriptionKey("SN_ACTIVE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SN_ACTIVE", DbType=System.Data.DbType.String),
	    ]
        public bool SnActive
	    {
		    get
		    {
			    return this._snActive;
		    }
		    set
		    {
				this._snActive = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InfringementOneYear.
		/// </summary>
		/// <value>Propiedad InfringementOneYear.</value>
	    [
		DescriptionKey("INFRINGEMENT_ONE_YEAR_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INFRINGEMENT_ONE_YEAR", DbType=System.Data.DbType.String),
	    ]
        public int InfringementOneYear
	    {
		    get
		    {
			    return this._infringementOneYear;
		    }
		    set
		    {
				this._infringementOneYear = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InfringementThreeYears.
		/// </summary>
		/// <value>Propiedad InfringementThreeYears.</value>
	    [
		DescriptionKey("INFRINGEMENT_THREE_YEARS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INFRINGEMENT_THREE_YEARS", DbType=System.Data.DbType.String),
	    ]
        public int InfringementThreeYears
	    {
		    get
		    {
			    return this._infringementThreeYears;
		    }
		    set
		    {
				this._infringementThreeYears = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime RegistrationDate
	    {
		    get
		    {
			    return this._registrationDate;
		    }
		    set
		    {
				this._registrationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

    }
}