/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CoBranch.dict v1.0
 * FileSize=9828 Header=244 CRC=334788653
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CoBranch.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CoBranch.dict"),
    Serializable(),
    DescriptionKey("CO_BRANCH_ENTITY"),
    TableMap(TableName = "CO_BRANCH", Schema = "COMM"),
    ]
    public partial class CoBranch :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BranchCode = "BranchCode";
            public static readonly string CityCode = "CityCode";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string StateCode = "StateCode";
            public static readonly string AddressTypeCode = "AddressTypeCode";
            public static readonly string Address = "Address";
            public static readonly string PhoneTypeCode = "PhoneTypeCode";
            public static readonly string PhoneNumber = "PhoneNumber";
            public static readonly string IsIssue = "IsIssue";
            public static readonly string GroupBranchCode = "GroupBranchCode";
            public static readonly string BranchMail = "BranchMail";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="branchCode">Propiedad clave BranchCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int branchCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BranchCode, branchCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="branchCode">Propiedad clave BranchCode.</param>
        public static PrimaryKey CreatePrimaryKey(int branchCode)
        {
            return InternalCreatePrimaryKey<CoBranch>(branchCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CityCode.
        /// </summary>
        private int? _cityCode = null;
        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int? _countryCode = null;
        /// <summary>
        /// Atributo para la propiedad StateCode.
        /// </summary>
        private int? _stateCode = null;
        /// <summary>
        /// Atributo para la propiedad AddressTypeCode.
        /// </summary>
        private int? _addressTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad Address.
        /// </summary>
        private string _address = null;
        /// <summary>
        /// Atributo para la propiedad PhoneTypeCode.
        /// </summary>
        private int? _phoneTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad PhoneNumber.
        /// </summary>
        private long? _phoneNumber = null;
        /// <summary>
        /// Atributo para la propiedad IsIssue.
        /// </summary>
        private bool _isIssue;
        /// <summary>
        /// Atributo para la propiedad GroupBranchCode.
        /// </summary>
        private int? _groupBranchCode = null;
        /// <summary>
        /// Atributo para la propiedad BranchMail.
        /// </summary>
        private string _branchMail = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="branchCode">BranchCode key property.</param>
        public CoBranch(int branchCode) :
            this(CoBranch.CreatePrimaryKey(branchCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoBranch(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return (int)this._primaryKey[Properties.BranchCode];
            }
            set
            {
                this._primaryKey[Properties.BranchCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CityCode.
        /// </summary>
        /// <value>Propiedad CityCode.</value>
        [
        DescriptionKey("CITY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CITY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CityCode
        {
            get
            {
                return this._cityCode;
            }
            set
            {
                this._cityCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CountryCode
        {
            get
            {
                return this._countryCode;
            }
            set
            {
                this._countryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StateCode.
        /// </summary>
        /// <value>Propiedad StateCode.</value>
        [
        DescriptionKey("STATE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATE_CD", DbType = System.Data.DbType.String),
        ]
        public int? StateCode
        {
            get
            {
                return this._stateCode;
            }
            set
            {
                this._stateCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AddressTypeCode.
        /// </summary>
        /// <value>Propiedad AddressTypeCode.</value>
        [
        DescriptionKey("ADDRESS_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ADDRESS_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? AddressTypeCode
        {
            get
            {
                return this._addressTypeCode;
            }
            set
            {
                this._addressTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Address.
        /// </summary>
        /// <value>Propiedad Address.</value>
        [
        DescriptionKey("ADDRESS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ADDRESS", DbType = System.Data.DbType.String),
        ]
        public string Address
        {
            get
            {
                return this._address;
            }
            set
            {
                this._address = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PhoneTypeCode.
        /// </summary>
        /// <value>Propiedad PhoneTypeCode.</value>
        [
        DescriptionKey("PHONE_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PHONE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? PhoneTypeCode
        {
            get
            {
                return this._phoneTypeCode;
            }
            set
            {
                this._phoneTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PhoneNumber.
        /// </summary>
        /// <value>Propiedad PhoneNumber.</value>
        [
        DescriptionKey("PHONE_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PHONE_NUMBER", DbType = System.Data.DbType.String),
        ]
        public long? PhoneNumber
        {
            get
            {
                return this._phoneNumber;
            }
            set
            {
                this._phoneNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsIssue.
        /// </summary>
        /// <value>Propiedad IsIssue.</value>
        [
        DescriptionKey("IS_ISSUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ISSUE", DbType = System.Data.DbType.String),
        ]
        public bool IsIssue
        {
            get
            {
                return this._isIssue;
            }
            set
            {
                this._isIssue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GroupBranchCode.
        /// </summary>
        /// <value>Propiedad GroupBranchCode.</value>
        [
        DescriptionKey("GROUP_BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "GROUP_BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int? GroupBranchCode
        {
            get
            {
                return this._groupBranchCode;
            }
            set
            {
                this._groupBranchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchMail.
        /// </summary>
        /// <value>Propiedad BranchMail.</value>
        [
        DescriptionKey("BRANCH_MAIL_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_MAIL", DbType = System.Data.DbType.String),
        ]
        public string BranchMail
        {
            get
            {
                return this._branchMail;
            }
            set
            {
                this._branchMail = value;
            }
        }

    }
}