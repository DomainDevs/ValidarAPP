/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CiaAsynchronousProcessFasecoldaRow.dict v1.0
 * FileSize=7504 Header=264 CRC=2225910135
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CiaAsynchronousProcessFasecoldaRow.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.CiaAsynchronousProcessFasecoldaRow.dict"),
    Serializable(),
    DescriptionKey("CIA_ASYNCHRONOUS_PROCESS_FASECOLDA_ROW_ENTITY"),
    TableMap(TableName="CIA_ASYNCHRONOUS_PROCESS_FASECOLDA_ROW", Schema= "COMM"),
    ]
    public partial class CiaAsynchronousProcessFasecoldaRow :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string FasecoldaMassiveLoadId = "FasecoldaMassiveLoadId";
			public static readonly string ProcessId = "ProcessId";
			public static readonly string RowNumber = "RowNumber";
			public static readonly string HasError = "HasError";
			public static readonly string ErrorDescription = "ErrorDescription";
			public static readonly string SerializedRow = "SerializedRow";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
	    {
			return InternalCreatePrimaryKey<CiaAsynchronousProcessFasecoldaRow>(id);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CiaAsynchronousProcessFasecoldaRow>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FasecoldaMassiveLoadId.
        /// </summary>
        private int _fasecoldaMassiveLoadId;
		/// <summary>
		/// Atributo para la propiedad ProcessId.
		/// </summary>
        private int _processId;
		/// <summary>
		/// Atributo para la propiedad RowNumber.
		/// </summary>
        private int _rowNumber;
		/// <summary>
		/// Atributo para la propiedad HasError.
		/// </summary>
        private bool? _hasError = null;
		/// <summary>
		/// Atributo para la propiedad ErrorDescription.
		/// </summary>
        private string _errorDescription = null;
		/// <summary>
		/// Atributo para la propiedad SerializedRow.
		/// </summary>
        private string _serializedRow = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="id">Id key property.</param>
	    public CiaAsynchronousProcessFasecoldaRow(int id):
			this(CiaAsynchronousProcessFasecoldaRow.CreatePrimaryKey(id), null)
	    {
	    }

        public CiaAsynchronousProcessFasecoldaRow() :
            this(CiaAsynchronousProcessFasecoldaRow.CreatePrimaryKey(), null)
        {
        }
        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CiaAsynchronousProcessFasecoldaRow(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType ="Identity"),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FasecoldaMassiveLoadId.
		/// </summary>
		/// <value>Propiedad FasecoldaMassiveLoadId.</value>
	    [
		DescriptionKey("FASECOLDA_MASSIVE_LOAD_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FASECOLDA_MASSIVE_LOAD_ID", DbType=System.Data.DbType.String),
	    ]
        public int FasecoldaMassiveLoadId
	    {
		    get
		    {
			    return this._fasecoldaMassiveLoadId;
		    }
		    set
		    {
				this._fasecoldaMassiveLoadId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessId.
		/// </summary>
		/// <value>Propiedad ProcessId.</value>
	    [
		DescriptionKey("PROCESS_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProcessId
	    {
		    get
		    {
			    return this._processId;
		    }
		    set
		    {
				this._processId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RowNumber.
		/// </summary>
		/// <value>Propiedad RowNumber.</value>
	    [
		DescriptionKey("ROW_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ROW_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int RowNumber
	    {
		    get
		    {
			    return this._rowNumber;
		    }
		    set
		    {
				this._rowNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad HasError.
		/// </summary>
		/// <value>Propiedad HasError.</value>
	    [
		DescriptionKey("HAS_ERROR_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="HAS_ERROR", DbType=System.Data.DbType.String),
	    ]
        public bool? HasError
	    {
		    get
		    {
			    return this._hasError;
		    }
		    set
		    {
				this._hasError = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ErrorDescription.
		/// </summary>
		/// <value>Propiedad ErrorDescription.</value>
	    [
		DescriptionKey("ERROR_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ERROR_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string ErrorDescription
	    {
		    get
		    {
			    return this._errorDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.ErrorDescription);
				}
				this._errorDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SerializedRow.
		/// </summary>
		/// <value>Propiedad SerializedRow.</value>
	    [
		DescriptionKey("SERIALIZED_ROW_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SERIALIZED_ROW", DbType=System.Data.DbType.String),
	    ]
        public string SerializedRow
	    {
		    get
		    {
			    return this._serializedRow;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SerializedRow);
				}
				this._serializedRow = value;
			}
	    }

    }
}