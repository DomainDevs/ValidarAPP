/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.SubLineBusiness.dict v1.0
 * FileSize=6653 Header=251 CRC=773937665
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad SubLineBusiness.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.SubLineBusiness.dict"),
    Serializable(),
    DescriptionKey("SUB_LINE_BUSINESS_ENTITY"),
    TableMap(TableName = "SUB_LINE_BUSINESS", Schema = "COMM"),
    ]
    public partial class SubLineBusiness :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string SubLineBusinessCode = "SubLineBusinessCode";
            public static readonly string LineBusinessCode = "LineBusinessCode";
            public static readonly string Description = "Description";
            public static readonly string SmallDescription = "SmallDescription";
            public static readonly string Required = "Required";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="subLineBusinessCode">Propiedad clave SubLineBusinessCode.</param>
        /// <param name="lineBusinessCode">Propiedad clave LineBusinessCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int subLineBusinessCode, int lineBusinessCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SubLineBusinessCode, subLineBusinessCode);
            keys.Add(Properties.LineBusinessCode, lineBusinessCode);

            return new PrimaryKey<T>(keys);
        }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SubLineBusinessCode, null);
            keys.Add(Properties.LineBusinessCode, null);

            return new PrimaryKey<T>(keys);
        }
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="subLineBusinessCode">Propiedad clave SubLineBusinessCode.</param>
        /// <param name="lineBusinessCode">Propiedad clave LineBusinessCode.</param>
        public static PrimaryKey CreatePrimaryKey(int subLineBusinessCode, int lineBusinessCode)
        {
            return InternalCreatePrimaryKey<SubLineBusiness>(subLineBusinessCode, lineBusinessCode);
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<SubLineBusiness>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad SmallDescription.
        /// </summary>
        private string _smallDescription = null;
        /// <summary>
        /// Atributo para la propiedad Required.
        /// </summary>
        private bool _required;
        //*** Object Constructors ********************************
  
        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="subLineBusinessCode">SubLineBusinessCode key property.</param>
        /// <param name="lineBusinessCode">LineBusinessCode key property.</param>
        public SubLineBusiness(int subLineBusinessCode, int lineBusinessCode) :
            this(SubLineBusiness.CreatePrimaryKey(subLineBusinessCode, lineBusinessCode), null)
        {
        }

        public SubLineBusiness() :
        this(SubLineBusiness.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public SubLineBusiness(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubLineBusinessCode.
        /// </summary>
        /// <value>Propiedad SubLineBusinessCode.</value>
        [
        DescriptionKey("SUB_LINE_BUSINESS_CODE_PROPERTY"),
        PersistentProperty(IsKey = true,KeyType = "None"),
        ColumnMap(ColumnName = "SUB_LINE_BUSINESS_CD", DbType = System.Data.DbType.String),
        ]
        public int SubLineBusinessCode
        {
            get
            {
                return (int)this._primaryKey[Properties.SubLineBusinessCode];
            }
            set
            {
                this._primaryKey[Properties.SubLineBusinessCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LineBusinessCode.
        /// </summary>
        /// <value>Propiedad LineBusinessCode.</value>
        [
        DescriptionKey("LINE_BUSINESS_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "LINE_BUSINESS_CD", DbType = System.Data.DbType.String),
        ]
        public int LineBusinessCode
        {
            get
            {
                return (int)this._primaryKey[Properties.LineBusinessCode];
            }
            set
            {
                this._primaryKey[Properties.LineBusinessCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SmallDescription.
        /// </summary>
        /// <value>Propiedad SmallDescription.</value>
        [
        DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SMALL_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string SmallDescription
        {
            get
            {
                return this._smallDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
                }
                this._smallDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Required.
        /// </summary>
        /// <value>Propiedad Required.</value>
        [
        DescriptionKey("REQUIRED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REQUIRED", DbType = System.Data.DbType.String),
        ]
        public bool Required
        {
            get
            {
                return this._required;
            }
            set
            {
                this._required = value;
            }
        }

    }
}