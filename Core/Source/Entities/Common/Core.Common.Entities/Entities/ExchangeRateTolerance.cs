/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.ExchangeRateTolerance.dict v1.0
 * FileSize=5491 Header=258 CRC=1369874435
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad ExchangeRateTolerance.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.ExchangeRateTolerance.dict"),
    Serializable(),
    DescriptionKey("EXCHANGE_RATE_TOLERANCE_ENTITY"),
    TableMap(TableName="EXCHANGE_RATE_TOLERANCE", Schema="COMM"),
    ]
    public partial class ExchangeRateTolerance :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string Percentage = "Percentage";
			public static readonly string InitialDate = "InitialDate";
			public static readonly string EndDate = "EndDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<ExchangeRateTolerance>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Id.
		/// </summary>
        private int _id;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int _currencyCode;
		/// <summary>
		/// Atributo para la propiedad Percentage.
		/// </summary>
        private decimal _percentage;
		/// <summary>
		/// Atributo para la propiedad InitialDate.
		/// </summary>
        private DateTime _initialDate;
		/// <summary>
		/// Atributo para la propiedad EndDate.
		/// </summary>
        private DateTime? _endDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public ExchangeRateTolerance():
			this(ExchangeRateTolerance.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ExchangeRateTolerance(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
			    return this._id;
		    }
		    set
		    {
				this._id = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Percentage.
		/// </summary>
		/// <value>Propiedad Percentage.</value>
	    [
		DescriptionKey("PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Percentage
	    {
		    get
		    {
			    return this._percentage;
		    }
		    set
		    {
				this._percentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InitialDate.
		/// </summary>
		/// <value>Propiedad InitialDate.</value>
	    [
		DescriptionKey("INITIAL_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INITIAL_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime InitialDate
	    {
		    get
		    {
			    return this._initialDate;
		    }
		    set
		    {
				this._initialDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndDate.
		/// </summary>
		/// <value>Propiedad EndDate.</value>
	    [
		DescriptionKey("FINISH_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FINISH_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EndDate
	    {
		    get
		    {
			    return this._endDate;
		    }
		    set
		    {
				this._endDate = value;
			}
	    }

    }
}