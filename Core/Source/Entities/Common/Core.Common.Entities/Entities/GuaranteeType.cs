/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.GuaranteeType.dict v1.0
 * FileSize=7418 Header=250 CRC=1758927854
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad GuaranteeType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.GuaranteeType.dict"),
    Serializable(),
    DescriptionKey("GUARANTEE_TYPE_ENTITY"),
    TableMap(TableName = "GUARANTEE_TYPE", Schema = "COMM"),
    ]
    public partial class GuaranteeType :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string GuaranteeTypeCode = "GuaranteeTypeCode";
            public static readonly string GuaranteeClassCode = "GuaranteeClassCode";
            public static readonly string Description = "Description";
            public static readonly string IsPromissoryNote = "IsPromissoryNote";
            public static readonly string IsDocument = "IsDocument";
            public static readonly string IsVehicle = "IsVehicle";
            public static readonly string IsOthers = "IsOthers";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="guaranteeTypeCode">Propiedad clave GuaranteeTypeCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int guaranteeTypeCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.GuaranteeTypeCode, guaranteeTypeCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>19/07/2018</date>
        /// <purpose>REQ_101</purpose>
        /// <returns></returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.GuaranteeTypeCode, null);
            //keys.Add(Properties.GuaranteeClassCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="guaranteeTypeCode">Propiedad clave GuaranteeTypeCode.</param>
        public static PrimaryKey CreatePrimaryKey(int guaranteeTypeCode)
        {
            return InternalCreatePrimaryKey<GuaranteeType>(guaranteeTypeCode);
        }
        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <author>Germán F. Grimaldo</author>
        /// <date>19/07/2018</date>
        /// <purpose>REQ_101</purpose>
        /// <returns></returns>
        public static PrimaryKey CreatePrimaryKey() { return InternalCreatePrimaryKey<GuaranteeType>(); }
                #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad GuaranteeClassCode.
        /// </summary>
        private int _guaranteeClassCode;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad IsPromissoryNote.
        /// </summary>
        private bool _isPromissoryNote;
        /// <summary>
        /// Atributo para la propiedad IsDocument.
        /// </summary>
        private bool _isDocument;
        /// <summary>
        /// Atributo para la propiedad IsVehicle.
        /// </summary>
        private bool _isVehicle;
        /// <summary>
        /// Atributo para la propiedad IsOthers.
        /// </summary>
        private bool _isOthers;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="guaranteeTypeCode">GuaranteeTypeCode key property.</param>
        public GuaranteeType(int guaranteeTypeCode) :
            this(GuaranteeType.CreatePrimaryKey(guaranteeTypeCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public GuaranteeType(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /// <summary>
        /// Constructor Vacio
        /// </summary>
        /// <author>Germán F. Grimaldo </author>
        /// <date>19/07/2018</date>
        /// <purpose>REQ_101</purpose>
        public GuaranteeType() :
                   this(GuaranteeType.CreatePrimaryKey(), null)
        { }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad GuaranteeTypeCode.
        /// </summary>
        /// <value>Propiedad GuaranteeTypeCode.</value>
        [
        DescriptionKey("GUARANTEE_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true, KeyType = "None"),
        ColumnMap(ColumnName = "GUARANTEE_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int GuaranteeTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.GuaranteeTypeCode];
            }
            set
            {
                this._primaryKey[Properties.GuaranteeTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GuaranteeClassCode.
        /// </summary>
        /// <value>Propiedad GuaranteeClassCode.</value>
        [
        DescriptionKey("GUARANTEE_CLASS_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "GUARANTEE_CLASS_CD", DbType = System.Data.DbType.String),
        ]
        public int GuaranteeClassCode
        {
            get
            {
                return this._guaranteeClassCode;
            }
            set
            {
                this._guaranteeClassCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsPromissoryNote.
        /// </summary>
        /// <value>Propiedad IsPromissoryNote.</value>
        [
        DescriptionKey("IS_PROMISSORY_NOTE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_PROMISSORY_NOTE", DbType = System.Data.DbType.String),
        ]
        public bool IsPromissoryNote
        {
            get
            {
                return this._isPromissoryNote;
            }
            set
            {
                this._isPromissoryNote = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsDocument.
        /// </summary>
        /// <value>Propiedad IsDocument.</value>
        [
        DescriptionKey("IS_DOCUMENT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_DOCUMENT", DbType = System.Data.DbType.String),
        ]
        public bool IsDocument
        {
            get
            {
                return this._isDocument;
            }
            set
            {
                this._isDocument = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsVehicle.
        /// </summary>
        /// <value>Propiedad IsVehicle.</value>
        [
        DescriptionKey("IS_VEHICLE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_VEHICLE", DbType = System.Data.DbType.String),
        ]
        public bool IsVehicle
        {
            get
            {
                return this._isVehicle;
            }
            set
            {
                this._isVehicle = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsOthers.
        /// </summary>
        /// <value>Propiedad IsOthers.</value>
        [
        DescriptionKey("IS_OTHERS_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_OTHERS", DbType = System.Data.DbType.String),
        ]
        public bool IsOthers
        {
            get
            {
                return this._isOthers;
            }
            set
            {
                this._isOthers = value;
            }
        }

    }
}