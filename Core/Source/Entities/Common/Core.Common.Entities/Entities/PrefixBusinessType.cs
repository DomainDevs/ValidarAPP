/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.PrefixBusinessType.dict v1.0
 * FileSize=5425 Header=254 CRC=316738754
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad PrefixBusinessType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.PrefixBusinessType.dict"),
    Serializable(),
    DescriptionKey("PREFIX_BUSINESS_TYPE_ENTITY"),
    TableMap(TableName = "PREFIX_BUSINESS_TYPE", Schema = "COMM"),
    ]
    public partial class PrefixBusinessType :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string BusinessTypeCode = "BusinessTypeCode";
            public static readonly string MaxRate = "MaxRate";
            public static readonly string Enabled = "Enabled";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <param name="businessTypeCode">Propiedad clave BusinessTypeCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int prefixCode, int businessTypeCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PrefixCode, prefixCode);
            keys.Add(Properties.BusinessTypeCode, businessTypeCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <param name="businessTypeCode">Propiedad clave BusinessTypeCode.</param>
        public static PrimaryKey CreatePrimaryKey(int prefixCode, int businessTypeCode)
        {
            return InternalCreatePrimaryKey<PrefixBusinessType>(prefixCode, businessTypeCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad MaxRate.
        /// </summary>
        private decimal _maxRate;
        /// <summary>
        /// Atributo para la propiedad Enabled.
        /// </summary>
        private bool _enabled;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="prefixCode">PrefixCode key property.</param>
        /// <param name="businessTypeCode">BusinessTypeCode key property.</param>
        public PrefixBusinessType(int prefixCode, int businessTypeCode) :
            this(PrefixBusinessType.CreatePrimaryKey(prefixCode, businessTypeCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PrefixBusinessType(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PrefixCode];
            }
            set
            {
                this._primaryKey[Properties.PrefixCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BusinessTypeCode.
        /// </summary>
        /// <value>Propiedad BusinessTypeCode.</value>
        [
        DescriptionKey("BUSINESS_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BUSINESS_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int BusinessTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.BusinessTypeCode];
            }
            set
            {
                this._primaryKey[Properties.BusinessTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MaxRate.
        /// </summary>
        /// <value>Propiedad MaxRate.</value>
        [
        DescriptionKey("MAX_RATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MAX_RATE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal MaxRate
        {
            get
            {
                return this._maxRate;
            }
            set
            {
                this._maxRate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Enabled.
        /// </summary>
        /// <value>Propiedad Enabled.</value>
        [
        DescriptionKey("ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool Enabled
        {
            get
            {
                return this._enabled;
            }
            set
            {
                this._enabled = value;
            }
        }

    }
}