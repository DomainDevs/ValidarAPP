/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.LimitRcPrefix.dict v1.0
 * FileSize=4031 Header=250 CRC=2418413743
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad LimitRcPrefix.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.LimitRcPrefix.dict"),
    Serializable(),
    DescriptionKey("LIMIT_RC_PREFIX_ENTITY"),
    TableMap(TableName = "LIMIT_RC_PREFIX", Schema = "COMM"),
    ]
    public partial class LimitRcPrefix :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string LimitRcCode = "LimitRcCode";
            public static readonly string PrefixCode = "PrefixCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="limitRcCode">Propiedad clave LimitRcCode.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int limitRcCode, int prefixCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.LimitRcCode, limitRcCode);
            keys.Add(Properties.PrefixCode, prefixCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="limitRcCode">Propiedad clave LimitRcCode.</param>
        /// <param name="prefixCode">Propiedad clave PrefixCode.</param>
        public static PrimaryKey CreatePrimaryKey(int limitRcCode, int prefixCode)
        {
            return InternalCreatePrimaryKey<LimitRcPrefix>(limitRcCode, prefixCode);
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="limitRcCode">LimitRcCode key property.</param>
        /// <param name="prefixCode">PrefixCode key property.</param>
        public LimitRcPrefix(int limitRcCode, int prefixCode) :
            this(LimitRcPrefix.CreatePrimaryKey(limitRcCode, prefixCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public LimitRcPrefix(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad LimitRcCode.
        /// </summary>
        /// <value>Propiedad LimitRcCode.</value>
        [
        DescriptionKey("LIMIT_RC_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "LIMIT_RC_CD", DbType = System.Data.DbType.String),
        ]
        public int LimitRcCode
        {
            get
            {
                return (int)this._primaryKey[Properties.LimitRcCode];
            }
            set
            {
                this._primaryKey[Properties.LimitRcCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PrefixCode];
            }
            set
            {
                this._primaryKey[Properties.PrefixCode] = value;
            }
        }

    }
}