/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.FileProcessValue.dict v1.0
 * FileSize=6501 Header=226 CRC=3666094272
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad FileProcessValue.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Common.FileProcessValue.dict"),
    Serializable(),
    DescriptionKey("FILE_PROCESS_VALUE_ENTITY"),
    TableMap(TableName = "FILE_PROCESS_VALUE", Schema = "COMM"),
    ]
    public partial class FileProcessValue :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string FileId = "FileId";
            public static readonly string Key1 = "Key1";
            public static readonly string Key2 = "Key2";
            public static readonly string Key3 = "Key3";
            public static readonly string Key4 = "Key4";
            public static readonly string Key5 = "Key5";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="id">Propiedad clave Id.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
        {
            return InternalCreatePrimaryKey<FileProcessValue>(id);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad FileId.
        /// </summary>
        private int _fileId;
        /// <summary>
        /// Atributo para la propiedad Key1.
        /// </summary>
        private int _key1;
        /// <summary>
        /// Atributo para la propiedad Key2.
        /// </summary>
        private int? _key2 = null;
        /// <summary>
        /// Atributo para la propiedad Key3.
        /// </summary>
        private int? _key3 = null;
        /// <summary>
        /// Atributo para la propiedad Key4.
        /// </summary>
        private int? _key4 = null;
        /// <summary>
        /// Atributo para la propiedad Key5.
        /// </summary>
        private int? _key5 = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public FileProcessValue(int id) :
            this(FileProcessValue.CreatePrimaryKey(id), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public FileProcessValue(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID", DbType = System.Data.DbType.String),
        ]
        public int Id
        {
            get
            {
                return (int)this._primaryKey[Properties.Id];
            }
            set
            {
                this._primaryKey[Properties.Id] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FileId.
        /// </summary>
        /// <value>Propiedad FileId.</value>
        [
        DescriptionKey("FILE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "FILE_ID", DbType = System.Data.DbType.String),
        ]
        public int FileId
        {
            get
            {
                return this._fileId;
            }
            set
            {
                this._fileId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key1.
        /// </summary>
        /// <value>Propiedad Key1.</value>
        [
        DescriptionKey("KEY1_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "KEY_1", DbType = System.Data.DbType.String),
        ]
        public int Key1
        {
            get
            {
                return this._key1;
            }
            set
            {
                this._key1 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key2.
        /// </summary>
        /// <value>Propiedad Key2.</value>
        [
        DescriptionKey("KEY2_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY_2", DbType = System.Data.DbType.String),
        ]
        public int? Key2
        {
            get
            {
                return this._key2;
            }
            set
            {
                this._key2 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key3.
        /// </summary>
        /// <value>Propiedad Key3.</value>
        [
        DescriptionKey("KEY3_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY_3", DbType = System.Data.DbType.String),
        ]
        public int? Key3
        {
            get
            {
                return this._key3;
            }
            set
            {
                this._key3 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key4.
        /// </summary>
        /// <value>Propiedad Key4.</value>
        [
        DescriptionKey("KEY4_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY_4", DbType = System.Data.DbType.String),
        ]
        public int? Key4
        {
            get
            {
                return this._key4;
            }
            set
            {
                this._key4 = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key5.
        /// </summary>
        /// <value>Propiedad Key5.</value>
        [
        DescriptionKey("KEY5_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY_5", DbType = System.Data.DbType.String),
        ]
        public int? Key5
        {
            get
            {
                return this._key5;
            }
            set
            {
                this._key5 = value;
            }
        }

    }
}