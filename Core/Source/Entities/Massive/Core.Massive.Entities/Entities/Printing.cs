/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Massive.Printing.dict v1.0
 * FileSize=7325 Header=246 CRC=2436603393
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Massive.Entities
{
    /// <summary>
    /// Definición de entidad Printing.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Massive.Printing.dict"),
    Serializable(),
    DescriptionKey("PRINTING_ENTITY"),
    TableMap(TableName = "PRINTING", Schema = "MSV"),
    ]
    public partial class Printing :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string Id = "Id";
            public static readonly string PrintingTypeId = "PrintingTypeId";
            public static readonly string KeyId = "KeyId";
            public static readonly string UrlFile = "UrlFile";
            public static readonly string Total = "Total";
            public static readonly string BeginDate = "BeginDate";
            public static readonly string FinishDate = "FinishDate";
            public static readonly string UserId = "UserId";
            public static readonly string HasError = "HasError";
            public static readonly string ErrorMessage = "ErrorMessage";
            public static readonly string IsEnabled = "IsEnabled";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Printing>();
        }

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey(int id)
        {
            return InternalCreatePrimaryKey<Printing>(id);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PrintingTypeId.
        /// </summary>
        private int _printingTypeId;
        /// <summary>
        /// Atributo para la propiedad KeyId.
        /// </summary>
        private int _keyId;
        /// <summary>
        /// Atributo para la propiedad UrlFile.
        /// </summary>
        private string _urlFile = null;
        /// <summary>
        /// Atributo para la propiedad Total.
        /// </summary>
        private int _total;
        /// <summary>
        /// Atributo para la propiedad BeginDate.
        /// </summary>
        private DateTime _beginDate;
        /// <summary>
        /// Atributo para la propiedad FinishDate.
        /// </summary>
        private DateTime? _finishDate = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int _userId;
        /// <summary>
        /// Atributo para la propiedad HasError.
        /// </summary>
        private bool? _hasError = null;
        /// <summary>
        /// Atributo para la propiedad ErrorMessage.
        /// </summary>
        private string _errorMessage = null;
        /// <summary>
        /// Atributo para la propiedad HasError.
        /// </summary>
        private bool? _isEnabled = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public Printing() :
            this(Printing.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Printing(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad Id.
        /// </summary>
        /// <value>Propiedad Id.</value>
        [
        DescriptionKey("ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ID", DbType = System.Data.DbType.String),
        ]
        public int Id
        {
            get
            {
                return (int)this._primaryKey[Properties.Id];
            }
            set
            {
                this._primaryKey[Properties.Id] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrintingTypeId.
        /// </summary>
        /// <value>Propiedad PrintingTypeId.</value>
        [
        DescriptionKey("PRINTING_TYPE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PRINTING_TYPE_ID", DbType = System.Data.DbType.String),
        ]
        public int PrintingTypeId
        {
            get
            {
                return this._printingTypeId;
            }
            set
            {
                this._printingTypeId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad KeyId.
        /// </summary>
        /// <value>Propiedad KeyId.</value>
        [
        DescriptionKey("KEY_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "KEY_ID", DbType = System.Data.DbType.String),
        ]
        public int KeyId
        {
            get
            {
                return this._keyId;
            }
            set
            {
                this._keyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UrlFile.
        /// </summary>
        /// <value>Propiedad UrlFile.</value>
        [
        DescriptionKey("URL_FILE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "URL_FILE", DbType = System.Data.DbType.String),
        ]
        public string UrlFile
        {
            get
            {
                return this._urlFile;
            }
            set
            {
                this._urlFile = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Total.
        /// </summary>
        /// <value>Propiedad Total.</value>
        [
        DescriptionKey("TOTAL_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TOTAL", DbType = System.Data.DbType.String),
        ]
        public int Total
        {
            get
            {
                return this._total;
            }
            set
            {
                this._total = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BeginDate.
        /// </summary>
        /// <value>Propiedad BeginDate.</value>
        [
        DescriptionKey("BEGIN_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BEGIN_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime BeginDate
        {
            get
            {
                return this._beginDate;
            }
            set
            {
                this._beginDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad FinishDate.
        /// </summary>
        /// <value>Propiedad FinishDate.</value>
        [
        DescriptionKey("FINISH_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "FINISH_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? FinishDate
        {
            get
            {
                return this._finishDate;
            }
            set
            {
                this._finishDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HasError.
        /// </summary>
        /// <value>Propiedad HasError.</value>
        [
        DescriptionKey("HAS_ERROR_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "HAS_ERROR", DbType = System.Data.DbType.String),
        ]
        public bool? HasError
        {
            get
            {
                return this._hasError;
            }
            set
            {
                this._hasError = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ErrorMessage.
        /// </summary>
        /// <value>Propiedad ErrorMessage.</value>
        [
        DescriptionKey("ERROR_MESSAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ERROR_MESSAGE", DbType = System.Data.DbType.String),
        ]
        public string ErrorMessage
        {
            get
            {
                return this._errorMessage;
            }
            set
            {
                this._errorMessage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HasError.
        /// </summary>
        /// <value>Propiedad HasError.</value>
        [
        DescriptionKey("IS_ENABLED_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IS_ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool? IsEnabled
        {
            get
            {
                return this._isEnabled;
            }
            set
            {
                this._isEnabled = value;
            }
        }
    }
}