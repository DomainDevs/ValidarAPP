/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Events.CoEventCompany.dict v1.0
 * FileSize=10499 Header=252 CRC=2869784324
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Events.Entities
{
    /// <summary>
    /// Definición de entidad CoEventCompany.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Events.CoEventCompany.dict"),
    Serializable(),
    DescriptionKey("CO_EVENT_COMPANY_ENTITY"),
    TableMap(TableName="CO_EVENT_COMPANY", Schema="EVE"),
    ]
    public partial class CoEventCompany :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string GroupEventId = "GroupEventId";
			public static readonly string EventId = "EventId";
			public static readonly string Description = "Description";
			public static readonly string ValidationTypeCode = "ValidationTypeCode";
			public static readonly string ProcedureName = "ProcedureName";
			public static readonly string ConditionId = "ConditionId";
			public static readonly string EnabledStop = "EnabledStop";
			public static readonly string EnabledAuthorize = "EnabledAuthorize";
			public static readonly string DescriptionErrorMessage = "DescriptionErrorMessage";
			public static readonly string Enabled = "Enabled";
			public static readonly string TypeCode = "TypeCode";
            //public static readonly string IsWsQuotation = "IsWsQuotation";
            //public static readonly string IsWsEmision = "IsWsEmision";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="groupEventId">Propiedad clave GroupEventId.</param>
		/// <param name="eventId">Propiedad clave EventId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int groupEventId, int eventId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.GroupEventId, groupEventId);
		    keys.Add(Properties.EventId, eventId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="groupEventId">Propiedad clave GroupEventId.</param>
		/// <param name="eventId">Propiedad clave EventId.</param>
		public static PrimaryKey CreatePrimaryKey(int groupEventId, int eventId)
	    {
			return InternalCreatePrimaryKey<CoEventCompany>(groupEventId, eventId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad ValidationTypeCode.
		/// </summary>
        private int _validationTypeCode;
		/// <summary>
		/// Atributo para la propiedad ProcedureName.
		/// </summary>
        private string _procedureName = null;
		/// <summary>
		/// Atributo para la propiedad ConditionId.
		/// </summary>
        private int _conditionId;
		/// <summary>
		/// Atributo para la propiedad EnabledStop.
		/// </summary>
        private bool _enabledStop;
		/// <summary>
		/// Atributo para la propiedad EnabledAuthorize.
		/// </summary>
        private bool _enabledAuthorize;
		/// <summary>
		/// Atributo para la propiedad DescriptionErrorMessage.
		/// </summary>
        private string _descriptionErrorMessage = null;
		/// <summary>
		/// Atributo para la propiedad Enabled.
		/// </summary>
        private bool _enabled;
		/// <summary>
		/// Atributo para la propiedad TypeCode.
		/// </summary>
        private int? _typeCode = null;
  //      /// <summary>
		///// Atributo para la propiedad Enabled.
		///// </summary>
  //      private bool _isWsQuotation;
  //      /// <summary>
		///// Atributo para la propiedad Enabled.
		///// </summary>
  //      private bool _isWsEmision;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="groupEventId">GroupEventId key property.</param>
        /// <param name="eventId">EventId key property.</param>
        public CoEventCompany(int groupEventId, int eventId):
			this(CoEventCompany.CreatePrimaryKey(groupEventId, eventId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoEventCompany(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad GroupEventId.
		/// </summary>
		/// <value>Propiedad GroupEventId.</value>
	    [
		DescriptionKey("GROUP_EVENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="GROUP_EVENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int GroupEventId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.GroupEventId];
		    }
		    set
		    {
				this._primaryKey[Properties.GroupEventId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EventId.
		/// </summary>
		/// <value>Propiedad EventId.</value>
	    [
		DescriptionKey("EVENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="EVENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EventId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EventId];
		    }
		    set
		    {
				this._primaryKey[Properties.EventId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ValidationTypeCode.
		/// </summary>
		/// <value>Propiedad ValidationTypeCode.</value>
	    [
		DescriptionKey("VALIDATION_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="VALIDATION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int ValidationTypeCode
	    {
		    get
		    {
			    return this._validationTypeCode;
		    }
		    set
		    {
				this._validationTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcedureName.
		/// </summary>
		/// <value>Propiedad ProcedureName.</value>
	    [
		DescriptionKey("PROCEDURE_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCEDURE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string ProcedureName
	    {
		    get
		    {
			    return this._procedureName;
		    }
		    set
		    {
				this._procedureName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConditionId.
		/// </summary>
		/// <value>Propiedad ConditionId.</value>
	    [
		DescriptionKey("CONDITION_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CONDITION_ID", DbType=System.Data.DbType.String),
	    ]
        public int ConditionId
	    {
		    get
		    {
			    return this._conditionId;
		    }
		    set
		    {
				this._conditionId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EnabledStop.
		/// </summary>
		/// <value>Propiedad EnabledStop.</value>
	    [
		DescriptionKey("ENABLED_STOP_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENABLED_STOP", DbType=System.Data.DbType.String),
	    ]
        public bool EnabledStop
	    {
		    get
		    {
			    return this._enabledStop;
		    }
		    set
		    {
				this._enabledStop = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EnabledAuthorize.
		/// </summary>
		/// <value>Propiedad EnabledAuthorize.</value>
	    [
		DescriptionKey("ENABLED_AUTHORIZE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENABLED_AUTHORIZE", DbType=System.Data.DbType.String),
	    ]
        public bool EnabledAuthorize
	    {
		    get
		    {
			    return this._enabledAuthorize;
		    }
		    set
		    {
				this._enabledAuthorize = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DescriptionErrorMessage.
		/// </summary>
		/// <value>Propiedad DescriptionErrorMessage.</value>
	    [
		DescriptionKey("DESCRIPTION_ERROR_MESSAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION_ERROR_MESSAGE", DbType=System.Data.DbType.String),
	    ]
        public string DescriptionErrorMessage
	    {
		    get
		    {
			    return this._descriptionErrorMessage;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.DescriptionErrorMessage);
				}
				this._descriptionErrorMessage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Enabled.
		/// </summary>
		/// <value>Propiedad Enabled.</value>
	    [
		DescriptionKey("ENABLED_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool Enabled
	    {
		    get
		    {
			    return this._enabled;
		    }
		    set
		    {
				this._enabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TypeCode.
		/// </summary>
		/// <value>Propiedad TypeCode.</value>
	    [
		DescriptionKey("TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TypeCode
	    {
		    get
		    {
			    return this._typeCode;
		    }
		    set
		    {
				this._typeCode = value;
			}
	    }

        /// <summary>
		/// Devuelve o setea el valor de la propiedad Enabled.
		/// </summary>
		/// <value>Propiedad Enabled.</value>
	    //[
     //   DescriptionKey("IS_WS_QUOTATION_PROPERTY"),
     //   PersistentProperty(),
     //   ColumnMap(ColumnName = "IS_WS_QUOTATION", DbType = System.Data.DbType.String),
     //   ]
     //   public bool IsWsQuotation
     //   {
     //       get
     //       {
     //           return this._isWsQuotation;
     //       }
     //       set
     //       {
     //           this._isWsQuotation = value;
     //       }
     //   }

        /// <summary>
		/// Devuelve o setea el valor de la propiedad Enabled.
		/// </summary>
		/// <value>Propiedad Enabled.</value>
	    //[
     //   DescriptionKey("IS_WS_EMISION_PROPERTY"),
     //   PersistentProperty(),
     //   ColumnMap(ColumnName = "IS_WS_EMISION", DbType = System.Data.DbType.String),
     //   ]
     //   public bool IsWsEmision
     //   {
     //       get
     //       {
     //           return this._isWsEmision;
     //       }
     //       set
     //       {
     //           this._isWsEmision = value;
     //       }
     //   }

    }
}