/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Events.Modules.dict v1.0
 * FileSize=5931 Header=266 CRC=1607542884
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Events.Entities
{
    /// <summary>
    /// Definición de entidad Modules.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Events.Modules.dict"),
    Serializable(),
    DescriptionKey("MODULES_ENTITY"),
    TableMap(TableName = "MODULES", Schema = "UU"),
    ]
    public partial class Modules :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ModuleCode = "ModuleCode";
            public static readonly string Description = "Description";
            public static readonly string Enabled = "Enabled";
            public static readonly string ExpirationDate = "ExpirationDate";
            public static readonly string VirtualFolder = "VirtualFolder";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="moduleCode">Propiedad clave ModuleCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int moduleCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ModuleCode, moduleCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="moduleCode">Propiedad clave ModuleCode.</param>
        public static PrimaryKey CreatePrimaryKey(int moduleCode)
        {
            return InternalCreatePrimaryKey<Modules>(moduleCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad Enabled.
        /// </summary>
        private bool _enabled;
        /// <summary>
        /// Atributo para la propiedad ExpirationDate.
        /// </summary>
        private DateTime? _expirationDate = null;
        /// <summary>
        /// Atributo para la propiedad VirtualFolder.
        /// </summary>
        private string _virtualFolder = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="moduleCode">ModuleCode key property.</param>
        public Modules(int moduleCode) :
            this(Modules.CreatePrimaryKey(moduleCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Modules(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ModuleCode.
        /// </summary>
        /// <value>Propiedad ModuleCode.</value>
        [
        DescriptionKey("MODULE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "MODULE_CD", DbType = System.Data.DbType.String),
        ]
        public int ModuleCode
        {
            get
            {
                return (int)this._primaryKey[Properties.ModuleCode];
            }
            set
            {
                this._primaryKey[Properties.ModuleCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Enabled.
        /// </summary>
        /// <value>Propiedad Enabled.</value>
        [
        DescriptionKey("ENABLED_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool Enabled
        {
            get
            {
                return this._enabled;
            }
            set
            {
                this._enabled = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExpirationDate.
        /// </summary>
        /// <value>Propiedad ExpirationDate.</value>
        [
        DescriptionKey("EXPIRATION_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EXPIRATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? ExpirationDate
        {
            get
            {
                return this._expirationDate;
            }
            set
            {
                this._expirationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VirtualFolder.
        /// </summary>
        /// <value>Propiedad VirtualFolder.</value>
        [
        DescriptionKey("VIRTUAL_FOLDER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "VIRTUAL_FOLDER", DbType = System.Data.DbType.String),
        ]
        public string VirtualFolder
        {
            get
            {
                return this._virtualFolder;
            }
            set
            {
                this._virtualFolder = value;
            }
        }

    }
}