/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Events.CoEventCondition.dict v1.0
 * FileSize=9349 Header=272 CRC=3484678499
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.Events.Entities
{
    /// <summary>
    /// Definición de entidad CoEventCondition.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Events.CoEventCondition.dict"),
    Serializable(),
    DescriptionKey("CO_EVENT_CONDITION_ENTITY"),
    TableMap(TableName = "CO_EVENT_CONDITION", Schema = "EVE"),
    ]
    public partial class CoEventCondition :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string GroupEventId = "GroupEventId";
            public static readonly string EventId = "EventId";
            public static readonly string DelegationId = "DelegationId";
            public static readonly string EntityId = "EntityId";
            public static readonly string ConditionQuantity = "ConditionQuantity";
            public static readonly string EventQuantity = "EventQuantity";
            public static readonly string ComparatorCode = "ComparatorCode";
            public static readonly string ConditionValue = "ConditionValue";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="groupEventId">Propiedad clave GroupEventId.</param>
        /// <param name="eventId">Propiedad clave EventId.</param>
        /// <param name="delegationId">Propiedad clave DelegationId.</param>
        /// <param name="entityId">Propiedad clave EntityId.</param>
        /// <param name="conditionQuantity">Propiedad clave ConditionQuantity.</param>
        /// <param name="eventQuantity">Propiedad clave EventQuantity.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int groupEventId, int eventId, int delegationId, int entityId, int conditionQuantity, int eventQuantity)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.GroupEventId, groupEventId);
            keys.Add(Properties.EventId, eventId);
            keys.Add(Properties.DelegationId, delegationId);
            keys.Add(Properties.EntityId, entityId);
            keys.Add(Properties.ConditionQuantity, conditionQuantity);
            keys.Add(Properties.EventQuantity, eventQuantity);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="groupEventId">Propiedad clave GroupEventId.</param>
        /// <param name="eventId">Propiedad clave EventId.</param>
        /// <param name="delegationId">Propiedad clave DelegationId.</param>
        /// <param name="entityId">Propiedad clave EntityId.</param>
        /// <param name="conditionQuantity">Propiedad clave ConditionQuantity.</param>
        /// <param name="eventQuantity">Propiedad clave EventQuantity.</param>
        public static PrimaryKey CreatePrimaryKey(int groupEventId, int eventId, int delegationId, int entityId, int conditionQuantity, int eventQuantity)
        {
            return InternalCreatePrimaryKey<CoEventCondition>(groupEventId, eventId, delegationId, entityId, conditionQuantity, eventQuantity);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ComparatorCode.
        /// </summary>
        private int _comparatorCode;
        /// <summary>
        /// Atributo para la propiedad ConditionValue.
        /// </summary>
        private string _conditionValue = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="groupEventId">GroupEventId key property.</param>
        /// <param name="eventId">EventId key property.</param>
        /// <param name="delegationId">DelegationId key property.</param>
        /// <param name="entityId">EntityId key property.</param>
        /// <param name="conditionQuantity">ConditionQuantity key property.</param>
        /// <param name="eventQuantity">EventQuantity key property.</param>
        public CoEventCondition(int groupEventId, int eventId, int delegationId, int entityId, int conditionQuantity, int eventQuantity) :
            this(CoEventCondition.CreatePrimaryKey(groupEventId, eventId, delegationId, entityId, conditionQuantity, eventQuantity), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoEventCondition(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad GroupEventId.
        /// </summary>
        /// <value>Propiedad GroupEventId.</value>
        [
        DescriptionKey("GROUP_EVENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GROUP_EVENT_ID", DbType = System.Data.DbType.String),
        ]
        public int GroupEventId
        {
            get
            {
                return (int)this._primaryKey[Properties.GroupEventId];
            }
            set
            {
                this._primaryKey[Properties.GroupEventId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EventId.
        /// </summary>
        /// <value>Propiedad EventId.</value>
        [
        DescriptionKey("EVENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "EVENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EventId
        {
            get
            {
                return (int)this._primaryKey[Properties.EventId];
            }
            set
            {
                this._primaryKey[Properties.EventId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DelegationId.
        /// </summary>
        /// <value>Propiedad DelegationId.</value>
        [
        DescriptionKey("DELEGATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "DELEGATION_ID", DbType = System.Data.DbType.String),
        ]
        public int DelegationId
        {
            get
            {
                return (int)this._primaryKey[Properties.DelegationId];
            }
            set
            {
                this._primaryKey[Properties.DelegationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EntityId.
        /// </summary>
        /// <value>Propiedad EntityId.</value>
        [
        DescriptionKey("ENTITY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENTITY_ID", DbType = System.Data.DbType.String),
        ]
        public int EntityId
        {
            get
            {
                return (int)this._primaryKey[Properties.EntityId];
            }
            set
            {
                this._primaryKey[Properties.EntityId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConditionQuantity.
        /// </summary>
        /// <value>Propiedad ConditionQuantity.</value>
        [
        DescriptionKey("CONDITION_QUANTITY_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CONDITION_QTY", DbType = System.Data.DbType.String),
        ]
        public int ConditionQuantity
        {
            get
            {
                return (int)this._primaryKey[Properties.ConditionQuantity];
            }
            set
            {
                this._primaryKey[Properties.ConditionQuantity] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EventQuantity.
        /// </summary>
        /// <value>Propiedad EventQuantity.</value>
        [
        DescriptionKey("EVENT_QUANTITY_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "EVENT_QTY", DbType = System.Data.DbType.String),
        ]
        public int EventQuantity
        {
            get
            {
                return (int)this._primaryKey[Properties.EventQuantity];
            }
            set
            {
                this._primaryKey[Properties.EventQuantity] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ComparatorCode.
        /// </summary>
        /// <value>Propiedad ComparatorCode.</value>
        [
        DescriptionKey("COMPARATOR_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COMPARATOR_CD", DbType = System.Data.DbType.String),
        ]
        public int ComparatorCode
        {
            get
            {
                return this._comparatorCode;
            }
            set
            {
                this._comparatorCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConditionValue.
        /// </summary>
        /// <value>Propiedad ConditionValue.</value>
        [
        DescriptionKey("CONDITION_VALUE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONDITION_VALUE", DbType = System.Data.DbType.String),
        ]
        public string ConditionValue
        {
            get
            {
                return this._conditionValue;
            }
            set
            {
                this._conditionValue = value;
            }
        }

    }
}