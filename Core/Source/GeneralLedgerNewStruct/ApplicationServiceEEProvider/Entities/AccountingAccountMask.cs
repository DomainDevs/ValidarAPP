/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.AccountingAccountMask.dict v1.0
 * FileSize=6155 Header=282 CRC=3656435289
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad AccountingAccountMask.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.AccountingAccountMask.dict"),
    Serializable(),
    DescriptionKey("ACCOUNTING_ACCOUNT_MASK_ENTITY"),
    TableMap(TableName="ACCOUNTING_ACCOUNT_MASK", Schema="GL"),
    ]
    public partial class AccountingAccountMask :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AccountingAccountMaskId = "AccountingAccountMaskId";
			public static readonly string ResultId = "ResultId";
			public static readonly string ParameterId = "ParameterId";
			public static readonly string Mask = "Mask";
			public static readonly string StartPosition = "StartPosition";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="accountingAccountMaskId">Propiedad clave AccountingAccountMaskId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int accountingAccountMaskId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AccountingAccountMaskId, accountingAccountMaskId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="accountingAccountMaskId">Propiedad clave AccountingAccountMaskId.</param>
		public static PrimaryKey CreatePrimaryKey(int accountingAccountMaskId)
	    {
			return InternalCreatePrimaryKey<AccountingAccountMask>(accountingAccountMaskId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ResultId.
		/// </summary>
        private int? _resultId = null;
		/// <summary>
		/// Atributo para la propiedad ParameterId.
		/// </summary>
        private int? _parameterId = null;
		/// <summary>
		/// Atributo para la propiedad Mask.
		/// </summary>
        private string _mask = null;
		/// <summary>
		/// Atributo para la propiedad StartPosition.
		/// </summary>
        private int? _startPosition = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="accountingAccountMaskId">AccountingAccountMaskId key property.</param>
	    public AccountingAccountMask(int accountingAccountMaskId):
			this(AccountingAccountMask.CreatePrimaryKey(accountingAccountMaskId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public AccountingAccountMask(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountMaskId.
		/// </summary>
		/// <value>Propiedad AccountingAccountMaskId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_MASK_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_MASK_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingAccountMaskId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountingAccountMaskId];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountingAccountMaskId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ResultId.
		/// </summary>
		/// <value>Propiedad ResultId.</value>
	    [
		DescriptionKey("RESULT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RESULT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ResultId
	    {
		    get
		    {
			    return this._resultId;
		    }
		    set
		    {
				this._resultId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ParameterId.
		/// </summary>
		/// <value>Propiedad ParameterId.</value>
	    [
		DescriptionKey("PARAMETER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PARAMETER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ParameterId
	    {
		    get
		    {
			    return this._parameterId;
		    }
		    set
		    {
				this._parameterId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Mask.
		/// </summary>
		/// <value>Propiedad Mask.</value>
	    [
		DescriptionKey("MASK_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MASK", DbType=System.Data.DbType.String),
	    ]
        public string Mask
	    {
		    get
		    {
			    return this._mask;
		    }
		    set
		    {
				this._mask = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StartPosition.
		/// </summary>
		/// <value>Propiedad StartPosition.</value>
	    [
		DescriptionKey("START_POSITION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="START_POSITION", DbType=System.Data.DbType.String),
	    ]
        public int? StartPosition
	    {
		    get
		    {
			    return this._startPosition;
		    }
		    set
		    {
				this._startPosition = value;
			}
	    }

    }
}