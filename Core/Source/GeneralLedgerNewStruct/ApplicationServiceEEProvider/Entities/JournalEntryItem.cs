/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.JournalEntryItem.dict v1.0
 * FileSize=14179 Header=278 CRC=3466082081
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad JournalEntryItem.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.JournalEntryItem.dict"),
    Serializable(),
    DescriptionKey("JOURNAL_ENTRY_ITEM_ENTITY"),
    TableMap(TableName="JOURNAL_ENTRY_ITEM", Schema="GL"),
    ]
    public partial class JournalEntryItem :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string JournalEntryItemId = "JournalEntryItemId";
			public static readonly string JournalEntryId = "JournalEntryId";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string AccountingAccountId = "AccountingAccountId";
			public static readonly string BankReconciliationId = "BankReconciliationId";
			public static readonly string ReceiptNumber = "ReceiptNumber";
			public static readonly string ReceiptDate = "ReceiptDate";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string Description = "Description";
			public static readonly string AmountValue = "AmountValue";
			public static readonly string AmountLocalValue = "AmountLocalValue";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string ReconciliationCode = "ReconciliationCode";
			public static readonly string ReconciliationDate = "ReconciliationDate";
			public static readonly string DueDate = "DueDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="journalEntryItemId">Propiedad clave JournalEntryItemId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int journalEntryItemId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.JournalEntryItemId, journalEntryItemId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="journalEntryItemId">Propiedad clave JournalEntryItemId.</param>
		public static PrimaryKey CreatePrimaryKey(int journalEntryItemId)
	    {
			return InternalCreatePrimaryKey<JournalEntryItem>(journalEntryItemId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad JournalEntryId.
		/// </summary>
        private int? _journalEntryId = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountId.
		/// </summary>
        private int? _accountingAccountId = null;
		/// <summary>
		/// Atributo para la propiedad BankReconciliationId.
		/// </summary>
        private int? _bankReconciliationId = null;
		/// <summary>
		/// Atributo para la propiedad ReceiptNumber.
		/// </summary>
        private int? _receiptNumber = null;
		/// <summary>
		/// Atributo para la propiedad ReceiptDate.
		/// </summary>
        private DateTime? _receiptDate = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNature.
		/// </summary>
        private int? _accountingNature = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad AmountValue.
		/// </summary>
        private decimal? _amountValue = null;
		/// <summary>
		/// Atributo para la propiedad AmountLocalValue.
		/// </summary>
        private decimal? _amountLocalValue = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad ReconciliationCode.
		/// </summary>
        private int? _reconciliationCode = null;
		/// <summary>
		/// Atributo para la propiedad ReconciliationDate.
		/// </summary>
        private DateTime? _reconciliationDate = null;
		/// <summary>
		/// Atributo para la propiedad DueDate.
		/// </summary>
        private DateTime? _dueDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="journalEntryItemId">JournalEntryItemId key property.</param>
	    public JournalEntryItem(int journalEntryItemId):
			this(JournalEntryItem.CreatePrimaryKey(journalEntryItemId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public JournalEntryItem(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad JournalEntryItemId.
		/// </summary>
		/// <value>Propiedad JournalEntryItemId.</value>
	    [
		DescriptionKey("JOURNAL_ENTRY_ITEM_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="JOURNAL_ENTRY_ITEM_ID", DbType=System.Data.DbType.String),
	    ]
        public int JournalEntryItemId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.JournalEntryItemId];
		    }
		    set
		    {
				this._primaryKey[Properties.JournalEntryItemId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JournalEntryId.
		/// </summary>
		/// <value>Propiedad JournalEntryId.</value>
	    [
		DescriptionKey("JOURNAL_ENTRY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="JOURNAL_ENTRY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? JournalEntryId
	    {
		    get
		    {
			    return this._journalEntryId;
		    }
		    set
		    {
				this._journalEntryId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountId.
		/// </summary>
		/// <value>Propiedad AccountingAccountId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountId
	    {
		    get
		    {
			    return this._accountingAccountId;
		    }
		    set
		    {
				this._accountingAccountId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankReconciliationId.
		/// </summary>
		/// <value>Propiedad BankReconciliationId.</value>
	    [
		DescriptionKey("BANK_RECONCILIATION_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_RECONCILIATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BankReconciliationId
	    {
		    get
		    {
			    return this._bankReconciliationId;
		    }
		    set
		    {
				this._bankReconciliationId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceiptNumber.
		/// </summary>
		/// <value>Propiedad ReceiptNumber.</value>
	    [
		DescriptionKey("RECEIPT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIPT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? ReceiptNumber
	    {
		    get
		    {
			    return this._receiptNumber;
		    }
		    set
		    {
				this._receiptNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceiptDate.
		/// </summary>
		/// <value>Propiedad ReceiptDate.</value>
	    [
		DescriptionKey("RECEIPT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIPT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ReceiptDate
	    {
		    get
		    {
			    return this._receiptDate;
		    }
		    set
		    {
				this._receiptDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AmountValue.
		/// </summary>
		/// <value>Propiedad AmountValue.</value>
	    [
		DescriptionKey("AMOUNT_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AmountValue
	    {
		    get
		    {
			    return this._amountValue;
		    }
		    set
		    {
				this._amountValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AmountLocalValue.
		/// </summary>
		/// <value>Propiedad AmountLocalValue.</value>
	    [
		DescriptionKey("AMOUNT_LOCAL_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT_LOCAL_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AmountLocalValue
	    {
		    get
		    {
			    return this._amountLocalValue;
		    }
		    set
		    {
				this._amountLocalValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationCode.
		/// </summary>
		/// <value>Propiedad ReconciliationCode.</value>
	    [
		DescriptionKey("RECONCILIATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECONCILIATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ReconciliationCode
	    {
		    get
		    {
			    return this._reconciliationCode;
		    }
		    set
		    {
				this._reconciliationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationDate.
		/// </summary>
		/// <value>Propiedad ReconciliationDate.</value>
	    [
		DescriptionKey("RECONCILIATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECONCILIATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ReconciliationDate
	    {
		    get
		    {
			    return this._reconciliationDate;
		    }
		    set
		    {
				this._reconciliationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DueDate.
		/// </summary>
		/// <value>Propiedad DueDate.</value>
	    [
		DescriptionKey("DUE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DUE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DueDate
	    {
		    get
		    {
			    return this._dueDate;
		    }
		    set
		    {
				this._dueDate = value;
			}
	    }

    }
}