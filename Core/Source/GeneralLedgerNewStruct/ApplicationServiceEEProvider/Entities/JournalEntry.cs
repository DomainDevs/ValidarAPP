/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.JournalEntry.dict v1.0
 * FileSize=10877 Header=274 CRC=2026040335
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad JournalEntry.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.JournalEntry.dict"),
    Serializable(),
    DescriptionKey("JOURNAL_ENTRY_ENTITY"),
    TableMap(TableName="JOURNAL_ENTRY", Schema="GL"),
    ]
    public partial class JournalEntry :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string JournalEntryId = "JournalEntryId";
			public static readonly string AccountingCompanyId = "AccountingCompanyId";
			public static readonly string AccountingModuleId = "AccountingModuleId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string TransactionNumber = "TransactionNumber";
			public static readonly string EntryNumber = "EntryNumber";
			public static readonly string Description = "Description";
			public static readonly string Date = "Date";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string UserCode = "UserCode";
			public static readonly string Status = "Status";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="journalEntryId">Propiedad clave JournalEntryId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int journalEntryId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.JournalEntryId, journalEntryId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="journalEntryId">Propiedad clave JournalEntryId.</param>
		public static PrimaryKey CreatePrimaryKey(int journalEntryId)
	    {
			return InternalCreatePrimaryKey<JournalEntry>(journalEntryId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountingCompanyId.
		/// </summary>
        private int? _accountingCompanyId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingModuleId.
		/// </summary>
        private decimal? _accountingModuleId = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private decimal? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad TransactionNumber.
		/// </summary>
        private int? _transactionNumber = null;
		/// <summary>
		/// Atributo para la propiedad EntryNumber.
		/// </summary>
        private int? _entryNumber = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad Date.
		/// </summary>
        private DateTime? _date = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int? _userCode = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="journalEntryId">JournalEntryId key property.</param>
	    public JournalEntry(int journalEntryId):
			this(JournalEntry.CreatePrimaryKey(journalEntryId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public JournalEntry(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad JournalEntryId.
		/// </summary>
		/// <value>Propiedad JournalEntryId.</value>
	    [
		DescriptionKey("JOURNAL_ENTRY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="JOURNAL_ENTRY_ID", DbType=System.Data.DbType.String),
	    ]
        public int JournalEntryId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.JournalEntryId];
		    }
		    set
		    {
				this._primaryKey[Properties.JournalEntryId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyId.
		/// </summary>
		/// <value>Propiedad AccountingCompanyId.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingCompanyId
	    {
		    get
		    {
			    return this._accountingCompanyId;
		    }
		    set
		    {
				this._accountingCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingModuleId.
		/// </summary>
		/// <value>Propiedad AccountingModuleId.</value>
	    [
		DescriptionKey("ACCOUNTING_MODULE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_MODULE_ID", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AccountingModuleId
	    {
		    get
		    {
			    return this._accountingModuleId;
		    }
		    set
		    {
				this._accountingModuleId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TransactionNumber.
		/// </summary>
		/// <value>Propiedad TransactionNumber.</value>
	    [
		DescriptionKey("TRANSACTION_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TRANSACTION_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? TransactionNumber
	    {
		    get
		    {
			    return this._transactionNumber;
		    }
		    set
		    {
				this._transactionNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntryNumber.
		/// </summary>
		/// <value>Propiedad EntryNumber.</value>
	    [
		DescriptionKey("ENTRY_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENTRY_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? EntryNumber
	    {
		    get
		    {
			    return this._entryNumber;
		    }
		    set
		    {
				this._entryNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Date.
		/// </summary>
		/// <value>Propiedad Date.</value>
	    [
		DescriptionKey("DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? Date
	    {
		    get
		    {
			    return this._date;
		    }
		    set
		    {
				this._date = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

    }
}