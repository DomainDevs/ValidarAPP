/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.PostdatedEntryItem.dict v1.0
 * FileSize=9086 Header=279 CRC=3916542028
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PostdatedEntryItem.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.PostdatedEntryItem.dict"),
    Serializable(),
    DescriptionKey("POSTDATED_ENTRY_ITEM_ENTITY"),
    TableMap(TableName="POSTDATED_ENTRY_ITEM", Schema="GL"),
    ]
    public partial class PostdatedEntryItem :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PostdatedEntryItemId = "PostdatedEntryItemId";
			public static readonly string EntryItemId = "EntryItemId";
			public static readonly string PostdatedType = "PostdatedType";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string AmountValue = "AmountValue";
			public static readonly string AmountLocalValue = "AmountLocalValue";
			public static readonly string IsJournalEntry = "IsJournalEntry";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="postdatedEntryItemId">Propiedad clave PostdatedEntryItemId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int postdatedEntryItemId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PostdatedEntryItemId, postdatedEntryItemId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="postdatedEntryItemId">Propiedad clave PostdatedEntryItemId.</param>
		public static PrimaryKey CreatePrimaryKey(int postdatedEntryItemId)
	    {
			return InternalCreatePrimaryKey<PostdatedEntryItem>(postdatedEntryItemId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad EntryItemId.
		/// </summary>
        private int? _entryItemId = null;
		/// <summary>
		/// Atributo para la propiedad PostdatedType.
		/// </summary>
        private int? _postdatedType = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private int? _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad AmountValue.
		/// </summary>
        private decimal? _amountValue = null;
		/// <summary>
		/// Atributo para la propiedad AmountLocalValue.
		/// </summary>
        private decimal? _amountLocalValue = null;
		/// <summary>
		/// Atributo para la propiedad IsJournalEntry.
		/// </summary>
        private bool? _isJournalEntry = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="postdatedEntryItemId">PostdatedEntryItemId key property.</param>
	    public PostdatedEntryItem(int postdatedEntryItemId):
			this(PostdatedEntryItem.CreatePrimaryKey(postdatedEntryItemId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PostdatedEntryItem(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PostdatedEntryItemId.
		/// </summary>
		/// <value>Propiedad PostdatedEntryItemId.</value>
	    [
		DescriptionKey("POSTDATED_ENTRY_ITEM_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="POSTDATED_ENTRY_ITEM_ID", DbType=System.Data.DbType.String),
	    ]
        public int PostdatedEntryItemId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PostdatedEntryItemId];
		    }
		    set
		    {
				this._primaryKey[Properties.PostdatedEntryItemId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntryItemId.
		/// </summary>
		/// <value>Propiedad EntryItemId.</value>
	    [
		DescriptionKey("ENTRY_ITEM_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENTRY_ITEM_ID", DbType=System.Data.DbType.String),
	    ]
        public int? EntryItemId
	    {
		    get
		    {
			    return this._entryItemId;
		    }
		    set
		    {
				this._entryItemId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PostdatedType.
		/// </summary>
		/// <value>Propiedad PostdatedType.</value>
	    [
		DescriptionKey("POSTDATED_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POSTDATED_TYPE", DbType=System.Data.DbType.String),
	    ]
        public int? PostdatedType
	    {
		    get
		    {
			    return this._postdatedType;
		    }
		    set
		    {
				this._postdatedType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AmountValue.
		/// </summary>
		/// <value>Propiedad AmountValue.</value>
	    [
		DescriptionKey("AMOUNT_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AmountValue
	    {
		    get
		    {
			    return this._amountValue;
		    }
		    set
		    {
				this._amountValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AmountLocalValue.
		/// </summary>
		/// <value>Propiedad AmountLocalValue.</value>
	    [
		DescriptionKey("AMOUNT_LOCAL_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT_LOCAL_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AmountLocalValue
	    {
		    get
		    {
			    return this._amountLocalValue;
		    }
		    set
		    {
				this._amountLocalValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsJournalEntry.
		/// </summary>
		/// <value>Propiedad IsJournalEntry.</value>
	    [
		DescriptionKey("IS_JOURNAL_ENTRY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_JOURNAL_ENTRY", DbType=System.Data.DbType.String),
	    ]
        public bool? IsJournalEntry
	    {
		    get
		    {
			    return this._isJournalEntry;
		    }
		    set
		    {
				this._isJournalEntry = value;
			}
	    }

    }
}