/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.Reclassification.dict v1.0
 * FileSize=7760 Header=293 CRC=1014364802
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad Reclassification.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.Reclassification.dict"),
    Serializable(),
    DescriptionKey("RECLASSIFICATION_ENTITY"),
    TableMap(TableName="RECLASSIFICATION", Schema="GL"),
    ]
    public partial class Reclassification :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ProcessYear = "ProcessYear";
			public static readonly string ProcessMonth = "ProcessMonth";
			public static readonly string SourceAccountingAccountId = "SourceAccountingAccountId";
			public static readonly string DestinationAccountingAccountId = "DestinationAccountingAccountId";
			public static readonly string OpeningPrefix = "OpeningPrefix";
			public static readonly string OpeningBranch = "OpeningBranch";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="processYear">Propiedad clave ProcessYear.</param>
		/// <param name="processMonth">Propiedad clave ProcessMonth.</param>
		/// <param name="sourceAccountingAccountId">Propiedad clave SourceAccountingAccountId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int processYear, int processMonth, int sourceAccountingAccountId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ProcessYear, processYear);
		    keys.Add(Properties.ProcessMonth, processMonth);
		    keys.Add(Properties.SourceAccountingAccountId, sourceAccountingAccountId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="processYear">Propiedad clave ProcessYear.</param>
		/// <param name="processMonth">Propiedad clave ProcessMonth.</param>
		/// <param name="sourceAccountngAccountId">Propiedad clave SourceAccountngAccountId.</param>
		public static PrimaryKey CreatePrimaryKey(int processYear, int processMonth, int sourceAccountingAccountId)
	    {
			return InternalCreatePrimaryKey<Reclassification>(processYear, processMonth, sourceAccountingAccountId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad DestinationAccountingAccountId.
		/// </summary>
        private int _destinationAccountingAccountId;
		/// <summary>
		/// Atributo para la propiedad OpeningPrefix.
		/// </summary>
        private bool _openingPrefix;
		/// <summary>
		/// Atributo para la propiedad OpeningBranch.
		/// </summary>
        private bool _openingBranch;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="processYear">ProcessYear key property.</param>
		/// <param name="processMonth">ProcessMonth key property.</param>
		/// <param name="sourceAccountingAccountId">SourceAccountngAccountId key property.</param>
	    public Reclassification(int processYear, int processMonth, int sourceAccountingAccountId):
			this(Reclassification.CreatePrimaryKey(processYear, processMonth, sourceAccountingAccountId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Reclassification(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessYear.
		/// </summary>
		/// <value>Propiedad ProcessYear.</value>
	    [
		DescriptionKey("PROCESS_YEAR_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PROCESS_YEAR", DbType=System.Data.DbType.String),
	    ]
        public int ProcessYear
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ProcessYear];
		    }
		    set
		    {
				this._primaryKey[Properties.ProcessYear] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessMonth.
		/// </summary>
		/// <value>Propiedad ProcessMonth.</value>
	    [
		DescriptionKey("PROCESS_MONTH_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PROCESS_MONTH", DbType=System.Data.DbType.String),
	    ]
        public int ProcessMonth
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ProcessMonth];
		    }
		    set
		    {
				this._primaryKey[Properties.ProcessMonth] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SourceAccountngAccountId.
		/// </summary>
		/// <value>Propiedad SourceAccountingAccountId.</value>
	    [
		DescriptionKey("SOURCE_ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SOURCE_ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int SourceAccountingAccountId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.SourceAccountingAccountId];
		    }
		    set
		    {
				this._primaryKey[Properties.SourceAccountingAccountId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DestinationAccountingAccountId.
		/// </summary>
		/// <value>Propiedad DestinationAccountingAccountId.</value>
	    [
		DescriptionKey("DESTINATION_ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESTINATION_ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int DestinationAccountingAccountId
	    {
		    get
		    {
			    return this._destinationAccountingAccountId;
		    }
		    set
		    {
				this._destinationAccountingAccountId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OpeningPrefix.
		/// </summary>
		/// <value>Propiedad OpeningPrefix.</value>
	    [
		DescriptionKey("OPENING_PREFIX_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="OPENING_PREFIX", DbType=System.Data.DbType.String),
	    ]
        public bool OpeningPrefix
	    {
		    get
		    {
			    return this._openingPrefix;
		    }
		    set
		    {
				this._openingPrefix = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OpeningBranch.
		/// </summary>
		/// <value>Propiedad OpeningBranch.</value>
	    [
		DescriptionKey("OPENING_BRANCH_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="OPENING_BRANCH", DbType=System.Data.DbType.String),
	    ]
        public bool OpeningBranch
	    {
		    get
		    {
			    return this._openingBranch;
		    }
		    set
		    {
				this._openingBranch = value;
			}
	    }

    }
}