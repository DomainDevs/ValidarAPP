/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.GetSummaryEntries.dict v1.0
 * FileSize=11655 Header=279 CRC=3971882257
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad GetSummaryEntries.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.GetSummaryEntries.dict"),
    Serializable(),
    DescriptionKey("GET_SUMMARY_ENTRIES_ENTITY"),
    TableMap(TableName="GET_SUMMARY_ENTRIES", Schema="GL"),
    ]
    public partial class GetSummaryEntries :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Date = "Date";
			public static readonly string AccountingAccountId = "AccountingAccountId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string EntryNumber = "EntryNumber";
			public static readonly string AccountingCompanyId = "AccountingCompanyId";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string AccountingModuleId = "AccountingModuleId";
			public static readonly string TotalAmountValue = "TotalAmountValue";
			public static readonly string TotalAmountLocalValue = "TotalAmountLocalValue";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<GetSummaryEntries>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Date.
		/// </summary>
        private DateTime? _date = null;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountId.
		/// </summary>
        private int? _accountingAccountId = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNature.
		/// </summary>
        private int? _accountingNature = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private int? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad EntryNumber.
		/// </summary>
        private int? _entryNumber = null;
		/// <summary>
		/// Atributo para la propiedad AccountingCompanyId.
		/// </summary>
        private int? _accountingCompanyId = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingModuleId.
		/// </summary>
        private int? _accountingModuleId = null;
		/// <summary>
		/// Atributo para la propiedad TotalAmountValue.
		/// </summary>
        private decimal? _totalAmountValue = null;
		/// <summary>
		/// Atributo para la propiedad TotalAmountLocalValue.
		/// </summary>
        private decimal? _totalAmountLocalValue = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public GetSummaryEntries():
			this(GetSummaryEntries.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetSummaryEntries(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Date.
		/// </summary>
		/// <value>Propiedad Date.</value>
	    [
		DescriptionKey("DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? Date
	    {
		    get
		    {
			    return this._date;
		    }
		    set
		    {
				this._date = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountId.
		/// </summary>
		/// <value>Propiedad AccountingAccountId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountId
	    {
		    get
		    {
			    return this._accountingAccountId;
		    }
		    set
		    {
				this._accountingAccountId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntryNumber.
		/// </summary>
		/// <value>Propiedad EntryNumber.</value>
	    [
		DescriptionKey("ENTRY_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENTRY_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? EntryNumber
	    {
		    get
		    {
			    return this._entryNumber;
		    }
		    set
		    {
				this._entryNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyId.
		/// </summary>
		/// <value>Propiedad AccountingCompanyId.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingCompanyId
	    {
		    get
		    {
			    return this._accountingCompanyId;
		    }
		    set
		    {
				this._accountingCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingModuleId.
		/// </summary>
		/// <value>Propiedad AccountingModuleId.</value>
	    [
		DescriptionKey("ACCOUNTING_MODULE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_MODULE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingModuleId
	    {
		    get
		    {
			    return this._accountingModuleId;
		    }
		    set
		    {
				this._accountingModuleId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalAmountValue.
		/// </summary>
		/// <value>Propiedad TotalAmountValue.</value>
	    [
		DescriptionKey("TOTAL_AMOUNT_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_AMOUNT_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalAmountValue
	    {
		    get
		    {
			    return this._totalAmountValue;
		    }
		    set
		    {
				this._totalAmountValue = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalAmountLocalValue.
		/// </summary>
		/// <value>Propiedad TotalAmountLocalValue.</value>
	    [
		DescriptionKey("TOTAL_AMOUNT_LOCAL_VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_AMOUNT_LOCAL_VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalAmountLocalValue
	    {
		    get
		    {
			    return this._totalAmountLocalValue;
		    }
		    set
		    {
				this._totalAmountLocalValue = value;
			}
	    }

    }
}