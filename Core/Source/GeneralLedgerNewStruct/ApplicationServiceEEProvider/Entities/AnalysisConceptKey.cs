/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.AnalysisConceptKey.dict v1.0
 * FileSize=6490 Header=279 CRC=1404481233
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad AnalysisConceptKey.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.AnalysisConceptKey.dict"),
    Serializable(),
    DescriptionKey("ANALYSIS_CONCEPT_KEY_ENTITY"),
    TableMap(TableName="ANALYSIS_CONCEPT_KEY", Schema="GL"),
    ]
    public partial class AnalysisConceptKey :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AnalysisConceptKeyId = "AnalysisConceptKeyId";
			public static readonly string AnalysisConceptId = "AnalysisConceptId";
			public static readonly string Table = "Table";
			public static readonly string Column = "Column";
			public static readonly string ColumnDescription = "ColumnDescription";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="analysisConceptKeyId">Propiedad clave AnalysisConceptKeyId.</param>
		/// <param name="analysisConceptId">Propiedad clave AnalysisConceptId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int analysisConceptKeyId, int analysisConceptId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AnalysisConceptKeyId, analysisConceptKeyId);
		    keys.Add(Properties.AnalysisConceptId, analysisConceptId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="analysisConceptKeyId">Propiedad clave AnalysisConceptKeyId.</param>
		/// <param name="analysisConceptId">Propiedad clave AnalysisConceptId.</param>
		public static PrimaryKey CreatePrimaryKey(int analysisConceptKeyId, int analysisConceptId)
	    {
			return InternalCreatePrimaryKey<AnalysisConceptKey>(analysisConceptKeyId, analysisConceptId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Table.
		/// </summary>
        private string _table = null;
		/// <summary>
		/// Atributo para la propiedad Column.
		/// </summary>
        private string _column = null;
		/// <summary>
		/// Atributo para la propiedad ColumnDescription.
		/// </summary>
        private string _columnDescription = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="analysisConceptKeyId">AnalysisConceptKeyId key property.</param>
		/// <param name="analysisConceptId">AnalysisConceptId key property.</param>
	    public AnalysisConceptKey(int analysisConceptKeyId, int analysisConceptId):
			this(AnalysisConceptKey.CreatePrimaryKey(analysisConceptKeyId, analysisConceptId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public AnalysisConceptKey(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnalysisConceptKeyId.
		/// </summary>
		/// <value>Propiedad AnalysisConceptKeyId.</value>
	    [
		DescriptionKey("ANALYSIS_CONCEPT_KEY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ANALYSIS_CONCEPT_KEY_ID", DbType=System.Data.DbType.String),
	    ]
        public int AnalysisConceptKeyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AnalysisConceptKeyId];
		    }
		    set
		    {
				this._primaryKey[Properties.AnalysisConceptKeyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnalysisConceptId.
		/// </summary>
		/// <value>Propiedad AnalysisConceptId.</value>
	    [
		DescriptionKey("ANALYSIS_CONCEPT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ANALYSIS_CONCEPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int AnalysisConceptId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AnalysisConceptId];
		    }
		    set
		    {
				this._primaryKey[Properties.AnalysisConceptId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Table.
		/// </summary>
		/// <value>Propiedad Table.</value>
	    [
		DescriptionKey("TABLE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TABLE", DbType=System.Data.DbType.String),
	    ]
        public string Table
	    {
		    get
		    {
			    return this._table;
		    }
		    set
		    {
				this._table = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Column.
		/// </summary>
		/// <value>Propiedad Column.</value>
	    [
		DescriptionKey("COLUMN_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLUMN", DbType=System.Data.DbType.String),
	    ]
        public string Column
	    {
		    get
		    {
			    return this._column;
		    }
		    set
		    {
				this._column = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ColumnDescription.
		/// </summary>
		/// <value>Propiedad ColumnDescription.</value>
	    [
		DescriptionKey("COLUMN_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLUMN_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string ColumnDescription
	    {
		    get
		    {
			    return this._columnDescription;
		    }
		    set
		    {
				this._columnDescription = value;
			}
	    }

    }
}