/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedgerServices.EEProvider.Condition.dict v1.0
 * FileSize=7953 Header=270 CRC=3522421827
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedgerServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad Condition.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedgerServices.EEProvider.Condition.dict"),
    Serializable(),
    DescriptionKey("CONDITION_ENTITY"),
    TableMap(TableName="CONDITION", Schema="GL"),
    ]
    public partial class Condition :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ConditionId = "ConditionId";
			public static readonly string AccountingRuleId = "AccountingRuleId";
			public static readonly string ParameterId = "ParameterId";
			public static readonly string Operator = "Operator";
			public static readonly string Value = "Value";
			public static readonly string RightConditionId = "RightConditionId";
			public static readonly string LeftConditionId = "LeftConditionId";
			public static readonly string ResultId = "ResultId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="conditionId">Propiedad clave ConditionId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int conditionId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ConditionId, conditionId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="conditionId">Propiedad clave ConditionId.</param>
		public static PrimaryKey CreatePrimaryKey(int conditionId)
	    {
			return InternalCreatePrimaryKey<Condition>(conditionId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountingRuleId.
		/// </summary>
        private int? _accountingRuleId = null;
		/// <summary>
		/// Atributo para la propiedad ParameterId.
		/// </summary>
        private int? _parameterId = null;
		/// <summary>
		/// Atributo para la propiedad Operator.
		/// </summary>
        private string _operator = null;
		/// <summary>
		/// Atributo para la propiedad Value.
		/// </summary>
        private decimal? _value = null;
		/// <summary>
		/// Atributo para la propiedad RightConditionId.
		/// </summary>
        private int? _rightConditionId = null;
		/// <summary>
		/// Atributo para la propiedad LeftConditionId.
		/// </summary>
        private int? _leftConditionId = null;
		/// <summary>
		/// Atributo para la propiedad ResultId.
		/// </summary>
        private int? _resultId = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="conditionId">ConditionId key property.</param>
	    public Condition(int conditionId):
			this(Condition.CreatePrimaryKey(conditionId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Condition(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConditionId.
		/// </summary>
		/// <value>Propiedad ConditionId.</value>
	    [
		DescriptionKey("CONDITION_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CONDITION_ID", DbType=System.Data.DbType.String),
	    ]
        public int ConditionId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ConditionId];
		    }
		    set
		    {
				this._primaryKey[Properties.ConditionId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingRuleId.
		/// </summary>
		/// <value>Propiedad AccountingRuleId.</value>
	    [
		DescriptionKey("ACCOUNTING_RULE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_RULE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingRuleId
	    {
		    get
		    {
			    return this._accountingRuleId;
		    }
		    set
		    {
				this._accountingRuleId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ParameterId.
		/// </summary>
		/// <value>Propiedad ParameterId.</value>
	    [
		DescriptionKey("PARAMETER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PARAMETER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ParameterId
	    {
		    get
		    {
			    return this._parameterId;
		    }
		    set
		    {
				this._parameterId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Operator.
		/// </summary>
		/// <value>Propiedad Operator.</value>
	    [
		DescriptionKey("OPERATOR_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="OPERATOR", DbType=System.Data.DbType.String),
	    ]
        public string Operator
	    {
		    get
		    {
			    return this._operator;
		    }
		    set
		    {
				this._operator = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Value.
		/// </summary>
		/// <value>Propiedad Value.</value>
	    [
		DescriptionKey("VALUE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VALUE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Value
	    {
		    get
		    {
			    return this._value;
		    }
		    set
		    {
				this._value = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RightConditionId.
		/// </summary>
		/// <value>Propiedad RightConditionId.</value>
	    [
		DescriptionKey("RIGHT_CONDITION_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RIGHT_CONDITION_ID", DbType=System.Data.DbType.String),
	    ]
        public int? RightConditionId
	    {
		    get
		    {
			    return this._rightConditionId;
		    }
		    set
		    {
				this._rightConditionId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LeftConditionId.
		/// </summary>
		/// <value>Propiedad LeftConditionId.</value>
	    [
		DescriptionKey("LEFT_CONDITION_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LEFT_CONDITION_ID", DbType=System.Data.DbType.String),
	    ]
        public int? LeftConditionId
	    {
		    get
		    {
			    return this._leftConditionId;
		    }
		    set
		    {
				this._leftConditionId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ResultId.
		/// </summary>
		/// <value>Propiedad ResultId.</value>
	    [
		DescriptionKey("RESULT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RESULT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ResultId
	    {
		    get
		    {
			    return this._resultId;
		    }
		    set
		    {
				this._resultId = value;
			}
	    }

    }
}