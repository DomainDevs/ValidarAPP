/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.MovementType.dict v1.0
 * FileSize=5019 Header=273 CRC=1636789512
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad MovementType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.MovementType.dict"),
    Serializable(),
    DescriptionKey("MOVEMENT_TYPE_ENTITY"),
    TableMap(TableName="MOVEMENT_TYPE", Schema="GL"),
    ]
    public partial class MovementType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string MovementTypeCode = "MovementTypeCode";
			public static readonly string ConceptSourceCode = "ConceptSourceCode";
			public static readonly string Description = "Description";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="movementTypeCode">Propiedad clave MovementTypeCode.</param>
		/// <param name="conceptSourceCode">Propiedad clave ConceptSourceCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int movementTypeCode, int conceptSourceCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.MovementTypeCode, movementTypeCode);
		    keys.Add(Properties.ConceptSourceCode, conceptSourceCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="movementTypeCode">Propiedad clave MovementTypeCode.</param>
		/// <param name="conceptSourceCode">Propiedad clave ConceptSourceCode.</param>
		public static PrimaryKey CreatePrimaryKey(int movementTypeCode, int conceptSourceCode)
	    {
			return InternalCreatePrimaryKey<MovementType>(movementTypeCode, conceptSourceCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="movementTypeCode">MovementTypeCode key property.</param>
		/// <param name="conceptSourceCode">ConceptSourceCode key property.</param>
	    public MovementType(int movementTypeCode, int conceptSourceCode):
			this(MovementType.CreatePrimaryKey(movementTypeCode, conceptSourceCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public MovementType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad MovementTypeCode.
		/// </summary>
		/// <value>Propiedad MovementTypeCode.</value>
	    [
		DescriptionKey("MOVEMENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="MOVEMENT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int MovementTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.MovementTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.MovementTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptSourceCode.
		/// </summary>
		/// <value>Propiedad ConceptSourceCode.</value>
	    [
		DescriptionKey("CONCEPT_SOURCE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CONCEPT_SOURCE_CD", DbType=System.Data.DbType.String),
	    ]
        public int ConceptSourceCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ConceptSourceCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ConceptSourceCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

    }
}