/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.LedgerEntry.dict v1.0
 * FileSize=10984 Header=273 CRC=2375963077
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad LedgerEntry.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.LedgerEntry.dict"),
    Serializable(),
    DescriptionKey("LEDGER_ENTRY_ENTITY"),
    TableMap(TableName="LEDGER_ENTRY", Schema="GL"),
    ]
    public partial class LedgerEntry :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LedgerEntryId = "LedgerEntryId";
			public static readonly string AccountingCompanyId = "AccountingCompanyId";
			public static readonly string AccountingMovementTypeId = "AccountingMovementTypeId";
			public static readonly string AccountingModuleId = "AccountingModuleId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string EntryDestinationId = "EntryDestinationId";
			public static readonly string Description = "Description";
			public static readonly string EntryNumber = "EntryNumber";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string UserCode = "UserCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="ledgerEntryId">Propiedad clave LedgerEntryId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int ledgerEntryId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LedgerEntryId, ledgerEntryId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="ledgerEntryId">Propiedad clave LedgerEntryId.</param>
		public static PrimaryKey CreatePrimaryKey(int ledgerEntryId)
	    {
			return InternalCreatePrimaryKey<LedgerEntry>(ledgerEntryId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountingCompanyId.
		/// </summary>
        private int _accountingCompanyId;
		/// <summary>
		/// Atributo para la propiedad AccountingMovementTypeId.
		/// </summary>
        private int _accountingMovementTypeId;
		/// <summary>
		/// Atributo para la propiedad AccountingModuleId.
		/// </summary>
        private int _accountingModuleId;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int _branchCode;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private decimal? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad EntryDestinationId.
		/// </summary>
        private int _entryDestinationId;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad EntryNumber.
		/// </summary>
        private int? _entryNumber = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime _registerDate;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int _userCode;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="ledgerEntryId">LedgerEntryId key property.</param>
	    public LedgerEntry(int ledgerEntryId):
			this(LedgerEntry.CreatePrimaryKey(ledgerEntryId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public LedgerEntry(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LedgerEntryId.
		/// </summary>
		/// <value>Propiedad LedgerEntryId.</value>
	    [
		DescriptionKey("LEDGER_ENTRY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LEDGER_ENTRY_ID", DbType=System.Data.DbType.String),
	    ]
        public int LedgerEntryId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LedgerEntryId];
		    }
		    set
		    {
				this._primaryKey[Properties.LedgerEntryId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyId.
		/// </summary>
		/// <value>Propiedad AccountingCompanyId.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingCompanyId
	    {
		    get
		    {
			    return this._accountingCompanyId;
		    }
		    set
		    {
				this._accountingCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingMovementTypeId.
		/// </summary>
		/// <value>Propiedad AccountingMovementTypeId.</value>
	    [
		DescriptionKey("ACCOUNTING_MOVEMENT_TYPE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNTING_MOVEMENT_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingMovementTypeId
	    {
		    get
		    {
			    return this._accountingMovementTypeId;
		    }
		    set
		    {
				this._accountingMovementTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingModuleId.
		/// </summary>
		/// <value>Propiedad AccountingModuleId.</value>
	    [
		DescriptionKey("ACCOUNTING_MODULE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNTING_MODULE_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingModuleId
	    {
		    get
		    {
			    return this._accountingModuleId;
		    }
		    set
		    {
				this._accountingModuleId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntryDestinationId.
		/// </summary>
		/// <value>Propiedad EntryDestinationId.</value>
	    [
		DescriptionKey("ENTRY_DESTINATION_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENTRY_DESTINATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int EntryDestinationId
	    {
		    get
		    {
			    return this._entryDestinationId;
		    }
		    set
		    {
				this._entryDestinationId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntryNumber.
		/// </summary>
		/// <value>Propiedad EntryNumber.</value>
	    [
		DescriptionKey("ENTRY_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENTRY_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? EntryNumber
	    {
		    get
		    {
			    return this._entryNumber;
		    }
		    set
		    {
				this._entryNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

    }
}