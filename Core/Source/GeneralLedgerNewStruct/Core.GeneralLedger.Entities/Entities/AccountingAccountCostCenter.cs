/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.AccountingAccountCostCenter.dict v1.0
 * FileSize=5164 Header=288 CRC=1733820992
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad AccountingAccountCostCenter.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.AccountingAccountCostCenter.dict"),
    Serializable(),
    DescriptionKey("ACCOUNTING_ACCOUNT_COST_CENTER_ENTITY"),
    TableMap(TableName="ACCOUNTING_ACCOUNT_COST_CENTER", Schema="GL"),
    ]
    public partial class AccountingAccountCostCenter :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AccountingAccountCostCenterId = "AccountingAccountCostCenterId";
			public static readonly string AccountingAccountId = "AccountingAccountId";
			public static readonly string CostCenterId = "CostCenterId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="accountingAccountCostCenterId">Propiedad clave AccountingAccountCostCenterId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int accountingAccountCostCenterId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AccountingAccountCostCenterId, accountingAccountCostCenterId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="accountingAccountCostCenterId">Propiedad clave AccountingAccountCostCenterId.</param>
		public static PrimaryKey CreatePrimaryKey(int accountingAccountCostCenterId)
	    {
			return InternalCreatePrimaryKey<AccountingAccountCostCenter>(accountingAccountCostCenterId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountingAccountId.
		/// </summary>
        private int? _accountingAccountId = null;
		/// <summary>
		/// Atributo para la propiedad CostCenterId.
		/// </summary>
        private int? _costCenterId = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="accountingAccountCostCenterId">AccountingAccountCostCenterId key property.</param>
	    public AccountingAccountCostCenter(int accountingAccountCostCenterId):
			this(AccountingAccountCostCenter.CreatePrimaryKey(accountingAccountCostCenterId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public AccountingAccountCostCenter(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountCostCenterId.
		/// </summary>
		/// <value>Propiedad AccountingAccountCostCenterId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_COST_CENTER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_COST_CENTER_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingAccountCostCenterId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountingAccountCostCenterId];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountingAccountCostCenterId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountId.
		/// </summary>
		/// <value>Propiedad AccountingAccountId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountId
	    {
		    get
		    {
			    return this._accountingAccountId;
		    }
		    set
		    {
				this._accountingAccountId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CostCenterId.
		/// </summary>
		/// <value>Propiedad CostCenterId.</value>
	    [
		DescriptionKey("COST_CENTER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COST_CENTER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? CostCenterId
	    {
		    get
		    {
			    return this._costCenterId;
		    }
		    set
		    {
				this._costCenterId = value;
			}
	    }

    }
}