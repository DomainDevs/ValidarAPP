/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.EntryTypeItem.dict v1.0
 * FileSize=9835 Header=274 CRC=1654943332
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad EntryTypeItem.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.EntryTypeItem.dict"),
    Serializable(),
    DescriptionKey("ENTRY_TYPE_ITEM_ENTITY"),
    TableMap(TableName="ENTRY_TYPE_ITEM", Schema="GL"),
    ]
    public partial class EntryTypeItem :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string EntryTypeItemId = "EntryTypeItemId";
			public static readonly string Description = "Description";
			public static readonly string EntryTypeId = "EntryTypeId";
			public static readonly string AccountingAccountId = "AccountingAccountId";
			public static readonly string AccountingMovementTypeId = "AccountingMovementTypeId";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CostCenterId = "CostCenterId";
			public static readonly string AnalysisId = "AnalysisId";
			public static readonly string AccountingConceptCode = "AccountingConceptCode";
			public static readonly string AccountingNature = "AccountingNature";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="entryTypeItemId">Propiedad clave EntryTypeItemId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int entryTypeItemId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.EntryTypeItemId, entryTypeItemId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="entryTypeItemId">Propiedad clave EntryTypeItemId.</param>
		public static PrimaryKey CreatePrimaryKey(int entryTypeItemId)
	    {
			return InternalCreatePrimaryKey<EntryTypeItem>(entryTypeItemId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad EntryTypeId.
		/// </summary>
        private int? _entryTypeId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountId.
		/// </summary>
        private int? _accountingAccountId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingMovementTypeId.
		/// </summary>
        private int? _accountingMovementTypeId = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CostCenterId.
		/// </summary>
        private int? _costCenterId = null;
		/// <summary>
		/// Atributo para la propiedad AnalysisId.
		/// </summary>
        private int? _analysisId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingConceptCode.
		/// </summary>
        private int? _accountingConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNature.
		/// </summary>
        private int? _accountingNature = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="entryTypeItemId">EntryTypeItemId key property.</param>
	    public EntryTypeItem(int entryTypeItemId):
			this(EntryTypeItem.CreatePrimaryKey(entryTypeItemId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public EntryTypeItem(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntryTypeItemId.
		/// </summary>
		/// <value>Propiedad EntryTypeItemId.</value>
	    [
		DescriptionKey("ENTRY_TYPE_ITEM_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ENTRY_TYPE_ITEM_ID", DbType=System.Data.DbType.String),
	    ]
        public int EntryTypeItemId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EntryTypeItemId];
		    }
		    set
		    {
				this._primaryKey[Properties.EntryTypeItemId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntryTypeId.
		/// </summary>
		/// <value>Propiedad EntryTypeId.</value>
	    [
		DescriptionKey("ENTRY_TYPE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENTRY_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? EntryTypeId
	    {
		    get
		    {
			    return this._entryTypeId;
		    }
		    set
		    {
				this._entryTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountId.
		/// </summary>
		/// <value>Propiedad AccountingAccountId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountId
	    {
		    get
		    {
			    return this._accountingAccountId;
		    }
		    set
		    {
				this._accountingAccountId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingMovementTypeId.
		/// </summary>
		/// <value>Propiedad AccountingMovementTypeId.</value>
	    [
		DescriptionKey("ACCOUNTING_MOVEMENT_TYPE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_MOVEMENT_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingMovementTypeId
	    {
		    get
		    {
			    return this._accountingMovementTypeId;
		    }
		    set
		    {
				this._accountingMovementTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CostCenterId.
		/// </summary>
		/// <value>Propiedad CostCenterId.</value>
	    [
		DescriptionKey("COST_CENTER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COST_CENTER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? CostCenterId
	    {
		    get
		    {
			    return this._costCenterId;
		    }
		    set
		    {
				this._costCenterId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnalysisId.
		/// </summary>
		/// <value>Propiedad AnalysisId.</value>
	    [
		DescriptionKey("ANALYSIS_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ANALYSIS_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AnalysisId
	    {
		    get
		    {
			    return this._analysisId;
		    }
		    set
		    {
				this._analysisId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingConceptCode.
		/// </summary>
		/// <value>Propiedad AccountingConceptCode.</value>
	    [
		DescriptionKey("ACCOUNTING_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingConceptCode
	    {
		    get
		    {
			    return this._accountingConceptCode;
		    }
		    set
		    {
				this._accountingConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

    }
}