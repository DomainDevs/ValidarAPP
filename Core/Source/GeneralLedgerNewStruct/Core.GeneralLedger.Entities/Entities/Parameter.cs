/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.Parameter.dict v1.0
 * FileSize=5802 Header=269 CRC=939331737
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad Parameter.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.Parameter.dict"),
    Serializable(),
    DescriptionKey("PARAMETER_ENTITY"),
    TableMap(TableName="PARAMETER", Schema="GL"),
    ]
    public partial class Parameter :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ParameterId = "ParameterId";
			public static readonly string ModuleCode = "ModuleCode";
			public static readonly string DataTypeCode = "DataTypeCode";
			public static readonly string Order = "Order";
			public static readonly string Description = "Description";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="parameterId">Propiedad clave ParameterId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int parameterId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ParameterId, parameterId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="parameterId">Propiedad clave ParameterId.</param>
		public static PrimaryKey CreatePrimaryKey(int parameterId)
	    {
			return InternalCreatePrimaryKey<Parameter>(parameterId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ModuleCode.
		/// </summary>
        private decimal? _moduleCode = null;
		/// <summary>
		/// Atributo para la propiedad DataTypeCode.
		/// </summary>
        private int? _dataTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad Order.
		/// </summary>
        private int? _order = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="parameterId">ParameterId key property.</param>
	    public Parameter(int parameterId):
			this(Parameter.CreatePrimaryKey(parameterId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Parameter(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ParameterId.
		/// </summary>
		/// <value>Propiedad ParameterId.</value>
	    [
		DescriptionKey("PARAMETER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PARAMETER_ID", DbType=System.Data.DbType.String),
	    ]
        public int ParameterId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ParameterId];
		    }
		    set
		    {
				this._primaryKey[Properties.ParameterId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ModuleCode.
		/// </summary>
		/// <value>Propiedad ModuleCode.</value>
	    [
		DescriptionKey("MODULE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MODULE_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ModuleCode
	    {
		    get
		    {
			    return this._moduleCode;
		    }
		    set
		    {
				this._moduleCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DataTypeCode.
		/// </summary>
		/// <value>Propiedad DataTypeCode.</value>
	    [
		DescriptionKey("DATA_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATA_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? DataTypeCode
	    {
		    get
		    {
			    return this._dataTypeCode;
		    }
		    set
		    {
				this._dataTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Order.
		/// </summary>
		/// <value>Propiedad Order.</value>
	    [
		DescriptionKey("ORDER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ORDER", DbType=System.Data.DbType.String),
	    ]
        public int? Order
	    {
		    get
		    {
			    return this._order;
		    }
		    set
		    {
				this._order = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

    }
}