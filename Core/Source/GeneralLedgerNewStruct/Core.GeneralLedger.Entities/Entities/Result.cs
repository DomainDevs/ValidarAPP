/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.Result.dict v1.0
 * FileSize=5300 Header=267 CRC=2713440177
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad Result.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.Result.dict"),
    Serializable(),
    DescriptionKey("RESULT_ENTITY"),
    TableMap(TableName="RESULT", Schema="GL"),
    ]
    public partial class Result :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ResultId = "ResultId";
			public static readonly string AccountingNatureId = "AccountingNatureId";
			public static readonly string AccountingAccountNumber = "AccountingAccountNumber";
			public static readonly string ParameterId = "ParameterId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="resultId">Propiedad clave ResultId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int resultId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ResultId, resultId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="resultId">Propiedad clave ResultId.</param>
		public static PrimaryKey CreatePrimaryKey(int resultId)
	    {
			return InternalCreatePrimaryKey<Result>(resultId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountingNatureId.
		/// </summary>
        private int? _accountingNatureId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountNumber.
		/// </summary>
        private string _accountingAccountNumber = null;
		/// <summary>
		/// Atributo para la propiedad ParameterId.
		/// </summary>
        private int? _parameterId = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="resultId">ResultId key property.</param>
	    public Result(int resultId):
			this(Result.CreatePrimaryKey(resultId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Result(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ResultId.
		/// </summary>
		/// <value>Propiedad ResultId.</value>
	    [
		DescriptionKey("RESULT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RESULT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ResultId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ResultId];
		    }
		    set
		    {
				this._primaryKey[Properties.ResultId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNatureId.
		/// </summary>
		/// <value>Propiedad AccountingNatureId.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNatureId
	    {
		    get
		    {
			    return this._accountingNatureId;
		    }
		    set
		    {
				this._accountingNatureId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountNumber.
		/// </summary>
		/// <value>Propiedad AccountingAccountNumber.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AccountingAccountNumber
	    {
		    get
		    {
			    return this._accountingAccountNumber;
		    }
		    set
		    {
				this._accountingAccountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ParameterId.
		/// </summary>
		/// <value>Propiedad ParameterId.</value>
	    [
		DescriptionKey("PARAMETER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PARAMETER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ParameterId
	    {
		    get
		    {
			    return this._parameterId;
		    }
		    set
		    {
				this._parameterId = value;
			}
	    }

    }
}