/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.LogJournalEntryItem.dict v1.0
 * FileSize=7923 Header=263 CRC=2866705926
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad LogJournalEntryItem.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.LogJournalEntryItem.dict"),
    Serializable(),
    DescriptionKey("LOG_JOURNAL_ENTRY_ITEM_ENTITY"),
    TableMap(TableName="LOG_JOURNAL_ENTRY_ITEM", Schema="GL"),
    ]
    public partial class LogJournalEntryItem :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LogCode = "LogCode";
			public static readonly string JeiJson = "JeiJson";
			public static readonly string AccountNumber = "AccountNumber";
			public static readonly string CodePackagesRules = "CodePackagesRules";
			public static readonly string ModuleCode = "ModuleCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string Amount = "Amount";
			public static readonly string AccountNature = "AccountNature";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="logCode">Propiedad clave LogCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int logCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LogCode, logCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="logCode">Propiedad clave LogCode.</param>
		public static PrimaryKey CreatePrimaryKey(int logCode)
	    {
			return InternalCreatePrimaryKey<LogJournalEntryItem>(logCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad JeiJson.
		/// </summary>
        private string _jeiJson = null;
		/// <summary>
		/// Atributo para la propiedad AccountNumber.
		/// </summary>
        private string _accountNumber = null;
		/// <summary>
		/// Atributo para la propiedad CodePackagesRules.
		/// </summary>
        private string _codePackagesRules = null;
		/// <summary>
		/// Atributo para la propiedad ModuleCode.
		/// </summary>
        private string _moduleCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private string _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private string _amount = null;
		/// <summary>
		/// Atributo para la propiedad AccountNature.
		/// </summary>
        private string _accountNature = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="logCode">LogCode key property.</param>
	    public LogJournalEntryItem(int logCode):
			this(LogJournalEntryItem.CreatePrimaryKey(logCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public LogJournalEntryItem(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LogCode.
		/// </summary>
		/// <value>Propiedad LogCode.</value>
	    [
		DescriptionKey("LOG_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LOG_CD", DbType=System.Data.DbType.String),
	    ]
        public int LogCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LogCode];
		    }
		    set
		    {
				this._primaryKey[Properties.LogCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JeiJson.
		/// </summary>
		/// <value>Propiedad JeiJson.</value>
	    [
		DescriptionKey("JEI_JSON_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="JEI_JSON", DbType=System.Data.DbType.String),
	    ]
        public string JeiJson
	    {
		    get
		    {
			    return this._jeiJson;
		    }
		    set
		    {
				this._jeiJson = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountNumber.
		/// </summary>
		/// <value>Propiedad AccountNumber.</value>
	    [
		DescriptionKey("ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AccountNumber
	    {
		    get
		    {
			    return this._accountNumber;
		    }
		    set
		    {
				this._accountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CodePackagesRules.
		/// </summary>
		/// <value>Propiedad CodePackagesRules.</value>
	    [
		DescriptionKey("CODE_PACKAGES_RULES_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CODE_PACKAGES_RULES", DbType=System.Data.DbType.String),
	    ]
        public string CodePackagesRules
	    {
		    get
		    {
			    return this._codePackagesRules;
		    }
		    set
		    {
				this._codePackagesRules = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ModuleCode.
		/// </summary>
		/// <value>Propiedad ModuleCode.</value>
	    [
		DescriptionKey("MODULE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MODULE_CD", DbType=System.Data.DbType.String),
	    ]
        public string ModuleCode
	    {
		    get
		    {
			    return this._moduleCode;
		    }
		    set
		    {
				this._moduleCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.String),
	    ]
        public string Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountNature.
		/// </summary>
		/// <value>Propiedad AccountNature.</value>
	    [
		DescriptionKey("ACCOUNT_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_NATURE", DbType=System.Data.DbType.String),
	    ]
        public string AccountNature
	    {
		    get
		    {
			    return this._accountNature;
		    }
		    set
		    {
				this._accountNature = value;
			}
	    }

    }
}