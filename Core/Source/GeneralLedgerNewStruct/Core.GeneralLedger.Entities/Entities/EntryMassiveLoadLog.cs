/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.EntryMassiveLoadLog.dict v1.0
 * FileSize=7114 Header=280 CRC=3711603476
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad EntryMassiveLoadLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.EntryMassiveLoadLog.dict"),
    Serializable(),
    DescriptionKey("ENTRY_MASSIVE_LOAD_LOG_ENTITY"),
    TableMap(TableName="ENTRY_MASSIVE_LOAD_LOG", Schema="GL"),
    ]
    public partial class EntryMassiveLoadLog :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string ProcessDate = "ProcessDate";
			public static readonly string OperationDate = "OperationDate";
			public static readonly string RowNumber = "RowNumber";
			public static readonly string Success = "Success";
			public static readonly string ErrorDescription = "ErrorDescription";
			public static readonly string Enabled = "Enabled";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey(int id)
	    {
			return InternalCreatePrimaryKey<EntryMassiveLoadLog>(id);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ProcessDate.
		/// </summary>
        private DateTime? _processDate = null;
		/// <summary>
		/// Atributo para la propiedad OperationDate.
		/// </summary>
        private DateTime? _operationDate = null;
		/// <summary>
		/// Atributo para la propiedad RowNumber.
		/// </summary>
        private int? _rowNumber = null;
		/// <summary>
		/// Atributo para la propiedad Success.
		/// </summary>
        private int? _success = null;
		/// <summary>
		/// Atributo para la propiedad ErrorDescription.
		/// </summary>
        private string _errorDescription = null;
		/// <summary>
		/// Atributo para la propiedad Enabled.
		/// </summary>
        private int? _enabled = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="id">Id key property.</param>
	    public EntryMassiveLoadLog(int id):
			this(EntryMassiveLoadLog.CreatePrimaryKey(id), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public EntryMassiveLoadLog(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessDate.
		/// </summary>
		/// <value>Propiedad ProcessDate.</value>
	    [
		DescriptionKey("PROCESS_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCESS_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ProcessDate
	    {
		    get
		    {
			    return this._processDate;
		    }
		    set
		    {
				this._processDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OperationDate.
		/// </summary>
		/// <value>Propiedad OperationDate.</value>
	    [
		DescriptionKey("OPERATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="OPERATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? OperationDate
	    {
		    get
		    {
			    return this._operationDate;
		    }
		    set
		    {
				this._operationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RowNumber.
		/// </summary>
		/// <value>Propiedad RowNumber.</value>
	    [
		DescriptionKey("ROW_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ROW_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? RowNumber
	    {
		    get
		    {
			    return this._rowNumber;
		    }
		    set
		    {
				this._rowNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Success.
		/// </summary>
		/// <value>Propiedad Success.</value>
	    [
		DescriptionKey("SUCCESS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SUCCESS", DbType=System.Data.DbType.String),
	    ]
        public int? Success
	    {
		    get
		    {
			    return this._success;
		    }
		    set
		    {
				this._success = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ErrorDescription.
		/// </summary>
		/// <value>Propiedad ErrorDescription.</value>
	    [
		DescriptionKey("ERROR_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ERROR_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string ErrorDescription
	    {
		    get
		    {
			    return this._errorDescription;
		    }
		    set
		    {
				this._errorDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Enabled.
		/// </summary>
		/// <value>Propiedad Enabled.</value>
	    [
		DescriptionKey("ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENABLED", DbType=System.Data.DbType.String),
	    ]
        public int? Enabled
	    {
		    get
		    {
			    return this._enabled;
		    }
		    set
		    {
				this._enabled = value;
			}
	    }

    }
}