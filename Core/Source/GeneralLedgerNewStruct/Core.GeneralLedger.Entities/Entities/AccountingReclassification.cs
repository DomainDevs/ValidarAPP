/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.AccountingReclassification.dict v1.0
 * FileSize=13459 Header=288 CRC=2151030103
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad AccountingReclassification.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.AccountingReclassification.dict"),
    Serializable(),
    DescriptionKey("ACCOUNTING_RECLASSIFICATION_ENTITY"),
    TableMap(TableName="ACCOUNTING_RECLASSIFICATION", Schema="GL"),
    ]
    public partial class AccountingReclassification :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AccountingReclassificationId = "AccountingReclassificationId";
			public static readonly string ProcessYear = "ProcessYear";
			public static readonly string ProcessMonth = "ProcessMonth";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Amount = "Amount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string AccountingAccountId = "AccountingAccountId";
			public static readonly string SourceAccountingAccountId = "SourceAccountingAccountId";
			public static readonly string AnalysisCode = "AnalysisCode";
			public static readonly string AnalysisConceptCode = "AnalysisConceptCode";
			public static readonly string ConceptKey = "ConceptKey";
			public static readonly string CostCenterCode = "CostCenterCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="accountingReclassificationId">Propiedad clave AccountingReclassificationId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int accountingReclassificationId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AccountingReclassificationId, accountingReclassificationId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="accountingReclassificationId">Propiedad clave AccountingReclassificationId.</param>
		public static PrimaryKey CreatePrimaryKey(int accountingReclassificationId)
	    {
			return InternalCreatePrimaryKey<AccountingReclassification>(accountingReclassificationId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ProcessYear.
		/// </summary>
        private int _processYear;
		/// <summary>
		/// Atributo para la propiedad ProcessMonth.
		/// </summary>
        private int _processMonth;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int _branchCode;
		/// <summary>
		/// Atributo para la propiedad AccountingNature.
		/// </summary>
        private int _accountingNature;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int _currencyCode;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal _incomeAmount;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal _amount;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal _exchangeRate;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountId.
		/// </summary>
        private int? _accountingAccountId = null;
		/// <summary>
		/// Atributo para la propiedad SourceAccountingAccountId.
		/// </summary>
        private int? _sourceAccountingAccountId = null;
		/// <summary>
		/// Atributo para la propiedad AnalysisCode.
		/// </summary>
        private int? _analysisCode = null;
		/// <summary>
		/// Atributo para la propiedad AnalysisConceptCode.
		/// </summary>
        private int? _analysisConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad ConceptKey.
		/// </summary>
        private string _conceptKey = null;
		/// <summary>
		/// Atributo para la propiedad CostCenterCode.
		/// </summary>
        private int? _costCenterCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="accountingReclassificationId">AccountingReclassificationId key property.</param>
	    public AccountingReclassification(int accountingReclassificationId):
			this(AccountingReclassification.CreatePrimaryKey(accountingReclassificationId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public AccountingReclassification(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingReclassificationId.
		/// </summary>
		/// <value>Propiedad AccountingReclassificationId.</value>
	    [
		DescriptionKey("ACCOUNTING_RECLASSIFICATION_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTING_RECLASSIFICATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingReclassificationId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountingReclassificationId];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountingReclassificationId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessYear.
		/// </summary>
		/// <value>Propiedad ProcessYear.</value>
	    [
		DescriptionKey("PROCESS_YEAR_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_YEAR", DbType=System.Data.DbType.String),
	    ]
        public int ProcessYear
	    {
		    get
		    {
			    return this._processYear;
		    }
		    set
		    {
				this._processYear = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessMonth.
		/// </summary>
		/// <value>Propiedad ProcessMonth.</value>
	    [
		DescriptionKey("PROCESS_MONTH_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_MONTH", DbType=System.Data.DbType.String),
	    ]
        public int ProcessMonth
	    {
		    get
		    {
			    return this._processMonth;
		    }
		    set
		    {
				this._processMonth = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountId.
		/// </summary>
		/// <value>Propiedad AccountingAccountId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountId
	    {
		    get
		    {
			    return this._accountingAccountId;
		    }
		    set
		    {
				this._accountingAccountId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SourceAccountingAccountId.
		/// </summary>
		/// <value>Propiedad SourceAccountingAccountId.</value>
	    [
		DescriptionKey("SOURCE_ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SOURCE_ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? SourceAccountingAccountId
	    {
		    get
		    {
			    return this._sourceAccountingAccountId;
		    }
		    set
		    {
				this._sourceAccountingAccountId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnalysisCode.
		/// </summary>
		/// <value>Propiedad AnalysisCode.</value>
	    [
		DescriptionKey("ANALYSIS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ANALYSIS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AnalysisCode
	    {
		    get
		    {
			    return this._analysisCode;
		    }
		    set
		    {
				this._analysisCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnalysisConceptCode.
		/// </summary>
		/// <value>Propiedad AnalysisConceptCode.</value>
	    [
		DescriptionKey("ANALYSIS_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ANALYSIS_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AnalysisConceptCode
	    {
		    get
		    {
			    return this._analysisConceptCode;
		    }
		    set
		    {
				this._analysisConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptKey.
		/// </summary>
		/// <value>Propiedad ConceptKey.</value>
	    [
		DescriptionKey("CONCEPT_KEY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CONCEPT_KEY", DbType=System.Data.DbType.String),
	    ]
        public string ConceptKey
	    {
		    get
		    {
			    return this._conceptKey;
		    }
		    set
		    {
				this._conceptKey = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CostCenterCode.
		/// </summary>
		/// <value>Propiedad CostCenterCode.</value>
	    [
		DescriptionKey("COST_CENTER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COST_CENTER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CostCenterCode
	    {
		    get
		    {
			    return this._costCenterCode;
		    }
		    set
		    {
				this._costCenterCode = value;
			}
	    }

    }
}