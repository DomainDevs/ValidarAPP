/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.BankReconciliation.dict v1.0
 * FileSize=6433 Header=279 CRC=1281444123
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad BankReconciliation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.BankReconciliation.dict"),
    Serializable(),
    DescriptionKey("BANK_RECONCILIATION_ENTITY"),
    TableMap(TableName = "BANK_RECONCILIATION", Schema = "GL"),
    ]
    public partial class BankReconciliation :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BankReconciliationId = "BankReconciliationId";
            public static readonly string Description = "Description";
            public static readonly string ShortDescription = "ShortDescription";
            public static readonly string DebitCompany = "DebitCompany";
            public static readonly string DebitBank = "DebitBank";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="bankReconciliationId">Propiedad clave BankReconciliationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int bankReconciliationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BankReconciliationId, bankReconciliationId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="bankReconciliationId">Propiedad clave BankReconciliationId.</param>
        public static PrimaryKey CreatePrimaryKey(int bankReconciliationId)
        {
            return InternalCreatePrimaryKey<BankReconciliation>(bankReconciliationId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad ShortDescription.
        /// </summary>
        private string _shortDescription = null;
        /// <summary>
        /// Atributo para la propiedad DebitCompany.
        /// </summary>
        private bool? _debitCompany = null;
        /// <summary>
        /// Atributo para la propiedad DebitBank.
        /// </summary>
        private bool? _debitBank = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="bankReconciliationId">BankReconciliationId key property.</param>
        public BankReconciliation(int bankReconciliationId) :
            this(BankReconciliation.CreatePrimaryKey(bankReconciliationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public BankReconciliation(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BankReconciliationId.
        /// </summary>
        /// <value>Propiedad BankReconciliationId.</value>
        [
        DescriptionKey("BANK_RECONCILIATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BANK_RECONCILIATION_ID", DbType = System.Data.DbType.String),
        ]
        public int BankReconciliationId
        {
            get
            {
                return (int)this._primaryKey[Properties.BankReconciliationId];
            }
            set
            {
                this._primaryKey[Properties.BankReconciliationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ShortDescription.
        /// </summary>
        /// <value>Propiedad ShortDescription.</value>
        [
        DescriptionKey("SHORT_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SHORT_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string ShortDescription
        {
            get
            {
                return this._shortDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.ShortDescription);
                }
                this._shortDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DebitCompany.
        /// </summary>
        /// <value>Propiedad DebitCompany.</value>
        [
        DescriptionKey("DEBIT_COMPANY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEBIT_COMPANY", DbType = System.Data.DbType.String),
        ]
        public bool? DebitCompany
        {
            get
            {
                return this._debitCompany;
            }
            set
            {
                this._debitCompany = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DebitBank.
        /// </summary>
        /// <value>Propiedad DebitBank.</value>
        [
        DescriptionKey("DEBIT_BANK_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEBIT_BANK", DbType = System.Data.DbType.String),
        ]
        public bool? DebitBank
        {
            get
            {
                return this._debitBank;
            }
            set
            {
                this._debitBank = value;
            }
        }

    }
}