/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.GeneralLedger.ReclassificationLog.dict v1.0
 * FileSize=8022 Header=280 CRC=2213975921
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.GeneralLedger.Entities
{
    /// <summary>
    /// Definición de entidad ReclassificationLog.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.GeneralLedger.ReclassificationLog.dict"),
    Serializable(),
    DescriptionKey("RECLASSIFICATION_LOG_ENTITY"),
    TableMap(TableName="RECLASSIFICATION_LOG", Schema="GL"),
    ]
    public partial class ReclassificationLog :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ReclassificationLogId = "ReclassificationLogId";
			public static readonly string ModuleCode = "ModuleCode";
			public static readonly string ProcessYear = "ProcessYear";
			public static readonly string ProcessMonth = "ProcessMonth";
			public static readonly string UserCode = "UserCode";
			public static readonly string StartDate = "StartDate";
			public static readonly string EndDate = "EndDate";
			public static readonly string ProcessStatus = "ProcessStatus";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="reclassificationLogId">Propiedad clave ReclassificationLogId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int reclassificationLogId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ReclassificationLogId, reclassificationLogId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="reclassificationLogId">Propiedad clave ReclassificationLogId.</param>
		public static PrimaryKey CreatePrimaryKey(int reclassificationLogId)
	    {
			return InternalCreatePrimaryKey<ReclassificationLog>(reclassificationLogId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ModuleCode.
		/// </summary>
        private decimal _moduleCode;
		/// <summary>
		/// Atributo para la propiedad ProcessYear.
		/// </summary>
        private int _processYear;
		/// <summary>
		/// Atributo para la propiedad ProcessMonth.
		/// </summary>
        private int _processMonth;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int _userCode;
		/// <summary>
		/// Atributo para la propiedad StartDate.
		/// </summary>
        private DateTime _startDate;
		/// <summary>
		/// Atributo para la propiedad EndDate.
		/// </summary>
        private DateTime? _endDate = null;
		/// <summary>
		/// Atributo para la propiedad ProcessStatus.
		/// </summary>
        private int _processStatus;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="reclassificationLogId">ReclassificationLogId key property.</param>
	    public ReclassificationLog(int reclassificationLogId):
			this(ReclassificationLog.CreatePrimaryKey(reclassificationLogId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ReclassificationLog(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReclassificationLogId.
		/// </summary>
		/// <value>Propiedad ReclassificationLogId.</value>
	    [
		DescriptionKey("RECLASSIFICATION_LOG_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RECLASSIFICATION_LOG_ID", DbType=System.Data.DbType.String),
	    ]
        public int ReclassificationLogId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ReclassificationLogId];
		    }
		    set
		    {
				this._primaryKey[Properties.ReclassificationLogId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ModuleCode.
		/// </summary>
		/// <value>Propiedad ModuleCode.</value>
	    [
		DescriptionKey("MODULE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="MODULE_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ModuleCode
	    {
		    get
		    {
			    return this._moduleCode;
		    }
		    set
		    {
				this._moduleCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessYear.
		/// </summary>
		/// <value>Propiedad ProcessYear.</value>
	    [
		DescriptionKey("PROCESS_YEAR_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_YEAR", DbType=System.Data.DbType.String),
	    ]
        public int ProcessYear
	    {
		    get
		    {
			    return this._processYear;
		    }
		    set
		    {
				this._processYear = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessMonth.
		/// </summary>
		/// <value>Propiedad ProcessMonth.</value>
	    [
		DescriptionKey("PROCESS_MONTH_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_MONTH", DbType=System.Data.DbType.String),
	    ]
        public int ProcessMonth
	    {
		    get
		    {
			    return this._processMonth;
		    }
		    set
		    {
				this._processMonth = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StartDate.
		/// </summary>
		/// <value>Propiedad StartDate.</value>
	    [
		DescriptionKey("START_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="START_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime StartDate
	    {
		    get
		    {
			    return this._startDate;
		    }
		    set
		    {
				this._startDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndDate.
		/// </summary>
		/// <value>Propiedad EndDate.</value>
	    [
		DescriptionKey("END_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="END_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EndDate
	    {
		    get
		    {
			    return this._endDate;
		    }
		    set
		    {
				this._endDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessStatus.
		/// </summary>
		/// <value>Propiedad ProcessStatus.</value>
	    [
		DescriptionKey("PROCESS_STATUS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_STATUS", DbType=System.Data.DbType.String),
	    ]
        public int ProcessStatus
	    {
		    get
		    {
			    return this._processStatus;
		    }
		    set
		    {
				this._processStatus = value;
			}
	    }

    }
}