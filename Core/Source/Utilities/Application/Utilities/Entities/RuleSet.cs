/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Utilities.RuleSet.dict v1.0
 * FileSize=9713 Header=247 CRC=1222120685
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Utilities.Entities
{
    /// <summary>
    /// Definición de entidad RuleSet.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Utilities.RuleSet.dict"),
    Serializable(),
    DescriptionKey("RULE_SET_ENTITY"),
    TableMap(TableName="RULE_SET", Schema="SCR"),
    ]
    public partial class RuleSet :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RuleSetId = "RuleSetId";
			public static readonly string Description = "Description";
			public static readonly string LevelId = "LevelId";
			public static readonly string PackageId = "PackageId";
			public static readonly string CurrentFrom = "CurrentFrom";
			public static readonly string RuleSetVer = "RuleSetVer";
			public static readonly string RuleSetXml = "RuleSetXml";
			public static readonly string IsEvent = "IsEvent";
			public static readonly string CurrentTo = "CurrentTo";
			public static readonly string Active = "Active";
			public static readonly string TypeActive = "TypeActive";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="ruleSetId">Propiedad clave RuleSetId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int ruleSetId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RuleSetId, ruleSetId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="ruleSetId">Propiedad clave RuleSetId.</param>
		public static PrimaryKey CreatePrimaryKey(int ruleSetId)
	    {
			return InternalCreatePrimaryKey<RuleSet>(ruleSetId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad LevelId.
		/// </summary>
        private int _levelId;
		/// <summary>
		/// Atributo para la propiedad PackageId.
		/// </summary>
        private int _packageId;
		/// <summary>
		/// Atributo para la propiedad CurrentFrom.
		/// </summary>
        private DateTime _currentFrom;
		/// <summary>
		/// Atributo para la propiedad RuleSetVer.
		/// </summary>
        private int _ruleSetVer;
		/// <summary>
		/// Atributo para la propiedad RuleSetXml.
		/// </summary>
        private byte[] _ruleSetXml;
		/// <summary>
		/// Atributo para la propiedad IsEvent.
		/// </summary>
        private bool? _isEvent = null;
		/// <summary>
		/// Atributo para la propiedad CurrentTo.
		/// </summary>
        private DateTime? _currentTo = null;
		/// <summary>
		/// Atributo para la propiedad Active.
		/// </summary>
        private bool? _active = null;
		/// <summary>
		/// Atributo para la propiedad TypeActive.
		/// </summary>
        private int? _typeActive = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="ruleSetId">RuleSetId key property.</param>
	    public RuleSet(int ruleSetId):
			this(RuleSet.CreatePrimaryKey(ruleSetId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public RuleSet(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RuleSetId.
		/// </summary>
		/// <value>Propiedad RuleSetId.</value>
	    [
		DescriptionKey("RULE_SET_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RULE_SET_ID", DbType=System.Data.DbType.String),
	    ]
        public int RuleSetId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RuleSetId];
		    }
		    set
		    {
				this._primaryKey[Properties.RuleSetId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelId.
		/// </summary>
		/// <value>Propiedad LevelId.</value>
	    [
		DescriptionKey("LEVEL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LEVEL_ID", DbType=System.Data.DbType.String),
	    ]
        public int LevelId
	    {
		    get
		    {
			    return this._levelId;
		    }
		    set
		    {
				this._levelId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PackageId.
		/// </summary>
		/// <value>Propiedad PackageId.</value>
	    [
		DescriptionKey("PACKAGE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PACKAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int PackageId
	    {
		    get
		    {
			    return this._packageId;
		    }
		    set
		    {
				this._packageId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentFrom.
		/// </summary>
		/// <value>Propiedad CurrentFrom.</value>
	    [
		DescriptionKey("CURRENT_FROM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENT_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime CurrentFrom
	    {
		    get
		    {
			    return this._currentFrom;
		    }
		    set
		    {
				this._currentFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RuleSetVer.
		/// </summary>
		/// <value>Propiedad RuleSetVer.</value>
	    [
		DescriptionKey("RULE_SET_VER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RULE_SET_VER", DbType=System.Data.DbType.String),
	    ]
        public int RuleSetVer
	    {
		    get
		    {
			    return this._ruleSetVer;
		    }
		    set
		    {
				this._ruleSetVer = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RuleSetXml.
		/// </summary>
		/// <value>Propiedad RuleSetXml.</value>
	    [
		DescriptionKey("RULE_SET_XML_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RULE_SET_XML", DbType=System.Data.DbType.String),
	    ]
        public byte[] RuleSetXml
	    {
		    get
		    {
			    return this._ruleSetXml;
		    }
		    set
		    {
				this._ruleSetXml = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsEvent.
		/// </summary>
		/// <value>Propiedad IsEvent.</value>
	    [
		DescriptionKey("IS_EVENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_EVENT", DbType=System.Data.DbType.String),
	    ]
        public bool? IsEvent
	    {
		    get
		    {
			    return this._isEvent;
		    }
		    set
		    {
				this._isEvent = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentTo.
		/// </summary>
		/// <value>Propiedad CurrentTo.</value>
	    [
		DescriptionKey("CURRENT_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentTo
	    {
		    get
		    {
			    return this._currentTo;
		    }
		    set
		    {
				this._currentTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Active.
		/// </summary>
		/// <value>Propiedad Active.</value>
	    [
		DescriptionKey("ACTIVE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACTIVE", DbType=System.Data.DbType.String),
	    ]
        public bool Active
	    {
		    get
		    {
			    return this._active;
		    }
		    set
		    {
				this._active = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TypeActive.
		/// </summary>
		/// <value>Propiedad TypeActive.</value>
	    [
		DescriptionKey("TYPE_ACTIVE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TYPE_ACTIVE", DbType=System.Data.DbType.String),
	    ]
        public int? TypeActive
	    {
		    get
		    {
			    return this._typeActive;
		    }
		    set
		    {
				this._typeActive = value;
			}
	    }

    }
}