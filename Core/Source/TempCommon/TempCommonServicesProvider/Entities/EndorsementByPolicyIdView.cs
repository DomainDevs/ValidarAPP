/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.TempCommonServices.Provider.EndorsementByPolicyIdView.dict v1.0
 * FileSize=14269 Header=284 CRC=4274816159
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.TempCommonServices.Provider.Entities
{
    /// <summary>
    /// Definición de entidad GetEndorsementByPolicyidV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.TempCommonServices.Provider.EndorsementByPolicyIdView.dict"),
    Serializable(),
    DescriptionKey("GET_ENDORSEMENT_BY_POLICYID_V_ENTITY"),
    TableMap(TableName="GET_ENDORSEMENT_BY_POLICYID_V", Schema="REINS"),
    ]
    public partial class EndorsementByPolicyIdView :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PolicyId = "PolicyId";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string DocumentNum = "DocumentNum";
			public static readonly string EndorsementType = "EndorsementType";
			public static readonly string CurrentFrom = "CurrentFrom";
			public static readonly string CurrentTo = "CurrentTo";
			public static readonly string IssueDate = "IssueDate";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string InsuredCode = "InsuredCode";
			public static readonly string InsuredName = "InsuredName";
			public static readonly string BusinessTypeCode = "BusinessTypeCode";
			public static readonly string OperationType = "OperationType";
			public static readonly string Prime = "Prime";
			public static readonly string InsuredAmount = "InsuredAmount";
			public static readonly string ResponsibilityMaximumAmount = "ResponsibilityMaximumAmount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int policyId, int endorsementId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PolicyId, policyId);
		    keys.Add(Properties.EndorsementId, endorsementId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		public static PrimaryKey CreatePrimaryKey(int policyId, int endorsementId)
	    {
			return InternalCreatePrimaryKey<EndorsementByPolicyIdView>(policyId, endorsementId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad DocumentNum.
		/// </summary>
        private int _documentNum;
		/// <summary>
		/// Atributo para la propiedad EndorsementType.
		/// </summary>
        private string _endorsementType = null;
		/// <summary>
		/// Atributo para la propiedad CurrentFrom.
		/// </summary>
        private DateTime _currentFrom;
		/// <summary>
		/// Atributo para la propiedad CurrentTo.
		/// </summary>
        private DateTime? _currentTo = null;
		/// <summary>
		/// Atributo para la propiedad IssueDate.
		/// </summary>
        private DateTime _issueDate;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int _currencyCode;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad InsuredCode.
		/// </summary>
        private int? _insuredCode = null;
		/// <summary>
		/// Atributo para la propiedad InsuredName.
		/// </summary>
        private string _insuredName = null;
		/// <summary>
		/// Atributo para la propiedad BusinessTypeCode.
		/// </summary>
        private int _businessTypeCode;
		/// <summary>
		/// Atributo para la propiedad OperationType.
		/// </summary>
        private string _operationType = null;
		/// <summary>
		/// Atributo para la propiedad Prime.
		/// </summary>
        private decimal? _prime = null;
		/// <summary>
		/// Atributo para la propiedad InsuredAmount.
		/// </summary>
        private decimal? _insuredAmount = null;
		/// <summary>
		/// Atributo para la propiedad ResponsibilityMaximumAmount.
		/// </summary>
        private decimal? _responsibilityMaximumAmount = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="policyId">PolicyId key property.</param>
		/// <param name="endorsementId">EndorsementId key property.</param>
	    public EndorsementByPolicyIdView(int policyId, int endorsementId):
			this(EndorsementByPolicyIdView.CreatePrimaryKey(policyId, endorsementId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public EndorsementByPolicyIdView(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PolicyId];
		    }
		    set
		    {
				this._primaryKey[Properties.PolicyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EndorsementId];
		    }
		    set
		    {
				this._primaryKey[Properties.EndorsementId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNum.
		/// </summary>
		/// <value>Propiedad DocumentNum.</value>
	    [
		DescriptionKey("DOCUMENT_NUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DOCUMENT_NUM", DbType=System.Data.DbType.String),
	    ]
        public int DocumentNum
	    {
		    get
		    {
			    return this._documentNum;
		    }
		    set
		    {
				this._documentNum = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementType.
		/// </summary>
		/// <value>Propiedad EndorsementType.</value>
	    [
		DescriptionKey("ENDORSEMENT_TYPE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_TYPE", DbType=System.Data.DbType.String),
	    ]
        public string EndorsementType
	    {
		    get
		    {
			    return this._endorsementType;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.EndorsementType);
				}
				this._endorsementType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentFrom.
		/// </summary>
		/// <value>Propiedad CurrentFrom.</value>
	    [
		DescriptionKey("CURRENT_FROM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENT_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime CurrentFrom
	    {
		    get
		    {
			    return this._currentFrom;
		    }
		    set
		    {
				this._currentFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentTo.
		/// </summary>
		/// <value>Propiedad CurrentTo.</value>
	    [
		DescriptionKey("CURRENT_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentTo
	    {
		    get
		    {
			    return this._currentTo;
		    }
		    set
		    {
				this._currentTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssueDate.
		/// </summary>
		/// <value>Propiedad IssueDate.</value>
	    [
		DescriptionKey("ISSUE_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ISSUE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime IssueDate
	    {
		    get
		    {
			    return this._issueDate;
		    }
		    set
		    {
				this._issueDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredCode.
		/// </summary>
		/// <value>Propiedad InsuredCode.</value>
	    [
		DescriptionKey("INSURED_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredCode
	    {
		    get
		    {
			    return this._insuredCode;
		    }
		    set
		    {
				this._insuredCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredName.
		/// </summary>
		/// <value>Propiedad InsuredName.</value>
	    [
		DescriptionKey("INSURED_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_NAME", DbType=System.Data.DbType.String),
	    ]
        public string InsuredName
	    {
		    get
		    {
			    return this._insuredName;
		    }
		    set
		    {
				this._insuredName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BusinessTypeCode.
		/// </summary>
		/// <value>Propiedad BusinessTypeCode.</value>
	    [
		DescriptionKey("BUSINESS_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BUSINESS_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int BusinessTypeCode
	    {
		    get
		    {
			    return this._businessTypeCode;
		    }
		    set
		    {
				this._businessTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OperationType.
		/// </summary>
		/// <value>Propiedad OperationType.</value>
	    [
		DescriptionKey("OPERATION_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="OPERATION_TYPE", DbType=System.Data.DbType.String),
	    ]
        public string OperationType
	    {
		    get
		    {
			    return this._operationType;
		    }
		    set
		    {
				this._operationType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Prime.
		/// </summary>
		/// <value>Propiedad Prime.</value>
	    [
		DescriptionKey("PRIME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PRIME", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Prime
	    {
		    get
		    {
			    return this._prime;
		    }
		    set
		    {
				this._prime = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredAmount.
		/// </summary>
		/// <value>Propiedad InsuredAmount.</value>
	    [
		DescriptionKey("INSURED_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? InsuredAmount
	    {
		    get
		    {
			    return this._insuredAmount;
		    }
		    set
		    {
				this._insuredAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ResponsibilityMaximumAmount.
		/// </summary>
		/// <value>Propiedad ResponsibilityMaximumAmount.</value>
	    [
		DescriptionKey("RESPONSIBILITY_MAXIMUM_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RESPONSIBILITY_MAXIMUM_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ResponsibilityMaximumAmount
	    {
		    get
		    {
			    return this._responsibilityMaximumAmount;
		    }
		    set
		    {
				this._responsibilityMaximumAmount = value;
			}
	    }

    }
}