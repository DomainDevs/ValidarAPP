/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.TempCommonServices.Provider.BankBranch.dict v1.0
 * FileSize=5394 Header=268 CRC=2832631389
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.TempCommonServices.Provider.Entities
{
    /// <summary>
    /// Definición de entidad BankBranch.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.TempCommonServices.Provider.BankBranch.dict"),
    Serializable(),
    DescriptionKey("BANK_BRANCH_ENTITY"),
    TableMap(TableName="BANK_BRANCH", Schema="COMM"),
    ]
    public partial class BankBranch :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BankBranchCode = "BankBranchCode";
			public static readonly string BankCode = "BankCode";
			public static readonly string Description = "Description";
			public static readonly string Enabled = "Enabled";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="bankBranchCode">Propiedad clave BankBranchCode.</param>
		/// <param name="bankCode">Propiedad clave BankCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int bankBranchCode, int bankCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BankBranchCode, bankBranchCode);
		    keys.Add(Properties.BankCode, bankCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="bankBranchCode">Propiedad clave BankBranchCode.</param>
		/// <param name="bankCode">Propiedad clave BankCode.</param>
		public static PrimaryKey CreatePrimaryKey(int bankBranchCode, int bankCode)
	    {
			return InternalCreatePrimaryKey<BankBranch>(bankBranchCode, bankCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad Enabled.
		/// </summary>
        private bool? _enabled = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="bankBranchCode">BankBranchCode key property.</param>
		/// <param name="bankCode">BankCode key property.</param>
	    public BankBranch(int bankBranchCode, int bankCode):
			this(BankBranch.CreatePrimaryKey(bankBranchCode, bankCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BankBranch(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankBranchCode.
		/// </summary>
		/// <value>Propiedad BankBranchCode.</value>
	    [
		DescriptionKey("BANK_BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BankBranchCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BankBranchCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BankBranchCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankCode.
		/// </summary>
		/// <value>Propiedad BankCode.</value>
	    [
		DescriptionKey("BANK_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int BankCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BankCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BankCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Enabled.
		/// </summary>
		/// <value>Propiedad Enabled.</value>
	    [
		DescriptionKey("ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? Enabled
	    {
		    get
		    {
			    return this._enabled;
		    }
		    set
		    {
				this._enabled = value;
			}
	    }

    }
}