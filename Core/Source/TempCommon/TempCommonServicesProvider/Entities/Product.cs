/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.TempCommonServices.Provider.Product.dict v1.0
 * FileSize=16404 Header=266 CRC=3137909687
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.TempCommonServices.Provider.Entities
{
    /// <summary>
    /// Definición de entidad Product.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.TempCommonServices.Provider.Product.dict"),
    Serializable(),
    DescriptionKey("PRODUCT_ENTITY"),
    TableMap(TableName="PRODUCT", Schema="PROD"),
    ]
    public partial class Product :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ProductId = "ProductId";
			public static readonly string Description = "Description";
			public static readonly string SmallDescription = "SmallDescription";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string IsGreen = "IsGreen";
			public static readonly string CurrentFrom = "CurrentFrom";
			public static readonly string StCommissPercentage = "StCommissPercentage";
			public static readonly string CurrentTo = "CurrentTo";
			public static readonly string AdditCommissPercentage = "AdditCommissPercentage";
			public static readonly string SchCommissPercentage = "SchCommissPercentage";
			public static readonly string StDisCommissPercentage = "StDisCommissPercentage";
			public static readonly string AdditDisCommissPercentage = "AdditDisCommissPercentage";
			public static readonly string IncCommissAdFacPercentage = "IncCommissAdFacPercentage";
			public static readonly string DimCommissAdFacPercentage = "DimCommissAdFacPercentage";
			public static readonly string ScriptId = "ScriptId";
			public static readonly string RuleSetId = "RuleSetId";
			public static readonly string AtCoverGroupId = "AtCoverGroupId";
			public static readonly string PreRuleSetId = "PreRuleSetId";
			public static readonly string Version = "Version";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int productId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ProductId, productId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="productId">Propiedad clave ProductId.</param>
		public static PrimaryKey CreatePrimaryKey(int productId)
	    {
			return InternalCreatePrimaryKey<Product>(productId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad SmallDescription.
		/// </summary>
        private string _smallDescription = null;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad IsGreen.
		/// </summary>
        private bool _isGreen;
		/// <summary>
		/// Atributo para la propiedad CurrentFrom.
		/// </summary>
        private DateTime _currentFrom;
		/// <summary>
		/// Atributo para la propiedad StCommissPercentage.
		/// </summary>
        private decimal? _stCommissPercentage = null;
		/// <summary>
		/// Atributo para la propiedad CurrentTo.
		/// </summary>
        private DateTime? _currentTo = null;
		/// <summary>
		/// Atributo para la propiedad AdditCommissPercentage.
		/// </summary>
        private decimal? _additCommissPercentage = null;
		/// <summary>
		/// Atributo para la propiedad SchCommissPercentage.
		/// </summary>
        private decimal? _schCommissPercentage = null;
		/// <summary>
		/// Atributo para la propiedad StDisCommissPercentage.
		/// </summary>
        private decimal? _stDisCommissPercentage = null;
		/// <summary>
		/// Atributo para la propiedad AdditDisCommissPercentage.
		/// </summary>
        private decimal? _additDisCommissPercentage = null;
		/// <summary>
		/// Atributo para la propiedad IncCommissAdFacPercentage.
		/// </summary>
        private decimal? _incCommissAdFacPercentage = null;
		/// <summary>
		/// Atributo para la propiedad DimCommissAdFacPercentage.
		/// </summary>
        private decimal? _dimCommissAdFacPercentage = null;
		/// <summary>
		/// Atributo para la propiedad ScriptId.
		/// </summary>
        private int? _scriptId = null;
		/// <summary>
		/// Atributo para la propiedad RuleSetId.
		/// </summary>
        private int? _ruleSetId = null;
		/// <summary>
		/// Atributo para la propiedad AtCoverGroupId.
		/// </summary>
        private int _atCoverGroupId;
		/// <summary>
		/// Atributo para la propiedad PreRuleSetId.
		/// </summary>
        private int? _preRuleSetId = null;
		/// <summary>
		/// Atributo para la propiedad Version.
		/// </summary>
        private int? _version = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="productId">ProductId key property.</param>
	    public Product(int productId):
			this(Product.CreatePrimaryKey(productId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Product(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProductId.
		/// </summary>
		/// <value>Propiedad ProductId.</value>
	    [
		DescriptionKey("PRODUCT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PRODUCT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProductId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ProductId];
		    }
		    set
		    {
				this._primaryKey[Properties.ProductId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SmallDescription.
		/// </summary>
		/// <value>Propiedad SmallDescription.</value>
	    [
		DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SMALL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SmallDescription
	    {
		    get
		    {
			    return this._smallDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
				}
				this._smallDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsGreen.
		/// </summary>
		/// <value>Propiedad IsGreen.</value>
	    [
		DescriptionKey("IS_GREEN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_GREEN", DbType=System.Data.DbType.String),
	    ]
        public bool IsGreen
	    {
		    get
		    {
			    return this._isGreen;
		    }
		    set
		    {
				this._isGreen = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentFrom.
		/// </summary>
		/// <value>Propiedad CurrentFrom.</value>
	    [
		DescriptionKey("CURRENT_FROM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENT_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime CurrentFrom
	    {
		    get
		    {
			    return this._currentFrom;
		    }
		    set
		    {
				this._currentFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StCommissPercentage.
		/// </summary>
		/// <value>Propiedad StCommissPercentage.</value>
	    [
		DescriptionKey("ST_COMMISS_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ST_COMMISS_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? StCommissPercentage
	    {
		    get
		    {
			    return this._stCommissPercentage;
		    }
		    set
		    {
				this._stCommissPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentTo.
		/// </summary>
		/// <value>Propiedad CurrentTo.</value>
	    [
		DescriptionKey("CURRENT_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentTo
	    {
		    get
		    {
			    return this._currentTo;
		    }
		    set
		    {
				this._currentTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AdditCommissPercentage.
		/// </summary>
		/// <value>Propiedad AdditCommissPercentage.</value>
	    [
		DescriptionKey("ADDIT_COMMISS_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ADDIT_COMMISS_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AdditCommissPercentage
	    {
		    get
		    {
			    return this._additCommissPercentage;
		    }
		    set
		    {
				this._additCommissPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SchCommissPercentage.
		/// </summary>
		/// <value>Propiedad SchCommissPercentage.</value>
	    [
		DescriptionKey("SCH_COMMISS_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SCH_COMMISS_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? SchCommissPercentage
	    {
		    get
		    {
			    return this._schCommissPercentage;
		    }
		    set
		    {
				this._schCommissPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StDisCommissPercentage.
		/// </summary>
		/// <value>Propiedad StDisCommissPercentage.</value>
	    [
		DescriptionKey("ST_DIS_COMMISS_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ST_DIS_COMMISS_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? StDisCommissPercentage
	    {
		    get
		    {
			    return this._stDisCommissPercentage;
		    }
		    set
		    {
				this._stDisCommissPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AdditDisCommissPercentage.
		/// </summary>
		/// <value>Propiedad AdditDisCommissPercentage.</value>
	    [
		DescriptionKey("ADDIT_DIS_COMMISS_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ADDIT_DIS_COMMISS_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AdditDisCommissPercentage
	    {
		    get
		    {
			    return this._additDisCommissPercentage;
		    }
		    set
		    {
				this._additDisCommissPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncCommissAdFacPercentage.
		/// </summary>
		/// <value>Propiedad IncCommissAdFacPercentage.</value>
	    [
		DescriptionKey("INC_COMMISS_AD_FAC_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INC_COMMISS_AD_FAC_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncCommissAdFacPercentage
	    {
		    get
		    {
			    return this._incCommissAdFacPercentage;
		    }
		    set
		    {
				this._incCommissAdFacPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DimCommissAdFacPercentage.
		/// </summary>
		/// <value>Propiedad DimCommissAdFacPercentage.</value>
	    [
		DescriptionKey("DIM_COMMISS_AD_FAC_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DIM_COMMISS_AD_FAC_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? DimCommissAdFacPercentage
	    {
		    get
		    {
			    return this._dimCommissAdFacPercentage;
		    }
		    set
		    {
				this._dimCommissAdFacPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ScriptId.
		/// </summary>
		/// <value>Propiedad ScriptId.</value>
	    [
		DescriptionKey("SCRIPT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SCRIPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ScriptId
	    {
		    get
		    {
			    return this._scriptId;
		    }
		    set
		    {
				this._scriptId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RuleSetId.
		/// </summary>
		/// <value>Propiedad RuleSetId.</value>
	    [
		DescriptionKey("RULE_SET_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RULE_SET_ID", DbType=System.Data.DbType.String),
	    ]
        public int? RuleSetId
	    {
		    get
		    {
			    return this._ruleSetId;
		    }
		    set
		    {
				this._ruleSetId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AtCoverGroupId.
		/// </summary>
		/// <value>Propiedad AtCoverGroupId.</value>
	    [
		DescriptionKey("AT_COVER_GROUP_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AT_COVER_GROUP_ID", DbType=System.Data.DbType.String),
	    ]
        public int AtCoverGroupId
	    {
		    get
		    {
			    return this._atCoverGroupId;
		    }
		    set
		    {
				this._atCoverGroupId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PreRuleSetId.
		/// </summary>
		/// <value>Propiedad PreRuleSetId.</value>
	    [
		DescriptionKey("PRE_RULE_SET_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PRE_RULE_SET_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PreRuleSetId
	    {
		    get
		    {
			    return this._preRuleSetId;
		    }
		    set
		    {
				this._preRuleSetId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Version.
		/// </summary>
		/// <value>Propiedad Version.</value>
	    [
		DescriptionKey("VERSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VERSION", DbType=System.Data.DbType.String),
	    ]
        public int? Version
	    {
		    get
		    {
			    return this._version;
		    }
		    set
		    {
				this._version = value;
			}
	    }

    }
}