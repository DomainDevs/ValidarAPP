/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AutomaticDebitServices.EEProvider.LogBankResponse.dict v1.0
 * FileSize=13358 Header=280 CRC=3991734223
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AutomaticDebitServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad LogBankResponse.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AutomaticDebitServices.EEProvider.LogBankResponse.dict"),
    Serializable(),
    DescriptionKey("LOG_BANK_RESPONSE_ENTITY"),
    TableMap(TableName="LOG_BANK_RESPONSE", Schema="ACC"),
    ]
    public partial class LogBankResponse :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LogBankResponseId = "LogBankResponseId";
			public static readonly string BankNetworkId = "BankNetworkId";
			public static readonly string LotNumber = "LotNumber";
			public static readonly string LineNumber = "LineNumber";
			public static readonly string CardAccountNumber = "CardAccountNumber";
			public static readonly string VoucherNumber = "VoucherNumber";
			public static readonly string RejectionCode = "RejectionCode";
			public static readonly string ApplicationDate = "ApplicationDate";
			public static readonly string PremiumAmount = "PremiumAmount";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string AuthorizationNumber = "AuthorizationNumber";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string IsPrenotificacion = "IsPrenotificacion";
			public static readonly string DescriptionError = "DescriptionError";
			public static readonly string UserCode = "UserCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="logBankResponseId">Propiedad clave LogBankResponseId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int logBankResponseId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LogBankResponseId, logBankResponseId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="logBankResponseId">Propiedad clave LogBankResponseId.</param>
		public static PrimaryKey CreatePrimaryKey(int logBankResponseId)
	    {
			return InternalCreatePrimaryKey<LogBankResponse>(logBankResponseId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BankNetworkId.
		/// </summary>
        private int? _bankNetworkId = null;
		/// <summary>
		/// Atributo para la propiedad LotNumber.
		/// </summary>
        private string _lotNumber = null;
		/// <summary>
		/// Atributo para la propiedad LineNumber.
		/// </summary>
        private int? _lineNumber = null;
		/// <summary>
		/// Atributo para la propiedad CardAccountNumber.
		/// </summary>
        private string _cardAccountNumber = null;
		/// <summary>
		/// Atributo para la propiedad VoucherNumber.
		/// </summary>
        private string _voucherNumber = null;
		/// <summary>
		/// Atributo para la propiedad RejectionCode.
		/// </summary>
        private string _rejectionCode = null;
		/// <summary>
		/// Atributo para la propiedad ApplicationDate.
		/// </summary>
        private DateTime? _applicationDate = null;
		/// <summary>
		/// Atributo para la propiedad PremiumAmount.
		/// </summary>
        private decimal? _premiumAmount = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad AuthorizationNumber.
		/// </summary>
        private string _authorizationNumber = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad IsPrenotificacion.
		/// </summary>
        private bool? _isPrenotificacion = null;
		/// <summary>
		/// Atributo para la propiedad DescriptionError.
		/// </summary>
        private string _descriptionError = null;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int? _userCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="logBankResponseId">LogBankResponseId key property.</param>
	    public LogBankResponse(int logBankResponseId):
			this(LogBankResponse.CreatePrimaryKey(logBankResponseId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public LogBankResponse(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LogBankResponseId.
		/// </summary>
		/// <value>Propiedad LogBankResponseId.</value>
	    [
		DescriptionKey("LOG_BANK_RESPONSE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LOG_BANK_RESPONSE_ID", DbType=System.Data.DbType.String),
	    ]
        public int LogBankResponseId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LogBankResponseId];
		    }
		    set
		    {
				this._primaryKey[Properties.LogBankResponseId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankNetworkId.
		/// </summary>
		/// <value>Propiedad BankNetworkId.</value>
	    [
		DescriptionKey("BANK_NETWORK_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_NETWORK_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BankNetworkId
	    {
		    get
		    {
			    return this._bankNetworkId;
		    }
		    set
		    {
				this._bankNetworkId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LotNumber.
		/// </summary>
		/// <value>Propiedad LotNumber.</value>
	    [
		DescriptionKey("LOT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string LotNumber
	    {
		    get
		    {
			    return this._lotNumber;
		    }
		    set
		    {
				this._lotNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LineNumber.
		/// </summary>
		/// <value>Propiedad LineNumber.</value>
	    [
		DescriptionKey("LINE_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LINE_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? LineNumber
	    {
		    get
		    {
			    return this._lineNumber;
		    }
		    set
		    {
				this._lineNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CardAccountNumber.
		/// </summary>
		/// <value>Propiedad CardAccountNumber.</value>
	    [
		DescriptionKey("CARD_ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CARD_ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string CardAccountNumber
	    {
		    get
		    {
			    return this._cardAccountNumber;
		    }
		    set
		    {
				this._cardAccountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad VoucherNumber.
		/// </summary>
		/// <value>Propiedad VoucherNumber.</value>
	    [
		DescriptionKey("VOUCHER_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VOUCHER_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string VoucherNumber
	    {
		    get
		    {
			    return this._voucherNumber;
		    }
		    set
		    {
				this._voucherNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectionCode.
		/// </summary>
		/// <value>Propiedad RejectionCode.</value>
	    [
		DescriptionKey("REJECTION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REJECTION_CODE", DbType=System.Data.DbType.String),
	    ]
        public string RejectionCode
	    {
		    get
		    {
			    return this._rejectionCode;
		    }
		    set
		    {
				this._rejectionCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ApplicationDate.
		/// </summary>
		/// <value>Propiedad ApplicationDate.</value>
	    [
		DescriptionKey("APPLICATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="APPLICATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ApplicationDate
	    {
		    get
		    {
			    return this._applicationDate;
		    }
		    set
		    {
				this._applicationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PremiumAmount.
		/// </summary>
		/// <value>Propiedad PremiumAmount.</value>
	    [
		DescriptionKey("PREMIUM_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREMIUM_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PremiumAmount
	    {
		    get
		    {
			    return this._premiumAmount;
		    }
		    set
		    {
				this._premiumAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AuthorizationNumber.
		/// </summary>
		/// <value>Propiedad AuthorizationNumber.</value>
	    [
		DescriptionKey("AUTHORIZATION_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AUTHORIZATION_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AuthorizationNumber
	    {
		    get
		    {
			    return this._authorizationNumber;
		    }
		    set
		    {
				this._authorizationNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsPrenotificacion.
		/// </summary>
		/// <value>Propiedad IsPrenotificacion.</value>
	    [
		DescriptionKey("IS_PRENOTIFICACION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_PRENOTIFICACION", DbType=System.Data.DbType.String),
	    ]
        public bool? IsPrenotificacion
	    {
		    get
		    {
			    return this._isPrenotificacion;
		    }
		    set
		    {
				this._isPrenotificacion = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DescriptionError.
		/// </summary>
		/// <value>Propiedad DescriptionError.</value>
	    [
		DescriptionKey("DESCRIPTION_ERROR_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION_ERROR", DbType=System.Data.DbType.String),
	    ]
        public string DescriptionError
	    {
		    get
		    {
			    return this._descriptionError;
		    }
		    set
		    {
				this._descriptionError = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

    }
}