/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AutomaticDebitServices.EEProvider.CouponsStatusView.dict v1.0
 * FileSize=11849 Header=279 CRC=2729577737
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AutomaticDebitServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CouponsStatusV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AutomaticDebitServices.EEProvider.CouponsStatusView.dict"),
    Serializable(),
    DescriptionKey("COUPONS_STATUS_V_ENTITY"),
    TableMap(TableName="COUPONS_STATUS_V", Schema="ACC"),
    ]
    public partial class CouponsStatusView :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ShipmentId = "ShipmentId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string BankNetworkCode = "BankNetworkCode";
			public static readonly string Description = "Description";
			public static readonly string ProcessDate = "ProcessDate";
			public static readonly string AutomaticDebitStatusCode = "AutomaticDebitStatusCode";
			public static readonly string DebitStatusDescription = "DebitStatusDescription";
			public static readonly string UserCode = "UserCode";
			public static readonly string AccountName = "AccountName";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="shipmentId">Propiedad clave ShipmentId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(string shipmentId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ShipmentId, shipmentId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="shipmentId">Propiedad clave ShipmentId.</param>
		public static PrimaryKey CreatePrimaryKey(string shipmentId)
	    {
			return InternalCreatePrimaryKey<CouponsStatusView>(shipmentId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int _branchCode;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad BankNetworkCode.
		/// </summary>
        private int? _bankNetworkCode = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad ProcessDate.
		/// </summary>
        private DateTime? _processDate = null;
		/// <summary>
		/// Atributo para la propiedad AutomaticDebitStatusCode.
		/// </summary>
        private int? _automaticDebitStatusCode = null;
		/// <summary>
		/// Atributo para la propiedad DebitStatusDescription.
		/// </summary>
        private string _debitStatusDescription = null;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int? _userCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
		
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="shipmentId">ShipmentId key property.</param>
	    public CouponsStatusView(string shipmentId):
			this(CouponsStatusView.CreatePrimaryKey(shipmentId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CouponsStatusView(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ShipmentId.
		/// </summary>
		/// <value>Propiedad ShipmentId.</value>
	    [
		DescriptionKey("SHIPMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SHIPMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public string ShipmentId
	    {
		    get
		    {
				return (string)this._primaryKey[Properties.ShipmentId];
		    }
		    set
		    {
				this._primaryKey[Properties.ShipmentId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankNetworkCode.
		/// </summary>
		/// <value>Propiedad BankNetworkCode.</value>
	    [
		DescriptionKey("BANK_NETWORK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_NETWORK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankNetworkCode
	    {
		    get
		    {
			    return this._bankNetworkCode;
		    }
		    set
		    {
				this._bankNetworkCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessDate.
		/// </summary>
		/// <value>Propiedad ProcessDate.</value>
	    [
		DescriptionKey("PROCESS_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCESS_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ProcessDate
	    {
		    get
		    {
			    return this._processDate;
		    }
		    set
		    {
				this._processDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AutomaticDebitStatusCode.
		/// </summary>
		/// <value>Propiedad AutomaticDebitStatusCode.</value>
	    [
		DescriptionKey("AUTOMATIC_DEBIT_STATUS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AUTOMATIC_DEBIT_STATUS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AutomaticDebitStatusCode
	    {
		    get
		    {
			    return this._automaticDebitStatusCode;
		    }
		    set
		    {
				this._automaticDebitStatusCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DebitStatusDescription.
		/// </summary>
		/// <value>Propiedad DebitStatusDescription.</value>
	    [
		DescriptionKey("DEBIT_STATUS_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DEBIT_STATUS_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string DebitStatusDescription
	    {
		    get
		    {
			    return this._debitStatusDescription;
		    }
		    set
		    {
				this._debitStatusDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
				}
				this._accountName = value;
			}
	    }
    }
}