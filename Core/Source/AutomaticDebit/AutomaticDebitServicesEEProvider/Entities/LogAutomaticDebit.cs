/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AutomaticDebitServices.EEProvider.LogAutomaticDebit.dict v1.0
 * FileSize=10912 Header=282 CRC=3214313754
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AutomaticDebitServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad LogAutomaticDebit.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AutomaticDebitServices.EEProvider.LogAutomaticDebit.dict"),
    Serializable(),
    DescriptionKey("LOG_AUTOMATIC_DEBIT_ENTITY"),
    TableMap(TableName="LOG_AUTOMATIC_DEBIT", Schema="ACC"),
    ]
    public partial class LogAutomaticDebit :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LogAutomaticDebitId = "LogAutomaticDebitId";
			public static readonly string LotNumber = "LotNumber";
			public static readonly string BankNetworkId = "BankNetworkId";
			public static readonly string ProcessTypeId = "ProcessTypeId";
			public static readonly string Description = "Description";
			public static readonly string UserCode = "UserCode";
			public static readonly string StartDate = "StartDate";
			public static readonly string RecordsNumber = "RecordsNumber";
			public static readonly string RecordsProcessed = "RecordsProcessed";
			public static readonly string RecordsFailed = "RecordsFailed";
			public static readonly string EndDate = "EndDate";
			public static readonly string Status = "Status";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="logAutomaticDebitId">Propiedad clave LogAutomaticDebitId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int logAutomaticDebitId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LogAutomaticDebitId, logAutomaticDebitId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="logAutomaticDebitId">Propiedad clave LogAutomaticDebitId.</param>
		public static PrimaryKey CreatePrimaryKey(int logAutomaticDebitId)
	    {
			return InternalCreatePrimaryKey<LogAutomaticDebit>(logAutomaticDebitId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad LotNumber.
		/// </summary>
        private string _lotNumber = null;
		/// <summary>
		/// Atributo para la propiedad BankNetworkId.
		/// </summary>
        private int? _bankNetworkId = null;
		/// <summary>
		/// Atributo para la propiedad ProcessTypeId.
		/// </summary>
        private int? _processTypeId = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int? _userCode = null;
		/// <summary>
		/// Atributo para la propiedad StartDate.
		/// </summary>
        private DateTime? _startDate = null;
		/// <summary>
		/// Atributo para la propiedad RecordsNumber.
		/// </summary>
        private int? _recordsNumber = null;
		/// <summary>
		/// Atributo para la propiedad RecordsProcessed.
		/// </summary>
        private int? _recordsProcessed = null;
		/// <summary>
		/// Atributo para la propiedad RecordsFailed.
		/// </summary>
        private int? _recordsFailed = null;
		/// <summary>
		/// Atributo para la propiedad EndDate.
		/// </summary>
        private DateTime? _endDate = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="logAutomaticDebitId">LogAutomaticDebitId key property.</param>
	    public LogAutomaticDebit(int logAutomaticDebitId):
			this(LogAutomaticDebit.CreatePrimaryKey(logAutomaticDebitId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public LogAutomaticDebit(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LogAutomaticDebitId.
		/// </summary>
		/// <value>Propiedad LogAutomaticDebitId.</value>
	    [
		DescriptionKey("LOG_AUTOMATIC_DEBIT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LOG_AUTOMATIC_DEBIT_ID", DbType=System.Data.DbType.String),
	    ]
        public int LogAutomaticDebitId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LogAutomaticDebitId];
		    }
		    set
		    {
				this._primaryKey[Properties.LogAutomaticDebitId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LotNumber.
		/// </summary>
		/// <value>Propiedad LotNumber.</value>
	    [
		DescriptionKey("LOT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string LotNumber
	    {
		    get
		    {
			    return this._lotNumber;
		    }
		    set
		    {
				this._lotNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankNetworkId.
		/// </summary>
		/// <value>Propiedad BankNetworkId.</value>
	    [
		DescriptionKey("BANK_NETWORK_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_NETWORK_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BankNetworkId
	    {
		    get
		    {
			    return this._bankNetworkId;
		    }
		    set
		    {
				this._bankNetworkId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessTypeId.
		/// </summary>
		/// <value>Propiedad ProcessTypeId.</value>
	    [
		DescriptionKey("PROCESS_TYPE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCESS_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ProcessTypeId
	    {
		    get
		    {
			    return this._processTypeId;
		    }
		    set
		    {
				this._processTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StartDate.
		/// </summary>
		/// <value>Propiedad StartDate.</value>
	    [
		DescriptionKey("START_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="START_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? StartDate
	    {
		    get
		    {
			    return this._startDate;
		    }
		    set
		    {
				this._startDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RecordsNumber.
		/// </summary>
		/// <value>Propiedad RecordsNumber.</value>
	    [
		DescriptionKey("RECORDS_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECORDS_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? RecordsNumber
	    {
		    get
		    {
			    return this._recordsNumber;
		    }
		    set
		    {
				this._recordsNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RecordsProcessed.
		/// </summary>
		/// <value>Propiedad RecordsProcessed.</value>
	    [
		DescriptionKey("RECORDS_PROCESSED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECORDS_PROCESSED", DbType=System.Data.DbType.String),
	    ]
        public int? RecordsProcessed
	    {
		    get
		    {
			    return this._recordsProcessed;
		    }
		    set
		    {
				this._recordsProcessed = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RecordsFailed.
		/// </summary>
		/// <value>Propiedad RecordsFailed.</value>
	    [
		DescriptionKey("RECORDS_FAILED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECORDS_FAILED", DbType=System.Data.DbType.String),
	    ]
        public int? RecordsFailed
	    {
		    get
		    {
			    return this._recordsFailed;
		    }
		    set
		    {
				this._recordsFailed = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndDate.
		/// </summary>
		/// <value>Propiedad EndDate.</value>
	    [
		DescriptionKey("END_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="END_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EndDate
	    {
		    get
		    {
			    return this._endDate;
		    }
		    set
		    {
				this._endDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

    }
}