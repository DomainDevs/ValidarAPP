/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReconciliationServices.EEProvider.BankStatementView.dict v1.0
 * FileSize=17129 Header=279 CRC=2856833485
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReconciliationServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad BankStatementV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReconciliationServices.EEProvider.BankStatementView.dict"),
    Serializable(),
    DescriptionKey("BANK_STATEMENT_V_ENTITY"),
    TableMap(TableName="BANK_STATEMENT_V", Schema="GL"),
    ]
    public partial class BankStatementView :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BankAccountCompanyCode = "BankAccountCompanyCode";
			public static readonly string Amount = "Amount";
			public static readonly string BankStatementId = "BankStatementId";
			public static readonly string CityCode = "CityCode";
			public static readonly string ReconciliationCode = "ReconciliationCode";
			public static readonly string ReconciliationDate = "ReconciliationDate";
			public static readonly string Description = "Description";
			public static readonly string CutDate = "CutDate";
			public static readonly string MovementDate = "MovementDate";
			public static readonly string ProcessNumber = "ProcessNumber";
			public static readonly string ProcessDate = "ProcessDate";
			public static readonly string BankReconciliationCode = "BankReconciliationCode";
			public static readonly string SourceBranchCode = "SourceBranchCode";
			public static readonly string ThirdDescription = "ThirdDescription";
			public static readonly string VoucherNumber = "VoucherNumber";
			public static readonly string UserCode = "UserCode";
			public static readonly string MovementDescription = "MovementDescription";
			public static readonly string DebitBank = "DebitBank";
			public static readonly string DebitCompany = "DebitCompany";
			public static readonly string BranchDescription = "BranchDescription";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="bankStatementId">Propiedad clave BankStatementId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int bankStatementId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BankStatementId, bankStatementId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="bankStatementId">Propiedad clave BankStatementId.</param>
		public static PrimaryKey CreatePrimaryKey(int bankStatementId)
	    {
			return InternalCreatePrimaryKey<BankStatementView>(bankStatementId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BankAccountCompanyCode.
		/// </summary>
        private int? _bankAccountCompanyCode = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad CityCode.
		/// </summary>
        private int? _cityCode = null;
		/// <summary>
		/// Atributo para la propiedad ReconciliationCode.
		/// </summary>
        private int? _reconciliationCode = null;
		/// <summary>
		/// Atributo para la propiedad ReconciliationDate.
		/// </summary>
        private DateTime? _reconciliationDate = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad CutDate.
		/// </summary>
        private DateTime? _cutDate = null;
		/// <summary>
		/// Atributo para la propiedad MovementDate.
		/// </summary>
        private DateTime? _movementDate = null;
		/// <summary>
		/// Atributo para la propiedad ProcessNumber.
		/// </summary>
        private int? _processNumber = null;
		/// <summary>
		/// Atributo para la propiedad ProcessDate.
		/// </summary>
        private DateTime? _processDate = null;
		/// <summary>
		/// Atributo para la propiedad BankReconciliationCode.
		/// </summary>
        private int? _bankReconciliationCode = null;
		/// <summary>
		/// Atributo para la propiedad SourceBranchCode.
		/// </summary>
        private int? _sourceBranchCode = null;
		/// <summary>
		/// Atributo para la propiedad ThirdDescription.
		/// </summary>
        private string _thirdDescription = null;
		/// <summary>
		/// Atributo para la propiedad VoucherNumber.
		/// </summary>
        private string _voucherNumber = null;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int? _userCode = null;
		/// <summary>
		/// Atributo para la propiedad MovementDescription.
		/// </summary>
        private string _movementDescription = null;
		/// <summary>
		/// Atributo para la propiedad DebitBank.
		/// </summary>
        private bool? _debitBank = null;
		/// <summary>
		/// Atributo para la propiedad DebitCompany.
		/// </summary>
        private bool? _debitCompany = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="bankStatementId">BankStatementId key property.</param>
	    public BankStatementView(int bankStatementId):
			this(BankStatementView.CreatePrimaryKey(bankStatementId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BankStatementView(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankAccountCompanyCode.
		/// </summary>
		/// <value>Propiedad BankAccountCompanyCode.</value>
	    [
		DescriptionKey("BANK_ACCOUNT_COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_ACCOUNT_COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankAccountCompanyCode
	    {
		    get
		    {
			    return this._bankAccountCompanyCode;
		    }
		    set
		    {
				this._bankAccountCompanyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankStatementId.
		/// </summary>
		/// <value>Propiedad BankStatementId.</value>
	    [
		DescriptionKey("BANK_STATEMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_STATEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int BankStatementId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BankStatementId];
		    }
		    set
		    {
				this._primaryKey[Properties.BankStatementId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CityCode.
		/// </summary>
		/// <value>Propiedad CityCode.</value>
	    [
		DescriptionKey("CITY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CityCode
	    {
		    get
		    {
			    return this._cityCode;
		    }
		    set
		    {
				this._cityCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationCode.
		/// </summary>
		/// <value>Propiedad ReconciliationCode.</value>
	    [
		DescriptionKey("RECONCILIATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECONCILIATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ReconciliationCode
	    {
		    get
		    {
			    return this._reconciliationCode;
		    }
		    set
		    {
				this._reconciliationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationDate.
		/// </summary>
		/// <value>Propiedad ReconciliationDate.</value>
	    [
		DescriptionKey("RECONCILIATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECONCILIATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ReconciliationDate
	    {
		    get
		    {
			    return this._reconciliationDate;
		    }
		    set
		    {
				this._reconciliationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CutDate.
		/// </summary>
		/// <value>Propiedad CutDate.</value>
	    [
		DescriptionKey("CUT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CUT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CutDate
	    {
		    get
		    {
			    return this._cutDate;
		    }
		    set
		    {
				this._cutDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MovementDate.
		/// </summary>
		/// <value>Propiedad MovementDate.</value>
	    [
		DescriptionKey("MOVEMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MOVEMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? MovementDate
	    {
		    get
		    {
			    return this._movementDate;
		    }
		    set
		    {
				this._movementDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessNumber.
		/// </summary>
		/// <value>Propiedad ProcessNumber.</value>
	    [
		DescriptionKey("PROCESS_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCESS_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? ProcessNumber
	    {
		    get
		    {
			    return this._processNumber;
		    }
		    set
		    {
				this._processNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessDate.
		/// </summary>
		/// <value>Propiedad ProcessDate.</value>
	    [
		DescriptionKey("PROCESS_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCESS_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ProcessDate
	    {
		    get
		    {
			    return this._processDate;
		    }
		    set
		    {
				this._processDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankReconciliationCode.
		/// </summary>
		/// <value>Propiedad BankReconciliationCode.</value>
	    [
		DescriptionKey("BANK_RECONCILIATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_RECONCILIATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankReconciliationCode
	    {
		    get
		    {
			    return this._bankReconciliationCode;
		    }
		    set
		    {
				this._bankReconciliationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SourceBranchCode.
		/// </summary>
		/// <value>Propiedad SourceBranchCode.</value>
	    [
		DescriptionKey("SOURCE_BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SOURCE_BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SourceBranchCode
	    {
		    get
		    {
			    return this._sourceBranchCode;
		    }
		    set
		    {
				this._sourceBranchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ThirdDescription.
		/// </summary>
		/// <value>Propiedad ThirdDescription.</value>
	    [
		DescriptionKey("THIRD_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="THIRD_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string ThirdDescription
	    {
		    get
		    {
			    return this._thirdDescription;
		    }
		    set
		    {
				this._thirdDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad VoucherNumber.
		/// </summary>
		/// <value>Propiedad VoucherNumber.</value>
	    [
		DescriptionKey("VOUCHER_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VOUCHER_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string VoucherNumber
	    {
		    get
		    {
			    return this._voucherNumber;
		    }
		    set
		    {
				this._voucherNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MovementDescription.
		/// </summary>
		/// <value>Propiedad MovementDescription.</value>
	    [
		DescriptionKey("MOVEMENT_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="MOVEMENT_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string MovementDescription
	    {
		    get
		    {
			    return this._movementDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.MovementDescription);
				}
				this._movementDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DebitBank.
		/// </summary>
		/// <value>Propiedad DebitBank.</value>
	    [
		DescriptionKey("DEBIT_BANK_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DEBIT_BANK", DbType=System.Data.DbType.String),
	    ]
        public bool? DebitBank
	    {
		    get
		    {
			    return this._debitBank;
		    }
		    set
		    {
				this._debitBank = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DebitCompany.
		/// </summary>
		/// <value>Propiedad DebitCompany.</value>
	    [
		DescriptionKey("DEBIT_COMPANY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DEBIT_COMPANY", DbType=System.Data.DbType.String),
	    ]
        public bool? DebitCompany
	    {
		    get
		    {
			    return this._debitCompany;
		    }
		    set
		    {
				this._debitCompany = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

    }
}