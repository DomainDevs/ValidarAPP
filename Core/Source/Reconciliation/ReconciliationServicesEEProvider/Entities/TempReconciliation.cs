/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReconciliationServices.EEProvider.TempReconciliation.dict v1.0
 * FileSize=13981 Header=283 CRC=1899964366
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReconciliationServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad TempReconciliation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReconciliationServices.EEProvider.TempReconciliation.dict"),
    Serializable(),
    DescriptionKey("TEMP_RECONCILIATION_ENTITY"),
    TableMap(TableName="TEMP_RECONCILIATION", Schema="GL"),
    ]
    public partial class TempReconciliation :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ReconciliationCode = "ReconciliationCode";
			public static readonly string JournalEntryCode = "JournalEntryCode";
			public static readonly string LedgerEntryCode = "LedgerEntryCode";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string BankStatementCode = "BankStatementCode";
			public static readonly string JournalEntryCdInt = "JournalEntryCdInt";
			public static readonly string LedgerEntryCdInt = "LedgerEntryCdInt";
			public static readonly string BankStatementCdInt = "BankStatementCdInt";
			public static readonly string UserCode = "UserCode";
			public static readonly string ReconciliationType = "ReconciliationType";
			public static readonly string ReconciliationDate = "ReconciliationDate";
			public static readonly string GroupNumber = "GroupNumber";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="reconciliationCode">Propiedad clave ReconciliationCode.</param>
		/// <param name="journalEntryCode">Propiedad clave JournalEntryCode.</param>
		/// <param name="ledgerEntryCode">Propiedad clave LedgerEntryCode.</param>
		/// <param name="accountingNature">Propiedad clave AccountingNature.</param>
		/// <param name="bankStatementCode">Propiedad clave BankStatementCode.</param>
		/// <param name="journalEntryCdInt">Propiedad clave JournalEntryCdInt.</param>
		/// <param name="ledgerEntryCdInt">Propiedad clave LedgerEntryCdInt.</param>
		/// <param name="bankStatementCdInt">Propiedad clave BankStatementCdInt.</param>
		/// <param name="userCode">Propiedad clave UserCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int reconciliationCode, int journalEntryCode, int ledgerEntryCode, int accountingNature, int bankStatementCode, int journalEntryCdInt, int ledgerEntryCdInt, int bankStatementCdInt, int userCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ReconciliationCode, reconciliationCode);
		    keys.Add(Properties.JournalEntryCode, journalEntryCode);
		    keys.Add(Properties.LedgerEntryCode, ledgerEntryCode);
		    keys.Add(Properties.AccountingNature, accountingNature);
		    keys.Add(Properties.BankStatementCode, bankStatementCode);
		    keys.Add(Properties.JournalEntryCdInt, journalEntryCdInt);
		    keys.Add(Properties.LedgerEntryCdInt, ledgerEntryCdInt);
		    keys.Add(Properties.BankStatementCdInt, bankStatementCdInt);
		    keys.Add(Properties.UserCode, userCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="reconciliationCode">Propiedad clave ReconciliationCode.</param>
		/// <param name="journalEntryCode">Propiedad clave JournalEntryCode.</param>
		/// <param name="ledgerEntryCode">Propiedad clave LedgerEntryCode.</param>
		/// <param name="accountingNature">Propiedad clave AccountingNature.</param>
		/// <param name="bankStatementCode">Propiedad clave BankStatementCode.</param>
		/// <param name="journalEntryCdInt">Propiedad clave JournalEntryCdInt.</param>
		/// <param name="ledgerEntryCdInt">Propiedad clave LedgerEntryCdInt.</param>
		/// <param name="bankStatementCdInt">Propiedad clave BankStatementCdInt.</param>
		/// <param name="userCode">Propiedad clave UserCode.</param>
		public static PrimaryKey CreatePrimaryKey(int reconciliationCode, int journalEntryCode, int ledgerEntryCode, int accountingNature, int bankStatementCode, int journalEntryCdInt, int ledgerEntryCdInt, int bankStatementCdInt, int userCode)
	    {
			return InternalCreatePrimaryKey<TempReconciliation>(reconciliationCode, journalEntryCode, ledgerEntryCode, accountingNature, bankStatementCode, journalEntryCdInt, ledgerEntryCdInt, bankStatementCdInt, userCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ReconciliationType.
		/// </summary>
        private string _reconciliationType = null;
		/// <summary>
		/// Atributo para la propiedad ReconciliationDate.
		/// </summary>
        private DateTime _reconciliationDate;
		/// <summary>
		/// Atributo para la propiedad GroupNumber.
		/// </summary>
        private int? _groupNumber = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="reconciliationCode">ReconciliationCode key property.</param>
		/// <param name="journalEntryCode">JournalEntryCode key property.</param>
		/// <param name="ledgerEntryCode">LedgerEntryCode key property.</param>
		/// <param name="accountingNature">AccountingNature key property.</param>
		/// <param name="bankStatementCode">BankStatementCode key property.</param>
		/// <param name="journalEntryCdInt">JournalEntryCdInt key property.</param>
		/// <param name="ledgerEntryCdInt">LedgerEntryCdInt key property.</param>
		/// <param name="bankStatementCdInt">BankStatementCdInt key property.</param>
		/// <param name="userCode">UserCode key property.</param>
	    public TempReconciliation(int reconciliationCode, int journalEntryCode, int ledgerEntryCode, int accountingNature, int bankStatementCode, int journalEntryCdInt, int ledgerEntryCdInt, int bankStatementCdInt, int userCode):
			this(TempReconciliation.CreatePrimaryKey(reconciliationCode, journalEntryCode, ledgerEntryCode, accountingNature, bankStatementCode, journalEntryCdInt, ledgerEntryCdInt, bankStatementCdInt, userCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempReconciliation(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationCode.
		/// </summary>
		/// <value>Propiedad ReconciliationCode.</value>
	    [
		DescriptionKey("RECONCILIATION_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RECONCILIATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int ReconciliationCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ReconciliationCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ReconciliationCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JournalEntryCode.
		/// </summary>
		/// <value>Propiedad JournalEntryCode.</value>
	    [
		DescriptionKey("JOURNAL_ENTRY_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="JOURNAL_ENTRY_CD", DbType=System.Data.DbType.String),
	    ]
        public int JournalEntryCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.JournalEntryCode];
		    }
		    set
		    {
				this._primaryKey[Properties.JournalEntryCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LedgerEntryCode.
		/// </summary>
		/// <value>Propiedad LedgerEntryCode.</value>
	    [
		DescriptionKey("LEDGER_ENTRY_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LEDGER_ENTRY_CD", DbType=System.Data.DbType.String),
	    ]
        public int LedgerEntryCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LedgerEntryCode];
		    }
		    set
		    {
				this._primaryKey[Properties.LedgerEntryCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int AccountingNature
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountingNature];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountingNature] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankStatementCode.
		/// </summary>
		/// <value>Propiedad BankStatementCode.</value>
	    [
		DescriptionKey("BANK_STATEMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_STATEMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int BankStatementCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BankStatementCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BankStatementCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JournalEntryCdInt.
		/// </summary>
		/// <value>Propiedad JournalEntryCdInt.</value>
	    [
		DescriptionKey("JOURNAL_ENTRY_CD_INT_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="JOURNAL_ENTRY_CD_INT", DbType=System.Data.DbType.String),
	    ]
        public int JournalEntryCdInt
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.JournalEntryCdInt];
		    }
		    set
		    {
				this._primaryKey[Properties.JournalEntryCdInt] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LedgerEntryCdInt.
		/// </summary>
		/// <value>Propiedad LedgerEntryCdInt.</value>
	    [
		DescriptionKey("LEDGER_ENTRY_CD_INT_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LEDGER_ENTRY_CD_INT", DbType=System.Data.DbType.String),
	    ]
        public int LedgerEntryCdInt
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LedgerEntryCdInt];
		    }
		    set
		    {
				this._primaryKey[Properties.LedgerEntryCdInt] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankStatementCdInt.
		/// </summary>
		/// <value>Propiedad BankStatementCdInt.</value>
	    [
		DescriptionKey("BANK_STATEMENT_CD_INT_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_STATEMENT_CD_INT", DbType=System.Data.DbType.String),
	    ]
        public int BankStatementCdInt
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BankStatementCdInt];
		    }
		    set
		    {
				this._primaryKey[Properties.BankStatementCdInt] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int UserCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.UserCode];
		    }
		    set
		    {
				this._primaryKey[Properties.UserCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationType.
		/// </summary>
		/// <value>Propiedad ReconciliationType.</value>
	    [
		DescriptionKey("RECONCILIATION_TYPE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RECONCILIATION_TYPE", DbType=System.Data.DbType.String),
	    ]
        public string ReconciliationType
	    {
		    get
		    {
			    return this._reconciliationType;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.ReconciliationType);
				}
				this._reconciliationType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationDate.
		/// </summary>
		/// <value>Propiedad ReconciliationDate.</value>
	    [
		DescriptionKey("RECONCILIATION_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RECONCILIATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime ReconciliationDate
	    {
		    get
		    {
			    return this._reconciliationDate;
		    }
		    set
		    {
				this._reconciliationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad GroupNumber.
		/// </summary>
		/// <value>Propiedad GroupNumber.</value>
	    [
		DescriptionKey("GROUP_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="GROUP_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? GroupNumber
	    {
		    get
		    {
			    return this._groupNumber;
		    }
		    set
		    {
				this._groupNumber = value;
			}
	    }

    }
}