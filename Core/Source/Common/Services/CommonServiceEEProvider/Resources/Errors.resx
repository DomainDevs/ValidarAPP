<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorCreateFile" xml:space="preserve">
    <value>Error Create File.</value>
  </data>
  <data name="ErrorCreateFileByType" xml:space="preserve">
    <value>Error Create File By Type</value>
  </data>
  <data name="ErrorCreateLineAssistanceText" xml:space="preserve">
    <value>Error Create Assistance Text</value>
  </data>
  <data name="ErrorCreateLineAssistanceType" xml:space="preserve">
    <value>Error Create Assistance Type</value>
  </data>
  <data name="ErrorCreateLineBussiness" xml:space="preserve">
    <value>Error Create LineBussiness</value>
  </data>
  <data name="ErrorCreatePrefixByLineBusiness" xml:space="preserve">
    <value>Error Create Prefix By LineBusiness</value>
  </data>
  <data name="ErrorCRUDProcessesForBranches" xml:space="preserve">
    <value>Error CRUD Processes For Branches</value>
  </data>
  <data name="ErrorCRUDProcessesForPrefix" xml:space="preserve">
    <value>ErrorCRUDProcessesForPrefix</value>
  </data>
  <data name="ErrorCRUDProcessesForSubBranches" xml:space="preserve">
    <value>Error CRUD Processes For SubBranches</value>
  </data>
  <data name="ErrorDecimalLength" xml:space="preserve">
    <value>{0} Column Only Allows Numbers With {1} Decimals</value>
  </data>
  <data name="ErrorDecimalPropertyLength" xml:space="preserve">
    <value>{0} Column Of {1} Template Not Has Length Parametrization</value>
  </data>
  <data name="ErrorDeleteChildJSON" xml:space="preserve">
    <value>Error Delete Child JSON</value>
  </data>
  <data name="ErrorDeleteItem" xml:space="preserve">
    <value>Error to delete item </value>
  </data>
  <data name="ErrorDeleteJSON" xml:space="preserve">
    <value>Error Delete JSON</value>
  </data>
  <data name="ErrorDuplicateIdentifiers" xml:space="preserve">
    <value>Duplicate Identifiers</value>
  </data>
  <data name="ErrorFieldIsMandatory" xml:space="preserve">
    <value>{0} Field Of {1} Template Is Mandatory</value>
  </data>
  <data name="ErrorFieldNotMatch" xml:space="preserve">
    <value>{0} Field Of {1} Template Not Match</value>
  </data>
  <data name="ErrorFileLoaded" xml:space="preserve">
    <value>The file doesn't correspond to the selected structure:</value>
  </data>
  <data name="ErrorGenerateAsynchronousProcessId" xml:space="preserve">
    <value>Error Generate Asynchronous Process Id</value>
  </data>
  <data name="ErrorGenerateFileLinebusiness" xml:space="preserve">
    <value>Error Generate File Linebusiness</value>
  </data>
  <data name="ErrorGenerateFileToAssistanceType" xml:space="preserve">
    <value>Error Generate File To Assistance Type</value>
  </data>
  <data name="ErrorGenerateFileToBranch" xml:space="preserve">
    <value>Error Generate File To Branch</value>
  </data>
  <data name="ErrorGenerateFileToPrefix" xml:space="preserve">
    <value>Error Generate File To Prefix</value>
  </data>
  <data name="ErrorGenerateFileToSubLinebusiness" xml:space="preserve">
    <value>Error Generate File To SubLinebusiness</value>
  </data>
  <data name="ErrorGetAllPrefix" xml:space="preserve">
    <value>Error Get All Prefix</value>
  </data>
  <data name="ErrorGetAllUserPointSale" xml:space="preserve">
    <value>Error Get All User Point Sale</value>
  </data>
  <data name="ErrorGetApplicationKey" xml:space="preserve">
    <value>Error Get Application Key</value>
  </data>
  <data name="ErrorGetAssetType" xml:space="preserve">
    <value>Error Get Asset Type</value>
  </data>
  <data name="ErrorGetAssistanceText" xml:space="preserve">
    <value>Error Get assistance text</value>
  </data>
  <data name="ErrorGetAssistanceType" xml:space="preserve">
    <value>Error Get assistance type</value>
  </data>
  <data name="ErrorGetAsynchronousProcessByIdentifier" xml:space="preserve">
    <value>Error Get Asynchronous Process By Identifier</value>
  </data>
  <data name="ErrorGetBanksByBankId" xml:space="preserve">
    <value>Error Get Banks By Bank Id</value>
  </data>
  <data name="ErrorGetBranchById" xml:space="preserve">
    <value>Error Get Branch By Id</value>
  </data>
  <data name="ErrorGetCities" xml:space="preserve">
    <value>Error Get Cities</value>
  </data>
  <data name="ErrorGetCitiesByCountryIdStateId" xml:space="preserve">
    <value>Error getting list of cities filtering by country and state</value>
  </data>
  <data name="ErrorGetCityByCityId" xml:space="preserve">
    <value>Error Get City By City Id</value>
  </data>
  <data name="ErrorGetCoInsurance" xml:space="preserve">
    <value>Error Get CoInsurance</value>
  </data>
  <data name="ErrorGetCollectiveFile" xml:space="preserve">
    <value>Error Get Collective File</value>
  </data>
  <data name="ErrorGetContractCategories" xml:space="preserve">
    <value>Error Get Contract Categories</value>
  </data>
  <data name="ErrorGetContractType" xml:space="preserve">
    <value>Error Get Contract Type</value>
  </data>
  <data name="ErrorGetCoServiceQuotationParameterBySourceCode" xml:space="preserve">
    <value>Error retrieving list of default parameters asocied to channel.</value>
  </data>
  <data name="ErrorGetCountryList" xml:space="preserve">
    <value>Error Get Country List</value>
  </data>
  <data name="ErrorGetCountryListLite" xml:space="preserve">
    <value>Error getting simple list of countries</value>
  </data>
  <data name="ErrorGetDate" xml:space="preserve">
    <value>Error Get Date</value>
  </data>
  <data name="ErrorGetEconomicActivitiesByEconomicActivity" xml:space="preserve">
    <value>Error Get Economic Activities By Economic Activity</value>
  </data>
  <data name="ErrorGetExchangeAmountByDateAndCurrency" xml:space="preserve">
    <value>Error Get Exchange Amount By Date And Currency</value>
  </data>
  <data name="ErrorGetExchangeRateByCurrencyId" xml:space="preserve">
    <value>Error Getting List of Exchange Rates By Currency</value>
  </data>
  <data name="ErrorGetExonerationTypes" xml:space="preserve">
    <value>Error Get Exoneration Types</value>
  </data>
  <data name="ErrorGetExtendedParameterByParameterId" xml:space="preserve">
    <value>Error Get Extended Parameter By Parameter Id</value>
  </data>
  <data name="ErrorGetExtendedParameters" xml:space="preserve">
    <value>Error Get Extended Parameters</value>
  </data>
  <data name="ErrorGetFields" xml:space="preserve">
    <value>Error Get Fields</value>
  </data>
  <data name="ErrorGetFileByDescription" xml:space="preserve">
    <value>Error Get File By Description</value>
  </data>
  <data name="ErrorGetFileByFileId" xml:space="preserve">
    <value>Error Get File By File Id</value>
  </data>
  <data name="ErrorGetFileByFilters" xml:space="preserve">
    <value>Error Get File By Filters</value>
  </data>
  <data name="ErrorGetFiles" xml:space="preserve">
    <value>Error Get Files</value>
  </data>
  <data name="ErrorGetIndividualTypes" xml:space="preserve">
    <value>Error Get Individual Types</value>
  </data>
  <data name="ErrorGetIssueDate" xml:space="preserve">
    <value>ErrorGetIssueDate</value>
  </data>
  <data name="ErrorGetJSON" xml:space="preserve">
    <value>Error Get JSON</value>
  </data>
  <data name="ErrorGetJSONChild" xml:space="preserve">
    <value>Error Get JSON Child</value>
  </data>
  <data name="ErrorGetLineBusiness" xml:space="preserve">
    <value>Error Get Line Business</value>
  </data>
  <data name="ErrorGetLineBusinessById" xml:space="preserve">
    <value>Error Get LineBusiness By Id</value>
  </data>
  <data name="ErrorGetlistCurrencyTypesByProduct" xml:space="preserve">
    <value>Error Get List Currency Types By Product</value>
  </data>
  <data name="ErrorGetListJSON" xml:space="preserve">
    <value>Error Get List JSON</value>
  </data>
  <data name="ErrorGetListOfBanks" xml:space="preserve">
    <value>Error Get List Of Banks</value>
  </data>
  <data name="ErrorGetListOfBranches" xml:space="preserve">
    <value>Error Get List Of Branches</value>
  </data>
  <data name="ErrorGetListOfBranchesDependingSelectedBank" xml:space="preserve">
    <value>Error Get List Of Branches Depending Selected Bank</value>
  </data>
  <data name="ErrorGetListOfCompaniesCoinsurers" xml:space="preserve">
    <value>Error Get List Of Companies Coinsurers</value>
  </data>
  <data name="ErrorGetListOfDifferentMeansOfPayments" xml:space="preserve">
    <value>Error Get List Of Different Means Of Payments</value>
  </data>
  <data name="ErrorGetListOfEconomicActivities" xml:space="preserve">
    <value>Error Get List Of Economic Activities</value>
  </data>
  <data name="ErrorGetListOfParametersByDescription" xml:space="preserve">
    <value>Error Get List Of Parameters By Description</value>
  </data>
  <data name="ErrorGetListOfParametersById" xml:space="preserve">
    <value>Error Get List Of Parameters By Id</value>
  </data>
  <data name="ErrorGetListOfPolicyTypes" xml:space="preserve">
    <value>Error Get List of Policy Types</value>
  </data>
  <data name="ErrorGetListOfPolicyTypesByBusinessBranch" xml:space="preserve">
    <value>Error Get List Of Policy Types By Business Branch</value>
  </data>
  <data name="ErrorGetListOfPrefix" xml:space="preserve">
    <value>Error Get List Of Commercial Branches</value>
  </data>
  <data name="ErrorGetListOfTechnicalBranchByPrefix" xml:space="preserve">
    <value>Error Get List Of Technical Branch By Commercial Branch</value>
  </data>
  <data name="ErrorGetListOfTechnicalSubBranches" xml:space="preserve">
    <value>Error Get List Of Technical SubBranches</value>
  </data>
  <data name="ErrorGetListOfTypesOfHouses" xml:space="preserve">
    <value>Error Get List  Of Types Of Houses</value>
  </data>
  <data name="ErrorGetListTariffZonesByPrefix" xml:space="preserve">
    <value>Error Get List Tariff Zones By Commercial Branch</value>
  </data>
  <data name="ErrorGetParameterByParameterId" xml:space="preserve">
    <value>Error Get Parameter By Parameter Id</value>
  </data>
  <data name="ErrorGetPaymentConcept" xml:space="preserve">
    <value>Error Get Payment Concept</value>
  </data>
  <data name="ErrorGetPointSaleByBranch" xml:space="preserve">
    <value>Error Get Point Sale By Branch</value>
  </data>
  <data name="ErrorGetPrefix" xml:space="preserve">
    <value>Error Get Prefix</value>
  </data>
  <data name="ErrorGetPrefixAll" xml:space="preserve">
    <value>Error Get Prefix All</value>
  </data>
  <data name="ErrorGetPrefixType" xml:space="preserve">
    <value>Error Get Prefix Type</value>
  </data>
  <data name="ErrorGetPrefixTypeByPrefixId" xml:space="preserve">
    <value>Error Get Prefix Type By Prefix Id</value>
  </data>
  <data name="ErrorGetRiskType" xml:space="preserve">
    <value>Error Get Risk Type</value>
  </data>
  <data name="ErrorGetRiskTypeByLineBusinessId" xml:space="preserve">
    <value>Error Get RiskType By LineBusiness Id</value>
  </data>
  <data name="ErrorGetStates" xml:space="preserve">
    <value>Error Get States</value>
  </data>
  <data name="ErrorGetStatesByCountryId" xml:space="preserve">
    <value>Error getting list of states filtering by countryId</value>
  </data>
  <data name="ErrorGetSubLineBusinessById" xml:space="preserve">
    <value>Error Get Sub LineBusiness By Id</value>
  </data>
  <data name="ErrorGetTariffZone" xml:space="preserve">
    <value>Error Get Tariff Zone</value>
  </data>
  <data name="ErrorGetTechnicalBranches" xml:space="preserve">
    <value>Error Get Technical Branches</value>
  </data>
  <data name="ErrorGetTemplates" xml:space="preserve">
    <value>Error Get Templates</value>
  </data>
  <data name="ErrorGetTypesOfCurrencyList" xml:space="preserve">
    <value>Error Get Types Of Currency List</value>
  </data>
  <data name="ErrorGetTypesOfEndososEnabledByBranch" xml:space="preserve">
    <value>Error Get Types Of Endosos Enabled By Branch</value>
  </data>
  <data name="ErrorGetValueByField" xml:space="preserve">
    <value>Error Get Value By Field</value>
  </data>
  <data name="ErrorInsertItem" xml:space="preserve">
    <value>Error save item</value>
  </data>
  <data name="ErrorLengthOfDigits" xml:space="preserve">
    <value>Column {0} of template {1} must have a length {2} digits</value>
  </data>
  <data name="ErrorOnlyAllowsBoolean" xml:space="preserve">
    <value>{0} Column Of {1} Template Only Allows YES or NOT</value>
  </data>
  <data name="ErrorOnlyAllowsDateTime" xml:space="preserve">
    <value>{0} Column Of {1} Template Only Allows DateTime</value>
  </data>
  <data name="ErrorOnlyAllowsDecimal" xml:space="preserve">
    <value>{0} Column Of {1} Template Only Allows Decimals whit {2} integers and {3} decimals</value>
  </data>
  <data name="ErrorOnlyAllowsInt16" xml:space="preserve">
    <value>{0} Column Of {1} Template Only Allows Numbers</value>
  </data>
  <data name="ErrorOnlyAllowsInt32" xml:space="preserve">
    <value>{0} Column Of {1} Template Only Allows Numbers </value>
  </data>
  <data name="ErrorOnlyAllowsInt64" xml:space="preserve">
    <value>{0} Column Of {1} Template Only Allows Numbres </value>
  </data>
  <data name="ErrorOnlyAllowsInt8" xml:space="preserve">
    <value>{0} Column Of {1} Template Only Allows Numbers</value>
  </data>
  <data name="ErrorPolicyType" xml:space="preserve">
    <value>Error Policy Type</value>
  </data>
  <data name="ErrorSaveJSON" xml:space="preserve">
    <value>Error Save JSON</value>
  </data>
  <data name="ErrorSearchDefaultValuesOfUserModuleAndSubmodule" xml:space="preserve">
    <value>Error Search Default Values ​​Of User, Module And Submodule</value>
  </data>
  <data name="ErrorSendEmail" xml:space="preserve">
    <value>Error Send Email</value>
  </data>
  <data name="ErrorStringLength" xml:space="preserve">
    <value>{0} Column Of {1} Template Exceeds The Allowed Length</value>
  </data>
  <data name="ErrorTemplateIsMandatory" xml:space="preserve">
    <value>{0} Template Is Mandatory</value>
  </data>
  <data name="ErrorTemplateIsMandatoryData" xml:space="preserve">
    <value>{0} Template Not Has Data</value>
  </data>
  <data name="ErrorTemplateName" xml:space="preserve">
    <value>Error Template Name</value>
  </data>
  <data name="ErrorTemplateNotMatch" xml:space="preserve">
    <value>{0} Template has fewer columns than the parametrization</value>
  </data>
  <data name="ErrorTempleteNotExist" xml:space="preserve">
    <value>Error Templete Not Exist</value>
  </data>
  <data name="ErrorUpdateAsynchronousProcess" xml:space="preserve">
    <value>Error Update Asynchronous Process</value>
  </data>
  <data name="ErrorUpdateExtendedParameter" xml:space="preserve">
    <value>Error Update Extended Parameter</value>
  </data>
  <data name="ErrorUpdateFile" xml:space="preserve">
    <value>Error Update File</value>
  </data>
  <data name="ErrorUpdateItem" xml:space="preserve">
    <value>Error to update item</value>
  </data>
  <data name="ErrorUpdateJSON" xml:space="preserve">
    <value>Error Update JSON</value>
  </data>
  <data name="ErrorUpdateParameters" xml:space="preserve">
    <value>Error Update Parameters</value>
  </data>
  <data name="ErrorUpdatePrefix" xml:space="preserve">
    <value>Error Update Prefix</value>
  </data>
  <data name="ErrorValidateDataRow" xml:space="preserve">
    <value>Error Validate Data Row</value>
  </data>
  <data name="ErrorValidateFile" xml:space="preserve">
    <value>Error Validate File</value>
  </data>
  <data name="ErrorValidateRegularExpression" xml:space="preserve">
    <value>The field {0} does not match the regular expression</value>
  </data>
  <data name="ErrorValidateRows" xml:space="preserve">
    <value>Error Validate Fields</value>
  </data>
</root>