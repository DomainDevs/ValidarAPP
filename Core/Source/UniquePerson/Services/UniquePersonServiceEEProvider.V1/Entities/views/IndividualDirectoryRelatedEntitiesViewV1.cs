/**********************************
 * Code generated by Marcelo A. Charytoniuk
 **********************************/
using Sistran.Core.Application.UniquePersonV1.Entities;
using Sistran.Core.Framework.DAF;
using Sistran.Core.Framework.Views;
using System;

namespace Sistran.Core.Application.UniquePersonService.V1.Entities.views
{
    /// <summary>
    /// Esta clase permite modelar una relación entre IndividualDirectory y 
    /// las entidades relacionadas.
    /// </summary>
    [Serializable()]
    public class IndividualDirectoryRelatedEntitiesViewV1 : BusinessView
    {

        private BusinessCollection _individualDirectory =
            new BusinessCollection();

        public IndividualDirectoryRelatedEntitiesViewV1()
        { }

        /// <summary>
        /// Colección de elementos de la entidad <see 
        /// cref="Sistran.Core.Application.UniquePersonV1.Entities.IndividualDirectory">
        /// IndividualDirectory</see>
        /// </summary>
        /// <value>
        /// Coleccion de IndividualDirectorys
        /// </value>
        public BusinessCollection IndividualDirectory
        {
            get
            {
                return this["IndividualDirectory"];
            }
        }
        //		
        //		/// <summary>
        //		/// Colección de elementos de la entidad <see 
        //		/// cref="Sistran.Core.Application.UniqueDirectoryType.
        //		///Entities.DirectoryType">DirectoryType</see>
        //		/// </summary>
        //		/// <value>
        //		/// Coleccion de DirectoryTypes
        //		/// </value>
        //		public BusinessCollection DirectoryType
        //		{
        //			get
        //			{
        //				return this["DirectoryType"];
        //			}
        //		}

        /// <summary>
        /// Colección de elementos de la entidad <see 
        /// cref="Sistran.Core.Application.UniquePhone.
        ///Entities.Phone">Phone</see>
        /// </summary>
        /// <value>
        /// Coleccion de objetos de la entidad Phone
        /// </value>
        public BusinessCollection Phone
        {
            get
            {
                return this["Phone"];
            }
        }

        /// <summary>
        /// Colección de elementos de la entidad <see 
        /// cref="Sistran.Core.Application.UniqueAddress.
        ///Entities.Address">Address</see>
        /// </summary>
        /// <value>
        /// Coleccion de objetos de la entidad Address
        /// </value>
        public BusinessCollection Address
        {
            get
            {
                return this["Address"];
            }
        }

        /// <summary>
        /// Colección de elementos de la entidad <see 
        /// cref="Sistran.Core.Application.UniqueEmail.
        ///Entities.Email">Email</see>
        /// </summary>
        /// <value>
        /// Coleccion de objetos de la entidad Email
        /// </value>
        public BusinessCollection Email
        {
            get
            {
                return this["Email"];
            }
        }


        /**************************************************************************
         * RELACIÓN : IndividualDirectoryAddress
         **************************************************************************/
        /// <summary>
        /// Obtiene el objeto Address relacionado a un objeto 
        /// IndividualDirectory.
        /// </summary>
        /// <param name="individualDirectory">
        /// Objeto IndividualDirectory a partir del que se desea obtener el
        /// objeto Address asociado.</param>
        /// <returns>
        /// Objeto Address.
        /// </returns>
        public Address GetAddressObjectByIndividualDirectory(
            IndividualDirectory individualDirectory)
        {
            return (Address)this.GetObjectByRelation(
                "IndividualDirectoryAddress", individualDirectory, false);
        }

        /// <summary>
        /// Obtiene todos los objetos IndividualDirectory relacionados con un
        /// objeto Address dado.
        /// </summary>
        /// <param name="address">
        /// Objeto de la entidad Address a partir del que se desea 
        /// obtener totdos los objetos de la entidad IndividualDirectory 
        /// relacionados.
        /// </param>
        /// <returns>
        /// Colección de los objetos de la entidad IndividualDirectory 
        /// relacionados con el objeto Address especificado.
        /// </returns>
        public BusinessCollection GetIndividualDirectorysByAddress(
            Address address)
        {
            return this.GetObjectsByRelation(
                "IndividualDirectoryAddress", address, true);
        }

        /**************************************************************************
         * RELACIÓN : IndividualDirectoryPhone
         **************************************************************************/
        /// <summary>
        /// Obtiene el objeto Phone relacionado a un objeto 
        /// IndividualDirectory.
        /// </summary>
        /// <param name="individualDirectory">
        /// Objeto IndividualDirectory a partir del que se desea obtener el
        /// objeto Phone asociado.</param>
        /// <returns>
        /// Objeto Phone.
        /// </returns>
        public Phone GetPhoneObjectByIndividualDirectory(
            IndividualDirectory individualDirectory)
        {
            return (Phone)this.GetObjectByRelation(
                "IndividualDirectoryPhone", individualDirectory, false);
        }

        /// <summary>
        /// Obtiene todos los objetos IndividualDirectory relacionados con un
        /// objeto Phone dado.
        /// </summary>
        /// <param name="address">
        /// Objeto de la entidad Phone a partir del que se desea 
        /// obtener totdos los objetos de la entidad IndividualDirectory 
        /// relacionados.
        /// </param>
        /// <returns>
        /// Colección de los objetos de la entidad IndividualDirectory 
        /// relacionados con el objeto Phone especificado.
        /// </returns>
        public BusinessCollection GetIndividualDirectorysByPhone(
            Phone address)
        {
            return this.GetObjectsByRelation(
                "IndividualDirectoryPhone", address, true);
        }

        /**************************************************************************
         * RELACIÓN : IndividualDirectoryEmail
         **************************************************************************/
        /// <summary>
        /// Obtiene el objeto Email relacionado a un objeto 
        /// IndividualDirectory.
        /// </summary>
        /// <param name="individualDirectory">
        /// Objeto IndividualDirectory a partir del que se desea obtener el
        /// objeto Email asociado.</param>
        /// <returns>
        /// Objeto Email.
        /// </returns>
        public Email GetEmailObjectByIndividualDirectory(
            IndividualDirectory individualDirectory)
        {
            return (Email)this.GetObjectByRelation(
                "IndividualDirectoryEmail", individualDirectory, false);
        }

        /// <summary>
        /// Obtiene todos los objetos IndividualDirectory relacionados con un
        /// objeto Email dado.
        /// </summary>
        /// <param name="address">
        /// Objeto de la entidad Email a partir del que se desea 
        /// obtener totdos los objetos de la entidad IndividualDirectory 
        /// relacionados.
        /// </param>
        /// <returns>
        /// Colección de los objetos de la entidad IndividualDirectory 
        /// relacionados con el objeto Email especificado.
        /// </returns>
        public BusinessCollection GetIndividualDirectorysByEmail(
            Email address)
        {
            return this.GetObjectsByRelation(
                "IndividualDirectoryEmail", address, true);
        }

    }
}
