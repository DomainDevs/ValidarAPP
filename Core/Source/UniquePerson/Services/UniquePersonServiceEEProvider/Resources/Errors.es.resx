<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorCreateAlliance" xml:space="preserve">
    <value>Error creando aliado</value>
  </data>
  <data name="ErrorCreatingReinsurer" xml:space="preserve">
    <value>Error creando el reasegurador</value>
  </data>
  <data name="ErrorCRUDProcessesForAddressTypes" xml:space="preserve">
    <value>Error en los procesos del CRUD para los Tipos de dirección</value>
  </data>
  <data name="ErrorCRUDProcessesForPhoneTypes" xml:space="preserve">
    <value>Error en los procesos del CRUD para los Tipos de teléfono</value>
  </data>
  <data name="ErrorCRUDProcessesForScoreTypeDocs" xml:space="preserve">
    <value>Error en los procesos del CRUD para los Tipos de documento</value>
  </data>
  <data name="ErrorDeleteAlliance" xml:space="preserve">
    <value>Error borrando aliado</value>
  </data>
  <data name="ErrorGenerateFileToAddressType" xml:space="preserve">
    <value>Error generando el archivo de tipos de dirección</value>
  </data>
  <data name="ErrorGenerateFileToAlliance" xml:space="preserve">
    <value>Error generando el archivo de aliados</value>
  </data>
  <data name="ErrorGenerateFileToInsuredProfile" xml:space="preserve">
    <value>Error generando el archivo</value>
  </data>
  <data name="ErrorGenerateFileToInsuredSegment" xml:space="preserve">
    <value>Error generando el archivo</value>
  </data>
  <data name="ErrorGenerateFileToPhoneType" xml:space="preserve">
    <value>Error generando el archivo de tipos de teléfono</value>
  </data>
  <data name="ErrorGenerateFileToScoreTypeDoc" xml:space="preserve">
    <value>Error generando el archivo de tipos documento datacrédito</value>
  </data>
  <data name="ErrorGetAlliances" xml:space="preserve">
    <value>Error obteniendo aliados</value>
  </data>
  <data name="ErrorGetAssetType" xml:space="preserve">
    <value>Error al obtener tipo de bien</value>
  </data>
  <data name="ErrorGetBranchAlliances" xml:space="preserve">
    <value>Error obteniendo sucursales del aliado</value>
  </data>
  <data name="ErrorGetCoInsurance" xml:space="preserve">
    <value>Error obteniendo coasegurados</value>
  </data>
  <data name="ErrorGetEconomicActivitiesByEconomicActivity" xml:space="preserve">
    <value>Error al obtener actividades económicas por actividad económica</value>
  </data>
  <data name="ErrorGetExonerationTypes" xml:space="preserve">
    <value>Error obteniendo tipos de exoneración</value>
  </data>
  <data name="ErrorGetIndividualTypes" xml:space="preserve">
    <value>Error obteniendo tipos de individuos</value>
  </data>
  <data name="ErrorGetListOfCompaniesCoinsurers" xml:space="preserve">
    <value>Error obteniendo lista de compañías coaseguradoras</value>
  </data>
  <data name="ErrorGetListOfEconomicActivities" xml:space="preserve">
    <value>Error al obtener lista de actividades economicas</value>
  </data>
  <data name="ErrorGetScore3gTypeDocByIdCardTypeCode" xml:space="preserve">
    <value>Error obteniendo listado de tipos de documento.</value>
  </data>
  <data name="ErrorGettingAgency" xml:space="preserve">
    <value>Error recuperando la agencia por código y tipo</value>
  </data>
  <data name="ErrorGettingReinsurer" xml:space="preserve">
    <value>Error recuperando el reasegurador</value>
  </data>
  <data name="ErrorParameterEmpty" xml:space="preserve">
    <value>Error parametro vacio o Nulo</value>
  </data>
  <data name="ErrorRelatedBranchAlliance" xml:space="preserve">
    <value>Aliado Tiene Sucursales Relacionadas.</value>
  </data>
  <data name="ErrorSaveAlliances" xml:space="preserve">
    <value>Error guardando aliados</value>
  </data>
  <data name="ErrorUpdateAlliance" xml:space="preserve">
    <value>Error actualizando aliado</value>
  </data>
  <data name="FileAddressTypeName" xml:space="preserve">
    <value>LISTADO DE TIPOS DE DIRECCIÓN</value>
  </data>
  <data name="FilePhoneTypeName" xml:space="preserve">
    <value>LISTADO DE TIPOS DE TELÉFONO</value>
  </data>
  <data name="FileScoreTypeDocName" xml:space="preserve">
    <value>TIPO DE DOCUMENTO</value>
  </data>
  <data name="PrincipalAddress" xml:space="preserve">
    <value>Dirección principal</value>
  </data>
</root>