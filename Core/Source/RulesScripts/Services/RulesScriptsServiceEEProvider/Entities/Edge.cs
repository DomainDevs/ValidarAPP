/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.RulesScriptsServices.EEProvider.Edge.dict v1.0
 * FileSize=6162 Header=266 CRC=1039063705
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System.Collections.Specialized;

namespace Sistran.Core.Application.RulesScriptsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad Edge.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.RulesScriptsServices.EEProvider.Edge.dict"),
    Serializable(),
    DescriptionKey("EDGE_ENTITY"),
    TableMap(TableName="EDGE", Schema="SCR"),
    ]
    public partial class Edge :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string EdgeId = "EdgeId";
			public static readonly string NodeId = "NodeId";
			public static readonly string QuestionId = "QuestionId";
			public static readonly string ScriptId = "ScriptId";
			public static readonly string IsDefault = "IsDefault";
			public static readonly string NextNodeId = "NextNodeId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="edgeId">Propiedad clave EdgeId.</param>
		/// <returns>Clave primaria.</returns>

        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.EdgeId, null);

            return new PrimaryKey(concreteClass, keys);
        }

	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int edgeId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.EdgeId, edgeId);

		    return new PrimaryKey<T>(keys);
	    }        

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="edgeId">Propiedad clave EdgeId.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey(typeof(Edge));
        }

		public static PrimaryKey CreatePrimaryKey(int edgeId)
	    {
			return InternalCreatePrimaryKey<Edge>(edgeId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad NodeId.
		/// </summary>
        private int _nodeId;
		/// <summary>
		/// Atributo para la propiedad QuestionId.
		/// </summary>
        private int _questionId;
		/// <summary>
		/// Atributo para la propiedad ScriptId.
		/// </summary>
        private int _scriptId;
		/// <summary>
		/// Atributo para la propiedad IsDefault.
		/// </summary>
        private bool _isDefault;
		/// <summary>
		/// Atributo para la propiedad NextNodeId.
		/// </summary>
        private int? _nextNodeId = null;
	    //*** Object Constructors ********************************        

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="edgeId">EdgeId key property.</param>
        public Edge() :
            this(Edge.CreatePrimaryKey(), null)
        {
        }

	    public Edge(int edgeId):
			this(Edge.CreatePrimaryKey(edgeId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Edge(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad EdgeId.
		/// </summary>
		/// <value>Propiedad EdgeId.</value>
	    [
		DescriptionKey("EDGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="EDGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int EdgeId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EdgeId];
		    }
		    set
		    {
				this._primaryKey[Properties.EdgeId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NodeId.
		/// </summary>
		/// <value>Propiedad NodeId.</value>
	    [
		DescriptionKey("NODE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="NODE_ID", DbType=System.Data.DbType.String),
	    ]
        public int NodeId
	    {
		    get
		    {
			    return this._nodeId;
		    }
		    set
		    {
				this._nodeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad QuestionId.
		/// </summary>
		/// <value>Propiedad QuestionId.</value>
	    [
		DescriptionKey("QUESTION_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="QUESTION_ID", DbType=System.Data.DbType.String),
	    ]
        public int QuestionId
	    {
		    get
		    {
			    return this._questionId;
		    }
		    set
		    {
				this._questionId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ScriptId.
		/// </summary>
		/// <value>Propiedad ScriptId.</value>
	    [
		DescriptionKey("SCRIPT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SCRIPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ScriptId
	    {
		    get
		    {
			    return this._scriptId;
		    }
		    set
		    {
				this._scriptId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsDefault.
		/// </summary>
		/// <value>Propiedad IsDefault.</value>
	    [
		DescriptionKey("IS_DEFAULT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_DEFAULT", DbType=System.Data.DbType.String),
	    ]
        public bool IsDefault
	    {
		    get
		    {
			    return this._isDefault;
		    }
		    set
		    {
				this._isDefault = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NextNodeId.
		/// </summary>
		/// <value>Propiedad NextNodeId.</value>
	    [
		DescriptionKey("NEXT_NODE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NEXT_NODE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? NextNodeId
	    {
		    get
		    {
			    return this._nextNodeId;
		    }
		    set
		    {
				this._nextNodeId = value;
			}
	    }

    }
}