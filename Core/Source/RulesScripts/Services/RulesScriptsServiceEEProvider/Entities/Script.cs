/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.RulesScriptsServices.EEProvider.Script.dict v1.0
 * FileSize=5715 Header=268 CRC=2822250030
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.RulesScriptsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad Script.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.RulesScriptsServices.EEProvider.Script.dict"),
    Serializable(),
    DescriptionKey("SCRIPT_ENTITY"),
    TableMap(TableName="SCRIPT", Schema="SCR"),
    ]
    public partial class Script :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ScriptId = "ScriptId";
			public static readonly string Description = "Description";
			public static readonly string LevelId = "LevelId";
			public static readonly string PackageId = "PackageId";
			public static readonly string NodeId = "NodeId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="scriptId">Propiedad clave ScriptId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int scriptId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ScriptId, scriptId);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ScriptId, null);

            return new PrimaryKey<T>(keys);
        }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="scriptId">Propiedad clave ScriptId.</param>
		public static PrimaryKey CreatePrimaryKey(int scriptId)
	    {
			return InternalCreatePrimaryKey<Script>(scriptId);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Script>();
        }
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad LevelId.
		/// </summary>
        private int _levelId;
		/// <summary>
		/// Atributo para la propiedad PackageId.
		/// </summary>
        private int _packageId;
		/// <summary>
		/// Atributo para la propiedad NodeId.
		/// </summary>
        private int? _nodeId = null;
	    //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves que no son autonumeradas.
        /// </summary>
        /// <returns>Primary key.</returns>
        public Script() :
            this(Script.CreatePrimaryKey(), null)
        {
        }

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="scriptId">ScriptId key property.</param>
	    public Script(int scriptId):
			this(Script.CreatePrimaryKey(scriptId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Script(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ScriptId.
		/// </summary>
		/// <value>Propiedad ScriptId.</value>
	    [
		DescriptionKey("SCRIPT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SCRIPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ScriptId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ScriptId];
		    }
		    set
		    {
				this._primaryKey[Properties.ScriptId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LevelId.
		/// </summary>
		/// <value>Propiedad LevelId.</value>
	    [
		DescriptionKey("LEVEL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LEVEL_ID", DbType=System.Data.DbType.String),
	    ]
        public int LevelId
	    {
		    get
		    {
			    return this._levelId;
		    }
		    set
		    {
				this._levelId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PackageId.
		/// </summary>
		/// <value>Propiedad PackageId.</value>
	    [
		DescriptionKey("PACKAGE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PACKAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int PackageId
	    {
		    get
		    {
			    return this._packageId;
		    }
		    set
		    {
				this._packageId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NodeId.
		/// </summary>
		/// <value>Propiedad NodeId.</value>
	    [
		DescriptionKey("NODE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NODE_ID", DbType=System.Data.DbType.String),
	    ]
        public int? NodeId
	    {
		    get
		    {
			    return this._nodeId;
		    }
		    set
		    {
				this._nodeId = value;
			}
	    }

    }
}