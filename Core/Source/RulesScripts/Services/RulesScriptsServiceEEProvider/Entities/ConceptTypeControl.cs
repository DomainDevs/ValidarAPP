/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UnderwritingServices.ConceptTypeControl.dict v1.0
 * FileSize=4371 Header=268 CRC=600764738
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.RulesScriptsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad ConceptTypeControl.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.RulesScriptsServices.EEProvider.ConceptTypeControl.dict"),
    Serializable(),
    DescriptionKey("CONCEPT_TYPE_CONTROL_ENTITY"),
    TableMap(TableName="CONCEPT_TYPE_CONTROL", Schema="PARAM"),
    ]
    public partial class ConceptTypeControl :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ConceptTypeCode = "ConceptTypeCode";
			public static readonly string ConceptControlCode = "ConceptControlCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="conceptTypeCode">Propiedad clave ConceptTypeCode.</param>
		/// <param name="conceptControlCode">Propiedad clave ConceptControlCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int conceptTypeCode, int conceptControlCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ConceptTypeCode, conceptTypeCode);
		    keys.Add(Properties.ConceptControlCode, conceptControlCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="conceptTypeCode">Propiedad clave ConceptTypeCode.</param>
		/// <param name="conceptControlCode">Propiedad clave ConceptControlCode.</param>
		public static PrimaryKey CreatePrimaryKey(int conceptTypeCode, int conceptControlCode)
	    {
			return InternalCreatePrimaryKey<ConceptTypeControl>(conceptTypeCode, conceptControlCode);
		}
#endregion

	    //*** Object Attributes ********************************

	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="conceptTypeCode">ConceptTypeCode key property.</param>
		/// <param name="conceptControlCode">ConceptControlCode key property.</param>
	    public ConceptTypeControl(int conceptTypeCode, int conceptControlCode):
			this(ConceptTypeControl.CreatePrimaryKey(conceptTypeCode, conceptControlCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ConceptTypeControl(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptTypeCode.
		/// </summary>
		/// <value>Propiedad ConceptTypeCode.</value>
	    [
		DescriptionKey("CONCEPT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CONCEPT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int ConceptTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ConceptTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ConceptTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptControlCode.
		/// </summary>
		/// <value>Propiedad ConceptControlCode.</value>
	    [
		DescriptionKey("CONCEPT_CONTROL_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CONCEPT_CONTROL_CD", DbType=System.Data.DbType.String),
	    ]
        public int ConceptControlCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ConceptControlCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ConceptControlCode] = value;
			}
	    }

    }
}