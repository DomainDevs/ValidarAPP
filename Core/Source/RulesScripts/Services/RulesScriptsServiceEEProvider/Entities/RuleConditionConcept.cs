/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.RulesScriptsServices.EEProvider.RuleConditionConcept.dict v1.0
 * FileSize=5601 Header=281 CRC=4042248730
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.RulesScriptsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad RuleConditionConcept.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.RulesScriptsServices.EEProvider.RuleConditionConcept.dict"),
    Serializable(),
    DescriptionKey("RULE_CONDITION_CONCEPT_ENTITY"),
    TableMap(TableName="RULE_CONDITION_CONCEPT", Schema="SCR"),
    ]
    public partial class RuleConditionConcept :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RuleBaseId = "RuleBaseId";
			public static readonly string EntityId = "EntityId";
			public static readonly string ConceptId = "ConceptId";
			public static readonly string OrderNum = "OrderNum";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
		/// <param name="entityId">Propiedad clave EntityId.</param>
		/// <param name="conceptId">Propiedad clave ConceptId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int ruleBaseId, int entityId, int conceptId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RuleBaseId, ruleBaseId);
		    keys.Add(Properties.EntityId, entityId);
		    keys.Add(Properties.ConceptId, conceptId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="ruleBaseId">Propiedad clave RuleBaseId.</param>
		/// <param name="entityId">Propiedad clave EntityId.</param>
		/// <param name="conceptId">Propiedad clave ConceptId.</param>
		public static PrimaryKey CreatePrimaryKey(int ruleBaseId, int entityId, int conceptId)
	    {
			return InternalCreatePrimaryKey<RuleConditionConcept>(ruleBaseId, entityId, conceptId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad OrderNum.
		/// </summary>
        private int _orderNum;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="ruleBaseId">RuleBaseId key property.</param>
		/// <param name="entityId">EntityId key property.</param>
		/// <param name="conceptId">ConceptId key property.</param>
	    public RuleConditionConcept(int ruleBaseId, int entityId, int conceptId):
			this(RuleConditionConcept.CreatePrimaryKey(ruleBaseId, entityId, conceptId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public RuleConditionConcept(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RuleBaseId.
		/// </summary>
		/// <value>Propiedad RuleBaseId.</value>
	    [
		DescriptionKey("RULE_BASE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RULE_BASE_ID", DbType=System.Data.DbType.String),
	    ]
        public int RuleBaseId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RuleBaseId];
		    }
		    set
		    {
				this._primaryKey[Properties.RuleBaseId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntityId.
		/// </summary>
		/// <value>Propiedad EntityId.</value>
	    [
		DescriptionKey("ENTITY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ENTITY_ID", DbType=System.Data.DbType.String),
	    ]
        public int EntityId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EntityId];
		    }
		    set
		    {
				this._primaryKey[Properties.EntityId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptId.
		/// </summary>
		/// <value>Propiedad ConceptId.</value>
	    [
		DescriptionKey("CONCEPT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CONCEPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ConceptId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ConceptId];
		    }
		    set
		    {
				this._primaryKey[Properties.ConceptId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OrderNum.
		/// </summary>
		/// <value>Propiedad OrderNum.</value>
	    [
		DescriptionKey("ORDER_NUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ORDER_NUM", DbType=System.Data.DbType.String),
	    ]
        public int OrderNum
	    {
		    get
		    {
			    return this._orderNum;
		    }
		    set
		    {
				this._orderNum = value;
			}
	    }

    }
}