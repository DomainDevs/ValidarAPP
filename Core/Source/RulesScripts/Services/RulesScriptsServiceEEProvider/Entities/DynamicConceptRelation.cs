/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Services.QuotationService.DynamicConceptRelation.dict v1.0
 * FileSize=6800 Header=266 CRC=3200959638
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.RulesScriptsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad DynamicConceptRelation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.RulesScriptsServices.EEProvider.DynamicConceptRelation.dict"),
    Serializable(),
    DescriptionKey("DYNAMIC_CONCEPT_RELATION_ENTITY"),
    TableMap(TableName="DYNAMIC_CONCEPT_RELATION", Schema="SCR"),
    ]
    public partial class DynamicConceptRelation :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string DynamicId = "DynamicId";
			public static readonly string EntityId = "EntityId";
			public static readonly string Key1 = "Key1";
			public static readonly string Key2 = "Key2";
			public static readonly string Key3 = "Key3";
			public static readonly string Key4 = "Key4";
			public static readonly string Key5 = "Key5";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="dynamicId">Propiedad clave DynamicId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int dynamicId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.DynamicId, dynamicId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="dynamicId">Propiedad clave DynamicId.</param>
		public static PrimaryKey CreatePrimaryKey(int dynamicId)
	    {
			return InternalCreatePrimaryKey<DynamicConceptRelation>(dynamicId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad EntityId.
		/// </summary>
        private int _entityId;
		/// <summary>
		/// Atributo para la propiedad Key1.
		/// </summary>
        private int _key1;
		/// <summary>
		/// Atributo para la propiedad Key2.
		/// </summary>
        private int? _key2 = null;
		/// <summary>
		/// Atributo para la propiedad Key3.
		/// </summary>
        private int? _key3 = null;
		/// <summary>
		/// Atributo para la propiedad Key4.
		/// </summary>
        private int? _key4 = null;
		/// <summary>
		/// Atributo para la propiedad Key5.
		/// </summary>
        private int? _key5 = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="dynamicId">DynamicId key property.</param>
	    public DynamicConceptRelation(int dynamicId):
			this(DynamicConceptRelation.CreatePrimaryKey(dynamicId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public DynamicConceptRelation(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad DynamicId.
		/// </summary>
		/// <value>Propiedad DynamicId.</value>
	    [
		DescriptionKey("DYNAMIC_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="DYNAMIC_ID", DbType=System.Data.DbType.String),
	    ]
        public int DynamicId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.DynamicId];
		    }
		    set
		    {
				this._primaryKey[Properties.DynamicId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EntityId.
		/// </summary>
		/// <value>Propiedad EntityId.</value>
	    [
		DescriptionKey("ENTITY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENTITY_ID", DbType=System.Data.DbType.String),
	    ]
        public int EntityId
	    {
		    get
		    {
			    return this._entityId;
		    }
		    set
		    {
				this._entityId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Key1.
		/// </summary>
		/// <value>Propiedad Key1.</value>
	    [
		DescriptionKey("KEY1_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="KEY_1", DbType=System.Data.DbType.String),
	    ]
        public int Key1
	    {
		    get
		    {
			    return this._key1;
		    }
		    set
		    {
				this._key1 = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Key2.
		/// </summary>
		/// <value>Propiedad Key2.</value>
	    [
		DescriptionKey("KEY2_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="KEY_2", DbType=System.Data.DbType.String),
	    ]
        public int? Key2
	    {
		    get
		    {
			    return this._key2;
		    }
		    set
		    {
				this._key2 = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Key3.
		/// </summary>
		/// <value>Propiedad Key3.</value>
	    [
		DescriptionKey("KEY3_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="KEY_3", DbType=System.Data.DbType.String),
	    ]
        public int? Key3
	    {
		    get
		    {
			    return this._key3;
		    }
		    set
		    {
				this._key3 = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Key4.
		/// </summary>
		/// <value>Propiedad Key4.</value>
	    [
		DescriptionKey("KEY4_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="KEY_4", DbType=System.Data.DbType.String),
	    ]
        public int? Key4
	    {
		    get
		    {
			    return this._key4;
		    }
		    set
		    {
				this._key4 = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Key5.
		/// </summary>
		/// <value>Propiedad Key5.</value>
	    [
		DescriptionKey("KEY5_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="KEY_5", DbType=System.Data.DbType.String),
	    ]
        public int? Key5
	    {
		    get
		    {
			    return this._key5;
		    }
		    set
		    {
				this._key5 = value;
			}
	    }

    }
}