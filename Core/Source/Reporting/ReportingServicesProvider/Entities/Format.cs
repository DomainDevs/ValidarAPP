/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.ReportingServices.Provider.Format.dict v1.0
 * FileSize=6450 Header=266 CRC=1456449193
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ReportingServices.Provider.Entities
{
    /// <summary>
    /// Definición de entidad Format.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ReportingServices.Provider.Format.dict"),
    Serializable(),
    DescriptionKey("FORMAT_ENTITY"),
    TableMap(TableName="FORMAT", Schema="REPORT"),
    ]
    public partial class Format :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string FormatCode = "FormatCode";
			public static readonly string FormatModuleCode = "FormatModuleCode";
			public static readonly string Description = "Description";
			public static readonly string FileType = "FileType";
			public static readonly string DateFrom = "DateFrom";
			public static readonly string DateTo = "DateTo";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="formatCode">Propiedad clave FormatCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int formatCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.FormatCode, formatCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="formatCode">Propiedad clave FormatCode.</param>
		public static PrimaryKey CreatePrimaryKey(int formatCode)
	    {
			return InternalCreatePrimaryKey<Format>(formatCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad FormatModuleCode.
		/// </summary>
        private int? _formatModuleCode = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad FileType.
		/// </summary>
        private int? _fileType = null;
		/// <summary>
		/// Atributo para la propiedad DateFrom.
		/// </summary>
        private DateTime? _dateFrom = null;
		/// <summary>
		/// Atributo para la propiedad DateTo.
		/// </summary>
        private DateTime? _dateTo = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="formatCode">FormatCode key property.</param>
	    public Format(int formatCode):
			this(Format.CreatePrimaryKey(formatCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Format(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad FormatCode.
		/// </summary>
		/// <value>Propiedad FormatCode.</value>
	    [
		DescriptionKey("FORMAT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="FORMAT_CD", DbType=System.Data.DbType.String),
	    ]
        public int FormatCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.FormatCode];
		    }
		    set
		    {
				this._primaryKey[Properties.FormatCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FormatModuleCode.
		/// </summary>
		/// <value>Propiedad FormatModuleCode.</value>
	    [
		DescriptionKey("FORMAT_MODULE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FORMAT_MODULE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? FormatModuleCode
	    {
		    get
		    {
			    return this._formatModuleCode;
		    }
		    set
		    {
				this._formatModuleCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FileType.
		/// </summary>
		/// <value>Propiedad FileType.</value>
	    [
		DescriptionKey("FILE_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FILE_TYPE", DbType=System.Data.DbType.String),
	    ]
        public int? FileType
	    {
		    get
		    {
			    return this._fileType;
		    }
		    set
		    {
				this._fileType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DateFrom.
		/// </summary>
		/// <value>Propiedad DateFrom.</value>
	    [
		DescriptionKey("DATE_FROM_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DateFrom
	    {
		    get
		    {
			    return this._dateFrom;
		    }
		    set
		    {
				this._dateFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DateTo.
		/// </summary>
		/// <value>Propiedad DateTo.</value>
	    [
		DescriptionKey("DATE_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DateTo
	    {
		    get
		    {
			    return this._dateTo;
		    }
		    set
		    {
				this._dateTo = value;
			}
	    }

    }
}