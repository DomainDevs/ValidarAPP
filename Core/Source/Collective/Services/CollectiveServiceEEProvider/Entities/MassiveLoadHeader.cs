/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.MassiveUnderwritingServices.MassiveLoadHeader.dict v1.0
 * FileSize=10243 Header=276 CRC=1613487580
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.CollectiveServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad MassiveLoadHeader.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.CollectiveServices.EEProvider.MassiveLoadHeader.dict"),
    Serializable(),
    DescriptionKey("MASSIVE_LOAD_HEADER_ENTITY"),
    TableMap(TableName="MASSIVE_LOAD_HEADER", Schema="QUO"),
    ]
    public partial class MassiveLoadHeader :
        BusinessObject
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string HeaderId = "HeaderId";
			public static readonly string FieldSetId = "FieldSetId";
			public static readonly string Text = "Text";
			public static readonly string BeginColumn = "BeginColumn";
			public static readonly string ColumnSpan = "ColumnSpan";
			public static readonly string BeginRow = "BeginRow";
			public static readonly string RowSpan = "RowSpan";
			public static readonly string ColorRgb = "ColorRgb";
			public static readonly string TextColorRgb = "TextColorRgb";
			public static readonly string TextSize = "TextSize";
			public static readonly string TextAling = "TextAling";
			public static readonly string TextBold = "TextBold";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="headerId">Propiedad clave HeaderId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int headerId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.HeaderId, headerId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="headerId">Propiedad clave HeaderId.</param>
		public static PrimaryKey CreatePrimaryKey(int headerId)
	    {
			return InternalCreatePrimaryKey<MassiveLoadHeader>(headerId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad FieldSetId.
		/// </summary>
        private int _fieldSetId;
		/// <summary>
		/// Atributo para la propiedad Text.
		/// </summary>
        private string _text = null;
		/// <summary>
		/// Atributo para la propiedad BeginColumn.
		/// </summary>
        private int _beginColumn;
		/// <summary>
		/// Atributo para la propiedad ColumnSpan.
		/// </summary>
        private int _columnSpan;
		/// <summary>
		/// Atributo para la propiedad BeginRow.
		/// </summary>
        private int _beginRow;
		/// <summary>
		/// Atributo para la propiedad RowSpan.
		/// </summary>
        private int _rowSpan;
		/// <summary>
		/// Atributo para la propiedad ColorRgb.
		/// </summary>
        private string _colorRgb = null;
		/// <summary>
		/// Atributo para la propiedad TextColorRgb.
		/// </summary>
        private string _textColorRgb = null;
		/// <summary>
		/// Atributo para la propiedad TextSize.
		/// </summary>
        private string _textSize = null;
		/// <summary>
		/// Atributo para la propiedad TextAling.
		/// </summary>
        private string _textAling = null;
		/// <summary>
		/// Atributo para la propiedad TextBold.
		/// </summary>
        private bool _textBold;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="headerId">HeaderId key property.</param>
	    public MassiveLoadHeader(int headerId):
			this(MassiveLoadHeader.CreatePrimaryKey(headerId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
        public MassiveLoadHeader(PrimaryKey key, IDictionary initialValues) :
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad HeaderId.
		/// </summary>
		/// <value>Propiedad HeaderId.</value>
	    [
		DescriptionKey("HEADER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="HEADER_ID", DbType=System.Data.DbType.String),
	    ]
        public int HeaderId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.HeaderId];
		    }
		    set
		    {
				this._primaryKey[Properties.HeaderId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FieldSetId.
		/// </summary>
		/// <value>Propiedad FieldSetId.</value>
	    [
		DescriptionKey("FIELD_SET_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FIELD_SET_ID", DbType=System.Data.DbType.String),
	    ]
        public int FieldSetId
	    {
		    get
		    {
			    return this._fieldSetId;
		    }
		    set
		    {
				this._fieldSetId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Text.
		/// </summary>
		/// <value>Propiedad Text.</value>
	    [
		DescriptionKey("TEXT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEXT", DbType=System.Data.DbType.String),
	    ]
        public string Text
	    {
		    get
		    {
			    return this._text;
		    }
		    set
		    {
				this._text = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeginColumn.
		/// </summary>
		/// <value>Propiedad BeginColumn.</value>
	    [
		DescriptionKey("BEGIN_COLUMN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BEGIN_COLUMN", DbType=System.Data.DbType.String),
	    ]
        public int BeginColumn
	    {
		    get
		    {
			    return this._beginColumn;
		    }
		    set
		    {
				this._beginColumn = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ColumnSpan.
		/// </summary>
		/// <value>Propiedad ColumnSpan.</value>
	    [
		DescriptionKey("COLUMN_SPAN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COLUMN_SPAN", DbType=System.Data.DbType.String),
	    ]
        public int ColumnSpan
	    {
		    get
		    {
			    return this._columnSpan;
		    }
		    set
		    {
				this._columnSpan = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeginRow.
		/// </summary>
		/// <value>Propiedad BeginRow.</value>
	    [
		DescriptionKey("BEGIN_ROW_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BEGIN_ROW", DbType=System.Data.DbType.String),
	    ]
        public int BeginRow
	    {
		    get
		    {
			    return this._beginRow;
		    }
		    set
		    {
				this._beginRow = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RowSpan.
		/// </summary>
		/// <value>Propiedad RowSpan.</value>
	    [
		DescriptionKey("ROW_SPAN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ROW_SPAN", DbType=System.Data.DbType.String),
	    ]
        public int RowSpan
	    {
		    get
		    {
			    return this._rowSpan;
		    }
		    set
		    {
				this._rowSpan = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ColorRgb.
		/// </summary>
		/// <value>Propiedad ColorRgb.</value>
	    [
		DescriptionKey("COLOR_RGB_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLOR_RGB", DbType=System.Data.DbType.String),
	    ]
        public string ColorRgb
	    {
		    get
		    {
			    return this._colorRgb;
		    }
		    set
		    {
				this._colorRgb = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TextColorRgb.
		/// </summary>
		/// <value>Propiedad TextColorRgb.</value>
	    [
		DescriptionKey("TEXT_COLOR_RGB_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEXT_COLOR_RGB", DbType=System.Data.DbType.String),
	    ]
        public string TextColorRgb
	    {
		    get
		    {
			    return this._textColorRgb;
		    }
		    set
		    {
				this._textColorRgb = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TextSize.
		/// </summary>
		/// <value>Propiedad TextSize.</value>
	    [
		DescriptionKey("TEXT_SIZE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEXT_SIZE", DbType=System.Data.DbType.String),
	    ]
        public string TextSize
	    {
		    get
		    {
			    return this._textSize;
		    }
		    set
		    {
				this._textSize = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TextAling.
		/// </summary>
		/// <value>Propiedad TextAling.</value>
	    [
		DescriptionKey("TEXT_ALING_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEXT_ALING", DbType=System.Data.DbType.String),
	    ]
        public string TextAling
	    {
		    get
		    {
			    return this._textAling;
		    }
		    set
		    {
				this._textAling = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TextBold.
		/// </summary>
		/// <value>Propiedad TextBold.</value>
	    [
		DescriptionKey("TEXT_BOLD_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TEXT_BOLD", DbType=System.Data.DbType.String),
	    ]
        public bool TextBold
	    {
		    get
		    {
			    return this._textBold;
		    }
		    set
		    {
				this._textBold = value;
			}
	    }

    }
}