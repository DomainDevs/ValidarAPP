/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.MassiveUnderwritingServices.MassiveLoadFieldSet.dict v1.0
 * FileSize=10248 Header=277 CRC=149523965
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.CollectiveServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad MassiveLoadFieldSet.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.CollectiveServices.EEProvider.MassiveLoadFieldSet.dict"),
    Serializable(),
    DescriptionKey("MASSIVE_LOAD_FIELD_SET_ENTITY"),
    TableMap(TableName="MASSIVE_LOAD_FIELD_SET", Schema="QUO"),
    ]
    public partial class MassiveLoadFieldSet :
        BusinessObject
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string FieldSetId = "FieldSetId";
			public static readonly string Description = "Description";
			public static readonly string BeginColumn = "BeginColumn";
			public static readonly string EndColumn = "EndColumn";
			public static readonly string CountColumn = "CountColumn";
			public static readonly string IsEnabled = "IsEnabled";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string IsRequest = "IsRequest";
			public static readonly string IsCollective = "IsCollective";
            public static readonly string IsExclude = "IsExclude";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="fieldSetId">Propiedad clave FieldSetId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int fieldSetId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.FieldSetId, fieldSetId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="fieldSetId">Propiedad clave FieldSetId.</param>
		public static PrimaryKey CreatePrimaryKey(int fieldSetId)
	    {
			return InternalCreatePrimaryKey<MassiveLoadFieldSet>(fieldSetId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad BeginColumn.
		/// </summary>
        private string _beginColumn = null;
		/// <summary>
		/// Atributo para la propiedad EndColumn.
		/// </summary>
        private string _endColumn = null;
		/// <summary>
		/// Atributo para la propiedad CountColumn.
		/// </summary>
        private int _countColumn;
		/// <summary>
		/// Atributo para la propiedad IsEnabled.
		/// </summary>
        private bool? _isEnabled = null;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int? _prefixCode = null;
		/// <summary>
		/// Atributo para la propiedad IsRequest.
		/// </summary>
        private bool _isRequest;
		/// <summary>
		/// Atributo para la propiedad IsCollective.
		/// </summary>
        private bool _isCollective;
        /// <summary>
        /// Atributo para la propiedad IsExclude.
        /// </summary>
        private bool? _isExclude = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="fieldSetId">FieldSetId key property.</param>
	    public MassiveLoadFieldSet(int fieldSetId):
			this(MassiveLoadFieldSet.CreatePrimaryKey(fieldSetId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
        public MassiveLoadFieldSet(PrimaryKey key, IDictionary initialValues) :
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad FieldSetId.
		/// </summary>
		/// <value>Propiedad FieldSetId.</value>
	    [
		DescriptionKey("FIELD_SET_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="FIELD_SET_ID", DbType=System.Data.DbType.String),
	    ]
        public int FieldSetId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.FieldSetId];
		    }
		    set
		    {
				this._primaryKey[Properties.FieldSetId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeginColumn.
		/// </summary>
		/// <value>Propiedad BeginColumn.</value>
	    [
		DescriptionKey("BEGIN_COLUMN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BEGIN_COLUMN", DbType=System.Data.DbType.String),
	    ]
        public string BeginColumn
	    {
		    get
		    {
			    return this._beginColumn;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BeginColumn);
				}
				this._beginColumn = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndColumn.
		/// </summary>
		/// <value>Propiedad EndColumn.</value>
	    [
		DescriptionKey("END_COLUMN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="END_COLUMN", DbType=System.Data.DbType.String),
	    ]
        public string EndColumn
	    {
		    get
		    {
			    return this._endColumn;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.EndColumn);
				}
				this._endColumn = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CountColumn.
		/// </summary>
		/// <value>Propiedad CountColumn.</value>
	    [
		DescriptionKey("COUNT_COLUMN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COUNT_COLUMN", DbType=System.Data.DbType.String),
	    ]
        public int CountColumn
	    {
		    get
		    {
			    return this._countColumn;
		    }
		    set
		    {
				this._countColumn = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsEnabled.
		/// </summary>
		/// <value>Propiedad IsEnabled.</value>
	    [
		DescriptionKey("IS_ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? IsEnabled
	    {
		    get
		    {
			    return this._isEnabled;
		    }
		    set
		    {
				this._isEnabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsRequest.
		/// </summary>
		/// <value>Propiedad IsRequest.</value>
	    [
		DescriptionKey("IS_REQUEST_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_REQUEST", DbType=System.Data.DbType.String),
	    ]
        public bool IsRequest
	    {
		    get
		    {
			    return this._isRequest;
		    }
		    set
		    {
				this._isRequest = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsCollective.
		/// </summary>
		/// <value>Propiedad IsCollective.</value>
	    [
		DescriptionKey("IS_COLLECTIVE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_COLLECTIVE", DbType=System.Data.DbType.String),
	    ]
        public bool IsCollective
	    {
		    get
		    {
			    return this._isCollective;
		    }
		    set
		    {
				this._isCollective = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsExclude.
        /// </summary>
        /// <value>Propiedad IsExclude.</value>
        [
        DescriptionKey("IS_EXCLUDE_PROPERTY"),
        PersistentProperty(IsNullable = true)
        ]
        public bool? IsExclude
        {
            get
            {
                return this._isExclude;
            }
            set
            {
                this._isExclude = value;
            }
        }
    }
}