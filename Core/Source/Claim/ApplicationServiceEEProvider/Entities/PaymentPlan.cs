/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Payment.PaymentPlan.dict v1.0
 * FileSize=5328 Header=248 CRC=642097297
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.ClaimServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PaymentPlan.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.ClaimServices.EEProvider.PaymentPlan.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_PLAN_ENTITY"),
    TableMap(TableName="PAYMENT_PLAN", Schema="PAYM"),
    ]
    public partial class PaymentPlan :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentPlanCode = "PaymentPlanCode";
			public static readonly string ClassPaymentCode = "ClassPaymentCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string TaxPercentage = "TaxPercentage";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentPlanCode">Propiedad clave PaymentPlanCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentPlanCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentPlanCode, paymentPlanCode);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentPlanCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentPlanCode">Propiedad clave PaymentPlanCode.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentPlanCode)
	    {
			return InternalCreatePrimaryKey<PaymentPlan>(paymentPlanCode);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<PaymentPlan>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ClassPaymentCode.
        /// </summary>
        private int? _classPaymentCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad TaxPercentage.
		/// </summary>
        private decimal? _taxPercentage = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentPlanCode">PaymentPlanCode key property.</param>
	    public PaymentPlan(int paymentPlanCode):
			this(PaymentPlan.CreatePrimaryKey(paymentPlanCode), null)
	    {
	    }

        public PaymentPlan() :
            this(PaymentPlan.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PaymentPlan(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentPlanCode.
		/// </summary>
		/// <value>Propiedad PaymentPlanCode.</value>
	    [
		DescriptionKey("PAYMENT_PLAN_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_PLAN_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentPlanCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentPlanCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentPlanCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClassPaymentCode.
		/// </summary>
		/// <value>Propiedad ClassPaymentCode.</value>
	    [
		DescriptionKey("CLASS_PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CLASS_PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ClassPaymentCode
	    {
		    get
		    {
			    return this._classPaymentCode;
		    }
		    set
		    {
				this._classPaymentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxPercentage.
		/// </summary>
		/// <value>Propiedad TaxPercentage.</value>
	    [
		DescriptionKey("TAX_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAX_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TaxPercentage
	    {
		    get
		    {
			    return this._taxPercentage;
		    }
		    set
		    {
				this._taxPercentage = value;
			}
	    }

    }
}