/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetAppTempDailyAccoutingV.dict v1.0
 * FileSize=21255 Header=267 CRC=2458572904
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad GetAppTempDailyAccoutingV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.GetAppTempDailyAccoutingV.dict"),
    Serializable(),
    DescriptionKey("GET_APP_TEMP_DAILY_ACCOUTING_V_ENTITY"),
    TableMap(TableName="GET_APP_TEMP_DAILY_ACCOUTING_V", Schema="ACC"),
    ]
    public partial class GetAppTempDailyAccoutingV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempAppAccountingCode = "TempAppAccountingCode";
			public static readonly string TempAppCode = "TempAppCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string SalePointDescription = "SalePointDescription";
			public static readonly string IndividualCode = "IndividualCode";
			public static readonly string BeneficiaryDocumentNumber = "BeneficiaryDocumentNumber";
			public static readonly string BeneficiaryName = "BeneficiaryName";
			public static readonly string AccountingNumber = "AccountingNumber";
			public static readonly string AccountingName = "AccountingName";
			public static readonly string AccountingConceptCode = "AccountingConceptCode";
			public static readonly string AccountingAccountCode = "AccountingAccountCode";
			public static readonly string AccountingNatureCode = "AccountingNatureCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string LocalAmount = "LocalAmount";
			public static readonly string Description = "Description";
			public static readonly string BankReconciliationCode = "BankReconciliationCode";
			public static readonly string ReceiptNumber = "ReceiptNumber";
			public static readonly string ReceiptDate = "ReceiptDate";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string AccountingAccountId = "AccountingAccountId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<GetAppTempDailyAccoutingV>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempAppAccountingCode.
		/// </summary>
        private int _tempAppAccountingCode;
		/// <summary>
		/// Atributo para la propiedad TempAppCode.
		/// </summary>
        private int? _tempAppCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private int? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad SalePointDescription.
		/// </summary>
        private string _salePointDescription = null;
		/// <summary>
		/// Atributo para la propiedad IndividualCode.
		/// </summary>
        private int? _individualCode = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryDocumentNumber.
		/// </summary>
        private string _beneficiaryDocumentNumber = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryName.
		/// </summary>
        private string _beneficiaryName = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNumber.
		/// </summary>
        private string _accountingNumber = null;
		/// <summary>
		/// Atributo para la propiedad AccountingName.
		/// </summary>
        private string _accountingName = null;
		/// <summary>
		/// Atributo para la propiedad AccountingConceptCode.
		/// </summary>
        private int? _accountingConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountCode.
		/// </summary>
        private int? _accountingAccountCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNatureCode.
		/// </summary>
        private int? _accountingNatureCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad LocalAmount.
		/// </summary>
        private decimal? _localAmount = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad BankReconciliationCode.
		/// </summary>
        private int? _bankReconciliationCode = null;
		/// <summary>
		/// Atributo para la propiedad ReceiptNumber.
		/// </summary>
        private int? _receiptNumber = null;
		/// <summary>
		/// Atributo para la propiedad ReceiptDate.
		/// </summary>
        private DateTime? _receiptDate = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int _individualId;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountId.
		/// </summary>
        private int _accountingAccountId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public GetAppTempDailyAccoutingV():
			this(GetAppTempDailyAccoutingV.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetAppTempDailyAccoutingV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempAppAccountingCode.
		/// </summary>
		/// <value>Propiedad TempAppAccountingCode.</value>
	    [
		DescriptionKey("TEMP_APP_ACCOUNTING_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TEMP_APP_ACCOUNTING_CD", DbType=System.Data.DbType.String),
	    ]
        public int TempAppAccountingCode
	    {
		    get
		    {
			    return this._tempAppAccountingCode;
		    }
		    set
		    {
				this._tempAppAccountingCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempAppCode.
		/// </summary>
		/// <value>Propiedad TempAppCode.</value>
	    [
		DescriptionKey("TEMP_APP_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_APP_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempAppCode
	    {
		    get
		    {
			    return this._tempAppCode;
		    }
		    set
		    {
				this._tempAppCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointDescription.
		/// </summary>
		/// <value>Propiedad SalePointDescription.</value>
	    [
		DescriptionKey("SALE_POINT_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SALE_POINT_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SalePointDescription
	    {
		    get
		    {
			    return this._salePointDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SalePointDescription);
				}
				this._salePointDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualCode.
		/// </summary>
		/// <value>Propiedad IndividualCode.</value>
	    [
		DescriptionKey("INDIVIDUAL_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_CD", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualCode
	    {
		    get
		    {
			    return this._individualCode;
		    }
		    set
		    {
				this._individualCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryDocumentNumber.
		/// </summary>
		/// <value>Propiedad BeneficiaryDocumentNumber.</value>
	    [
		DescriptionKey("BENEFICIARY_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryDocumentNumber
	    {
		    get
		    {
			    return this._beneficiaryDocumentNumber;
		    }
		    set
		    {
				this._beneficiaryDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryName.
		/// </summary>
		/// <value>Propiedad BeneficiaryName.</value>
	    [
		DescriptionKey("BENEFICIARY_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryName
	    {
		    get
		    {
			    return this._beneficiaryName;
		    }
		    set
		    {
				this._beneficiaryName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNumber.
		/// </summary>
		/// <value>Propiedad AccountingNumber.</value>
	    [
		DescriptionKey("ACCOUNTING_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNTING_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AccountingNumber
	    {
		    get
		    {
			    return this._accountingNumber;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountingNumber);
				}
				this._accountingNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingName.
		/// </summary>
		/// <value>Propiedad AccountingName.</value>
	    [
		DescriptionKey("ACCOUNTING_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNTING_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountingName
	    {
		    get
		    {
			    return this._accountingName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountingName);
				}
				this._accountingName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingConceptCode.
		/// </summary>
		/// <value>Propiedad AccountingConceptCode.</value>
	    [
		DescriptionKey("ACCOUNTING_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingConceptCode
	    {
		    get
		    {
			    return this._accountingConceptCode;
		    }
		    set
		    {
				this._accountingConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountCode.
		/// </summary>
		/// <value>Propiedad AccountingAccountCode.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountCode
	    {
		    get
		    {
			    return this._accountingAccountCode;
		    }
		    set
		    {
				this._accountingAccountCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNatureCode.
		/// </summary>
		/// <value>Propiedad AccountingNatureCode.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNatureCode
	    {
		    get
		    {
			    return this._accountingNatureCode;
		    }
		    set
		    {
				this._accountingNatureCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LocalAmount.
		/// </summary>
		/// <value>Propiedad LocalAmount.</value>
	    [
		DescriptionKey("LOCAL_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOCAL_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? LocalAmount
	    {
		    get
		    {
			    return this._localAmount;
		    }
		    set
		    {
				this._localAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankReconciliationCode.
		/// </summary>
		/// <value>Propiedad BankReconciliationCode.</value>
	    [
		DescriptionKey("BANK_RECONCILIATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_RECONCILIATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankReconciliationCode
	    {
		    get
		    {
			    return this._bankReconciliationCode;
		    }
		    set
		    {
				this._bankReconciliationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceiptNumber.
		/// </summary>
		/// <value>Propiedad ReceiptNumber.</value>
	    [
		DescriptionKey("RECEIPT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIPT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? ReceiptNumber
	    {
		    get
		    {
			    return this._receiptNumber;
		    }
		    set
		    {
				this._receiptNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceiptDate.
		/// </summary>
		/// <value>Propiedad ReceiptDate.</value>
	    [
		DescriptionKey("RECEIPT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIPT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ReceiptDate
	    {
		    get
		    {
			    return this._receiptDate;
		    }
		    set
		    {
				this._receiptDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountId.
		/// </summary>
		/// <value>Propiedad AccountingAccountId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingAccountId
	    {
		    get
		    {
			    return this._accountingAccountId;
		    }
		    set
		    {
				this._accountingAccountId = value;
			}
	    }

    }
}