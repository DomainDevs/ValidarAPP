/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.IndividualPaymentOrderV.dict v1.0
 * FileSize=12579 Header=283 CRC=121653464
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad IndividualPaymentOrderV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.IndividualPaymentOrderV.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_PAYMENT_ORDER_V_ENTITY"),
    TableMap(TableName="INDIVIDUAL_PAYMENT_ORDER_V", Schema="ACC"),
    ]
    public partial class IndividualPaymentOrderV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentOrderCode = "PaymentOrderCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string CompanyCode = "CompanyCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyName = "CurrencyName";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string Name = "Name";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string EstimatedPaymentDate = "EstimatedPaymentDate";
			public static readonly string PaymentSourceCode = "PaymentSourceCode";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Amount = "Amount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentOrderCode">Propiedad clave PaymentOrderCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentOrderCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentOrderCode, paymentOrderCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentOrderCode">Propiedad clave PaymentOrderCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentOrderCode)
	    {
			return InternalCreatePrimaryKey<IndividualPaymentOrderV>(paymentOrderCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad CompanyCode.
		/// </summary>
        private int? _companyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyName.
		/// </summary>
        private string _currencyName = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad Name.
		/// </summary>
        private string _name = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int? _personTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad EstimatedPaymentDate.
		/// </summary>
        private DateTime? _estimatedPaymentDate = null;
		/// <summary>
		/// Atributo para la propiedad PaymentSourceCode.
		/// </summary>
        private int? _paymentSourceCode = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentOrderCode">PaymentOrderCode key property.</param>
	    public IndividualPaymentOrderV(int paymentOrderCode):
			this(IndividualPaymentOrderV.CreatePrimaryKey(paymentOrderCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public IndividualPaymentOrderV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentOrderCode.
		/// </summary>
		/// <value>Propiedad PaymentOrderCode.</value>
	    [
		DescriptionKey("PAYMENT_ORDER_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_ORDER_CODE", DbType=System.Data.DbType.String),
	    ]
        public int PaymentOrderCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentOrderCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentOrderCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyCode.
		/// </summary>
		/// <value>Propiedad CompanyCode.</value>
	    [
		DescriptionKey("COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMPANY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CompanyCode
	    {
		    get
		    {
			    return this._companyCode;
		    }
		    set
		    {
				this._companyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyName.
		/// </summary>
		/// <value>Propiedad CurrencyName.</value>
	    [
		DescriptionKey("CURRENCY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyName
	    {
		    get
		    {
			    return this._currencyName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
				}
				this._currencyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Name.
		/// </summary>
		/// <value>Propiedad Name.</value>
	    [
		DescriptionKey("NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NAME", DbType=System.Data.DbType.String),
	    ]
        public string Name
	    {
		    get
		    {
			    return this._name;
		    }
		    set
		    {
				this._name = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimatedPaymentDate.
		/// </summary>
		/// <value>Propiedad EstimatedPaymentDate.</value>
	    [
		DescriptionKey("ESTIMATED_PAYMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATED_PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimatedPaymentDate
	    {
		    get
		    {
			    return this._estimatedPaymentDate;
		    }
		    set
		    {
				this._estimatedPaymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentSourceCode.
		/// </summary>
		/// <value>Propiedad PaymentSourceCode.</value>
	    [
		DescriptionKey("PAYMENT_SOURCE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_SOURCE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentSourceCode
	    {
		    get
		    {
			    return this._paymentSourceCode;
		    }
		    set
		    {
				this._paymentSourceCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

    }
}