/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetRejectedPaymentV.dict v1.0
 * FileSize=16617 Header=280 CRC=1513502028
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad GetRejectedPaymentV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.GetRejectedPaymentV.dict"),
    Serializable(),
    DescriptionKey("GET_REJECTED_PAYMENT_V_ENTITY"),
    TableMap(TableName="GET_REJECTED_PAYMENT_V", Schema="ACC"),
    ]
    public partial class GetRejectedPaymentV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RejectedPaymentCode = "RejectedPaymentCode";
			public static readonly string PaymentCode = "PaymentCode";
			public static readonly string IssuingBankCode = "IssuingBankCode";
			public static readonly string IssuingAccountNumber = "IssuingAccountNumber";
			public static readonly string BankDescription = "BankDescription";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string DatePayment = "DatePayment";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string Amount = "Amount";
			public static readonly string Holder = "Holder";
			public static readonly string CollectCode = "CollectCode";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string Name = "Name";
			public static readonly string RejectionDate = "RejectionDate";
			public static readonly string RejectionCode = "RejectionCode";
			public static readonly string RejectionDescription = "RejectionDescription";
			public static readonly string Status = "Status";
			public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="rejectedPaymentCode">Propiedad clave RejectedPaymentCode.</param>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int rejectedPaymentCode, int paymentCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RejectedPaymentCode, rejectedPaymentCode);
		    keys.Add(Properties.PaymentCode, paymentCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="rejectedPaymentCode">Propiedad clave RejectedPaymentCode.</param>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		public static PrimaryKey CreatePrimaryKey(int rejectedPaymentCode, int paymentCode)
	    {
			return InternalCreatePrimaryKey<GetRejectedPaymentV>(rejectedPaymentCode, paymentCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IssuingBankCode.
		/// </summary>
        private int? _issuingBankCode = null;
		/// <summary>
		/// Atributo para la propiedad IssuingAccountNumber.
		/// </summary>
        private string _issuingAccountNumber = null;
		/// <summary>
		/// Atributo para la propiedad BankDescription.
		/// </summary>
        private string _bankDescription = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad DatePayment.
		/// </summary>
        private DateTime? _datePayment = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Holder.
		/// </summary>
        private string _holder = null;
		/// <summary>
		/// Atributo para la propiedad CollectCode.
		/// </summary>
        private int? _collectCode = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad Name.
		/// </summary>
        private string _name = null;
		/// <summary>
		/// Atributo para la propiedad RejectionDate.
		/// </summary>
        private DateTime? _rejectionDate = null;
		/// <summary>
		/// Atributo para la propiedad RejectionCode.
		/// </summary>
        private int? _rejectionCode = null;
		/// <summary>
		/// Atributo para la propiedad RejectionDescription.
		/// </summary>
        private string _rejectionDescription = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeCode.
		/// </summary>
        private int? _paymentMethodTypeCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="rejectedPaymentCode">RejectedPaymentCode key property.</param>
		/// <param name="paymentCode">PaymentCode key property.</param>
	    public GetRejectedPaymentV(int rejectedPaymentCode, int paymentCode):
			this(GetRejectedPaymentV.CreatePrimaryKey(rejectedPaymentCode, paymentCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetRejectedPaymentV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectedPaymentCode.
		/// </summary>
		/// <value>Propiedad RejectedPaymentCode.</value>
	    [
		DescriptionKey("REJECTED_PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="REJECTED_PAYMENT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int RejectedPaymentCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RejectedPaymentCode];
		    }
		    set
		    {
				this._primaryKey[Properties.RejectedPaymentCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentCode.
		/// </summary>
		/// <value>Propiedad PaymentCode.</value>
	    [
		DescriptionKey("PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int PaymentCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssuingBankCode.
		/// </summary>
		/// <value>Propiedad IssuingBankCode.</value>
	    [
		DescriptionKey("ISSUING_BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ISSUING_BANK_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? IssuingBankCode
	    {
		    get
		    {
			    return this._issuingBankCode;
		    }
		    set
		    {
				this._issuingBankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssuingAccountNumber.
		/// </summary>
		/// <value>Propiedad IssuingAccountNumber.</value>
	    [
		DescriptionKey("ISSUING_ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ISSUING_ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string IssuingAccountNumber
	    {
		    get
		    {
			    return this._issuingAccountNumber;
		    }
		    set
		    {
				this._issuingAccountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankDescription.
		/// </summary>
		/// <value>Propiedad BankDescription.</value>
	    [
		DescriptionKey("BANK_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BANK_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BankDescription
	    {
		    get
		    {
			    return this._bankDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BankDescription);
				}
				this._bankDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DatePayment.
		/// </summary>
		/// <value>Propiedad DatePayment.</value>
	    [
		DescriptionKey("DATE_PAYMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_PAYMENT", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DatePayment
	    {
		    get
		    {
			    return this._datePayment;
		    }
		    set
		    {
				this._datePayment = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Holder.
		/// </summary>
		/// <value>Propiedad Holder.</value>
	    [
		DescriptionKey("HOLDER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="HOLDER", DbType=System.Data.DbType.String),
	    ]
        public string Holder
	    {
		    get
		    {
			    return this._holder;
		    }
		    set
		    {
				this._holder = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectCode.
		/// </summary>
		/// <value>Propiedad CollectCode.</value>
	    [
		DescriptionKey("COLLECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CollectCode
	    {
		    get
		    {
			    return this._collectCode;
		    }
		    set
		    {
				this._collectCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Name.
		/// </summary>
		/// <value>Propiedad Name.</value>
	    [
		DescriptionKey("NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Name", DbType=System.Data.DbType.String),
	    ]
        public string Name
	    {
		    get
		    {
			    return this._name;
		    }
		    set
		    {
				this._name = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectionDate.
		/// </summary>
		/// <value>Propiedad RejectionDate.</value>
	    [
		DescriptionKey("REJECTION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REJECTION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RejectionDate
	    {
		    get
		    {
			    return this._rejectionDate;
		    }
		    set
		    {
				this._rejectionDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectionCode.
		/// </summary>
		/// <value>Propiedad RejectionCode.</value>
	    [
		DescriptionKey("REJECTION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REJECTION_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? RejectionCode
	    {
		    get
		    {
			    return this._rejectionCode;
		    }
		    set
		    {
				this._rejectionCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectionDescription.
		/// </summary>
		/// <value>Propiedad RejectionDescription.</value>
	    [
		DescriptionKey("REJECTION_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REJECTION_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string RejectionDescription
	    {
		    get
		    {
			    return this._rejectionDescription;
		    }
		    set
		    {
				this._rejectionDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodTypeCode
	    {
		    get
		    {
			    return this._paymentMethodTypeCode;
		    }
		    set
		    {
				this._paymentMethodTypeCode = value;
			}
	    }

    }
}