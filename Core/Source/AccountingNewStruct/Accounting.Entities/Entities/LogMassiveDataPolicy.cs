/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.LogMassiveDataPolicy.dict v1.0
 * FileSize=9739 Header=260 CRC=572529861
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad LogMassiveDataPolicy.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.LogMassiveDataPolicy.dict"),
    Serializable(),
    DescriptionKey("LOG_MASSIVE_DATA_POLICY_ENTITY"),
    TableMap(TableName="LOG_MASSIVE_DATA_POLICY", Schema="ACC"),
    ]
    public partial class LogMassiveDataPolicy :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string ProcessId = "ProcessId";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
			public static readonly string PolicyNumber = "PolicyNumber";
			public static readonly string EndorsementNumber = "EndorsementNumber";
			public static readonly string BranchId = "BranchId";
			public static readonly string PrefixId = "PrefixId";
			public static readonly string Amount = "Amount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string LogMessage = "LogMessage";
			public static readonly string DateGenerate = "DateGenerate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<LogMassiveDataPolicy>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Id.
		/// </summary>
        private int _id;
		/// <summary>
		/// Atributo para la propiedad ProcessId.
		/// </summary>
        private int? _processId = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
		/// <summary>
		/// Atributo para la propiedad PolicyNumber.
		/// </summary>
        private int? _policyNumber = null;
		/// <summary>
		/// Atributo para la propiedad EndorsementNumber.
		/// </summary>
        private int? _endorsementNumber = null;
		/// <summary>
		/// Atributo para la propiedad BranchId.
		/// </summary>
        private int? _branchId = null;
		/// <summary>
		/// Atributo para la propiedad PrefixId.
		/// </summary>
        private int? _prefixId = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad LogMessage.
		/// </summary>
        private string _logMessage = null;
		/// <summary>
		/// Atributo para la propiedad DateGenerate.
		/// </summary>
        private DateTime? _dateGenerate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public LogMassiveDataPolicy():
			this(LogMassiveDataPolicy.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public LogMassiveDataPolicy(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
			    return this._id;
		    }
		    set
		    {
				this._id = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessId.
		/// </summary>
		/// <value>Propiedad ProcessId.</value>
	    [
		DescriptionKey("PROCESS_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int? ProcessId
	    {
		    get
		    {
			    return this._processId;
		    }
		    set
		    {
				this._processId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyNumber.
		/// </summary>
		/// <value>Propiedad PolicyNumber.</value>
	    [
		DescriptionKey("POLICY_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POLICY_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? PolicyNumber
	    {
		    get
		    {
			    return this._policyNumber;
		    }
		    set
		    {
				this._policyNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementNumber.
		/// </summary>
		/// <value>Propiedad EndorsementNumber.</value>
	    [
		DescriptionKey("ENDORSEMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENDORSEMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? EndorsementNumber
	    {
		    get
		    {
			    return this._endorsementNumber;
		    }
		    set
		    {
				this._endorsementNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchId.
		/// </summary>
		/// <value>Propiedad BranchId.</value>
	    [
		DescriptionKey("BRANCH_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BranchId
	    {
		    get
		    {
			    return this._branchId;
		    }
		    set
		    {
				this._branchId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixId.
		/// </summary>
		/// <value>Propiedad PrefixId.</value>
	    [
		DescriptionKey("PREFIX_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREFIX_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PrefixId
	    {
		    get
		    {
			    return this._prefixId;
		    }
		    set
		    {
				this._prefixId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LogMessage.
		/// </summary>
		/// <value>Propiedad LogMessage.</value>
	    [
		DescriptionKey("LOG_MESSAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOG_MESSAGE", DbType=System.Data.DbType.String),
	    ]
        public string LogMessage
	    {
		    get
		    {
			    return this._logMessage;
		    }
		    set
		    {
				this._logMessage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DateGenerate.
		/// </summary>
		/// <value>Propiedad DateGenerate.</value>
	    [
		DescriptionKey("DATE_GENERATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_GENERATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DateGenerate
	    {
		    get
		    {
			    return this._dateGenerate;
		    }
		    set
		    {
				this._dateGenerate = value;
			}
	    }

    }
}