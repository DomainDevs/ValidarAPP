/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.PaymentBallot.dict v1.0
 * FileSize=10922 Header=274 CRC=3171874854
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad PaymentBallot.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.PaymentBallot.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_BALLOT_ENTITY"),
    TableMap(TableName = "PAYMENT_BALLOT", Schema = "ACC"),
    ]
    public partial class PaymentBallot :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PaymentBallotCode = "PaymentBallotCode";
            public static readonly string PaymentBallotNumber = "PaymentBallotNumber";
            public static readonly string BankCode = "BankCode";
            public static readonly string AccountNumber = "AccountNumber";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string BankDate = "BankDate";
            public static readonly string BallotAmount = "BallotAmount";
            public static readonly string BankAmount = "BankAmount";
            public static readonly string RegisterDate = "RegisterDate";
            public static readonly string UserId = "UserId";
            public static readonly string Status = "Status";
            public static readonly string TechnicalTransaction = "TechnicalTransaction";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="paymentBallotCode">Propiedad clave PaymentBallotCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentBallotCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentBallotCode, paymentBallotCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentBallotCode">Propiedad clave PaymentBallotCode.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentBallotCode)
        {
            return InternalCreatePrimaryKey<PaymentBallot>(paymentBallotCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentBallotNumber.
        /// </summary>
        private string _paymentBallotNumber = null;
        /// <summary>
        /// Atributo para la propiedad BankCode.
        /// </summary>
        private int? _bankCode = null;
        /// <summary>
        /// Atributo para la propiedad AccountNumber.
        /// </summary>
        private string _accountNumber = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int? _currencyCode = null;
        /// <summary>
        /// Atributo para la propiedad BankDate.
        /// </summary>
        private DateTime? _bankDate = null;
        /// <summary>
        /// Atributo para la propiedad BallotAmount.
        /// </summary>
        private decimal? _ballotAmount = null;
        /// <summary>
        /// Atributo para la propiedad BankAmount.
        /// </summary>
        private decimal? _bankAmount = null;
        /// <summary>
        /// Atributo para la propiedad RegisterDate.
        /// </summary>
        private DateTime? _registerDate = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int? _userId = null;
        /// <summary>
        /// Atributo para la propiedad Status.
        /// </summary>
        private int? _status = null;
        /// <summary>
        /// Atributo para la propiedad TechnicalTransaction.
        /// </summary>
        private int? _technicalTransaction = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="paymentBallotCode">PaymentBallotCode key property.</param>
        public PaymentBallot(int paymentBallotCode) :
            this(PaymentBallot.CreatePrimaryKey(paymentBallotCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PaymentBallot(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentBallotCode.
        /// </summary>
        /// <value>Propiedad PaymentBallotCode.</value>
        [
        DescriptionKey("PAYMENT_BALLOT_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_BALLOT_CD", DbType = System.Data.DbType.String),
        ]
        public int PaymentBallotCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentBallotCode];
            }
            set
            {
                this._primaryKey[Properties.PaymentBallotCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentBallotNumber.
        /// </summary>
        /// <value>Propiedad PaymentBallotNumber.</value>
        [
        DescriptionKey("PAYMENT_BALLOT_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_BALLOT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string PaymentBallotNumber
        {
            get
            {
                return this._paymentBallotNumber;
            }
            set
            {
                this._paymentBallotNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BankCode.
        /// </summary>
        /// <value>Propiedad BankCode.</value>
        [
        DescriptionKey("BANK_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BANK_CD", DbType = System.Data.DbType.String),
        ]
        public int? BankCode
        {
            get
            {
                return this._bankCode;
            }
            set
            {
                this._bankCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountNumber.
        /// </summary>
        /// <value>Propiedad AccountNumber.</value>
        [
        DescriptionKey("ACCOUNT_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string AccountNumber
        {
            get
            {
                return this._accountNumber;
            }
            set
            {
                this._accountNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BankDate.
        /// </summary>
        /// <value>Propiedad BankDate.</value>
        [
        DescriptionKey("BANK_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BANK_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? BankDate
        {
            get
            {
                return this._bankDate;
            }
            set
            {
                this._bankDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BallotAmount.
        /// </summary>
        /// <value>Propiedad BallotAmount.</value>
        [
        DescriptionKey("BALLOT_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BALLOT_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? BallotAmount
        {
            get
            {
                return this._ballotAmount;
            }
            set
            {
                this._ballotAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BankAmount.
        /// </summary>
        /// <value>Propiedad BankAmount.</value>
        [
        DescriptionKey("BANK_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BANK_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? BankAmount
        {
            get
            {
                return this._bankAmount;
            }
            set
            {
                this._bankAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RegisterDate.
        /// </summary>
        /// <value>Propiedad RegisterDate.</value>
        [
        DescriptionKey("REGISTER_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "REGISTER_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? RegisterDate
        {
            get
            {
                return this._registerDate;
            }
            set
            {
                this._registerDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Status.
        /// </summary>
        /// <value>Propiedad Status.</value>
        [
        DescriptionKey("STATUS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATUS", DbType = System.Data.DbType.String),
        ]
        public int? Status
        {
            get
            {
                return this._status;
            }
            set
            {
                this._status = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TechnicalTransaction.
        /// </summary>
        /// <value>Propiedad TechnicalTransaction.</value>
        [
        DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TECHNICAL_TRANSACTION", DbType = System.Data.DbType.String),
        ]
        public int? TechnicalTransaction
        {
            get
            {
                return this._technicalTransaction;
            }
            set
            {
                this._technicalTransaction = value;
            }
        }

    }
}
