/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetCardToDeposit.dict v1.0
 * FileSize=17557 Header=276 CRC=240198455
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CardsDeposit View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CardsDeposit.dict"),
    Serializable(),
    DescriptionKey("GET_CARD_TO_DEPOSIT_ENTITY"),
    TableMap(TableName="GET_CARD_TO_DEPOSIT", Schema="ACC"),
    ]
    public partial class CardsDeposit :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentCode = "PaymentCode";
			public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
			public static readonly string PaymentMethodTypeName = "PaymentMethodTypeName";
			public static readonly string IssuingBankCode = "IssuingBankCode";
			public static readonly string BankName = "BankName";
			public static readonly string CreditCardTypeCode = "CreditCardTypeCode";
			public static readonly string Voucher = "Voucher";
			public static readonly string CardNumber = "CardNumber";
			public static readonly string ReceiptNumber = "ReceiptNumber";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyName = "CurrencyName";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Amount = "Amount";
			public static readonly string TaxAmount = "TaxAmount";
			public static readonly string CommissionAmount = "CommissionAmount";
			public static readonly string CardDate = "CardDate";
			public static readonly string Holder = "Holder";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string Status = "Status";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentCode, paymentCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentCode)
	    {
			return InternalCreatePrimaryKey<CardsDeposit>(paymentCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeCode.
		/// </summary>
        private int? _paymentMethodTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeName.
		/// </summary>
        private string _paymentMethodTypeName = null;
		/// <summary>
		/// Atributo para la propiedad IssuingBankCode.
		/// </summary>
        private int? _issuingBankCode = null;
		/// <summary>
		/// Atributo para la propiedad BankName.
		/// </summary>
        private string _bankName = null;
		/// <summary>
		/// Atributo para la propiedad CreditCardTypeCode.
		/// </summary>
        private int? _creditCardTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad Voucher.
		/// </summary>
        private string _voucher = null;
		/// <summary>
		/// Atributo para la propiedad CardNumber.
		/// </summary>
        private string _cardNumber = null;
		/// <summary>
		/// Atributo para la propiedad ReceiptNumber.
		/// </summary>
        private int? _receiptNumber = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyName.
		/// </summary>
        private string _currencyName = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad TaxAmount.
		/// </summary>
        private decimal? _taxAmount = null;
		/// <summary>
		/// Atributo para la propiedad CommissionAmount.
		/// </summary>
        private decimal? _commissionAmount = null;
		/// <summary>
		/// Atributo para la propiedad CardDate.
		/// </summary>
        private DateTime? _cardDate = null;
		/// <summary>
		/// Atributo para la propiedad Holder.
		/// </summary>
        private string _holder = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentCode">PaymentCode key property.</param>
	    public CardsDeposit(int paymentCode):
			this(CardsDeposit.CreatePrimaryKey(paymentCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CardsDeposit(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentCode.
		/// </summary>
		/// <value>Propiedad PaymentCode.</value>
	    [
		DescriptionKey("PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodTypeCode
	    {
		    get
		    {
			    return this._paymentMethodTypeCode;
		    }
		    set
		    {
				this._paymentMethodTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeName.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeName.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PaymentMethodTypeName
	    {
		    get
		    {
			    return this._paymentMethodTypeName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PaymentMethodTypeName);
				}
				this._paymentMethodTypeName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssuingBankCode.
		/// </summary>
		/// <value>Propiedad IssuingBankCode.</value>
	    [
		DescriptionKey("ISSUING_BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ISSUING_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? IssuingBankCode
	    {
		    get
		    {
			    return this._issuingBankCode;
		    }
		    set
		    {
				this._issuingBankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankName.
		/// </summary>
		/// <value>Propiedad BankName.</value>
	    [
		DescriptionKey("BANK_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BANK_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BankName
	    {
		    get
		    {
			    return this._bankName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BankName);
				}
				this._bankName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CreditCardTypeCode.
		/// </summary>
		/// <value>Propiedad CreditCardTypeCode.</value>
	    [
		DescriptionKey("CREDIT_CARD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CREDIT_CARD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CreditCardTypeCode
	    {
		    get
		    {
			    return this._creditCardTypeCode;
		    }
		    set
		    {
				this._creditCardTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Voucher.
		/// </summary>
		/// <value>Propiedad Voucher.</value>
	    [
		DescriptionKey("VOUCHER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VOUCHER", DbType=System.Data.DbType.String),
	    ]
        public string Voucher
	    {
		    get
		    {
			    return this._voucher;
		    }
		    set
		    {
				this._voucher = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CardNumber.
		/// </summary>
		/// <value>Propiedad CardNumber.</value>
	    [
		DescriptionKey("CARD_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CARD_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string CardNumber
	    {
		    get
		    {
			    return this._cardNumber;
		    }
		    set
		    {
				this._cardNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceiptNumber.
		/// </summary>
		/// <value>Propiedad ReceiptNumber.</value>
	    [
		DescriptionKey("RECEIPT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIPT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? ReceiptNumber
	    {
		    get
		    {
			    return this._receiptNumber;
		    }
		    set
		    {
				this._receiptNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyName.
		/// </summary>
		/// <value>Propiedad CurrencyName.</value>
	    [
		DescriptionKey("CURRENCY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyName
	    {
		    get
		    {
			    return this._currencyName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
				}
				this._currencyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxAmount.
		/// </summary>
		/// <value>Propiedad TaxAmount.</value>
	    [
		DescriptionKey("TAX_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAX_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TaxAmount
	    {
		    get
		    {
			    return this._taxAmount;
		    }
		    set
		    {
				this._taxAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionAmount.
		/// </summary>
		/// <value>Propiedad CommissionAmount.</value>
	    [
		DescriptionKey("COMMISSION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionAmount
	    {
		    get
		    {
			    return this._commissionAmount;
		    }
		    set
		    {
				this._commissionAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CardDate.
		/// </summary>
		/// <value>Propiedad CardDate.</value>
	    [
		DescriptionKey("CARD_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CARD_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CardDate
	    {
		    get
		    {
			    return this._cardDate;
		    }
		    set
		    {
				this._cardDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Holder.
		/// </summary>
		/// <value>Propiedad Holder.</value>
	    [
		DescriptionKey("HOLDER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="HOLDER", DbType=System.Data.DbType.String),
	    ]
        public string Holder
	    {
		    get
		    {
			    return this._holder;
		    }
		    set
		    {
				this._holder = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

    }
}