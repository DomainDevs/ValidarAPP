/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.TempShipment.dict v1.0
 * FileSize=12376 Header=273 CRC=3282697350
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad TempShipment.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.TempShipment.dict"),
    Serializable(),
    DescriptionKey("TEMP_SHIPMENT_ENTITY"),
    TableMap(TableName="TEMP_SHIPMENT", Schema="ACC"),
    ]
    public partial class TempShipment :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ShipmentId = "ShipmentId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BankNetworkCode = "BankNetworkCode";
			public static readonly string ProcessDate = "ProcessDate";
			public static readonly string ShippingDate = "ShippingDate";
			public static readonly string ImputationDate = "ImputationDate";
			public static readonly string StatusCode = "StatusCode";
			public static readonly string CouponTotalNumber = "CouponTotalNumber";
			public static readonly string CouponReceivedNumber = "CouponReceivedNumber";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string TotalAmount = "TotalAmount";
			public static readonly string ReceivedAmount = "ReceivedAmount";
			public static readonly string UserCode = "UserCode";
			public static readonly string ReceptionDate = "ReceptionDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="shipmentId">Propiedad clave ShipmentId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(string shipmentId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ShipmentId, shipmentId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="shipmentId">Propiedad clave ShipmentId.</param>
		public static PrimaryKey CreatePrimaryKey(string shipmentId)
	    {
			return InternalCreatePrimaryKey<TempShipment>(shipmentId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BankNetworkCode.
		/// </summary>
        private int? _bankNetworkCode = null;
		/// <summary>
		/// Atributo para la propiedad ProcessDate.
		/// </summary>
        private DateTime? _processDate = null;
		/// <summary>
		/// Atributo para la propiedad ShippingDate.
		/// </summary>
        private DateTime? _shippingDate = null;
		/// <summary>
		/// Atributo para la propiedad ImputationDate.
		/// </summary>
        private DateTime? _imputationDate = null;
		/// <summary>
		/// Atributo para la propiedad StatusCode.
		/// </summary>
        private int? _statusCode = null;
		/// <summary>
		/// Atributo para la propiedad CouponTotalNumber.
		/// </summary>
        private int? _couponTotalNumber = null;
		/// <summary>
		/// Atributo para la propiedad CouponReceivedNumber.
		/// </summary>
        private int? _couponReceivedNumber = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad TotalAmount.
		/// </summary>
        private decimal? _totalAmount = null;
		/// <summary>
		/// Atributo para la propiedad ReceivedAmount.
		/// </summary>
        private decimal? _receivedAmount = null;
		/// <summary>
		/// Atributo para la propiedad UserCode.
		/// </summary>
        private int? _userCode = null;
		/// <summary>
		/// Atributo para la propiedad ReceptionDate.
		/// </summary>
        private DateTime? _receptionDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="shipmentId">ShipmentId key property.</param>
	    public TempShipment(string shipmentId):
			this(TempShipment.CreatePrimaryKey(shipmentId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempShipment(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ShipmentId.
		/// </summary>
		/// <value>Propiedad ShipmentId.</value>
	    [
		DescriptionKey("SHIPMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SHIPMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public string ShipmentId
	    {
		    get
		    {
				return (string)this._primaryKey[Properties.ShipmentId];
		    }
		    set
		    {
				this._primaryKey[Properties.ShipmentId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankNetworkCode.
		/// </summary>
		/// <value>Propiedad BankNetworkCode.</value>
	    [
		DescriptionKey("BANK_NETWORK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_NETWORK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankNetworkCode
	    {
		    get
		    {
			    return this._bankNetworkCode;
		    }
		    set
		    {
				this._bankNetworkCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessDate.
		/// </summary>
		/// <value>Propiedad ProcessDate.</value>
	    [
		DescriptionKey("PROCESS_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PROCESS_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ProcessDate
	    {
		    get
		    {
			    return this._processDate;
		    }
		    set
		    {
				this._processDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ShippingDate.
		/// </summary>
		/// <value>Propiedad ShippingDate.</value>
	    [
		DescriptionKey("SHIPPING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SHIPPING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ShippingDate
	    {
		    get
		    {
			    return this._shippingDate;
		    }
		    set
		    {
				this._shippingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationDate.
		/// </summary>
		/// <value>Propiedad ImputationDate.</value>
	    [
		DescriptionKey("IMPUTATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IMPUTATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ImputationDate
	    {
		    get
		    {
			    return this._imputationDate;
		    }
		    set
		    {
				this._imputationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StatusCode.
		/// </summary>
		/// <value>Propiedad StatusCode.</value>
	    [
		DescriptionKey("STATUS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? StatusCode
	    {
		    get
		    {
			    return this._statusCode;
		    }
		    set
		    {
				this._statusCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CouponTotalNumber.
		/// </summary>
		/// <value>Propiedad CouponTotalNumber.</value>
	    [
		DescriptionKey("COUPON_TOTAL_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COUPON_TOTAL_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? CouponTotalNumber
	    {
		    get
		    {
			    return this._couponTotalNumber;
		    }
		    set
		    {
				this._couponTotalNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CouponReceivedNumber.
		/// </summary>
		/// <value>Propiedad CouponReceivedNumber.</value>
	    [
		DescriptionKey("COUPON_RECEIVED_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COUPON_RECEIVED_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? CouponReceivedNumber
	    {
		    get
		    {
			    return this._couponReceivedNumber;
		    }
		    set
		    {
				this._couponReceivedNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalAmount.
		/// </summary>
		/// <value>Propiedad TotalAmount.</value>
	    [
		DescriptionKey("TOTAL_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalAmount
	    {
		    get
		    {
			    return this._totalAmount;
		    }
		    set
		    {
				this._totalAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceivedAmount.
		/// </summary>
		/// <value>Propiedad ReceivedAmount.</value>
	    [
		DescriptionKey("RECEIVED_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIVED_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ReceivedAmount
	    {
		    get
		    {
			    return this._receivedAmount;
		    }
		    set
		    {
				this._receivedAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCode.
		/// </summary>
		/// <value>Propiedad UserCode.</value>
	    [
		DescriptionKey("USER_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_CD", DbType=System.Data.DbType.String),
	    ]
        public int? UserCode
	    {
		    get
		    {
			    return this._userCode;
		    }
		    set
		    {
				this._userCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceptionDate.
		/// </summary>
		/// <value>Propiedad ReceptionDate.</value>
	    [
		DescriptionKey("RECEPTION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEPTION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ReceptionDate
	    {
		    get
		    {
			    return this._receptionDate;
		    }
		    set
		    {
				this._receptionDate = value;
			}
	    }

    }
}