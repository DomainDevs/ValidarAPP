/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetInformationPayment.dict v1.0
 * FileSize=28952 Header=280 CRC=14517549
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad StatusPaymentCreditCardType View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.StatusPaymentCreditCardType.dict"),
    Serializable(),
    DescriptionKey("GET_INFORMATION_PAYMENT_ENTITY"),
    TableMap(TableName="GET_INFORMATION_PAYMENT", Schema="ACC"),
    ]
    public partial class StatusPaymentCreditCardType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentCode = "PaymentCode";
			public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string IssuingAccountNumber = "IssuingAccountNumber";
			public static readonly string AuthorizationNumber = "AuthorizationNumber";
			public static readonly string ReceivingBankCode = "ReceivingBankCode";
			public static readonly string ReceivingAccountNumber = "ReceivingAccountNumber";
			public static readonly string SerialVoucher = "SerialVoucher";
			public static readonly string ValidYear = "ValidYear";
			public static readonly string ValidMonth = "ValidMonth";
			public static readonly string SerialNumber = "SerialNumber";
			public static readonly string CreditCardTypeCode = "CreditCardTypeCode";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string Voucher = "Voucher";
			public static readonly string CollectCode = "CollectCode";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Holder = "Holder";
			public static readonly string StatusPayment = "StatusPayment";
			public static readonly string DatePayment = "DatePayment";
			public static readonly string Commission = "Commission";
			public static readonly string Taxes = "Taxes";
			public static readonly string Description = "Description";
			public static readonly string StatusDescription = "StatusDescription";
			public static readonly string CardDate = "CardDate";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string CollectConceptId = "CollectConceptId";
			public static readonly string CollectConceptDescription = "CollectConceptDescription";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string BankCode = "BankCode";
			public static readonly string BankDescription = "BankDescription";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string Name = "Name";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		/// <param name="collectConceptId">Propiedad clave CollectConceptId.</param>
		/// <param name="branchCode">Propiedad clave BranchCode.</param>
		/// <param name="bankCode">Propiedad clave BankCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentCode, int? collectConceptId, int? branchCode, int? bankCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentCode, paymentCode);
		    keys.Add(Properties.CollectConceptId, collectConceptId);
		    keys.Add(Properties.BranchCode, branchCode);
		    keys.Add(Properties.BankCode, bankCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		/// <param name="collectConceptId">Propiedad clave CollectConceptId.</param>
		/// <param name="branchCode">Propiedad clave BranchCode.</param>
		/// <param name="bankCode">Propiedad clave BankCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentCode, int? collectConceptId, int? branchCode, int? bankCode)
	    {
			return InternalCreatePrimaryKey<StatusPaymentCreditCardType>(paymentCode, collectConceptId, branchCode, bankCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeCode.
		/// </summary>
        private int? _paymentMethodTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad IssuingAccountNumber.
		/// </summary>
        private string _issuingAccountNumber = null;
		/// <summary>
		/// Atributo para la propiedad AuthorizationNumber.
		/// </summary>
        private string _authorizationNumber = null;
		/// <summary>
		/// Atributo para la propiedad ReceivingBankCode.
		/// </summary>
        private int? _receivingBankCode = null;
		/// <summary>
		/// Atributo para la propiedad ReceivingAccountNumber.
		/// </summary>
        private string _receivingAccountNumber = null;
		/// <summary>
		/// Atributo para la propiedad SerialVoucher.
		/// </summary>
        private string _serialVoucher = null;
		/// <summary>
		/// Atributo para la propiedad ValidYear.
		/// </summary>
        private int? _validYear = null;
		/// <summary>
		/// Atributo para la propiedad ValidMonth.
		/// </summary>
        private int? _validMonth = null;
		/// <summary>
		/// Atributo para la propiedad SerialNumber.
		/// </summary>
        private string _serialNumber = null;
		/// <summary>
		/// Atributo para la propiedad CreditCardTypeCode.
		/// </summary>
        private int? _creditCardTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad Voucher.
		/// </summary>
        private string _voucher = null;
		/// <summary>
		/// Atributo para la propiedad CollectCode.
		/// </summary>
        private int? _collectCode = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad Holder.
		/// </summary>
        private string _holder = null;
		/// <summary>
		/// Atributo para la propiedad StatusPayment.
		/// </summary>
        private int? _statusPayment = null;
		/// <summary>
		/// Atributo para la propiedad DatePayment.
		/// </summary>
        private DateTime? _datePayment = null;
		/// <summary>
		/// Atributo para la propiedad Commission.
		/// </summary>
        private decimal? _commission = null;
		/// <summary>
		/// Atributo para la propiedad Taxes.
		/// </summary>
        private decimal? _taxes = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad StatusDescription.
		/// </summary>
        private string _statusDescription = null;
		/// <summary>
		/// Atributo para la propiedad CardDate.
		/// </summary>
        private string _cardDate = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad CollectConceptDescription.
		/// </summary>
        private string _collectConceptDescription = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad BankDescription.
		/// </summary>
        private string _bankDescription = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad Name.
		/// </summary>
        private string _name = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentCode">PaymentCode key property.</param>
		/// <param name="collectConceptId">CollectConceptId key property.</param>
		/// <param name="branchCode">BranchCode key property.</param>
		/// <param name="bankCode">BankCode key property.</param>
	    public StatusPaymentCreditCardType(int paymentCode, int? collectConceptId, int? branchCode, int? bankCode):
			this(StatusPaymentCreditCardType.CreatePrimaryKey(paymentCode, collectConceptId, branchCode, bankCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public StatusPaymentCreditCardType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentCode.
		/// </summary>
		/// <value>Propiedad PaymentCode.</value>
	    [
		DescriptionKey("PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodTypeCode
	    {
		    get
		    {
			    return this._paymentMethodTypeCode;
		    }
		    set
		    {
				this._paymentMethodTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssuingAccountNumber.
		/// </summary>
		/// <value>Propiedad IssuingAccountNumber.</value>
	    [
		DescriptionKey("ISSUING_ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ISSUING_ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string IssuingAccountNumber
	    {
		    get
		    {
			    return this._issuingAccountNumber;
		    }
		    set
		    {
				this._issuingAccountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AuthorizationNumber.
		/// </summary>
		/// <value>Propiedad AuthorizationNumber.</value>
	    [
		DescriptionKey("AUTHORIZATION_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AUTHORIZATION_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AuthorizationNumber
	    {
		    get
		    {
			    return this._authorizationNumber;
		    }
		    set
		    {
				this._authorizationNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceivingBankCode.
		/// </summary>
		/// <value>Propiedad ReceivingBankCode.</value>
	    [
		DescriptionKey("RECEIVING_BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIVING_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ReceivingBankCode
	    {
		    get
		    {
			    return this._receivingBankCode;
		    }
		    set
		    {
				this._receivingBankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceivingAccountNumber.
		/// </summary>
		/// <value>Propiedad ReceivingAccountNumber.</value>
	    [
		DescriptionKey("RECEIVING_ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIVING_ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string ReceivingAccountNumber
	    {
		    get
		    {
			    return this._receivingAccountNumber;
		    }
		    set
		    {
				this._receivingAccountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SerialVoucher.
		/// </summary>
		/// <value>Propiedad SerialVoucher.</value>
	    [
		DescriptionKey("SERIAL_VOUCHER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SERIAL_VOUCHER", DbType=System.Data.DbType.String),
	    ]
        public string SerialVoucher
	    {
		    get
		    {
			    return this._serialVoucher;
		    }
		    set
		    {
				this._serialVoucher = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ValidYear.
		/// </summary>
		/// <value>Propiedad ValidYear.</value>
	    [
		DescriptionKey("VALID_YEAR_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VALID_YEAR", DbType=System.Data.DbType.String),
	    ]
        public int? ValidYear
	    {
		    get
		    {
			    return this._validYear;
		    }
		    set
		    {
				this._validYear = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ValidMonth.
		/// </summary>
		/// <value>Propiedad ValidMonth.</value>
	    [
		DescriptionKey("VALID_MONTH_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VALID_MONTH", DbType=System.Data.DbType.String),
	    ]
        public int? ValidMonth
	    {
		    get
		    {
			    return this._validMonth;
		    }
		    set
		    {
				this._validMonth = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SerialNumber.
		/// </summary>
		/// <value>Propiedad SerialNumber.</value>
	    [
		DescriptionKey("SERIAL_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SERIAL_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string SerialNumber
	    {
		    get
		    {
			    return this._serialNumber;
		    }
		    set
		    {
				this._serialNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CreditCardTypeCode.
		/// </summary>
		/// <value>Propiedad CreditCardTypeCode.</value>
	    [
		DescriptionKey("CREDIT_CARD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CREDIT_CARD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CreditCardTypeCode
	    {
		    get
		    {
			    return this._creditCardTypeCode;
		    }
		    set
		    {
				this._creditCardTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Voucher.
		/// </summary>
		/// <value>Propiedad Voucher.</value>
	    [
		DescriptionKey("VOUCHER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VOUCHER", DbType=System.Data.DbType.String),
	    ]
        public string Voucher
	    {
		    get
		    {
			    return this._voucher;
		    }
		    set
		    {
				this._voucher = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectCode.
		/// </summary>
		/// <value>Propiedad CollectCode.</value>
	    [
		DescriptionKey("COLLECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CollectCode
	    {
		    get
		    {
			    return this._collectCode;
		    }
		    set
		    {
				this._collectCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Holder.
		/// </summary>
		/// <value>Propiedad Holder.</value>
	    [
		DescriptionKey("HOLDER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="HOLDER", DbType=System.Data.DbType.String),
	    ]
        public string Holder
	    {
		    get
		    {
			    return this._holder;
		    }
		    set
		    {
				this._holder = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StatusPayment.
		/// </summary>
		/// <value>Propiedad StatusPayment.</value>
	    [
		DescriptionKey("STATUS_PAYMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS_PAYMENT", DbType=System.Data.DbType.String),
	    ]
        public int? StatusPayment
	    {
		    get
		    {
			    return this._statusPayment;
		    }
		    set
		    {
				this._statusPayment = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DatePayment.
		/// </summary>
		/// <value>Propiedad DatePayment.</value>
	    [
		DescriptionKey("DATE_PAYMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_PAYMENT", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DatePayment
	    {
		    get
		    {
			    return this._datePayment;
		    }
		    set
		    {
				this._datePayment = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Commission.
		/// </summary>
		/// <value>Propiedad Commission.</value>
	    [
		DescriptionKey("COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Commission
	    {
		    get
		    {
			    return this._commission;
		    }
		    set
		    {
				this._commission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Taxes.
		/// </summary>
		/// <value>Propiedad Taxes.</value>
	    [
		DescriptionKey("TAXES_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAXES", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Taxes
	    {
		    get
		    {
			    return this._taxes;
		    }
		    set
		    {
				this._taxes = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StatusDescription.
		/// </summary>
		/// <value>Propiedad StatusDescription.</value>
	    [
		DescriptionKey("STATUS_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string StatusDescription
	    {
		    get
		    {
			    return this._statusDescription;
		    }
		    set
		    {
				this._statusDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CardDate.
		/// </summary>
		/// <value>Propiedad CardDate.</value>
	    [
		DescriptionKey("CARD_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CARD_DATE", DbType=System.Data.DbType.String),
	    ]
        public string CardDate
	    {
		    get
		    {
			    return this._cardDate;
		    }
		    set
		    {
				this._cardDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectConceptId.
		/// </summary>
		/// <value>Propiedad CollectConceptId.</value>
	    [
		DescriptionKey("COLLECT_CONCEPT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_CONCEPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? CollectConceptId
	    {
		    get
		    {
				return (int?)this._primaryKey[Properties.CollectConceptId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectConceptId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectConceptDescription.
		/// </summary>
		/// <value>Propiedad CollectConceptDescription.</value>
	    [
		DescriptionKey("COLLECT_CONCEPT_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CONCEPT_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CollectConceptDescription
	    {
		    get
		    {
			    return this._collectConceptDescription;
		    }
		    set
		    {
				this._collectConceptDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
				return (int?)this._primaryKey[Properties.BranchCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BranchCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankCode.
		/// </summary>
		/// <value>Propiedad BankCode.</value>
	    [
		DescriptionKey("BANK_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankCode
	    {
		    get
		    {
				return (int?)this._primaryKey[Properties.BankCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BankCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankDescription.
		/// </summary>
		/// <value>Propiedad BankDescription.</value>
	    [
		DescriptionKey("BANK_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BankDescription
	    {
		    get
		    {
			    return this._bankDescription;
		    }
		    set
		    {
				this._bankDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Name.
		/// </summary>
		/// <value>Propiedad Name.</value>
	    [
		DescriptionKey("NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NAME", DbType=System.Data.DbType.String),
	    ]
        public string Name
	    {
		    get
		    {
			    return this._name;
		    }
		    set
		    {
				this._name = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

    }
}