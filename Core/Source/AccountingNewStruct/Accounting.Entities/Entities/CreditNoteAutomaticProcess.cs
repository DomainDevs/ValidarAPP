/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetCreditNoteAutomaticProcess.dict v1.0
 * FileSize=15551 Header=290 CRC=1513746622
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CreditNoteAutomaticProcess View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CreditNoteAutomaticProcess.dict"),
    Serializable(),
    DescriptionKey("GET_CREDIT_NOTE_AUTOMATIC_PROCESS_ENTITY"),
    TableMap(TableName="GET_CREDIT_NOTE_AUTOMATIC_PROCESS", Schema="ACC"),
    ]
    public partial class CreditNoteAutomaticProcess :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string InsuredIndividualId = "InsuredIndividualId";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string PolicyDocumentNumber = "PolicyDocumentNumber";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string EndorsementDocumentNumber = "EndorsementDocumentNumber";
			public static readonly string Quota = "Quota";
			public static readonly string Amount = "Amount";
			public static readonly string PaymentAmount = "PaymentAmount";
			public static readonly string EndoTypeCode = "EndoTypeCode";
			public static readonly string EndorsementTypeDescription = "EndorsementTypeDescription";
			public static readonly string PaymentExpirationDate = "PaymentExpirationDate";
			public static readonly string BusinessTypeCode = "BusinessTypeCode";
			public static readonly string BussinessTypeDescription = "BussinessTypeDescription";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string PayerIndividualId = "PayerIndividualId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int policyId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PolicyId, policyId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		public static PrimaryKey CreatePrimaryKey(int policyId)
	    {
			return InternalCreatePrimaryKey<CreditNoteAutomaticProcess>(policyId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad InsuredIndividualId.
		/// </summary>
        private int? _insuredIndividualId = null;
		/// <summary>
		/// Atributo para la propiedad PolicyDocumentNumber.
		/// </summary>
        private decimal _policyDocumentNumber;
		/// <summary>
		/// Atributo para la propiedad EndorsementId.
		/// </summary>
        private int _endorsementId;
		/// <summary>
		/// Atributo para la propiedad EndorsementDocumentNumber.
		/// </summary>
        private int _endorsementDocumentNumber;
		/// <summary>
		/// Atributo para la propiedad Quota.
		/// </summary>
        private int _quota;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal _amount;
		/// <summary>
		/// Atributo para la propiedad PaymentAmount.
		/// </summary>
        private decimal? _paymentAmount = null;
		/// <summary>
		/// Atributo para la propiedad EndoTypeCode.
		/// </summary>
        private int _endoTypeCode;
		/// <summary>
		/// Atributo para la propiedad EndorsementTypeDescription.
		/// </summary>
        private string _endorsementTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad PaymentExpirationDate.
		/// </summary>
        private DateTime _paymentExpirationDate;
		/// <summary>
		/// Atributo para la propiedad BusinessTypeCode.
		/// </summary>
        private int _businessTypeCode;
		/// <summary>
		/// Atributo para la propiedad BussinessTypeDescription.
		/// </summary>
        private string _bussinessTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int _branchCode;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int _currencyCode;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal _exchangeRate;
		/// <summary>
		/// Atributo para la propiedad PayerIndividualId.
		/// </summary>
        private int _payerIndividualId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="policyId">PolicyId key property.</param>
	    public CreditNoteAutomaticProcess(int policyId):
			this(CreditNoteAutomaticProcess.CreatePrimaryKey(policyId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CreditNoteAutomaticProcess(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredIndividualId.
		/// </summary>
		/// <value>Propiedad InsuredIndividualId.</value>
	    [
		DescriptionKey("INSURED_INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredIndividualId
	    {
		    get
		    {
			    return this._insuredIndividualId;
		    }
		    set
		    {
				this._insuredIndividualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PolicyId];
		    }
		    set
		    {
				this._primaryKey[Properties.PolicyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyDocumentNumber.
		/// </summary>
		/// <value>Propiedad PolicyDocumentNumber.</value>
	    [
		DescriptionKey("POLICY_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_DOCUMENT_NUMBER", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PolicyDocumentNumber
	    {
		    get
		    {
			    return this._policyDocumentNumber;
		    }
		    set
		    {
				this._policyDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
			    return this._endorsementId;
		    }
		    set
		    {
				this._endorsementId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementDocumentNumber.
		/// </summary>
		/// <value>Propiedad EndorsementDocumentNumber.</value>
	    [
		DescriptionKey("ENDORSEMENT_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementDocumentNumber
	    {
		    get
		    {
			    return this._endorsementDocumentNumber;
		    }
		    set
		    {
				this._endorsementDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Quota.
		/// </summary>
		/// <value>Propiedad Quota.</value>
	    [
		DescriptionKey("QUOTA_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="QUOTA", DbType=System.Data.DbType.String),
	    ]
        public int Quota
	    {
		    get
		    {
			    return this._quota;
		    }
		    set
		    {
				this._quota = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentAmount.
		/// </summary>
		/// <value>Propiedad PaymentAmount.</value>
	    [
		DescriptionKey("PAYMENT_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PaymentAmount
	    {
		    get
		    {
			    return this._paymentAmount;
		    }
		    set
		    {
				this._paymentAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndoTypeCode.
		/// </summary>
		/// <value>Propiedad EndoTypeCode.</value>
	    [
		DescriptionKey("ENDO_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDO_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int EndoTypeCode
	    {
		    get
		    {
			    return this._endoTypeCode;
		    }
		    set
		    {
				this._endoTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementTypeDescription.
		/// </summary>
		/// <value>Propiedad EndorsementTypeDescription.</value>
	    [
		DescriptionKey("ENDORSEMENT_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string EndorsementTypeDescription
	    {
		    get
		    {
			    return this._endorsementTypeDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.EndorsementTypeDescription);
				}
				this._endorsementTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentExpirationDate.
		/// </summary>
		/// <value>Propiedad PaymentExpirationDate.</value>
	    [
		DescriptionKey("PAYMENT_EXPIRATION_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_EXPIRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime PaymentExpirationDate
	    {
		    get
		    {
			    return this._paymentExpirationDate;
		    }
		    set
		    {
				this._paymentExpirationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BusinessTypeCode.
		/// </summary>
		/// <value>Propiedad BusinessTypeCode.</value>
	    [
		DescriptionKey("BUSINESS_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BUSINESS_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int BusinessTypeCode
	    {
		    get
		    {
			    return this._businessTypeCode;
		    }
		    set
		    {
				this._businessTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BussinessTypeDescription.
		/// </summary>
		/// <value>Propiedad BussinessTypeDescription.</value>
	    [
		DescriptionKey("BUSSINESS_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BUSSINESS_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BussinessTypeDescription
	    {
		    get
		    {
			    return this._bussinessTypeDescription;
		    }
		    set
		    {
				this._bussinessTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerIndividualId.
		/// </summary>
		/// <value>Propiedad PayerIndividualId.</value>
	    [
		DescriptionKey("PAYER_INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYER_INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int PayerIndividualId
	    {
		    get
		    {
			    return this._payerIndividualId;
		    }
		    set
		    {
				this._payerIndividualId = value;
			}
	    }

    }
}