/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.CoinsCheckingAccTrans.dict v1.0
 * FileSize=21088 Header=263 CRC=2155289853
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CoinsCheckingAccTrans.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CoinsCheckingAccTrans.dict"),
    Serializable(),
    DescriptionKey("COINS_CHECKING_ACC_TRANS_ENTITY"),
    TableMap(TableName="COINS_CHECKING_ACC_TRANS", Schema="ACC"),
    ]
    public partial class CoinsCheckingAccTrans :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CoinsCheckingAccTransId = "CoinsCheckingAccTransId";
			public static readonly string ApplicationCode = "ApplicationCode";
			public static readonly string CoinsuranceParentCode = "CoinsuranceParentCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string AccountingCompanyCode = "AccountingCompanyCode";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string CoinsuranceType = "CoinsuranceType";
			public static readonly string CoinsuredCompanyId = "CoinsuredCompanyId";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string CheckingAccountConceptCode = "CheckingAccountConceptCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Amount = "Amount";
			public static readonly string Description = "Description";
			public static readonly string AccountingNatureCode = "AccountingNatureCode";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string ClaimCode = "ClaimCode";
			public static readonly string PaymentCode = "PaymentCode";
			public static readonly string LineBusinessCode = "LineBusinessCode";
			public static readonly string SubLineBusinessCode = "SubLineBusinessCode";
			public static readonly string AdministrativeExpenses = "AdministrativeExpenses";
			public static readonly string TaxAdministrativeExpenses = "TaxAdministrativeExpenses";
			public static readonly string ExtraCommission = "ExtraCommission";
			public static readonly string OverCommission = "OverCommission";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="coinsCheckingAccTransId">Propiedad clave CoinsCheckingAccTransId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int coinsCheckingAccTransId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CoinsCheckingAccTransId, coinsCheckingAccTransId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="coinsCheckingAccTransId">Propiedad clave CoinsCheckingAccTransId.</param>
		public static PrimaryKey CreatePrimaryKey(int coinsCheckingAccTransId)
	    {
			return InternalCreatePrimaryKey<CoinsCheckingAccTrans>(coinsCheckingAccTransId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ApplicationCode.
		/// </summary>
        private int? _applicationCode = null;
		/// <summary>
		/// Atributo para la propiedad CoinsuranceParentCode.
		/// </summary>
        private int? _coinsuranceParentCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingCompanyCode.
		/// </summary>
        private int? _accountingCompanyCode = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private int? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad CoinsuranceType.
		/// </summary>
        private int? _coinsuranceType = null;
		/// <summary>
		/// Atributo para la propiedad CoinsuredCompanyId.
		/// </summary>
        private int? _coinsuredCompanyId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad CheckingAccountConceptCode.
		/// </summary>
        private int? _checkingAccountConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNatureCode.
		/// </summary>
        private int? _accountingNatureCode = null;
		/// <summary>
		/// Atributo para la propiedad PolicyId.
		/// </summary>
        private int? _policyId = null;
		/// <summary>
		/// Atributo para la propiedad ClaimCode.
		/// </summary>
        private int? _claimCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentCode.
		/// </summary>
        private int? _paymentCode = null;
		/// <summary>
		/// Atributo para la propiedad LineBusinessCode.
		/// </summary>
        private int? _lineBusinessCode = null;
		/// <summary>
		/// Atributo para la propiedad SubLineBusinessCode.
		/// </summary>
        private int? _subLineBusinessCode = null;
		/// <summary>
		/// Atributo para la propiedad AdministrativeExpenses.
		/// </summary>
        private decimal? _administrativeExpenses = null;
		/// <summary>
		/// Atributo para la propiedad TaxAdministrativeExpenses.
		/// </summary>
        private decimal? _taxAdministrativeExpenses = null;
		/// <summary>
		/// Atributo para la propiedad ExtraCommission.
		/// </summary>
        private decimal? _extraCommission = null;
		/// <summary>
		/// Atributo para la propiedad OverCommission.
		/// </summary>
        private decimal? _overCommission = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="coinsCheckingAccTransId">CoinsCheckingAccTransId key property.</param>
	    public CoinsCheckingAccTrans(int coinsCheckingAccTransId):
			this(CoinsCheckingAccTrans.CreatePrimaryKey(coinsCheckingAccTransId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoinsCheckingAccTrans(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsCheckingAccTransId.
		/// </summary>
		/// <value>Propiedad CoinsCheckingAccTransId.</value>
	    [
		DescriptionKey("COINS_CHECKING_ACC_TRANS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COINS_CHECKING_ACC_TRANS_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoinsCheckingAccTransId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoinsCheckingAccTransId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoinsCheckingAccTransId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ApplicationCode.
		/// </summary>
		/// <value>Propiedad ApplicationCode.</value>
	    [
		DescriptionKey("APPLICATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="APPLICATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ApplicationCode
	    {
		    get
		    {
			    return this._applicationCode;
		    }
		    set
		    {
				this._applicationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuranceParentCode.
		/// </summary>
		/// <value>Propiedad CoinsuranceParentCode.</value>
	    [
		DescriptionKey("COINSURANCE_PARENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURANCE_PARENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CoinsuranceParentCode
	    {
		    get
		    {
			    return this._coinsuranceParentCode;
		    }
		    set
		    {
				this._coinsuranceParentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyCode.
		/// </summary>
		/// <value>Propiedad AccountingCompanyCode.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingCompanyCode
	    {
		    get
		    {
			    return this._accountingCompanyCode;
		    }
		    set
		    {
				this._accountingCompanyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuranceType.
		/// </summary>
		/// <value>Propiedad CoinsuranceType.</value>
	    [
		DescriptionKey("COINSURANCE_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURANCE_TYPE", DbType=System.Data.DbType.String),
	    ]
        public int? CoinsuranceType
	    {
		    get
		    {
			    return this._coinsuranceType;
		    }
		    set
		    {
				this._coinsuranceType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuredCompanyId.
		/// </summary>
		/// <value>Propiedad CoinsuredCompanyId.</value>
	    [
		DescriptionKey("COINSURED_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURED_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? CoinsuredCompanyId
	    {
		    get
		    {
			    return this._coinsuredCompanyId;
		    }
		    set
		    {
				this._coinsuredCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckingAccountConceptCode.
		/// </summary>
		/// <value>Propiedad CheckingAccountConceptCode.</value>
	    [
		DescriptionKey("CHECKING_ACCOUNT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHECKING_ACCOUNT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CheckingAccountConceptCode
	    {
		    get
		    {
			    return this._checkingAccountConceptCode;
		    }
		    set
		    {
				this._checkingAccountConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNatureCode.
		/// </summary>
		/// <value>Propiedad AccountingNatureCode.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNatureCode
	    {
		    get
		    {
			    return this._accountingNatureCode;
		    }
		    set
		    {
				this._accountingNatureCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimCode.
		/// </summary>
		/// <value>Propiedad ClaimCode.</value>
	    [
		DescriptionKey("CLAIM_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CLAIM_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ClaimCode
	    {
		    get
		    {
			    return this._claimCode;
		    }
		    set
		    {
				this._claimCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentCode.
		/// </summary>
		/// <value>Propiedad PaymentCode.</value>
	    [
		DescriptionKey("PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentCode
	    {
		    get
		    {
			    return this._paymentCode;
		    }
		    set
		    {
				this._paymentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LineBusinessCode.
		/// </summary>
		/// <value>Propiedad LineBusinessCode.</value>
	    [
		DescriptionKey("LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LINE_BUSINESS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? LineBusinessCode
	    {
		    get
		    {
			    return this._lineBusinessCode;
		    }
		    set
		    {
				this._lineBusinessCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SubLineBusinessCode.
		/// </summary>
		/// <value>Propiedad SubLineBusinessCode.</value>
	    [
		DescriptionKey("SUB_LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SUB_LINE_BUSINESS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SubLineBusinessCode
	    {
		    get
		    {
			    return this._subLineBusinessCode;
		    }
		    set
		    {
				this._subLineBusinessCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AdministrativeExpenses.
		/// </summary>
		/// <value>Propiedad AdministrativeExpenses.</value>
	    [
		DescriptionKey("ADMINISTRATIVE_EXPENSES_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ADMINISTRATIVE_EXPENSES", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AdministrativeExpenses
	    {
		    get
		    {
			    return this._administrativeExpenses;
		    }
		    set
		    {
				this._administrativeExpenses = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxAdministrativeExpenses.
		/// </summary>
		/// <value>Propiedad TaxAdministrativeExpenses.</value>
	    [
		DescriptionKey("TAX_ADMINISTRATIVE_EXPENSES_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAX_ADMINISTRATIVE_EXPENSES", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TaxAdministrativeExpenses
	    {
		    get
		    {
			    return this._taxAdministrativeExpenses;
		    }
		    set
		    {
				this._taxAdministrativeExpenses = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExtraCommission.
		/// </summary>
		/// <value>Propiedad ExtraCommission.</value>
	    [
		DescriptionKey("EXTRA_COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXTRA_COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExtraCommission
	    {
		    get
		    {
			    return this._extraCommission;
		    }
		    set
		    {
				this._extraCommission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OverCommission.
		/// </summary>
		/// <value>Propiedad OverCommission.</value>
	    [
		DescriptionKey("OVER_COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="OVER_COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? OverCommission
	    {
		    get
		    {
			    return this._overCommission;
		    }
		    set
		    {
				this._overCommission = value;
			}
	    }

    }
}