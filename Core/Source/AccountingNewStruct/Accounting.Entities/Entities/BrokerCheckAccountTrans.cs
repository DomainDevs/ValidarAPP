/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetBrokerCheckingAccount.dict v1.0
 * FileSize=25757 Header=285 CRC=3251721630
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad BrokerCheckAccountTrans View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.BrokerCheckAccountTrans.dict"),
    Serializable(),
    DescriptionKey("GET_BROKER_CHECKING_ACCOUNT_ENTITY"),
    TableMap(TableName="GET_BROKER_CHECKING_ACCOUNT", Schema="ACC"),
    ]
    public partial class BrokerCheckAccountTrans :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BrokerCheckingAccountTransId = "BrokerCheckingAccountTransId";
			public static readonly string ApplicationCode = "ApplicationCode";
			public static readonly string BrokerParentCode = "BrokerParentCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchName = "BranchName";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string SalePointName = "SalePointName";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string PrefixName = "PrefixName";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string PolicyDocumentNumber = "PolicyDocumentNumber";
			public static readonly string InsuredId = "InsuredId";
			public static readonly string InsuredDocumentNumber = "InsuredDocumentNumber";
			public static readonly string InsuredName = "InsuredName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyName = "CurrencyName";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string Description = "Description";
			public static readonly string AgentId = "AgentId";
			public static readonly string AgentTypeCode = "AgentTypeCode";
			public static readonly string AgentAgencyId = "AgentAgencyId";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string CommissionTypeCode = "CommissionTypeCode";
            public static readonly string StCommissionPercentage = "StCommissionPercentage";
            public static readonly string StCommissionAmount = "StCommissionAmount";
			public static readonly string CommissionDiscounted = "CommissionDiscounted";
			public static readonly string CommissionBalance = "CommissionBalance";
			public static readonly string TransactionNumber = "TransactionNumber";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="brokerCheckingAccountTransId">Propiedad clave BrokerCheckingAccountTransId.</param>
		/// <param name="prefixCode">Propiedad clave PrefixCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int brokerCheckingAccountTransId, int prefixCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BrokerCheckingAccountTransId, brokerCheckingAccountTransId);
		    keys.Add(Properties.PrefixCode, prefixCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="brokerCheckingAccountTransId">Propiedad clave BrokerCheckingAccountTransId.</param>
		/// <param name="prefixCode">Propiedad clave PrefixCode.</param>
		public static PrimaryKey CreatePrimaryKey(int brokerCheckingAccountTransId, int prefixCode)
	    {
			return InternalCreatePrimaryKey<BrokerCheckAccountTrans>(brokerCheckingAccountTransId, prefixCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ApplicationCode.
		/// </summary>
        private int? _applicationCode = null;
		/// <summary>
		/// Atributo para la propiedad BrokerParentCode.
		/// </summary>
        private int? _brokerParentCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchName.
		/// </summary>
        private string _branchName = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private int? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad SalePointName.
		/// </summary>
        private string _salePointName = null;
		/// <summary>
		/// Atributo para la propiedad PrefixName.
		/// </summary>
        private string _prefixName = null;
		/// <summary>
		/// Atributo para la propiedad PolicyId.
		/// </summary>
        private int? _policyId = null;
		/// <summary>
		/// Atributo para la propiedad PolicyDocumentNumber.
		/// </summary>
        private decimal _policyDocumentNumber;
		/// <summary>
		/// Atributo para la propiedad InsuredId.
		/// </summary>
        private int? _insuredId = null;
		/// <summary>
		/// Atributo para la propiedad InsuredDocumentNumber.
		/// </summary>
        private string _insuredDocumentNumber = null;
		/// <summary>
		/// Atributo para la propiedad InsuredName.
		/// </summary>
        private string _insuredName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyName.
		/// </summary>
        private string _currencyName = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad AgentId.
		/// </summary>
        private int? _agentId = null;
		/// <summary>
		/// Atributo para la propiedad AgentTypeCode.
		/// </summary>
        private int? _agentTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad AgentAgencyId.
		/// </summary>
        private int? _agentAgencyId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNature.
		/// </summary>
        private int? _accountingNature = null;
		/// <summary>
		/// Atributo para la propiedad CommissionTypeCode.
		/// </summary>
        private int? _commissionTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad StCommissionPercentage.
        /// </summary>
        private decimal? _stCommissionPercentage = null;
        /// <summary>
        /// Atributo para la propiedad StCommissionAmount.
        /// </summary>
        private decimal? _stCommissionAmount = null;
        /// <summary>
        /// Atributo para la propiedad StCommissionAmount.
        /// </summary>
        private decimal? _commissionDiscounted = null;
		/// <summary>
		/// Atributo para la propiedad CommissionBalance.
		/// </summary>
        private decimal? _commissionBalance = null;
		/// <summary>
		/// Atributo para la propiedad TransactionNumber.
		/// </summary>
        private int? _transactionNumber = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="brokerCheckingAccountTransId">BrokerCheckingAccountTransId key property.</param>
		/// <param name="prefixCode">PrefixCode key property.</param>
	    public BrokerCheckAccountTrans(int brokerCheckingAccountTransId, int prefixCode):
			this(BrokerCheckAccountTrans.CreatePrimaryKey(brokerCheckingAccountTransId, prefixCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BrokerCheckAccountTrans(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BrokerCheckingAccountTransId.
		/// </summary>
		/// <value>Propiedad BrokerCheckingAccountTransId.</value>
	    [
		DescriptionKey("BROKER_CHECKING_ACCOUNT_TRANS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BROKER_CHECKING_ACCOUNT_TRANS_ID", DbType=System.Data.DbType.String),
	    ]
        public int BrokerCheckingAccountTransId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BrokerCheckingAccountTransId];
		    }
		    set
		    {
				this._primaryKey[Properties.BrokerCheckingAccountTransId] = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ApplicationCode.
        /// </summary>
        /// <value>Propiedad ApplicationCode.</value>
        [
        DescriptionKey("APPLICATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="APPLICATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ApplicationCode
	    {
		    get
		    {
			    return this._applicationCode;
		    }
		    set
		    {
				this._applicationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BrokerParentCode.
		/// </summary>
		/// <value>Propiedad BrokerParentCode.</value>
	    [
		DescriptionKey("BROKER_PARENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BROKER_PARENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BrokerParentCode
	    {
		    get
		    {
			    return this._brokerParentCode;
		    }
		    set
		    {
				this._brokerParentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchName.
		/// </summary>
		/// <value>Propiedad BranchName.</value>
	    [
		DescriptionKey("BRANCH_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BranchName
	    {
		    get
		    {
			    return this._branchName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchName);
				}
				this._branchName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointName.
		/// </summary>
		/// <value>Propiedad SalePointName.</value>
	    [
		DescriptionKey("SALE_POINT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SALE_POINT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string SalePointName
	    {
		    get
		    {
			    return this._salePointName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SalePointName);
				}
				this._salePointName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PrefixCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PrefixCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixName.
		/// </summary>
		/// <value>Propiedad PrefixName.</value>
	    [
		DescriptionKey("PREFIX_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PrefixName
	    {
		    get
		    {
			    return this._prefixName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PrefixName);
				}
				this._prefixName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyDocumentNumber.
		/// </summary>
		/// <value>Propiedad PolicyDocumentNumber.</value>
	    [
		DescriptionKey("POLICY_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_DOCUMENT_NUMBER", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PolicyDocumentNumber
	    {
		    get
		    {
			    return this._policyDocumentNumber;
		    }
		    set
		    {
				this._policyDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredId.
		/// </summary>
		/// <value>Propiedad InsuredId.</value>
	    [
		DescriptionKey("INSURED_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_ID", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredId
	    {
		    get
		    {
			    return this._insuredId;
		    }
		    set
		    {
				this._insuredId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredDocumentNumber.
		/// </summary>
		/// <value>Propiedad InsuredDocumentNumber.</value>
	    [
		DescriptionKey("INSURED_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string InsuredDocumentNumber
	    {
		    get
		    {
			    return this._insuredDocumentNumber;
		    }
		    set
		    {
				this._insuredDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredName.
		/// </summary>
		/// <value>Propiedad InsuredName.</value>
	    [
		DescriptionKey("INSURED_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_NAME", DbType=System.Data.DbType.String),
	    ]
        public string InsuredName
	    {
		    get
		    {
			    return this._insuredName;
		    }
		    set
		    {
				this._insuredName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyName.
		/// </summary>
		/// <value>Propiedad CurrencyName.</value>
	    [
		DescriptionKey("CURRENCY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyName
	    {
		    get
		    {
			    return this._currencyName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
				}
				this._currencyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentId.
		/// </summary>
		/// <value>Propiedad AgentId.</value>
	    [
		DescriptionKey("AGENT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AgentId
	    {
		    get
		    {
			    return this._agentId;
		    }
		    set
		    {
				this._agentId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentTypeCode.
		/// </summary>
		/// <value>Propiedad AgentTypeCode.</value>
	    [
		DescriptionKey("AGENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AgentTypeCode
	    {
		    get
		    {
			    return this._agentTypeCode;
		    }
		    set
		    {
				this._agentTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentAgencyId.
		/// </summary>
		/// <value>Propiedad AgentAgencyId.</value>
	    [
		DescriptionKey("AGENT_AGENCY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_AGENCY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AgentAgencyId
	    {
		    get
		    {
			    return this._agentAgencyId;
		    }
		    set
		    {
				this._agentAgencyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionTypeCode.
		/// </summary>
		/// <value>Propiedad CommissionTypeCode.</value>
	    [
		DescriptionKey("COMMISSION_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CommissionTypeCode
	    {
		    get
		    {
			    return this._commissionTypeCode;
		    }
		    set
		    {
				this._commissionTypeCode = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StCommissionPercentage.
        /// </summary>
        /// <value>Propiedad StCommissionPercentage.</value>
        [
        DescriptionKey("ST_COMMISSION_PERCENTAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ST_COMMISSION_PERCENTAGE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? StCommissionPercentage
        {
            get
            {
                return this._stCommissionPercentage;
            }
            set
            {
                this._stCommissionPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StCommissionAmount.
        /// </summary>
        /// <value>Propiedad StCommissionAmount.</value>
        [
        DescriptionKey("ST_COMMISSION_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ST_COMMISSION_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? StCommissionAmount
        {
            get
            {
                return this._stCommissionAmount;
            }
            set
            {
                this._stCommissionAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CommissionDiscounted.
        /// </summary>
        /// <value>Propiedad CommissionDiscounted.</value>
        [
		DescriptionKey("COMMISSION_DISCOUNTED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_DISCOUNTED", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionDiscounted
	    {
		    get
		    {
			    return this._commissionDiscounted;
		    }
		    set
		    {
				this._commissionDiscounted = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionBalance.
		/// </summary>
		/// <value>Propiedad CommissionBalance.</value>
	    [
		DescriptionKey("COMMISSION_BALANCE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_BALANCE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionBalance
	    {
		    get
		    {
			    return this._commissionBalance;
		    }
		    set
		    {
				this._commissionBalance = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TransactionNumber.
		/// </summary>
		/// <value>Propiedad TransactionNumber.</value>
	    [
		DescriptionKey("TRANSACTION_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TRANSACTION_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? TransactionNumber
	    {
		    get
		    {
			    return this._transactionNumber;
		    }
		    set
		    {
				this._transactionNumber = value;
			}
	    }

    }
}