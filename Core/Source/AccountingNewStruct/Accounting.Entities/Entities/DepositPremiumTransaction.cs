/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.DepositPremiumTransaction.dict v1.0
 * FileSize=9952 Header=285 CRC=3029616008
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad DepositPremiumTransaction.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.DepositPremiumTransaction.dict"),
    Serializable(),
    DescriptionKey("DEPOSIT_PREMIUM_TRANSACTION_ENTITY"),
    TableMap(TableName="DEPOSIT_PREMIUM_TRANSACTION", Schema="ACC"),
    ]
    public partial class DepositPremiumTransaction :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string DepositPremiumTransactionCode = "DepositPremiumTransactionCode";
			public static readonly string CollectCode = "CollectCode";
			public static readonly string PremiumReceivableTransCode = "PremiumReceivableTransCode";
			public static readonly string PayerType = "PayerType";
			public static readonly string PayerId = "PayerId";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="depositPremiumTransactionCode">Propiedad clave DepositPremiumTransactionCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int depositPremiumTransactionCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.DepositPremiumTransactionCode, depositPremiumTransactionCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="depositPremiumTransactionCode">Propiedad clave DepositPremiumTransactionCode.</param>
		public static PrimaryKey CreatePrimaryKey(int depositPremiumTransactionCode)
	    {
			return InternalCreatePrimaryKey<DepositPremiumTransaction>(depositPremiumTransactionCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CollectCode.
		/// </summary>
        private int? _collectCode = null;
		/// <summary>
		/// Atributo para la propiedad PremiumReceivableTransCode.
		/// </summary>
        private int? _premiumReceivableTransCode = null;
		/// <summary>
		/// Atributo para la propiedad PayerType.
		/// </summary>
        private int? _payerType = null;
		/// <summary>
		/// Atributo para la propiedad PayerId.
		/// </summary>
        private int? _payerId = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="depositPremiumTransactionCode">DepositPremiumTransactionCode key property.</param>
	    public DepositPremiumTransaction(int depositPremiumTransactionCode):
			this(DepositPremiumTransaction.CreatePrimaryKey(depositPremiumTransactionCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public DepositPremiumTransaction(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad DepositPremiumTransactionCode.
		/// </summary>
		/// <value>Propiedad DepositPremiumTransactionCode.</value>
	    [
		DescriptionKey("DEPOSIT_PREMIUM_TRANSACTION_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="DEPOSIT_PREMIUM_TRANSACTION_CD", DbType=System.Data.DbType.String),
	    ]
        public int DepositPremiumTransactionCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.DepositPremiumTransactionCode];
		    }
		    set
		    {
				this._primaryKey[Properties.DepositPremiumTransactionCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectCode.
		/// </summary>
		/// <value>Propiedad CollectCode.</value>
	    [
		DescriptionKey("COLLECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CollectCode
	    {
		    get
		    {
			    return this._collectCode;
		    }
		    set
		    {
				this._collectCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PremiumReceivableTransCode.
		/// </summary>
		/// <value>Propiedad PremiumReceivableTransCode.</value>
	    [
		DescriptionKey("PREMIUM_RECEIVABLE_TRANS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREMIUM_RECEIVABLE_TRANS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PremiumReceivableTransCode
	    {
		    get
		    {
			    return this._premiumReceivableTransCode;
		    }
		    set
		    {
				this._premiumReceivableTransCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerType.
		/// </summary>
		/// <value>Propiedad PayerType.</value>
	    [
		DescriptionKey("PAYER_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER_TYPE", DbType=System.Data.DbType.String),
	    ]
        public int? PayerType
	    {
		    get
		    {
			    return this._payerType;
		    }
		    set
		    {
				this._payerType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerId.
		/// </summary>
		/// <value>Propiedad PayerId.</value>
	    [
		DescriptionKey("PAYER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PayerId
	    {
		    get
		    {
			    return this._payerId;
		    }
		    set
		    {
				this._payerId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

    }
}