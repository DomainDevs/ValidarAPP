/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.AppJournalEntryV.dict v1.0
 * FileSize=12775 Header=258 CRC=3349779838
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad AppJournalEntryV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.AppJournalEntryV.dict"),
    Serializable(),
    DescriptionKey("APP_JOURNAL_ENTRY_V_ENTITY"),
    TableMap(TableName="APP_JOURNAL_ENTRY_V", Schema="ACC"),
    ]
    public partial class AppJournalEntryV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ApplicationCode = "ApplicationCode";
			public static readonly string ModuleCode = "ModuleCode";
			public static readonly string Status = "Status";
			public static readonly string UserId = "UserId";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string Name = "Name";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string Description = "Description";
			public static readonly string JournalEntryCode = "JournalEntryCode";
			public static readonly string JurnalDescription = "JurnalDescription";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
			public static readonly string AccountName = "AccountName";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<AppJournalEntryV>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ApplicationCode.
		/// </summary>
        private int _applicationCode;
		/// <summary>
		/// Atributo para la propiedad ModuleCode.
		/// </summary>
        private int _moduleCode;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime _registerDate;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad Name.
		/// </summary>
        private string _name = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad JournalEntryCode.
		/// </summary>
        private int _journalEntryCode;
		/// <summary>
		/// Atributo para la propiedad JurnalDescription.
		/// </summary>
        private string _jurnalDescription = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public AppJournalEntryV():
			this(AppJournalEntryV.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public AppJournalEntryV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ApplicationCode.
		/// </summary>
		/// <value>Propiedad ApplicationCode.</value>
	    [
		DescriptionKey("APPLICATION_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="APPLICATION_CODE", DbType=System.Data.DbType.String),
	    ]
        public int ApplicationCode
	    {
		    get
		    {
			    return this._applicationCode;
		    }
		    set
		    {
				this._applicationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ModuleCode.
		/// </summary>
		/// <value>Propiedad ModuleCode.</value>
	    [
		DescriptionKey("MODULE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="MODULE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int ModuleCode
	    {
		    get
		    {
			    return this._moduleCode;
		    }
		    set
		    {
				this._moduleCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Name.
		/// </summary>
		/// <value>Propiedad Name.</value>
	    [
		DescriptionKey("NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NAME", DbType=System.Data.DbType.String),
	    ]
        public string Name
	    {
		    get
		    {
			    return this._name;
		    }
		    set
		    {
				this._name = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JournalEntryCode.
		/// </summary>
		/// <value>Propiedad JournalEntryCode.</value>
	    [
		DescriptionKey("JOURNAL_ENTRY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="JOURNAL_ENTRY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int JournalEntryCode
	    {
		    get
		    {
			    return this._journalEntryCode;
		    }
		    set
		    {
				this._journalEntryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JurnalDescription.
		/// </summary>
		/// <value>Propiedad JurnalDescription.</value>
	    [
		DescriptionKey("JURNAL_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="JURNAL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string JurnalDescription
	    {
		    get
		    {
			    return this._jurnalDescription;
		    }
		    set
		    {
				this._jurnalDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
				}
				this._accountName = value;
			}
	    }

    }
}