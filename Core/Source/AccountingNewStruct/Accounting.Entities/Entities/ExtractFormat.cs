/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.ExtractFormat.dict v1.0
 * FileSize=5641 Header=262 CRC=2714293637
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad ExtractFormat.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.ExtractFormat.dict"),
    Serializable(),
    DescriptionKey("EXTRACT_FORMAT_ENTITY"),
    TableMap(TableName="EXTRACT_FORMAT", Schema="ACC"),
    ]
    public partial class ExtractFormat :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ExtractFormatCode = "ExtractFormatCode";
			public static readonly string FormatTypeCode = "FormatTypeCode";
			public static readonly string Description = "Description";
			public static readonly string Separator = "Separator";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="extractFormatCode">Propiedad clave ExtractFormatCode.</param>
		/// <param name="formatTypeCode">Propiedad clave FormatTypeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int extractFormatCode, string formatTypeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ExtractFormatCode, extractFormatCode);
		    keys.Add(Properties.FormatTypeCode, formatTypeCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="extractFormatCode">Propiedad clave ExtractFormatCode.</param>
		/// <param name="formatTypeCode">Propiedad clave FormatTypeCode.</param>
		public static PrimaryKey CreatePrimaryKey(int extractFormatCode, string formatTypeCode)
	    {
			return InternalCreatePrimaryKey<ExtractFormat>(extractFormatCode, formatTypeCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad Separator.
		/// </summary>
        private string _separator = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="extractFormatCode">ExtractFormatCode key property.</param>
		/// <param name="formatTypeCode">FormatTypeCode key property.</param>
	    public ExtractFormat(int extractFormatCode, string formatTypeCode):
			this(ExtractFormat.CreatePrimaryKey(extractFormatCode, formatTypeCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ExtractFormat(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExtractFormatCode.
		/// </summary>
		/// <value>Propiedad ExtractFormatCode.</value>
	    [
		DescriptionKey("EXTRACT_FORMAT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="EXTRACT_FORMAT_CD", DbType=System.Data.DbType.String),
	    ]
        public int ExtractFormatCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ExtractFormatCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ExtractFormatCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FormatTypeCode.
		/// </summary>
		/// <value>Propiedad FormatTypeCode.</value>
	    [
		DescriptionKey("FORMAT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="FORMAT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public string FormatTypeCode
	    {
		    get
		    {
				return (string)this._primaryKey[Properties.FormatTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.FormatTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Separator.
		/// </summary>
		/// <value>Propiedad Separator.</value>
	    [
		DescriptionKey("SEPARATOR_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SEPARATOR", DbType=System.Data.DbType.String),
	    ]
        public string Separator
	    {
		    get
		    {
			    return this._separator;
		    }
		    set
		    {
				this._separator = value;
			}
	    }

    }
}