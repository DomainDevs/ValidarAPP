/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.TempBrokerCheckingAcctransV.dict v1.0
 * FileSize=23978 Header=288 CRC=3182715925
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad TempBrokerCheckingAcctransV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.TempBrokerCheckin.dict"),
    Serializable(),
    DescriptionKey("TEMP_BROKER_CHECKING_ACCTRANS_V_ENTITY"),
    TableMap(TableName="TEMP_BROKER_CHECKING_ACCTRANS_V", Schema="ACC"),
    ]
    public partial class TempBrokerCheckingAcctransV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempBrokerCheckingAccTransCode = "TempBrokerCheckingAccTransCode";
			public static readonly string TempApplicationCode = "TempApplicationCode";
			public static readonly string TempBrokerParentCode = "TempBrokerParentCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string SalePointName = "SalePointName";
			public static readonly string CompanyId = "CompanyId";
			public static readonly string AccountingCompanyName = "AccountingCompanyName";
			public static readonly string Agentcode = "Agentcode";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string AgentName = "AgentName";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string CheckingAccountConceptCode = "CheckingAccountConceptCode";
			public static readonly string BranchAccountingConceptId = "BranchAccountingConceptId";
			public static readonly string PaymentConceptName = "PaymentConceptName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyName = "CurrencyName";
			public static readonly string TinyDescription = "TinyDescription";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string Description = "Description";
			public static readonly string AgentTypeCode = "AgentTypeCode";
			public static readonly string AgentAgencyCode = "AgentAgencyCode";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string Transactionnumber = "Transactionnumber";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="tempBrokerCheckingAccTransCode">Propiedad clave TempBrokerCheckingAccTransCode.</param>
		/// <param name="companyId">Propiedad clave CompanyId.</param>
		/// <param name="branchAccountingConceptId">Propiedad clave BranchAccountingConceptId.</param>
		/// <param name="currencyCode">Propiedad clave CurrencyCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempBrokerCheckingAccTransCode, int companyId, int branchAccountingConceptId, int currencyCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TempBrokerCheckingAccTransCode, tempBrokerCheckingAccTransCode);
		    keys.Add(Properties.CompanyId, companyId);
		    keys.Add(Properties.BranchAccountingConceptId, branchAccountingConceptId);
		    keys.Add(Properties.CurrencyCode, currencyCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="tempBrokerCheckingAccTransCode">Propiedad clave TempBrokerCheckingAccTransCode.</param>
		/// <param name="companyId">Propiedad clave CompanyId.</param>
		/// <param name="branchAccountingConceptId">Propiedad clave BranchAccountingConceptId.</param>
		/// <param name="currencyCode">Propiedad clave CurrencyCode.</param>
		public static PrimaryKey CreatePrimaryKey(int tempBrokerCheckingAccTransCode, int companyId, int branchAccountingConceptId, int currencyCode)
	    {
			return InternalCreatePrimaryKey<TempBrokerCheckingAcctransV>(tempBrokerCheckingAccTransCode, companyId, branchAccountingConceptId, currencyCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempApplicationCode.
		/// </summary>
        private int? _tempApplicationCode = null;
		/// <summary>
		/// Atributo para la propiedad TempBrokerParentCode.
		/// </summary>
        private int? _tempBrokerParentCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private decimal _salePointCode;
		/// <summary>
		/// Atributo para la propiedad SalePointName.
		/// </summary>
        private string _salePointName = null;
		/// <summary>
		/// Atributo para la propiedad AccountingCompanyName.
		/// </summary>
        private string _accountingCompanyName = null;
		/// <summary>
		/// Atributo para la propiedad Agentcode.
		/// </summary>
        private int? _agentcode = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad AgentName.
		/// </summary>
        private string _agentName = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNature.
		/// </summary>
        private int? _accountingNature = null;
		/// <summary>
		/// Atributo para la propiedad CheckingAccountConceptCode.
		/// </summary>
        private int? _checkingAccountConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentConceptName.
		/// </summary>
        private string _paymentConceptName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyName.
		/// </summary>
        private string _currencyName = null;
		/// <summary>
		/// Atributo para la propiedad TinyDescription.
		/// </summary>
        private string _tinyDescription = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad AgentTypeCode.
		/// </summary>
        private int? _agentTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad AgentAgencyCode.
		/// </summary>
        private int? _agentAgencyCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad Transactionnumber.
		/// </summary>
        private int? _transactionnumber = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="tempBrokerCheckingAccTransCode">TempBrokerCheckingAccTransCode key property.</param>
		/// <param name="companyId">CompanyId key property.</param>
		/// <param name="branchAccountingConceptId">BranchAccountingConceptId key property.</param>
		/// <param name="currencyCode">CurrencyCode key property.</param>
	    public TempBrokerCheckingAcctransV(int tempBrokerCheckingAccTransCode, int companyId, int branchAccountingConceptId, int currencyCode):
			this(TempBrokerCheckingAcctransV.CreatePrimaryKey(tempBrokerCheckingAccTransCode, companyId, branchAccountingConceptId, currencyCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempBrokerCheckingAcctransV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempBrokerCheckingAccTransCode.
		/// </summary>
		/// <value>Propiedad TempBrokerCheckingAccTransCode.</value>
	    [
		DescriptionKey("TEMP_BROKER_CHECKING_ACC_TRANS_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TEMP_BROKER_CHECKING_ACC_TRANS_CD", DbType=System.Data.DbType.String),
	    ]
        public int TempBrokerCheckingAccTransCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempBrokerCheckingAccTransCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TempBrokerCheckingAccTransCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempApplicationCode.
		/// </summary>
		/// <value>Propiedad TempApplicationCode.</value>
	    [
		DescriptionKey("TEMP_APPLICATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_APPLICATION_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? TempApplicationCode
	    {
		    get
		    {
			    return this._tempApplicationCode;
		    }
		    set
		    {
				this._tempApplicationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempBrokerParentCode.
		/// </summary>
		/// <value>Propiedad TempBrokerParentCode.</value>
	    [
		DescriptionKey("TEMP_BROKER_PARENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_BROKER_PARENT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? TempBrokerParentCode
	    {
		    get
		    {
			    return this._tempBrokerParentCode;
		    }
		    set
		    {
				this._tempBrokerParentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointName.
		/// </summary>
		/// <value>Propiedad SalePointName.</value>
	    [
		DescriptionKey("SALE_POINT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SALE_POINT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string SalePointName
	    {
		    get
		    {
			    return this._salePointName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SalePointName);
				}
				this._salePointName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyId.
		/// </summary>
		/// <value>Propiedad CompanyId.</value>
	    [
		DescriptionKey("COMPANY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int CompanyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CompanyId];
		    }
		    set
		    {
				this._primaryKey[Properties.CompanyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyName.
		/// </summary>
		/// <value>Propiedad AccountingCompanyName.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountingCompanyName
	    {
		    get
		    {
			    return this._accountingCompanyName;
		    }
		    set
		    {
				this._accountingCompanyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Agentcode.
		/// </summary>
		/// <value>Propiedad Agentcode.</value>
	    [
		DescriptionKey("AGENTCODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENTCODE", DbType=System.Data.DbType.String),
	    ]
        public int? Agentcode
	    {
		    get
		    {
			    return this._agentcode;
		    }
		    set
		    {
				this._agentcode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentName.
		/// </summary>
		/// <value>Propiedad AgentName.</value>
	    [
		DescriptionKey("AGENT_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AgentName
	    {
		    get
		    {
			    return this._agentName;
		    }
		    set
		    {
				this._agentName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckingAccountConceptCode.
		/// </summary>
		/// <value>Propiedad CheckingAccountConceptCode.</value>
	    [
		DescriptionKey("CHECKING_ACCOUNT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHECKING_ACCOUNT_CONCEPT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CheckingAccountConceptCode
	    {
		    get
		    {
			    return this._checkingAccountConceptCode;
		    }
		    set
		    {
				this._checkingAccountConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchAccountingConceptId.
		/// </summary>
		/// <value>Propiedad BranchAccountingConceptId.</value>
	    [
		DescriptionKey("BRANCH_ACCOUNTING_CONCEPT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BRANCH_ACCOUNTING_CONCEPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int BranchAccountingConceptId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BranchAccountingConceptId];
		    }
		    set
		    {
				this._primaryKey[Properties.BranchAccountingConceptId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentConceptName.
		/// </summary>
		/// <value>Propiedad PaymentConceptName.</value>
	    [
		DescriptionKey("PAYMENT_CONCEPT_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_CONCEPT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PaymentConceptName
	    {
		    get
		    {
			    return this._paymentConceptName;
		    }
		    set
		    {
				this._paymentConceptName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CURRENCY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CurrencyCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CurrencyCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyName.
		/// </summary>
		/// <value>Propiedad CurrencyName.</value>
	    [
		DescriptionKey("CURRENCY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyName
	    {
		    get
		    {
			    return this._currencyName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
				}
				this._currencyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TinyDescription.
		/// </summary>
		/// <value>Propiedad TinyDescription.</value>
	    [
		DescriptionKey("TINY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TINY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string TinyDescription
	    {
		    get
		    {
			    return this._tinyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.TinyDescription);
				}
				this._tinyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentTypeCode.
		/// </summary>
		/// <value>Propiedad AgentTypeCode.</value>
	    [
		DescriptionKey("AGENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_TYPE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? AgentTypeCode
	    {
		    get
		    {
			    return this._agentTypeCode;
		    }
		    set
		    {
				this._agentTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentAgencyCode.
		/// </summary>
		/// <value>Propiedad AgentAgencyCode.</value>
	    [
		DescriptionKey("AGENT_AGENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_AGENCY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? AgentAgencyCode
	    {
		    get
		    {
			    return this._agentAgencyCode;
		    }
		    set
		    {
				this._agentAgencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Transactionnumber.
		/// </summary>
		/// <value>Propiedad Transactionnumber.</value>
	    [
		DescriptionKey("TRANSACTIONNUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TransactionNumber", DbType=System.Data.DbType.String),
	    ]
        public int? Transactionnumber
	    {
		    get
		    {
			    return this._transactionnumber;
		    }
		    set
		    {
				this._transactionnumber = value;
			}
	    }

    }
}