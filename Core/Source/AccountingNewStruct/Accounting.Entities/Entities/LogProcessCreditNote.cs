/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetLogProcessCreditNote.dict v1.0
 * FileSize=17814 Header=284 CRC=1510084026
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad LogProcessCreditNote View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.LogProcessCreditNote.dict"),
    Serializable(),
    DescriptionKey("GET_LOG_PROCESS_CREDIT_NOTE_ENTITY"),
    TableMap(TableName="GET_LOG_PROCESS_CREDIT_NOTE", Schema="ACC"),
    ]
    public partial class LogProcessCreditNote :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LogSpecialProcessId = "LogSpecialProcessId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string PolicyNumber = "PolicyNumber";
			public static readonly string EndorsementCode = "EndorsementCode";
			public static readonly string EndorsementNumber = "EndorsementNumber";
			public static readonly string InsuredId = "InsuredId";
			public static readonly string InsuredName = "InsuredName";
			public static readonly string PayerId = "PayerId";
			public static readonly string PayerName = "PayerName";
			public static readonly string AgentId = "AgentId";
			public static readonly string AgentName = "AgentName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string Description = "Description";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string TempImputationCode = "TempImputationCode";
			public static readonly string TempPremiumReceivableTransCode = "TempPremiumReceivableTransCode";
			public static readonly string ImputationReceiptNumber = "ImputationReceiptNumber";
            public static readonly string ProcessDate = "ProcessDate";
            public static readonly string Status = "Status";
		}

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="logSpecialProcessId">Propiedad clave LogSpecialProcessId.</param>
        /// <param name="TempPremiumReceivableTransCode">Propiedad clave TempPremiumReceivableTransCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int logSpecialProcessId, int tempPremiumReceivableTransCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LogSpecialProcessId, logSpecialProcessId);
		    keys.Add(Properties.TempPremiumReceivableTransCode, tempPremiumReceivableTransCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="logSpecialProcessId">Propiedad clave LogSpecialProcessId.</param>
		/// <param name="tempPremiumReceivableTransCode">Propiedad clave TempPremiumReceivableTransCode.</param>
		public static PrimaryKey CreatePrimaryKey(int logSpecialProcessId, int tempPremiumReceivableTransCode)
	    {
			return InternalCreatePrimaryKey<LogProcessCreditNote>(logSpecialProcessId, tempPremiumReceivableTransCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int _branchCode;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad PolicyId.
		/// </summary>
        private int? _policyId = null;
		/// <summary>
		/// Atributo para la propiedad PolicyNumber.
		/// </summary>
        private decimal _policyNumber;
        /// <summary>
        /// Atributo para la propiedad EndorsementCode.
        /// </summary>
        private int? _endorsementCode = null;
		/// <summary>
		/// Atributo para la propiedad EndorsementNumber.
		/// </summary>
        private int _endorsementNumber;
		/// <summary>
		/// Atributo para la propiedad InsuredId.
		/// </summary>
        private int? _insuredId = null;
		/// <summary>
		/// Atributo para la propiedad InsuredName.
		/// </summary>
        private string _insuredName = null;
		/// <summary>
		/// Atributo para la propiedad PayerId.
		/// </summary>
        private int? _payerId = null;
		/// <summary>
		/// Atributo para la propiedad PayerName.
		/// </summary>
        private string _payerName = null;
		/// <summary>
		/// Atributo para la propiedad AgentId.
		/// </summary>
        private int _agentId;
		/// <summary>
		/// Atributo para la propiedad AgentName.
		/// </summary>
        private string _agentName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad TempImputationCode.
		/// </summary>
        private int? _tempImputationCode = null;
		/// <summary>
		/// Atributo para la propiedad ImputationReceiptNumber.
		/// </summary>
        private decimal? _imputationReceiptNumber = null;
        /// <summary>
        /// Atributo para la propiedad ProcessDate.
        /// </summary>
        private int? _status = null;
        private DateTime _processDate;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="logSpecialProcessId">LogSpecialProcessId key property.</param>
		/// <param name="tempPremiumReceivableTransCode">TempPremiumReceivableTransCode key property.</param>
	    public LogProcessCreditNote(int logSpecialProcessId, int tempPremiumReceivableTransCode) :
			this(LogProcessCreditNote.CreatePrimaryKey(logSpecialProcessId, tempPremiumReceivableTransCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public LogProcessCreditNote(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LogSpecialProcessId.
		/// </summary>
		/// <value>Propiedad LogSpecialProcessId.</value>
	    [
		DescriptionKey("LOG_SPECIAL_PROCESS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LOG_SPECIAL_PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int LogSpecialProcessId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LogSpecialProcessId];
		    }
		    set
		    {
				this._primaryKey[Properties.LogSpecialProcessId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyNumber.
		/// </summary>
		/// <value>Propiedad PolicyNumber.</value>
	    [
		DescriptionKey("POLICY_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_NUMBER", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PolicyNumber
	    {
		    get
		    {
			    return this._policyNumber;
		    }
		    set
		    {
				this._policyNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementCode.
		/// </summary>
		/// <value>Propiedad EndorsementCode.</value>
	    [
		DescriptionKey("ENDORSEMENT_CD_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENDORSEMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? EndorsementCode
        {
		    get
		    {
			    return this._endorsementCode;
		    }
		    set
		    {
				this._endorsementCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementNumber.
		/// </summary>
		/// <value>Propiedad EndorsementNumber.</value>
	    [
		DescriptionKey("ENDORSEMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementNumber
	    {
		    get
		    {
			    return this._endorsementNumber;
		    }
		    set
		    {
				this._endorsementNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredId.
		/// </summary>
		/// <value>Propiedad InsuredId.</value>
	    [
		DescriptionKey("INSURED_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_ID", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredId
	    {
		    get
		    {
			    return this._insuredId;
		    }
		    set
		    {
				this._insuredId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredName.
		/// </summary>
		/// <value>Propiedad InsuredName.</value>
	    [
		DescriptionKey("INSURED_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_NAME", DbType=System.Data.DbType.String),
	    ]
        public string InsuredName
	    {
		    get
		    {
			    return this._insuredName;
		    }
		    set
		    {
				this._insuredName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerId.
		/// </summary>
		/// <value>Propiedad PayerId.</value>
	    [
		DescriptionKey("PAYER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PayerId
	    {
		    get
		    {
			    return this._payerId;
		    }
		    set
		    {
				this._payerId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerName.
		/// </summary>
		/// <value>Propiedad PayerName.</value>
	    [
		DescriptionKey("PAYER_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PayerName
	    {
		    get
		    {
			    return this._payerName;
		    }
		    set
		    {
				this._payerName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentId.
		/// </summary>
		/// <value>Propiedad AgentId.</value>
	    [
		DescriptionKey("AGENT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AGENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int AgentId
	    {
		    get
		    {
			    return this._agentId;
		    }
		    set
		    {
				this._agentId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentName.
		/// </summary>
		/// <value>Propiedad AgentName.</value>
	    [
		DescriptionKey("AGENT_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AgentName
	    {
		    get
		    {
			    return this._agentName;
		    }
		    set
		    {
				this._agentName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationCode.
		/// </summary>
		/// <value>Propiedad TempImputationCode.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_IMPUTATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempImputationCode
	    {
		    get
		    {
			    return this._tempImputationCode;
		    }
		    set
		    {
				this._tempImputationCode = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempPremiumReceivableTransCode.
        /// </summary>
        /// <value>Propiedad TempPremiumReceivableTransCode.</value>
        [
        DescriptionKey("TEMP_PREMIUM_RECEIVABLE_TRANS_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName= "TEMP_PREMIUM_RECEIVABLE_TRANS_CD", DbType=System.Data.DbType.String),
	    ]
        public int TempPremiumReceivableTransCode
        {
		    get
		    {
				return (int)this._primaryKey[Properties.TempPremiumReceivableTransCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TempPremiumReceivableTransCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationReceiptNumber.
		/// </summary>
		/// <value>Propiedad ImputationReceiptNumber.</value>
	    [
		DescriptionKey("IMPUTATION_RECEIPT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IMPUTATION_RECEIPT_NUMBER", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ImputationReceiptNumber
	    {
		    get
		    {
			    return this._imputationReceiptNumber;
		    }
		    set
		    {
				this._imputationReceiptNumber = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcessDate.
        /// </summary>
        /// <value>Propiedad ProcessDate.</value>
        [
        DescriptionKey("PROCESS_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PROCESS_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime ProcessDate
        {
            get
            {
                return this._processDate;
            }
            set
            {
                this._processDate = value;
            }
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad Status.
        /// </summary>
        /// <value>Propiedad Status.</value>
        [
        DescriptionKey("STATUS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATUS", DbType = System.Data.DbType.String),
        ]
        public int? Status
        {
            get
            {
                return this._status;
            }
            set
            {
                this._status = value;
            }
        }

    }
}