/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetPaymentOrderSearch.dict v1.0
 * FileSize=31062 Header=281 CRC=487997101
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad PaymentOrderTransferType View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.PaymentOrderTransferType.dict"),
    Serializable(),
    DescriptionKey("GET_PAYMENT_ORDER_SEARCH_ENTITY"),
    TableMap(TableName="GET_PAYMENT_ORDER_SEARCH", Schema="ACC"),
    ]
    public partial class PaymentOrderTransferType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentOrderCode = "PaymentOrderCode";
			public static readonly string PaymentMethodCode = "PaymentMethodCode";
			public static readonly string PaymentMethodName = "PaymentMethodName";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Amount = "Amount";
			public static readonly string UserId = "UserId";
			public static readonly string UserName = "UserName";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchName = "BranchName";
			public static readonly string BranchPayCode = "BranchPayCode";
			public static readonly string BranchPayName = "BranchPayName";
			public static readonly string AdmissionDate = "AdmissionDate";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string PayerName = "PayerName";
			public static readonly string BeneficiaryDocumentNumber = "BeneficiaryDocumentNumber";
			public static readonly string BeneficiaryName = "BeneficiaryName";
			public static readonly string PaymentSourceCode = "PaymentSourceCode";
			public static readonly string PaymentSourceName = "PaymentSourceName";
			public static readonly string CompanyCode = "CompanyCode";
			public static readonly string CompanyName = "CompanyName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyName = "CurrencyName";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string PersonTypeName = "PersonTypeName";
			public static readonly string EstimatedPaymentDate = "EstimatedPaymentDate";
			public static readonly string AccountBankCode = "AccountBankCode";
			public static readonly string BankAccountNumber = "BankAccountNumber";
			public static readonly string BankName = "BankName";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string CancellationDate = "CancellationDate";
			public static readonly string TempImputationCode = "TempImputationCode";
			public static readonly string CheckNumber = "CheckNumber";
			public static readonly string Status = "Status";
			public static readonly string PayTo = "PayTo";
			public static readonly string DeliveryDate = "DeliveryDate";
			public static readonly string ReconciliationDate = "ReconciliationDate";
			public static readonly string Observation = "Observation";
			public static readonly string IndividualTypeCode = "IndividualTypeCode";

            public static readonly string BankAccountNumberPerson = "BankAccountNumberPerson";
            public static readonly string BankAccountNamePerson = "BankNamePerson";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentOrderCode">Propiedad clave PaymentOrderCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentOrderCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentOrderCode, paymentOrderCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentOrderCode">Propiedad clave PaymentOrderCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentOrderCode)
	    {
			return InternalCreatePrimaryKey<PaymentOrderTransferType>(paymentOrderCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentMethodCode.
		/// </summary>
        private int? _paymentMethodCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodName.
		/// </summary>
        private string _paymentMethodName = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad UserName.
		/// </summary>
        private string _userName = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchName.
		/// </summary>
        private string _branchName = null;
		/// <summary>
		/// Atributo para la propiedad BranchPayCode.
		/// </summary>
        private int? _branchPayCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchPayName.
		/// </summary>
        private string _branchPayName = null;
		/// <summary>
		/// Atributo para la propiedad AdmissionDate.
		/// </summary>
        private DateTime? _admissionDate = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad PayerName.
		/// </summary>
        private string _payerName = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryDocumentNumber.
		/// </summary>
        private string _beneficiaryDocumentNumber = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryName.
		/// </summary>
        private string _beneficiaryName = null;
		/// <summary>
		/// Atributo para la propiedad PaymentSourceCode.
		/// </summary>
        private int? _paymentSourceCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentSourceName.
		/// </summary>
        private string _paymentSourceName = null;
		/// <summary>
		/// Atributo para la propiedad CompanyCode.
		/// </summary>
        private int? _companyCode = null;
		/// <summary>
		/// Atributo para la propiedad CompanyName.
		/// </summary>
        private string _companyName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyName.
		/// </summary>
        private string _currencyName = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int? _personTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeName.
		/// </summary>
        private string _personTypeName = null;
		/// <summary>
		/// Atributo para la propiedad EstimatedPaymentDate.
		/// </summary>
        private DateTime? _estimatedPaymentDate = null;
		/// <summary>
		/// Atributo para la propiedad AccountBankCode.
		/// </summary>
        private int? _accountBankCode = null;
		/// <summary>
		/// Atributo para la propiedad BankAccountNumber.
		/// </summary>
        private string _bankAccountNumber = null;
		/// <summary>
		/// Atributo para la propiedad BankName.
		/// </summary>
        private string _bankName = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad CancellationDate.
		/// </summary>
        private DateTime? _cancellationDate = null;
		/// <summary>
		/// Atributo para la propiedad TempImputationCode.
		/// </summary>
        private int? _tempImputationCode = null;
		/// <summary>
		/// Atributo para la propiedad CheckNumber.
		/// </summary>
        private int? _checkNumber = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad PayTo.
		/// </summary>
        private string _payTo = null;
		/// <summary>
		/// Atributo para la propiedad DeliveryDate.
		/// </summary>
        private DateTime? _deliveryDate = null;
		/// <summary>
		/// Atributo para la propiedad ReconciliationDate.
		/// </summary>
        private DateTime? _reconciliationDate = null;
		/// <summary>
		/// Atributo para la propiedad Observation.
		/// </summary>
        private string _observation = null;
		/// <summary>
		/// Atributo para la propiedad IndividualTypeCode.
		/// </summary>
        private int _individualTypeCode;

        private string _bankAccountNumberPerson = null;

        private string _bankAccountNamePerson = null;


        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="paymentOrderCode">PaymentOrderCode key property.</param>
        public PaymentOrderTransferType(int paymentOrderCode):
			this(PaymentOrderTransferType.CreatePrimaryKey(paymentOrderCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentOrderTransferType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentOrderCode.
		/// </summary>
		/// <value>Propiedad PaymentOrderCode.</value>
	    [
		DescriptionKey("PAYMENT_ORDER_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_ORDER_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentOrderCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentOrderCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentOrderCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodCode
	    {
		    get
		    {
			    return this._paymentMethodCode;
		    }
		    set
		    {
				this._paymentMethodCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodName.
		/// </summary>
		/// <value>Propiedad PaymentMethodName.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_METHOD_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PaymentMethodName
	    {
		    get
		    {
			    return this._paymentMethodName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PaymentMethodName);
				}
				this._paymentMethodName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserName.
		/// </summary>
		/// <value>Propiedad UserName.</value>
	    [
		DescriptionKey("USER_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_NAME", DbType=System.Data.DbType.String),
	    ]
        public string UserName
	    {
		    get
		    {
			    return this._userName;
		    }
		    set
		    {
				this._userName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchName.
		/// </summary>
		/// <value>Propiedad BranchName.</value>
	    [
		DescriptionKey("BRANCH_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BranchName
	    {
		    get
		    {
			    return this._branchName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchName);
				}
				this._branchName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchPayCode.
		/// </summary>
		/// <value>Propiedad BranchPayCode.</value>
	    [
		DescriptionKey("BRANCH_PAY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_PAY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchPayCode
	    {
		    get
		    {
			    return this._branchPayCode;
		    }
		    set
		    {
				this._branchPayCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchPayName.
		/// </summary>
		/// <value>Propiedad BranchPayName.</value>
	    [
		DescriptionKey("BRANCH_PAY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_PAY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BranchPayName
	    {
		    get
		    {
			    return this._branchPayName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchPayName);
				}
				this._branchPayName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AdmissionDate.
		/// </summary>
		/// <value>Propiedad AdmissionDate.</value>
	    [
		DescriptionKey("ADMISSION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ADMISSION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AdmissionDate
	    {
		    get
		    {
			    return this._admissionDate;
		    }
		    set
		    {
				this._admissionDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerName.
		/// </summary>
		/// <value>Propiedad PayerName.</value>
	    [
		DescriptionKey("PAYER_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PayerName
	    {
		    get
		    {
			    return this._payerName;
		    }
		    set
		    {
				this._payerName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryDocumentNumber.
		/// </summary>
		/// <value>Propiedad BeneficiaryDocumentNumber.</value>
	    [
		DescriptionKey("BENEFICIARY_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BENEFICIARY_DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryDocumentNumber
	    {
		    get
		    {
			    return this._beneficiaryDocumentNumber;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BeneficiaryDocumentNumber);
				}
				this._beneficiaryDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryName.
		/// </summary>
		/// <value>Propiedad BeneficiaryName.</value>
	    [
		DescriptionKey("BENEFICIARY_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryName
	    {
		    get
		    {
			    return this._beneficiaryName;
		    }
		    set
		    {
				this._beneficiaryName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentSourceCode.
		/// </summary>
		/// <value>Propiedad PaymentSourceCode.</value>
	    [
		DescriptionKey("PAYMENT_SOURCE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_SOURCE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentSourceCode
	    {
		    get
		    {
			    return this._paymentSourceCode;
		    }
		    set
		    {
				this._paymentSourceCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentSourceName.
		/// </summary>
		/// <value>Propiedad PaymentSourceName.</value>
	    [
		DescriptionKey("PAYMENT_SOURCE_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_SOURCE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PaymentSourceName
	    {
		    get
		    {
			    return this._paymentSourceName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PaymentSourceName);
				}
				this._paymentSourceName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyCode.
		/// </summary>
		/// <value>Propiedad CompanyCode.</value>
	    [
		DescriptionKey("COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CompanyCode
	    {
		    get
		    {
			    return this._companyCode;
		    }
		    set
		    {
				this._companyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyName.
		/// </summary>
		/// <value>Propiedad CompanyName.</value>
	    [
		DescriptionKey("COMPANY_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMPANY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CompanyName
	    {
		    get
		    {
			    return this._companyName;
		    }
		    set
		    {
				this._companyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyName.
		/// </summary>
		/// <value>Propiedad CurrencyName.</value>
	    [
		DescriptionKey("CURRENCY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyName
	    {
		    get
		    {
			    return this._currencyName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
				}
				this._currencyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeName.
		/// </summary>
		/// <value>Propiedad PersonTypeName.</value>
	    [
		DescriptionKey("PERSON_TYPE_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PersonTypeName
	    {
		    get
		    {
			    return this._personTypeName;
		    }
		    set
		    {
				this._personTypeName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimatedPaymentDate.
		/// </summary>
		/// <value>Propiedad EstimatedPaymentDate.</value>
	    [
		DescriptionKey("ESTIMATED_PAYMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATED_PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimatedPaymentDate
	    {
		    get
		    {
			    return this._estimatedPaymentDate;
		    }
		    set
		    {
				this._estimatedPaymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountBankCode.
		/// </summary>
		/// <value>Propiedad AccountBankCode.</value>
	    [
		DescriptionKey("ACCOUNT_BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountBankCode
	    {
		    get
		    {
			    return this._accountBankCode;
		    }
		    set
		    {
				this._accountBankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankAccountNumber.
		/// </summary>
		/// <value>Propiedad BankAccountNumber.</value>
	    [
		DescriptionKey("BANK_ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string BankAccountNumber
	    {
		    get
		    {
			    return this._bankAccountNumber;
		    }
		    set
		    {
				this._bankAccountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankName.
		/// </summary>
		/// <value>Propiedad BankName.</value>
	    [
		DescriptionKey("BANK_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BankName
	    {
		    get
		    {
			    return this._bankName;
		    }
		    set
		    {
				this._bankName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CancellationDate.
		/// </summary>
		/// <value>Propiedad CancellationDate.</value>
	    [
		DescriptionKey("CANCELLATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CANCELLATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CancellationDate
	    {
		    get
		    {
			    return this._cancellationDate;
		    }
		    set
		    {
				this._cancellationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationCode.
		/// </summary>
		/// <value>Propiedad TempImputationCode.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_IMPUTATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempImputationCode
	    {
		    get
		    {
			    return this._tempImputationCode;
		    }
		    set
		    {
				this._tempImputationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckNumber.
		/// </summary>
		/// <value>Propiedad CheckNumber.</value>
	    [
		DescriptionKey("CHECK_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHECK_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? CheckNumber
	    {
		    get
		    {
			    return this._checkNumber;
		    }
		    set
		    {
				this._checkNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayTo.
		/// </summary>
		/// <value>Propiedad PayTo.</value>
	    [
		DescriptionKey("PAY_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAY_TO", DbType=System.Data.DbType.String),
	    ]
        public string PayTo
	    {
		    get
		    {
			    return this._payTo;
		    }
		    set
		    {
				this._payTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeliveryDate.
		/// </summary>
		/// <value>Propiedad DeliveryDate.</value>
	    [
		DescriptionKey("DELIVERY_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DELIVERY_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DeliveryDate
	    {
		    get
		    {
			    return this._deliveryDate;
		    }
		    set
		    {
				this._deliveryDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReconciliationDate.
		/// </summary>
		/// <value>Propiedad ReconciliationDate.</value>
	    [
		DescriptionKey("RECONCILIATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECONCILIATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ReconciliationDate
	    {
		    get
		    {
			    return this._reconciliationDate;
		    }
		    set
		    {
				this._reconciliationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Observation.
		/// </summary>
		/// <value>Propiedad Observation.</value>
	    [
		DescriptionKey("OBSERVATION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="OBSERVATION", DbType=System.Data.DbType.String),
	    ]
        public string Observation
	    {
		    get
		    {
			    return this._observation;
		    }
		    set
		    {
				this._observation = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualTypeCode.
		/// </summary>
		/// <value>Propiedad IndividualTypeCode.</value>
	    [
		DescriptionKey("INDIVIDUAL_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int IndividualTypeCode
	    {
		    get
		    {
			    return this._individualTypeCode;
		    }
		    set
		    {
				this._individualTypeCode = value;
			}
	    }



        /// <summary>
        /// Devuelve o setea el valor de la propiedad Observation.
        /// </summary>
        /// <value>Propiedad Observation.</value>
        [
        DescriptionKey("BANK_ACCOUNT_NUMBER_PERSON_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BANK_ACCOUNT_NUMBER_PERSON", DbType = System.Data.DbType.String),
        ]
        public string BankAccountNumberPerson
        {
            get
            {
                return this._bankAccountNumberPerson;
            }
            set
            {
                this._bankAccountNumberPerson = value;
            }
        }


        /// <summary>
        /// Devuelve o setea el valor de la propiedad Observation.
        /// </summary>
        /// <value>Propiedad Observation.</value>
        [
        DescriptionKey("BANK_ACCOUNT_NAME_PERSON_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BANK_ACCOUNT_NAME_PERSON", DbType = System.Data.DbType.String),
        ]
        public string BankAccountNamePerson
        {
            get
            {
                return this._bankAccountNamePerson;
            }
            set
            {
                this._bankAccountNamePerson = value;
            }
        }

    }
}