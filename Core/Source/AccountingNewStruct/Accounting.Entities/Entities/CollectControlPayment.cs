/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.CollectControlPayment.dict v1.0
 * FileSize=7420 Header=281 CRC=3238547833
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CollectControlPayment.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CollectControlPayment.dict"),
    Serializable(),
    DescriptionKey("COLLECT_CONTROL_PAYMENT_ENTITY"),
    TableMap(TableName="COLLECT_CONTROL_PAYMENT", Schema="ACC"),
    ]
    public partial class CollectControlPayment :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CollectControlPaymentId = "CollectControlPaymentId";
			public static readonly string CollectControlCode = "CollectControlCode";
			public static readonly string PaymentMethodCode = "PaymentMethodCode";
			public static readonly string PaymentTotalAdmitted = "PaymentTotalAdmitted";
			public static readonly string PaymentTotalReceived = "PaymentTotalReceived";
			public static readonly string PaymentTotalDifference = "PaymentTotalDifference";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="collectControlPaymentId">Propiedad clave CollectControlPaymentId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int collectControlPaymentId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CollectControlPaymentId, collectControlPaymentId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="collectControlPaymentId">Propiedad clave CollectControlPaymentId.</param>
		public static PrimaryKey CreatePrimaryKey(int collectControlPaymentId)
	    {
			return InternalCreatePrimaryKey<CollectControlPayment>(collectControlPaymentId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CollectControlCode.
		/// </summary>
        private int? _collectControlCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodCode.
		/// </summary>
        private int? _paymentMethodCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentTotalAdmitted.
		/// </summary>
        private decimal? _paymentTotalAdmitted = null;
		/// <summary>
		/// Atributo para la propiedad PaymentTotalReceived.
		/// </summary>
        private decimal? _paymentTotalReceived = null;
		/// <summary>
		/// Atributo para la propiedad PaymentTotalDifference.
		/// </summary>
        private decimal? _paymentTotalDifference = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="collectControlPaymentId">CollectControlPaymentId key property.</param>
	    public CollectControlPayment(int collectControlPaymentId):
			this(CollectControlPayment.CreatePrimaryKey(collectControlPaymentId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CollectControlPayment(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectControlPaymentId.
		/// </summary>
		/// <value>Propiedad CollectControlPaymentId.</value>
	    [
		DescriptionKey("COLLECT_CONTROL_PAYMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_CONTROL_PAYMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectControlPaymentId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectControlPaymentId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectControlPaymentId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectControlCode.
		/// </summary>
		/// <value>Propiedad CollectControlCode.</value>
	    [
		DescriptionKey("COLLECT_CONTROL_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CONTROL_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CollectControlCode
	    {
		    get
		    {
			    return this._collectControlCode;
		    }
		    set
		    {
				this._collectControlCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodCode
	    {
		    get
		    {
			    return this._paymentMethodCode;
		    }
		    set
		    {
				this._paymentMethodCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentTotalAdmitted.
		/// </summary>
		/// <value>Propiedad PaymentTotalAdmitted.</value>
	    [
		DescriptionKey("PAYMENT_TOTAL_ADMITTED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_TOTAL_ADMITTED", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PaymentTotalAdmitted
	    {
		    get
		    {
			    return this._paymentTotalAdmitted;
		    }
		    set
		    {
				this._paymentTotalAdmitted = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentTotalReceived.
		/// </summary>
		/// <value>Propiedad PaymentTotalReceived.</value>
	    [
		DescriptionKey("PAYMENT_TOTAL_RECEIVED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_TOTAL_RECEIVED", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PaymentTotalReceived
	    {
		    get
		    {
			    return this._paymentTotalReceived;
		    }
		    set
		    {
				this._paymentTotalReceived = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentTotalDifference.
		/// </summary>
		/// <value>Propiedad PaymentTotalDifference.</value>
	    [
		DescriptionKey("PAYMENT_TOTAL_DIFFERENCE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_TOTAL_DIFFERENCE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PaymentTotalDifference
	    {
		    get
		    {
			    return this._paymentTotalDifference;
		    }
		    set
		    {
				this._paymentTotalDifference = value;
			}
	    }

    }
}