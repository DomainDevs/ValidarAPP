/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetPersonBankAccountV.dict v1.0
 * FileSize=16304 Header=281 CRC=744400988
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad GetPersonBankAccountV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.GetPersonBankAccountV.dict"),
    Serializable(),
    DescriptionKey("GET_PERSON_BANK_ACCOUNT_V_ENTITY"),
    TableMap(TableName="GET_PERSON_BANK_ACCOUNT_V", Schema="ACC"),
    ]
    public partial class GetPersonBankAccountV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AccountbankAccountBankCode = "AccountbankAccountBankCode";
			public static readonly string AccountbankAccountTypeCode = "AccountbankAccountTypeCode";
			public static readonly string AccountbankBankCode = "AccountbankBankCode";
			public static readonly string AccountbankCurrencyCode = "AccountbankCurrencyCode";
			public static readonly string AccountbankDefault = "AccountbankDefault";
			public static readonly string AccountbankEnabled = "AccountbankEnabled";
			public static readonly string AccountbankIndividualId = "AccountbankIndividualId";
			public static readonly string AccountbankNumber = "AccountbankNumber";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string BankDescription = "BankDescription";
			public static readonly string AccounttypeDescription = "AccounttypeDescription";
			public static readonly string ListpersonsDocumentNumber = "ListpersonsDocumentNumber";
			public static readonly string ListpersonsName = "ListpersonsName";
			public static readonly string AccountTypeCode = "AccountTypeCode";
			public static readonly string BankCode = "BankCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string IndividualId = "IndividualId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="accountbankAccountBankCode">Propiedad clave AccountbankAccountBankCode.</param>
		/// <param name="accountbankIndividualId">Propiedad clave AccountbankIndividualId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int accountbankAccountBankCode, int accountbankIndividualId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AccountbankAccountBankCode, accountbankAccountBankCode);
		    keys.Add(Properties.AccountbankIndividualId, accountbankIndividualId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="accountbankAccountBankCode">Propiedad clave AccountbankAccountBankCode.</param>
		/// <param name="accountbankIndividualId">Propiedad clave AccountbankIndividualId.</param>
		public static PrimaryKey CreatePrimaryKey(int accountbankAccountBankCode, int accountbankIndividualId)
	    {
			return InternalCreatePrimaryKey<GetPersonBankAccountV>(accountbankAccountBankCode, accountbankIndividualId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountbankAccountTypeCode.
		/// </summary>
        private int? _accountbankAccountTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountbankBankCode.
		/// </summary>
        private int? _accountbankBankCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountbankCurrencyCode.
		/// </summary>
        private int? _accountbankCurrencyCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountbankDefault.
		/// </summary>
        private bool? _accountbankDefault = null;
		/// <summary>
		/// Atributo para la propiedad AccountbankEnabled.
		/// </summary>
        private bool? _accountbankEnabled = null;
		/// <summary>
		/// Atributo para la propiedad AccountbankNumber.
		/// </summary>
        private string _accountbankNumber = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad BankDescription.
		/// </summary>
        private string _bankDescription = null;
		/// <summary>
		/// Atributo para la propiedad AccounttypeDescription.
		/// </summary>
        private string _accounttypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad ListpersonsDocumentNumber.
		/// </summary>
        private string _listpersonsDocumentNumber = null;
		/// <summary>
		/// Atributo para la propiedad ListpersonsName.
		/// </summary>
        private string _listpersonsName = null;
		/// <summary>
		/// Atributo para la propiedad AccountTypeCode.
		/// </summary>
        private int _accountTypeCode;
		/// <summary>
		/// Atributo para la propiedad BankCode.
		/// </summary>
       /// private int _bankCode;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        ///private int _currencyCode;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        //private int _individualId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="accountbankAccountBankCode">AccountbankAccountBankCode key property.</param>
		/// <param name="accountbankIndividualId">AccountbankIndividualId key property.</param>
	    public GetPersonBankAccountV(int accountbankAccountBankCode, int accountbankIndividualId):
			this(GetPersonBankAccountV.CreatePrimaryKey(accountbankAccountBankCode, accountbankIndividualId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetPersonBankAccountV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankAccountBankCode.
		/// </summary>
		/// <value>Propiedad AccountbankAccountBankCode.</value>
	    [
		DescriptionKey("ACCOUNTBANK_ACCOUNT_BANK_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTBANK_ACCOUNT_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int AccountbankAccountBankCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountbankAccountBankCode];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountbankAccountBankCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankAccountTypeCode.
		/// </summary>
		/// <value>Propiedad AccountbankAccountTypeCode.</value>
	    [
		DescriptionKey("ACCOUNTBANK_ACCOUNT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTBANK_ACCOUNT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountbankAccountTypeCode
	    {
		    get
		    {
			    return this._accountbankAccountTypeCode;
		    }
		    set
		    {
				this._accountbankAccountTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankBankCode.
		/// </summary>
		/// <value>Propiedad AccountbankBankCode.</value>
	    [
		DescriptionKey("ACCOUNTBANK_BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTBANK_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountbankBankCode
	    {
		    get
		    {
			    return this._accountbankBankCode;
		    }
		    set
		    {
				this._accountbankBankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankCurrencyCode.
		/// </summary>
		/// <value>Propiedad AccountbankCurrencyCode.</value>
	    [
		DescriptionKey("ACCOUNTBANK_CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTBANK_CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountbankCurrencyCode
	    {
		    get
		    {
			    return this._accountbankCurrencyCode;
		    }
		    set
		    {
				this._accountbankCurrencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankDefault.
		/// </summary>
		/// <value>Propiedad AccountbankDefault.</value>
	    [
		DescriptionKey("ACCOUNTBANK_DEFAULT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTBANK_DEFAULT", DbType=System.Data.DbType.String),
	    ]
        public bool? AccountbankDefault
	    {
		    get
		    {
			    return this._accountbankDefault;
		    }
		    set
		    {
				this._accountbankDefault = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankEnabled.
		/// </summary>
		/// <value>Propiedad AccountbankEnabled.</value>
	    [
		DescriptionKey("ACCOUNTBANK_ENABLED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTBANK_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool? AccountbankEnabled
	    {
		    get
		    {
			    return this._accountbankEnabled;
		    }
		    set
		    {
				this._accountbankEnabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankIndividualId.
		/// </summary>
		/// <value>Propiedad AccountbankIndividualId.</value>
	    [
		DescriptionKey("ACCOUNTBANK_INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTBANK_INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountbankIndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountbankIndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountbankIndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountbankNumber.
		/// </summary>
		/// <value>Propiedad AccountbankNumber.</value>
	    [
		DescriptionKey("ACCOUNTBANK_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTBANK_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AccountbankNumber
	    {
		    get
		    {
			    return this._accountbankNumber;
		    }
		    set
		    {
				this._accountbankNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankDescription.
		/// </summary>
		/// <value>Propiedad BankDescription.</value>
	    [
		DescriptionKey("BANK_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BANK_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BankDescription
	    {
		    get
		    {
			    return this._bankDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BankDescription);
				}
				this._bankDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccounttypeDescription.
		/// </summary>
		/// <value>Propiedad AccounttypeDescription.</value>
	    [
		DescriptionKey("ACCOUNTTYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTTYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string AccounttypeDescription
	    {
		    get
		    {
			    return this._accounttypeDescription;
		    }
		    set
		    {
				this._accounttypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ListpersonsDocumentNumber.
		/// </summary>
		/// <value>Propiedad ListpersonsDocumentNumber.</value>
	    [
		DescriptionKey("LISTPERSONS_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LISTPERSONS_DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string ListpersonsDocumentNumber
	    {
		    get
		    {
			    return this._listpersonsDocumentNumber;
		    }
		    set
		    {
				this._listpersonsDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ListpersonsName.
		/// </summary>
		/// <value>Propiedad ListpersonsName.</value>
	    [
		DescriptionKey("LISTPERSONS_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LISTPERSONS_NAME", DbType=System.Data.DbType.String),
	    ]
        public string ListpersonsName
	    {
		    get
		    {
			    return this._listpersonsName;
		    }
		    set
		    {
				this._listpersonsName = value;
			}
	    }
        /*
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountTypeCode.
		/// </summary>
		/// <value>Propiedad AccountTypeCode.</value>
	    [
		DescriptionKey("ACCOUNT_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int AccountTypeCode
	    {
		    get
		    {
			    return this._accountTypeCode;
		    }
		    set
		    {
				this._accountTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankCode.
		/// </summary>
		/// <value>Propiedad BankCode.</value>
	    [
		DescriptionKey("BANK_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int BankCode
	    {
		    get
		    {
			    return this._bankCode;
		    }
		    set
		    {
				this._bankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }*/

    }
}