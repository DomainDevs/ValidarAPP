/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.PaymentType.dict v1.0
 * FileSize=7853 Header=250 CRC=38198969
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad PaymentType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.PaymentType.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_TYPE_ENTITY"),
    TableMap(TableName="PAYMENT_TYPE", Schema="ACC"),
    ]
    public partial class PaymentType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentTypeCode = "PaymentTypeCode";
			public static readonly string Description = "Description";
			public static readonly string SmallDescription = "SmallDescription";
			public static readonly string EnabledTicket = "EnabledTicket";
			public static readonly string EnabledBilling = "EnabledBilling";
			public static readonly string EnabledPaymentOrder = "EnabledPaymentOrder";
			public static readonly string EnabledPaymentRequest = "EnabledPaymentRequest";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentTypeCode">Propiedad clave PaymentTypeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentTypeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentTypeCode, paymentTypeCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentTypeCode">Propiedad clave PaymentTypeCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentTypeCode)
	    {
			return InternalCreatePrimaryKey<PaymentType>(paymentTypeCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad SmallDescription.
		/// </summary>
        private string _smallDescription = null;
		/// <summary>
		/// Atributo para la propiedad EnabledTicket.
		/// </summary>
        private int? _enabledTicket = null;
		/// <summary>
		/// Atributo para la propiedad EnabledBilling.
		/// </summary>
        private int? _enabledBilling = null;
		/// <summary>
		/// Atributo para la propiedad EnabledPaymentOrder.
		/// </summary>
        private int? _enabledPaymentOrder = null;
		/// <summary>
		/// Atributo para la propiedad EnabledPaymentRequest.
		/// </summary>
        private int? _enabledPaymentRequest = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentTypeCode">PaymentTypeCode key property.</param>
	    public PaymentType(int paymentTypeCode):
			this(PaymentType.CreatePrimaryKey(paymentTypeCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SmallDescription.
		/// </summary>
		/// <value>Propiedad SmallDescription.</value>
	    [
		DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SMALL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SmallDescription
	    {
		    get
		    {
			    return this._smallDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
				}
				this._smallDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EnabledTicket.
		/// </summary>
		/// <value>Propiedad EnabledTicket.</value>
	    [
		DescriptionKey("ENABLED_TICKET_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENABLED_TICKET", DbType=System.Data.DbType.String),
	    ]
        public int? EnabledTicket
	    {
		    get
		    {
			    return this._enabledTicket;
		    }
		    set
		    {
				this._enabledTicket = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EnabledBilling.
		/// </summary>
		/// <value>Propiedad EnabledBilling.</value>
	    [
		DescriptionKey("ENABLED_BILLING_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENABLED_BILLING", DbType=System.Data.DbType.String),
	    ]
        public int? EnabledBilling
	    {
		    get
		    {
			    return this._enabledBilling;
		    }
		    set
		    {
				this._enabledBilling = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EnabledPaymentOrder.
		/// </summary>
		/// <value>Propiedad EnabledPaymentOrder.</value>
	    [
		DescriptionKey("ENABLED_PAYMENT_ORDER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENABLED_PAYMENT_ORDER", DbType=System.Data.DbType.String),
	    ]
        public int? EnabledPaymentOrder
	    {
		    get
		    {
			    return this._enabledPaymentOrder;
		    }
		    set
		    {
				this._enabledPaymentOrder = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EnabledPaymentRequest.
		/// </summary>
		/// <value>Propiedad EnabledPaymentRequest.</value>
	    [
		DescriptionKey("ENABLED_PAYMENT_REQUEST_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENABLED_PAYMENT_REQUEST", DbType=System.Data.DbType.String),
	    ]
        public int? EnabledPaymentRequest
	    {
		    get
		    {
			    return this._enabledPaymentRequest;
		    }
		    set
		    {
				this._enabledPaymentRequest = value;
			}
	    }

    }
}