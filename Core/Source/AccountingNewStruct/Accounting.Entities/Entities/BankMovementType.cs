/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.BankMovementType.dict v1.0
 * FileSize=5675 Header=265 CRC=2410209876
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad BankMovementType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.BankMovementType.dict"),
    Serializable(),
    DescriptionKey("BANK_MOVEMENT_TYPE_ENTITY"),
    TableMap(TableName="BANK_MOVEMENT_TYPE", Schema="ACC"),
    ]
    public partial class BankMovementType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BankCode = "BankCode";
			public static readonly string SiseCode = "SiseCode";
			public static readonly string MovementBankCode = "MovementBankCode";
			public static readonly string Voucher = "Voucher";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="bankCode">Propiedad clave BankCode.</param>
		/// <param name="siseCode">Propiedad clave SiseCode.</param>
		/// <param name="movementBankCode">Propiedad clave MovementBankCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int bankCode, int siseCode, string movementBankCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BankCode, bankCode);
		    keys.Add(Properties.SiseCode, siseCode);
		    keys.Add(Properties.MovementBankCode, movementBankCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="bankCode">Propiedad clave BankCode.</param>
		/// <param name="siseCode">Propiedad clave SiseCode.</param>
		/// <param name="movementBankCode">Propiedad clave MovementBankCode.</param>
		public static PrimaryKey CreatePrimaryKey(int bankCode, int siseCode, string movementBankCode)
	    {
			return InternalCreatePrimaryKey<BankMovementType>(bankCode, siseCode, movementBankCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Voucher.
		/// </summary>
        private bool? _voucher = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="bankCode">BankCode key property.</param>
		/// <param name="siseCode">SiseCode key property.</param>
		/// <param name="movementBankCode">MovementBankCode key property.</param>
	    public BankMovementType(int bankCode, int siseCode, string movementBankCode):
			this(BankMovementType.CreatePrimaryKey(bankCode, siseCode, movementBankCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BankMovementType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankCode.
		/// </summary>
		/// <value>Propiedad BankCode.</value>
	    [
		DescriptionKey("BANK_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int BankCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BankCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BankCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SiseCode.
		/// </summary>
		/// <value>Propiedad SiseCode.</value>
	    [
		DescriptionKey("SISE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SISE_CD", DbType=System.Data.DbType.String),
	    ]
        public int SiseCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.SiseCode];
		    }
		    set
		    {
				this._primaryKey[Properties.SiseCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MovementBankCode.
		/// </summary>
		/// <value>Propiedad MovementBankCode.</value>
	    [
		DescriptionKey("MOVEMENT_BANK_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="MOVEMENT_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public string MovementBankCode
	    {
		    get
		    {
				return (string)this._primaryKey[Properties.MovementBankCode];
		    }
		    set
		    {
				this._primaryKey[Properties.MovementBankCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Voucher.
		/// </summary>
		/// <value>Propiedad Voucher.</value>
	    [
		DescriptionKey("VOUCHER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VOUCHER", DbType=System.Data.DbType.String),
	    ]
        public bool? Voucher
	    {
		    get
		    {
			    return this._voucher;
		    }
		    set
		    {
				this._voucher = value;
			}
	    }

    }
}