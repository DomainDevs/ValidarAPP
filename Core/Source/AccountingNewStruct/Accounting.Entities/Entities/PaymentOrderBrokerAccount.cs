/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.PaymentOrderBrokerAccount.dict v1.0
 * FileSize=5140 Header=270 CRC=4011370607
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad PaymentOrderBrokerAccount.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.PaymentOrderBrokerAccount.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_ORDER_BROKER_ACCOUNT_ENTITY"),
    TableMap(TableName = "PAYMENT_ORDER_BROKER_ACCOUNT", Schema = "ACC"),
    ]
    public partial class PaymentOrderBrokerAccount :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentOrderBrokerAccountId = "PaymentOrderBrokerAccountId";
			public static readonly string PaymentOrderId = "PaymentOrderId";
			public static readonly string BrokerCheckingAccountId = "BrokerCheckingAccountId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentOrderBrokerAccountId">Propiedad clave PaymentOrderBrokerAccountId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentOrderBrokerAccountId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentOrderBrokerAccountId, paymentOrderBrokerAccountId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentOrderBrokerAccountId">Propiedad clave PaymentOrderBrokerAccountId.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentOrderBrokerAccountId)
	    {
			return InternalCreatePrimaryKey<PaymentOrderBrokerAccount>(paymentOrderBrokerAccountId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentOrderId.
		/// </summary>
        private int? _paymentOrderId = null;
		/// <summary>
		/// Atributo para la propiedad BrokerCheckingAccountId.
		/// </summary>
        private int? _brokerCheckingAccountId = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentOrderBrokerAccountId">PaymentOrderBrokerAccountId key property.</param>
	    public PaymentOrderBrokerAccount(int paymentOrderBrokerAccountId):
			this(PaymentOrderBrokerAccount.CreatePrimaryKey(paymentOrderBrokerAccountId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentOrderBrokerAccount(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentOrderBrokerAccountId.
		/// </summary>
		/// <value>Propiedad PaymentOrderBrokerAccountId.</value>
	    [
		DescriptionKey("PAYMENT_ORDER_BROKER_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_ORDER_BROKER_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int PaymentOrderBrokerAccountId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentOrderBrokerAccountId];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentOrderBrokerAccountId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentOrderId.
		/// </summary>
		/// <value>Propiedad PaymentOrderId.</value>
	    [
		DescriptionKey("PAYMENT_ORDER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_ORDER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentOrderId
	    {
		    get
		    {
			    return this._paymentOrderId;
		    }
		    set
		    {
				this._paymentOrderId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BrokerCheckingAccountId.
		/// </summary>
		/// <value>Propiedad BrokerCheckingAccountId.</value>
	    [
		DescriptionKey("BROKER_CHECKING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BROKER_CHECKING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BrokerCheckingAccountId
	    {
		    get
		    {
			    return this._brokerCheckingAccountId;
		    }
		    set
		    {
				this._brokerCheckingAccountId = value;
			}
	    }

    }
}