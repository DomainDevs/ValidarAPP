/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.CoinsuranceBalance.dict v1.0
 * FileSize=8471 Header=263 CRC=1478499725
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CoinsuranceBalance.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CoinsuranceBalance.dict"),
    Serializable(),
    DescriptionKey("COINSURANCE_BALANCE_ENTITY"),
    TableMap(TableName = "COINSURANCE_BALANCE", Schema = "ACC"),
    ]
    public partial class CoinsuranceBalance :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CoinsuranceBalanceCode = "CoinsuranceBalanceCode";
			public static readonly string CoinsuredCompanyId = "CoinsuredCompanyId";
			public static readonly string BalanceDate = "BalanceDate";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string LastBalanceDate = "LastBalanceDate";
			public static readonly string BalanceAmount = "BalanceAmount";
			public static readonly string BalanceIncomeAmount = "BalanceIncomeAmount";
			public static readonly string NumSheet = "NumSheet";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="coinsuranceBalanceCode">Propiedad clave CoinsuranceBalanceCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int coinsuranceBalanceCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CoinsuranceBalanceCode, coinsuranceBalanceCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="coinsuranceBalanceCode">Propiedad clave CoinsuranceBalanceCode.</param>
		public static PrimaryKey CreatePrimaryKey(int coinsuranceBalanceCode)
	    {
			return InternalCreatePrimaryKey<CoinsuranceBalance>(coinsuranceBalanceCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CoinsuredCompanyId.
		/// </summary>
        private int? _coinsuredCompanyId = null;
		/// <summary>
		/// Atributo para la propiedad BalanceDate.
		/// </summary>
        private DateTime? _balanceDate = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad LastBalanceDate.
		/// </summary>
        private DateTime? _lastBalanceDate = null;
		/// <summary>
		/// Atributo para la propiedad BalanceAmount.
		/// </summary>
        private decimal? _balanceAmount = null;
		/// <summary>
		/// Atributo para la propiedad BalanceIncomeAmount.
		/// </summary>
        private decimal? _balanceIncomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad NumSheet.
		/// </summary>
        private decimal? _numSheet = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="coinsuranceBalanceCode">CoinsuranceBalanceCode key property.</param>
	    public CoinsuranceBalance(int coinsuranceBalanceCode):
			this(CoinsuranceBalance.CreatePrimaryKey(coinsuranceBalanceCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoinsuranceBalance(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuranceBalanceCode.
		/// </summary>
		/// <value>Propiedad CoinsuranceBalanceCode.</value>
	    [
		DescriptionKey("COINSURANCE_BALANCE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COINSURANCE_BALANCE_CD", DbType=System.Data.DbType.String),
	    ]
        public int CoinsuranceBalanceCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoinsuranceBalanceCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CoinsuranceBalanceCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuredCompanyId.
		/// </summary>
		/// <value>Propiedad CoinsuredCompanyId.</value>
	    [
		DescriptionKey("COINSURED_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURED_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? CoinsuredCompanyId
	    {
		    get
		    {
			    return this._coinsuredCompanyId;
		    }
		    set
		    {
				this._coinsuredCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BalanceDate.
		/// </summary>
		/// <value>Propiedad BalanceDate.</value>
	    [
		DescriptionKey("BALANCE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BALANCE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? BalanceDate
	    {
		    get
		    {
			    return this._balanceDate;
		    }
		    set
		    {
				this._balanceDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LastBalanceDate.
		/// </summary>
		/// <value>Propiedad LastBalanceDate.</value>
	    [
		DescriptionKey("LAST_BALANCE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LAST_BALANCE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? LastBalanceDate
	    {
		    get
		    {
			    return this._lastBalanceDate;
		    }
		    set
		    {
				this._lastBalanceDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BalanceAmount.
		/// </summary>
		/// <value>Propiedad BalanceAmount.</value>
	    [
		DescriptionKey("BALANCE_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BALANCE_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? BalanceAmount
	    {
		    get
		    {
			    return this._balanceAmount;
		    }
		    set
		    {
				this._balanceAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BalanceIncomeAmount.
		/// </summary>
		/// <value>Propiedad BalanceIncomeAmount.</value>
	    [
		DescriptionKey("BALANCE_INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BALANCE_INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? BalanceIncomeAmount
	    {
		    get
		    {
			    return this._balanceIncomeAmount;
		    }
		    set
		    {
				this._balanceIncomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NumSheet.
		/// </summary>
		/// <value>Propiedad NumSheet.</value>
	    [
		DescriptionKey("NUM_SHEET_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NUM_SHEET", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? NumSheet
	    {
		    get
		    {
			    return this._numSheet;
		    }
		    set
		    {
				this._numSheet = value;
			}
	    }

    }
}