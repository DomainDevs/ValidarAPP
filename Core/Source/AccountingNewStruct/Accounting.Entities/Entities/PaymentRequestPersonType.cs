/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.GetPaymentRequestVarious.dict v1.0
 * FileSize=18788 Header=270 CRC=4237291642
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad PaymentRequestPersonType View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.PaymentRequestPersonType.dict"),
    Serializable(),
    DescriptionKey("GET_PAYMENT_REQUEST_VARIOUS_ENTITY"),
    TableMap(TableName = "GET_PAYMENT_REQUEST_VARIOUS", Schema = "ACC"),
    ]
    public partial class PaymentRequestPersonType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentRequestCode = "PaymentRequestCode";
			public static readonly string PaymentRequestNumber = "PaymentRequestNumber";
			public static readonly string VoucherNumber = "VoucherNumber";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string PrefixDescription = "PrefixDescription";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string PersonTypeDescription = "PersonTypeDescription";
			public static readonly string PaymentSourceCode = "PaymentSourceCode";
			public static readonly string PaymentSourceDescription = "PaymentSourceDescription";
			public static readonly string IdPayBeneficiary = "IdPayBeneficiary";
			public static readonly string DocNumPayBeneficiary = "DocNumPayBeneficiary";
			public static readonly string NamePayBeneficiary = "NamePayBeneficiary";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string TotalAmount = "TotalAmount";
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string EstimatedDate = "EstimatedDate";
			public static readonly string PaymentDate = "PaymentDate";
			public static readonly string StatusPayment = "StatusPayment";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentRequestCode">Propiedad clave PaymentRequestCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentRequestCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentRequestCode, paymentRequestCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentRequestCode">Propiedad clave PaymentRequestCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentRequestCode)
	    {
			return InternalCreatePrimaryKey<PaymentRequestPersonType>(paymentRequestCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentRequestNumber.
		/// </summary>
        private int? _paymentRequestNumber = null;
		/// <summary>
		/// Atributo para la propiedad VoucherNumber.
		/// </summary>
        private string _voucherNumber = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int? _prefixCode = null;
		/// <summary>
		/// Atributo para la propiedad PrefixDescription.
		/// </summary>
        private string _prefixDescription = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int? _personTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeDescription.
		/// </summary>
        private string _personTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad PaymentSourceCode.
		/// </summary>
        private int? _paymentSourceCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentSourceDescription.
		/// </summary>
        private string _paymentSourceDescription = null;
		/// <summary>
		/// Atributo para la propiedad IdPayBeneficiary.
		/// </summary>
        private int? _idPayBeneficiary = null;
		/// <summary>
		/// Atributo para la propiedad DocNumPayBeneficiary.
		/// </summary>
        private string _docNumPayBeneficiary = null;
		/// <summary>
		/// Atributo para la propiedad NamePayBeneficiary.
		/// </summary>
        private string _namePayBeneficiary = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad TotalAmount.
		/// </summary>
        private decimal? _totalAmount = null;
		/// <summary>
		/// Atributo para la propiedad RegistrationDate.
		/// </summary>
        private DateTime? _registrationDate = null;
		/// <summary>
		/// Atributo para la propiedad EstimatedDate.
		/// </summary>
        private DateTime? _estimatedDate = null;
		/// <summary>
		/// Atributo para la propiedad PaymentDate.
		/// </summary>
        private DateTime? _paymentDate = null;
		/// <summary>
		/// Atributo para la propiedad StatusPayment.
		/// </summary>
        private int? _statusPayment = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentRequestCode">PaymentRequestCode key property.</param>
	    public PaymentRequestPersonType(int paymentRequestCode):
			this(PaymentRequestPersonType.CreatePrimaryKey(paymentRequestCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentRequestPersonType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestCode.
		/// </summary>
		/// <value>Propiedad PaymentRequestCode.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_REQUEST_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentRequestCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentRequestCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentRequestCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestNumber.
		/// </summary>
		/// <value>Propiedad PaymentRequestNumber.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_REQUEST_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentRequestNumber
	    {
		    get
		    {
			    return this._paymentRequestNumber;
		    }
		    set
		    {
				this._paymentRequestNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad VoucherNumber.
		/// </summary>
		/// <value>Propiedad VoucherNumber.</value>
	    [
		DescriptionKey("VOUCHER_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VOUCHER_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string VoucherNumber
	    {
		    get
		    {
			    return this._voucherNumber;
		    }
		    set
		    {
				this._voucherNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixDescription.
		/// </summary>
		/// <value>Propiedad PrefixDescription.</value>
	    [
		DescriptionKey("PREFIX_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PrefixDescription
	    {
		    get
		    {
			    return this._prefixDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PrefixDescription);
				}
				this._prefixDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeDescription.
		/// </summary>
		/// <value>Propiedad PersonTypeDescription.</value>
	    [
		DescriptionKey("PERSON_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PersonTypeDescription
	    {
		    get
		    {
			    return this._personTypeDescription;
		    }
		    set
		    {
				this._personTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentSourceCode.
		/// </summary>
		/// <value>Propiedad PaymentSourceCode.</value>
	    [
		DescriptionKey("PAYMENT_SOURCE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_SOURCE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentSourceCode
	    {
		    get
		    {
			    return this._paymentSourceCode;
		    }
		    set
		    {
				this._paymentSourceCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentSourceDescription.
		/// </summary>
		/// <value>Propiedad PaymentSourceDescription.</value>
	    [
		DescriptionKey("PAYMENT_SOURCE_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_SOURCE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PaymentSourceDescription
	    {
		    get
		    {
			    return this._paymentSourceDescription;
		    }
		    set
		    {
				this._paymentSourceDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdPayBeneficiary.
		/// </summary>
		/// <value>Propiedad IdPayBeneficiary.</value>
	    [
		DescriptionKey("ID_PAY_BENEFICIARY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ID_PAY_BENEFICIARY", DbType=System.Data.DbType.String),
	    ]
        public int? IdPayBeneficiary
	    {
		    get
		    {
			    return this._idPayBeneficiary;
		    }
		    set
		    {
				this._idPayBeneficiary = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocNumPayBeneficiary.
		/// </summary>
		/// <value>Propiedad DocNumPayBeneficiary.</value>
	    [
		DescriptionKey("DOC_NUM_PAY_BENEFICIARY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DOC_NUM_PAY_BENEFICIARY", DbType=System.Data.DbType.String),
	    ]
        public string DocNumPayBeneficiary
	    {
		    get
		    {
			    return this._docNumPayBeneficiary;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.DocNumPayBeneficiary);
				}
				this._docNumPayBeneficiary = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NamePayBeneficiary.
		/// </summary>
		/// <value>Propiedad NamePayBeneficiary.</value>
	    [
		DescriptionKey("NAME_PAY_BENEFICIARY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="NAME_PAY_BENEFICIARY", DbType=System.Data.DbType.String),
	    ]
        public string NamePayBeneficiary
	    {
		    get
		    {
			    return this._namePayBeneficiary;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.NamePayBeneficiary);
				}
				this._namePayBeneficiary = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalAmount.
		/// </summary>
		/// <value>Propiedad TotalAmount.</value>
	    [
		DescriptionKey("TOTAL_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalAmount
	    {
		    get
		    {
			    return this._totalAmount;
		    }
		    set
		    {
				this._totalAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegistrationDate
	    {
		    get
		    {
			    return this._registrationDate;
		    }
		    set
		    {
				this._registrationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimatedDate.
		/// </summary>
		/// <value>Propiedad EstimatedDate.</value>
	    [
		DescriptionKey("ESTIMATED_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATED_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimatedDate
	    {
		    get
		    {
			    return this._estimatedDate;
		    }
		    set
		    {
				this._estimatedDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentDate.
		/// </summary>
		/// <value>Propiedad PaymentDate.</value>
	    [
		DescriptionKey("PAYMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? PaymentDate
	    {
		    get
		    {
			    return this._paymentDate;
		    }
		    set
		    {
				this._paymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StatusPayment.
		/// </summary>
		/// <value>Propiedad StatusPayment.</value>
	    [
		DescriptionKey("STATUS_PAYMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS_PAYMENT", DbType=System.Data.DbType.String),
	    ]
        public int? StatusPayment
	    {
		    get
		    {
			    return this._statusPayment;
		    }
		    set
		    {
				this._statusPayment = value;
			}
	    }

    }
}