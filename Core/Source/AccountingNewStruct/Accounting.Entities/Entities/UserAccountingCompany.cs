/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.UserAccountingCompany.dict v1.0
 * FileSize=5085 Header=266 CRC=2591585876
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad UserAccountingCompany.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.UserAccountingCompany.dict"),
    Serializable(),
    DescriptionKey("USER_ACCOUNTING_COMPANY_ENTITY"),
    TableMap(TableName="USER_ACCOUNTING_COMPANY", Schema="ACC"),
    ]
    public partial class UserAccountingCompany :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string UserId = "UserId";
			public static readonly string AccountingCompanyCode = "AccountingCompanyCode";
			public static readonly string DefaultAccountingCompany = "DefaultAccountingCompany";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="userId">Propiedad clave UserId.</param>
		/// <param name="accountingCompanyCode">Propiedad clave AccountingCompanyCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int userId, int accountingCompanyCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.UserId, userId);
		    keys.Add(Properties.AccountingCompanyCode, accountingCompanyCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="userId">Propiedad clave UserId.</param>
		/// <param name="accountingCompanyCode">Propiedad clave AccountingCompanyCode.</param>
		public static PrimaryKey CreatePrimaryKey(int userId, int accountingCompanyCode)
	    {
			return InternalCreatePrimaryKey<UserAccountingCompany>(userId, accountingCompanyCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad DefaultAccountingCompany.
		/// </summary>
        private bool? _defaultAccountingCompany = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="userId">UserId key property.</param>
		/// <param name="accountingCompanyCode">AccountingCompanyCode key property.</param>
	    public UserAccountingCompany(int userId, int accountingCompanyCode):
			this(UserAccountingCompany.CreatePrimaryKey(userId, accountingCompanyCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public UserAccountingCompany(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.UserId];
		    }
		    set
		    {
				this._primaryKey[Properties.UserId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyCode.
		/// </summary>
		/// <value>Propiedad AccountingCompanyCode.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int AccountingCompanyCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountingCompanyCode];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountingCompanyCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DefaultAccountingCompany.
		/// </summary>
		/// <value>Propiedad DefaultAccountingCompany.</value>
	    [
		DescriptionKey("DEFAULT_ACCOUNTING_COMPANY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DEFAULT_ACCOUNTING_COMPANY", DbType=System.Data.DbType.String),
	    ]
        public bool? DefaultAccountingCompany
	    {
		    get
		    {
			    return this._defaultAccountingCompany;
		    }
		    set
		    {
				this._defaultAccountingCompany = value;
			}
	    }

    }
}