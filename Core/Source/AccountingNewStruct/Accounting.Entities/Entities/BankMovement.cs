/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.BankMovement.dict v1.0
 * FileSize=6505 Header=272 CRC=1007072095
 ******************************************/
using System;
using System.Data;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad BankMovement.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.BankMovement.dict"),
    Serializable(),
    DescriptionKey("BANK_MOVEMENT_ENTITY"),
    TableMap(TableName = "BANK_MOVEMENT", Schema = "ACC"),
    ]
    public partial class BankMovement :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string SiseCode = "SiseCode";
            public static readonly string Description = "Description";
            public static readonly string System = "System";
            public static readonly string ShortDescription = "ShortDescription";
            public static readonly string DebitCompany = "DebitCompany";
            public static readonly string DebitBank = "DebitBank";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="siseCode">Propiedad clave SiseCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int siseCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SiseCode, siseCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="siseCode">Propiedad clave SiseCode.</param>
        public static PrimaryKey CreatePrimaryKey(int siseCode)
        {
            return InternalCreatePrimaryKey<BankMovement>(siseCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad System.
        /// </summary>
        private bool? _system = null;
        /// <summary>
        /// Atributo para la propiedad ShortDescription.
        /// </summary>
        private string _shortDescription = null;
        /// <summary>
        /// Atributo para la propiedad DebitCompany.
        /// </summary>
        private bool? _debitCompany = null;
        /// <summary>
        /// Atributo para la propiedad DebitBank.
        /// </summary>
        private bool? _debitBank = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="siseCode">SiseCode key property.</param>
        public BankMovement(int siseCode) :
            this(BankMovement.CreatePrimaryKey(siseCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public BankMovement(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad SiseCode.
        /// </summary>
        /// <value>Propiedad SiseCode.</value>
        [
        DescriptionKey("SISE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SISE_CD", DbType = DbType.String),
        ]
        public int SiseCode
        {
            get
            {
                return (int)this._primaryKey[Properties.SiseCode];
            }
            set
            {
                this._primaryKey[Properties.SiseCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad System.
        /// </summary>
        /// <value>Propiedad System.</value>
        [
        DescriptionKey("SYSTEM_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SYSTEM", DbType = DbType.String),
        ]
        public bool? System
        {
            get
            {
                return this._system;
            }
            set
            {
                this._system = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ShortDescription.
        /// </summary>
        /// <value>Propiedad ShortDescription.</value>
        [
        DescriptionKey("SHORT_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SHORT_DESCRIPTION", DbType = DbType.String),
        ]
        public string ShortDescription
        {
            get
            {
                return this._shortDescription;
            }
            set
            {
                this._shortDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DebitCompany.
        /// </summary>
        /// <value>Propiedad DebitCompany.</value>
        [
        DescriptionKey("DEBIT_COMPANY_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEBIT_COMPANY", DbType = DbType.String),
        ]
        public bool? DebitCompany
        {
            get
            {
                return this._debitCompany;
            }
            set
            {
                this._debitCompany = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DebitBank.
        /// </summary>
        /// <value>Propiedad DebitBank.</value>
        [
        DescriptionKey("DEBIT_BANK_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DEBIT_BANK", DbType = DbType.String),
        ]
        public bool? DebitBank
        {
            get
            {
                return this._debitBank;
            }
            set
            {
                this._debitBank = value;
            }
        }

    }
}