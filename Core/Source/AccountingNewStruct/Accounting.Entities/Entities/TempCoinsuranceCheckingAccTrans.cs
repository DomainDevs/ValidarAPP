/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.GetCoinsuranceCheckingAccountItem.dict v1.0
 * FileSize=28175 Header=294 CRC=2111840084
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad TempCoinsuranceCheckingAccTrans View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.TempCoinsuranceCheckingAccTrans.dict"),
    Serializable(),
    DescriptionKey("GET_COINSURANCE_CHECKING_ACCOUNT_ITEM_ENTITY"),
    TableMap(TableName = "GET_COINSURANCE_CHECKING_ACCOUNT_ITEM", Schema = "ACC"),
    ]
    public partial class TempCoinsuranceCheckingAccTrans :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CoinsCheckingAccTransId = "CoinsCheckingAccTransId";
            public static readonly string ApplicationCode = "ApplicationCode";
            public static readonly string CoinsuranceParentCode = "CoinsuranceParentCode";
            public static readonly string TempCoinsCheckingAccTransCode = "TempCoinsCheckingAccTransCode";
            public static readonly string TempCoinsuranceCheckingAccountItemCode = "TempCoinsuranceCheckingAcc_578";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string BranchName = "BranchName";
            public static readonly string CoinsuranceType = "CoinsuranceType";
            public static readonly string SalePointCode = "SalePointCode";
            public static readonly string SalePointName = "SalePointName";
            public static readonly string CoinsuredCompanyId = "CoinsuredCompanyId";
            public static readonly string CoinsurerName = "CoinsurerName";
            public static readonly string CheckingAccountConceptCode = "CheckingAccountConceptCode";
            public static readonly string CheckingAccountConceptName = "CheckingAccountConceptName";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string CurrencyName = "CurrencyName";
            public static readonly string TinyDescription = "TinyDescription";
            public static readonly string ExchangeRate = "ExchangeRate";
            public static readonly string IncomeAmount = "IncomeAmount";
            public static readonly string Amount = "Amount";
            public static readonly string AccountingNatureCode = "AccountingNatureCode";
            public static readonly string Description = "Description";
            public static readonly string AccountingCompanyCode = "AccountingCompanyCode";
            public static readonly string AccountingCompanyName = "AccountingCompanyName";
            public static readonly string AccountingDate = "AccountingDate";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string PolycyNumber = "PolycyNumber";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string PrefixName = "PrefixName";
            public static readonly string ClaimCode = "ClaimCode";
            public static readonly string ClaimNumber = "ClaimNumber";
            public static readonly string PaymentCode = "PaymentCode";
            public static readonly string ComplaintNumber = "ComplaintNumber";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="coinsCheckingAccTransId">Propiedad clave CoinsCheckingAccTransId.</param>
        /// <param name="tempCoinsuranceCheckingAccountItemCode">Propiedad clave TempCoinsuranceCheckingAccountItemCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int coinsCheckingAccTransId, int tempCoinsuranceCheckingAccountItemCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CoinsCheckingAccTransId, coinsCheckingAccTransId);
            keys.Add(Properties.TempCoinsuranceCheckingAccountItemCode, tempCoinsuranceCheckingAccountItemCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="coinsCheckingAccTransId">Propiedad clave CoinsCheckingAccTransId.</param>
        /// <param name="tempCoinsuranceCheckingAccountItemCode">Propiedad clave TempCoinsuranceCheckingAccountItemCode.</param>
        public static PrimaryKey CreatePrimaryKey(int coinsCheckingAccTransId, int tempCoinsuranceCheckingAccountItemCode)
        {
            return InternalCreatePrimaryKey<TempCoinsuranceCheckingAccTrans>(coinsCheckingAccTransId, tempCoinsuranceCheckingAccountItemCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ApplicationCode.
        /// </summary>
        private int? _applicationCode = null;
        /// <summary>
        /// Atributo para la propiedad CoinsuranceParentCode.
        /// </summary>
        private int? _coinsuranceParentCode = null;
        /// <summary>
        /// Atributo para la propiedad TempCoinsCheckingAccTransCode.
        /// </summary>
        private int? _tempCoinsCheckingAccTransCode = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int? _branchCode = null;
        /// <summary>
        /// Atributo para la propiedad BranchName.
        /// </summary>
        private string _branchName = null;
        /// <summary>
        /// Atributo para la propiedad CoinsuranceType.
        /// </summary>
        private int? _coinsuranceType = null;
        /// <summary>
        /// Atributo para la propiedad SalePointCode.
        /// </summary>
        private int? _salePointCode = null;
        /// <summary>
        /// Atributo para la propiedad SalePointName.
        /// </summary>
        private string _salePointName = null;
        /// <summary>
        /// Atributo para la propiedad CoinsuredCompanyId.
        /// </summary>
        private int? _coinsuredCompanyId = null;
        /// <summary>
        /// Atributo para la propiedad CoinsurerName.
        /// </summary>
        private string _coinsurerName = null;
        /// <summary>
        /// Atributo para la propiedad CheckingAccountConceptCode.
        /// </summary>
        private int? _checkingAccountConceptCode = null;
        /// <summary>
        /// Atributo para la propiedad CheckingAccountConceptName.
        /// </summary>
        private string _checkingAccountConceptName = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int? _currencyCode = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyName.
        /// </summary>
        private string _currencyName = null;
        /// <summary>
        /// Atributo para la propiedad TinyDescription.
        /// </summary>
        private string _tinyDescription = null;
        /// <summary>
        /// Atributo para la propiedad ExchangeRate.
        /// </summary>
        private decimal? _exchangeRate = null;
        /// <summary>
        /// Atributo para la propiedad IncomeAmount.
        /// </summary>
        private decimal? _incomeAmount = null;
        /// <summary>
        /// Atributo para la propiedad Amount.
        /// </summary>
        private decimal? _amount = null;
        /// <summary>
        /// Atributo para la propiedad AccountingNatureCode.
        /// </summary>
        private int? _accountingNatureCode = null;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad AccountingCompanyCode.
        /// </summary>
        private int? _accountingCompanyCode = null;
        /// <summary>
        /// Atributo para la propiedad AccountingCompanyName.
        /// </summary>
        private string _accountingCompanyName = null;
        /// <summary>
        /// Atributo para la propiedad AccountingDate.
        /// </summary>
        private DateTime? _accountingDate = null;
        /// <summary>
        /// Atributo para la propiedad PolicyId.
        /// </summary>
        private int? _policyId = null;
        /// <summary>
        /// Atributo para la propiedad PolycyNumber.
        /// </summary>
        private decimal? _polycyNumber = null;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int? _prefixCode = null;
        /// <summary>
        /// Atributo para la propiedad PrefixName.
        /// </summary>
        private string _prefixName = null;
        /// <summary>
        /// Atributo para la propiedad ClaimCode.
        /// </summary>
        private int? _claimCode = null;
        /// <summary>
        /// Atributo para la propiedad ClaimNumber.
        /// </summary>
        private int? _claimNumber = null;
        /// <summary>
        /// Atributo para la propiedad PaymentCode.
        /// </summary>
        private int? _paymentCode = null;
        /// <summary>
        /// Atributo para la propiedad ComplaintNumber.
        /// </summary>
        private int? _complaintNumber = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="coinsCheckingAccTransId">CoinsCheckingAccTransId key property.</param>
        /// <param name="tempCoinsuranceCheckingAccountItemCode">TempCoinsuranceCheckingAccountItemCode key property.</param>
        public TempCoinsuranceCheckingAccTrans(int coinsCheckingAccTransId, int tempCoinsuranceCheckingAccountItemCode) :
            this(TempCoinsuranceCheckingAccTrans.CreatePrimaryKey(coinsCheckingAccTransId, tempCoinsuranceCheckingAccountItemCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public TempCoinsuranceCheckingAccTrans(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoinsCheckingAccTransId.
        /// </summary>
        /// <value>Propiedad CoinsCheckingAccTransId.</value>
        [
        DescriptionKey("COINS_CHECKING_ACC_TRANS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COINS_CHECKING_ACC_TRANS_ID", DbType = System.Data.DbType.String),
        ]
        public int CoinsCheckingAccTransId
        {
            get
            {
                return (int)this._primaryKey[Properties.CoinsCheckingAccTransId];
            }
            set
            {
                this._primaryKey[Properties.CoinsCheckingAccTransId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ApplicationCode.
        /// </summary>
        /// <value>Propiedad ApplicationCode.</value>
        [
        DescriptionKey("APPLICATIONN_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "APPLICATION_CD", DbType = System.Data.DbType.String),
        ]
        public int? ApplicationCode
        {
            get
            {
                return this._applicationCode;
            }
            set
            {
                this._applicationCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoinsuranceParentCode.
        /// </summary>
        /// <value>Propiedad CoinsuranceParentCode.</value>
        [
        DescriptionKey("COINSURANCE_PARENT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COINSURANCE_PARENT_CD", DbType = System.Data.DbType.String),
        ]
        public int? CoinsuranceParentCode
        {
            get
            {
                return this._coinsuranceParentCode;
            }
            set
            {
                this._coinsuranceParentCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempCoinsCheckingAccTransCode.
        /// </summary>
        /// <value>Propiedad TempCoinsCheckingAccTransCode.</value>
        [
        DescriptionKey("TEMP_COINS_CHECKING_ACC_TRANS_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "TEMP_COINS_CHECKING_ACC_TRANS_CD", DbType = System.Data.DbType.String),
        ]
        public int? TempCoinsCheckingAccTransCode
        {
            get
            {
                return this._tempCoinsCheckingAccTransCode;
            }
            set
            {
                this._tempCoinsCheckingAccTransCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TempCoinsuranceCheckingAccountItemCode.
        /// </summary>
        /// <value>Propiedad TempCoinsuranceCheckingAccountItemCode.</value>
        [
        DescriptionKey("TEMP_COINSURANCE_CHECKING_ACCOUNT_ITEM_CODE_PROPERTY"),
        PersistentProperty(IsKey = true, DataName = "TempCoinsuranceCheckingAcc_578"),
        ColumnMap(ColumnName = "TEMP_COINSURANCE_CHECKING_ACCOUNT_ITEM_CD", DbType = System.Data.DbType.String),
        ]
        public int TempCoinsuranceCheckingAccountItemCode
        {
            get
            {
                return (int)this._primaryKey[Properties.TempCoinsuranceCheckingAccountItemCode];
            }
            set
            {
                this._primaryKey[Properties.TempCoinsuranceCheckingAccountItemCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int? BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchName.
        /// </summary>
        /// <value>Propiedad BranchName.</value>
        [
        DescriptionKey("BRANCH_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_NAME", DbType = System.Data.DbType.String),
        ]
        public string BranchName
        {
            get
            {
                return this._branchName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchName);
                }
                this._branchName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoinsuranceType.
        /// </summary>
        /// <value>Propiedad CoinsuranceType.</value>
        [
        DescriptionKey("COINSURANCE_TYPE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COINSURANCE_TYPE", DbType = System.Data.DbType.String),
        ]
        public int? CoinsuranceType
        {
            get
            {
                return this._coinsuranceType;
            }
            set
            {
                this._coinsuranceType = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SalePointCode.
        /// </summary>
        /// <value>Propiedad SalePointCode.</value>
        [
        DescriptionKey("SALE_POINT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SALE_POINT_CD", DbType = System.Data.DbType.String),
        ]
        public int? SalePointCode
        {
            get
            {
                return this._salePointCode;
            }
            set
            {
                this._salePointCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SalePointName.
        /// </summary>
        /// <value>Propiedad SalePointName.</value>
        [
        DescriptionKey("SALE_POINT_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SALE_POINT_NAME", DbType = System.Data.DbType.String),
        ]
        public string SalePointName
        {
            get
            {
                return this._salePointName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.SalePointName);
                }
                this._salePointName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoinsuredCompanyId.
        /// </summary>
        /// <value>Propiedad CoinsuredCompanyId.</value>
        [
        DescriptionKey("COINSURED_COMPANY_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COINSURED_COMPANY_ID", DbType = System.Data.DbType.String),
        ]
        public int? CoinsuredCompanyId
        {
            get
            {
                return this._coinsuredCompanyId;
            }
            set
            {
                this._coinsuredCompanyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CoinsurerName.
        /// </summary>
        /// <value>Propiedad CoinsurerName.</value>
        [
        DescriptionKey("COINSURER_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COINSURER_NAME", DbType = System.Data.DbType.String),
        ]
        public string CoinsurerName
        {
            get
            {
                return this._coinsurerName;
            }
            set
            {
                this._coinsurerName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CheckingAccountConceptCode.
        /// </summary>
        /// <value>Propiedad CheckingAccountConceptCode.</value>
        [
        DescriptionKey("CHECKING_ACCOUNT_CONCEPT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CHECKING_ACCOUNT_CONCEPT_CD", DbType = System.Data.DbType.String),
        ]
        public int? CheckingAccountConceptCode
        {
            get
            {
                return this._checkingAccountConceptCode;
            }
            set
            {
                this._checkingAccountConceptCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CheckingAccountConceptName.
        /// </summary>
        /// <value>Propiedad CheckingAccountConceptName.</value>
        [
        DescriptionKey("CHECKING_ACCOUNT_CONCEPT_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CHECKING_ACCOUNT_CONCEPT_NAME", DbType = System.Data.DbType.String),
        ]
        public string CheckingAccountConceptName
        {
            get
            {
                return this._checkingAccountConceptName;
            }
            set
            {
                this._checkingAccountConceptName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyName.
        /// </summary>
        /// <value>Propiedad CurrencyName.</value>
        [
        DescriptionKey("CURRENCY_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_NAME", DbType = System.Data.DbType.String),
        ]
        public string CurrencyName
        {
            get
            {
                return this._currencyName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
                }
                this._currencyName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TinyDescription.
        /// </summary>
        /// <value>Propiedad TinyDescription.</value>
        [
        DescriptionKey("TINY_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TINY_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string TinyDescription
        {
            get
            {
                return this._tinyDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.TinyDescription);
                }
                this._tinyDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExchangeRate.
        /// </summary>
        /// <value>Propiedad ExchangeRate.</value>
        [
        DescriptionKey("EXCHANGE_RATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EXCHANGE_RATE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? ExchangeRate
        {
            get
            {
                return this._exchangeRate;
            }
            set
            {
                this._exchangeRate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IncomeAmount.
        /// </summary>
        /// <value>Propiedad IncomeAmount.</value>
        [
        DescriptionKey("INCOME_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INCOME_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? IncomeAmount
        {
            get
            {
                return this._incomeAmount;
            }
            set
            {
                this._incomeAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Amount.
        /// </summary>
        /// <value>Propiedad Amount.</value>
        [
        DescriptionKey("AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                this._amount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingNatureCode.
        /// </summary>
        /// <value>Propiedad AccountingNatureCode.</value>
        [
        DescriptionKey("ACCOUNTING_NATURE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_NATURE_CD", DbType = System.Data.DbType.String),
        ]
        public int? AccountingNatureCode
        {
            get
            {
                return this._accountingNatureCode;
            }
            set
            {
                this._accountingNatureCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingCompanyCode.
        /// </summary>
        /// <value>Propiedad AccountingCompanyCode.</value>
        [
        DescriptionKey("ACCOUNTING_COMPANY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_COMPANY_CD", DbType = System.Data.DbType.String),
        ]
        public int? AccountingCompanyCode
        {
            get
            {
                return this._accountingCompanyCode;
            }
            set
            {
                this._accountingCompanyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingCompanyName.
        /// </summary>
        /// <value>Propiedad AccountingCompanyName.</value>
        [
        DescriptionKey("ACCOUNTING_COMPANY_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_COMPANY_NAME", DbType = System.Data.DbType.String),
        ]
        public string AccountingCompanyName
        {
            get
            {
                return this._accountingCompanyName;
            }
            set
            {
                this._accountingCompanyName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingDate.
        /// </summary>
        /// <value>Propiedad AccountingDate.</value>
        [
        DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? AccountingDate
        {
            get
            {
                return this._accountingDate;
            }
            set
            {
                this._accountingDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int? PolicyId
        {
            get
            {
                return this._policyId;
            }
            set
            {
                this._policyId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolycyNumber.
        /// </summary>
        /// <value>Propiedad PolycyNumber.</value>
        [
        DescriptionKey("POLYCY_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLYCY_NUMBER", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PolycyNumber
        {
            get
            {
                return this._polycyNumber;
            }
            set
            {
                this._polycyNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int? PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixName.
        /// </summary>
        /// <value>Propiedad PrefixName.</value>
        [
        DescriptionKey("PREFIX_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREFIX_NAME", DbType = System.Data.DbType.String),
        ]
        public string PrefixName
        {
            get
            {
                return this._prefixName;
            }
            set
            {
                this._prefixName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClaimCode.
        /// </summary>
        /// <value>Propiedad ClaimCode.</value>
        [
        DescriptionKey("CLAIM_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CLAIM_CD", DbType = System.Data.DbType.String),
        ]
        public int? ClaimCode
        {
            get
            {
                return this._claimCode;
            }
            set
            {
                this._claimCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ClaimNumber.
        /// </summary>
        /// <value>Propiedad ClaimNumber.</value>
        [
        DescriptionKey("CLAIM_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CLAIM_NUMBER", DbType = System.Data.DbType.String),
        ]
        public int? ClaimNumber
        {
            get
            {
                return this._claimNumber;
            }
            set
            {
                this._claimNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentCode.
        /// </summary>
        /// <value>Propiedad PaymentCode.</value>
        [
        DescriptionKey("PAYMENT_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_CD", DbType = System.Data.DbType.String),
        ]
        public int? PaymentCode
        {
            get
            {
                return this._paymentCode;
            }
            set
            {
                this._paymentCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ComplaintNumber.
        /// </summary>
        /// <value>Propiedad ComplaintNumber.</value>
        [
        DescriptionKey("COMPLAINT_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMPLAINT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public int? ComplaintNumber
        {
            get
            {
                return this._complaintNumber;
            }
            set
            {
                this._complaintNumber = value;
            }
        }

    }
}