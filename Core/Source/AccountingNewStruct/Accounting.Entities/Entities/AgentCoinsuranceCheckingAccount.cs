/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.AgentCoinsuranceCheckingAccount.dict v1.0
 * FileSize=7475 Header=276 CRC=4161319507
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad AgentCoinsuranceCheckingAccount.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.AgentCoinsuranceCheckingAccount.dict"),
    Serializable(),
    DescriptionKey("AGENT_COINSURANCE_CHECKING_ACCOUNT_ENTITY"),
    TableMap(TableName = "AGENT_COINSURANCE_CHECKING_ACCOUNT", Schema = "ACC"),
    ]
    public partial class AgentCoinsuranceCheckingAccount :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
            public static readonly string AgentCoinsuranceCheckingAccountCode = "AgentCoinsuranceCheckingAccountCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string AgentTypeCode = "AgentTypeCode";
			public static readonly string AgentId = "AgentId";
			public static readonly string CommissionAmount = "CommissionAmount";
			public static readonly string IncomeCommissionAmount = "IncomeCommissionAmount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="agentCoinsuranceCheckingAccountCode">Propiedad clave AgentCoinsuranceCheckingAccountCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int agentCoinsuranceCheckingAccountCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AgentCoinsuranceCheckingAccountCode, agentCoinsuranceCheckingAccountCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="agentCoinsuranceCheckingAccountCode">Propiedad clave AgentCoinsuranceCheckingAccountCode.</param>
		public static PrimaryKey CreatePrimaryKey(int agentCoinsuranceCheckingAccountCode)
	    {
			return InternalCreatePrimaryKey<AgentCoinsuranceCheckingAccount>(agentCoinsuranceCheckingAccountCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad AgentTypeCode.
		/// </summary>
        private int? _agentTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad AgentId.
		/// </summary>
        private int? _agentId = null;
		/// <summary>
		/// Atributo para la propiedad CommissionAmount.
		/// </summary>
        private decimal? _commissionAmount = null;
		/// <summary>
		/// Atributo para la propiedad IncomeCommissionAmount.
		/// </summary>
        private decimal? _incomeCommissionAmount = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="agentCoinsuranceCheckingAccountCode">AgentCoinsuranceCheckingAccountCode key property.</param>
	    public AgentCoinsuranceCheckingAccount(int agentCoinsuranceCheckingAccountCode):
			this(AgentCoinsuranceCheckingAccount.CreatePrimaryKey(agentCoinsuranceCheckingAccountCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public AgentCoinsuranceCheckingAccount(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentCoinsuranceCheckingAccountCode.
		/// </summary>
		/// <value>Propiedad AgentCoinsuranceCheckingAccountCode.</value>
	    [
		DescriptionKey("AGENT_COINSURANCE_CHECKING_ACCOUNT_CODE_PROPERTY"),
        PersistentProperty(IsKey = true, DataName = "AgentCoinsuranceCheckingAccountCode"),
        ColumnMap(ColumnName="AGENT_COINSURANCE_CHECKING_ACCOUNT_CD", DbType=System.Data.DbType.String),
	    ]
        public int AgentCoinsuranceCheckingAccountCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AgentCoinsuranceCheckingAccountCode];
		    }
		    set
		    {
				this._primaryKey[Properties.AgentCoinsuranceCheckingAccountCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentTypeCode.
		/// </summary>
		/// <value>Propiedad AgentTypeCode.</value>
	    [
		DescriptionKey("AGENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AgentTypeCode
	    {
		    get
		    {
			    return this._agentTypeCode;
		    }
		    set
		    {
				this._agentTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentId.
		/// </summary>
		/// <value>Propiedad AgentId.</value>
	    [
		DescriptionKey("AGENT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AgentId
	    {
		    get
		    {
			    return this._agentId;
		    }
		    set
		    {
				this._agentId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionAmount.
		/// </summary>
		/// <value>Propiedad CommissionAmount.</value>
	    [
		DescriptionKey("COMMISSION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionAmount
	    {
		    get
		    {
			    return this._commissionAmount;
		    }
		    set
		    {
				this._commissionAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeCommissionAmount.
		/// </summary>
		/// <value>Propiedad IncomeCommissionAmount.</value>
	    [
		DescriptionKey("INCOME_COMMISSION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_COMMISSION_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeCommissionAmount
	    {
		    get
		    {
			    return this._incomeCommissionAmount;
		    }
		    set
		    {
				this._incomeCommissionAmount = value;
			}
	    }

    }
}