/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.TempCoinsuranceCheckingAccountItem.dict v1.0
 * FileSize=5775 Header=294 CRC=3339982303
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad TempCoinsuranceCheckingAccountItem.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.TempCoinsuranceCheckingAccountItem.dict"),
    Serializable(),
    DescriptionKey("TEMP_COINSURANCE_CHECKING_ACCOUNT_ITEM_ENTITY"),
    TableMap(TableName="TEMP_COINSURANCE_CHECKING_ACCOUNT_ITEM", Schema="ACC"),
    ]
    public partial class TempCoinsuranceCheckingAccountItem :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempCoinsuranceCheckingAccountItemCode = "TempCoinsuranceCheckingAccountItemCode";
			public static readonly string TempCoinsCheckingAccTransCode = "TempCoinsCheckingAccTransCode";
			public static readonly string CoinsuranceCheckingAccountCode = "CoinsuranceCheckingAccountCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="tempCoinsuranceCheckingAccountItemCode">Propiedad clave TempCoinsuranceCheckingAccountItemCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempCoinsuranceCheckingAccountItemCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TempCoinsuranceCheckingAccountItemCode, tempCoinsuranceCheckingAccountItemCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="tempCoinsuranceCheckingAccountItemCode">Propiedad clave TempCoinsuranceCheckingAccountItemCode.</param>
		public static PrimaryKey CreatePrimaryKey(int tempCoinsuranceCheckingAccountItemCode)
	    {
			return InternalCreatePrimaryKey<TempCoinsuranceCheckingAccountItem>(tempCoinsuranceCheckingAccountItemCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempCoinsCheckingAccTransCode.
		/// </summary>
        private int? _tempCoinsCheckingAccTransCode = null;
		/// <summary>
		/// Atributo para la propiedad CoinsuranceCheckingAccountCode.
		/// </summary>
        private int? _coinsuranceCheckingAccountCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="tempCoinsuranceCheckingAccountItemCode">TempCoinsuranceCheckingAccountItemCode key property.</param>
	    public TempCoinsuranceCheckingAccountItem(int tempCoinsuranceCheckingAccountItemCode):
			this(TempCoinsuranceCheckingAccountItem.CreatePrimaryKey(tempCoinsuranceCheckingAccountItemCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempCoinsuranceCheckingAccountItem(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempCoinsuranceCheckingAccountItemCode.
		/// </summary>
		/// <value>Propiedad TempCoinsuranceCheckingAccountItemCode.</value>
	    [
		DescriptionKey("TEMP_COINSURANCE_CHECKING_ACCOUNT_ITEM_CODE_PROPERTY"),
		PersistentProperty(IsKey = true, DataName = "TempCoinsuranceCheckingAccountItemCode"),
        ColumnMap(ColumnName="TEMP_COINSURANCE_CHECKING_ACCOUNT_ITEM_CD", DbType=System.Data.DbType.String),
	    ]
        public int TempCoinsuranceCheckingAccountItemCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempCoinsuranceCheckingAccountItemCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TempCoinsuranceCheckingAccountItemCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempCoinsCheckingAccTransCode.
		/// </summary>
		/// <value>Propiedad TempCoinsCheckingAccTransCode.</value>
	    [
		DescriptionKey("TEMP_COINS_CHECKING_ACC_TRANS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_COINS_CHECKING_ACC_TRANS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempCoinsCheckingAccTransCode
	    {
		    get
		    {
			    return this._tempCoinsCheckingAccTransCode;
		    }
		    set
		    {
				this._tempCoinsCheckingAccTransCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuranceCheckingAccountCode.
		/// </summary>
		/// <value>Propiedad CoinsuranceCheckingAccountCode.</value>
	    [
		DescriptionKey("COINSURANCE_CHECKING_ACCOUNT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURANCE_CHECKING_ACCOUNT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CoinsuranceCheckingAccountCode
	    {
		    get
		    {
			    return this._coinsuranceCheckingAccountCode;
		    }
		    set
		    {
				this._coinsuranceCheckingAccountCode = value;
			}
	    }

    }
}