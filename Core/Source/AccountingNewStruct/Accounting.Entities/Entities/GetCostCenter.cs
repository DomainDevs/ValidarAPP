/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.GetCostCenter.dict v1.0
 * FileSize=6360 Header=257 CRC=237853522
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad GetCostCenter.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.GetCostCenter.dict"),
    Serializable(),
    DescriptionKey("GET_COST_CENTER_ENTITY"),
    TableMap(TableName = "GET_COST_CENTER", Schema = "ACC"),
    ]
    public partial class GetCostCenter :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string AccountingAccountId = "AccountingAccountId";
			public static readonly string CostCenterId = "CostCenterId";
			public static readonly string Description = "Description";
			public static readonly string AccountNumber = "AccountNumber";
			public static readonly string AccountName = "AccountName";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="accountingAccountId">Propiedad clave AccountingAccountId.</param>
		/// <param name="costCenterId">Propiedad clave CostCenterId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int accountingAccountId, int costCenterId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.AccountingAccountId, accountingAccountId);
		    keys.Add(Properties.CostCenterId, costCenterId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="accountingAccountId">Propiedad clave AccountingAccountId.</param>
		/// <param name="costCenterId">Propiedad clave CostCenterId.</param>
		public static PrimaryKey CreatePrimaryKey(int accountingAccountId, int costCenterId)
	    {
			return InternalCreatePrimaryKey<GetCostCenter>(accountingAccountId, costCenterId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad AccountNumber.
		/// </summary>
        private string _accountNumber = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="accountingAccountId">AccountingAccountId key property.</param>
		/// <param name="costCenterId">CostCenterId key property.</param>
	    public GetCostCenter(int accountingAccountId, int costCenterId):
			this(GetCostCenter.CreatePrimaryKey(accountingAccountId, costCenterId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetCostCenter(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountId.
		/// </summary>
		/// <value>Propiedad AccountingAccountId.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_ID", DbType=System.Data.DbType.String),
	    ]
        public int AccountingAccountId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountingAccountId];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountingAccountId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CostCenterId.
		/// </summary>
		/// <value>Propiedad CostCenterId.</value>
	    [
		DescriptionKey("COST_CENTER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COST_CENTER_ID", DbType=System.Data.DbType.String),
	    ]
        public int CostCenterId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CostCenterId];
		    }
		    set
		    {
				this._primaryKey[Properties.CostCenterId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountNumber.
		/// </summary>
		/// <value>Propiedad AccountNumber.</value>
	    [
		DescriptionKey("ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AccountNumber
	    {
		    get
		    {
			    return this._accountNumber;
		    }
		    set
		    {
				this._accountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				this._accountName = value;
			}
	    }

    }
}