/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.GetUsersBalanceEnquiries.dict v1.0
 * FileSize=5036 Header=269 CRC=1685903028
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CollectControlUniqueUsers View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CollectControlUniqueUsers.dict"),
    Serializable(),
    DescriptionKey("GET_USERS_BALANCE_ENQUIRIES_ENTITY"),
    TableMap(TableName = "GET_USERS_BALANCE_ENQUIRIES", Schema = "ACC"),
    ]
    public partial class CollectControlUniqueUsers :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string UserId = "UserId";
            public static readonly string AccountName = "AccountName";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string Status = "Status";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CollectControlUniqueUsers>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int? _userId = null;
        /// <summary>
        /// Atributo para la propiedad AccountName.
        /// </summary>
        private string _accountName = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int? _branchCode = null;
        /// <summary>
        /// Atributo para la propiedad Status.
        /// </summary>
        private int? _status = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public CollectControlUniqueUsers() :
            this(CollectControlUniqueUsers.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CollectControlUniqueUsers(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountName.
        /// </summary>
        /// <value>Propiedad AccountName.</value>
        [
        DescriptionKey("ACCOUNT_NAME_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ACCOUNT_NAME", DbType = System.Data.DbType.String),
        ]
        public string AccountName
        {
            get
            {
                return this._accountName;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
                }
                this._accountName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int? BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Status.
        /// </summary>
        /// <value>Propiedad Status.</value>
        [
        DescriptionKey("STATUS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATUS", DbType = System.Data.DbType.String),
        ]
        public int? Status
        {
            get
            {
                return this._status;
            }
            set
            {
                this._status = value;
            }
        }

    }
}