/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.PaymentRequestHeader.dict v1.0
 * FileSize=16396 Header=282 CRC=4228478759
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad PaymentRequestHeaderV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.PaymentRequestHeader.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_REQUEST_HEADER_V_ENTITY"),
    TableMap(TableName="PAYMENT_REQUEST_HEADER_V", Schema="ACC"),
    ]
    public partial class PaymentRequestHeader :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentRequestId = "PaymentRequestId";
			public static readonly string Number = "Number";
			public static readonly string EstimatedPaymentDate = "EstimatedPaymentDate";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string PersonTypeDescription = "PersonTypeDescription";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string BeneficiaryName = "BeneficiaryName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string TotalAmount = "TotalAmount";
			public static readonly string UserId = "UserId";
			public static readonly string AccountName = "AccountName";
			public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
			public static readonly string PaymentMethodTypeDescription = "PaymentMethodTypeDescription";
			public static readonly string PaymentRequestDescription = "PaymentRequestDescription";
			public static readonly string CollectCode = "CollectCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentRequestId">Propiedad clave PaymentRequestId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentRequestId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentRequestId, paymentRequestId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentRequestId">Propiedad clave PaymentRequestId.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentRequestId)
	    {
			return InternalCreatePrimaryKey<PaymentRequestHeader>(paymentRequestId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Number.
		/// </summary>
        private int? _number = null;
		/// <summary>
		/// Atributo para la propiedad EstimatedPaymentDate.
		/// </summary>
        private DateTime? _estimatedPaymentDate = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int? _personTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeDescription.
		/// </summary>
        private string _personTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int _individualId;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryName.
		/// </summary>
        private string _beneficiaryName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad TotalAmount.
		/// </summary>
        private decimal? _totalAmount = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeCode.
		/// </summary>
        private int? _paymentMethodTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeDescription.
		/// </summary>
        private string _paymentMethodTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad PaymentRequestDescription.
		/// </summary>
        private string _paymentRequestDescription = null;
		/// <summary>
		/// Atributo para la propiedad CollectCode.
		/// </summary>
        private int _collectCode;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentRequestId">PaymentRequestId key property.</param>
	    public PaymentRequestHeader(int paymentRequestId):
			this(PaymentRequestHeader.CreatePrimaryKey(paymentRequestId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentRequestHeader(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestId.
		/// </summary>
		/// <value>Propiedad PaymentRequestId.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_REQUEST_ID", DbType=System.Data.DbType.String),
	    ]
        public int PaymentRequestId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentRequestId];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentRequestId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Number.
		/// </summary>
		/// <value>Propiedad Number.</value>
	    [
		DescriptionKey("NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? Number
	    {
		    get
		    {
			    return this._number;
		    }
		    set
		    {
				this._number = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimatedPaymentDate.
		/// </summary>
		/// <value>Propiedad EstimatedPaymentDate.</value>
	    [
		DescriptionKey("ESTIMATED_PAYMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATED_PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimatedPaymentDate
	    {
		    get
		    {
			    return this._estimatedPaymentDate;
		    }
		    set
		    {
				this._estimatedPaymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeDescription.
		/// </summary>
		/// <value>Propiedad PersonTypeDescription.</value>
	    [
		DescriptionKey("PERSON_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PERSON_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PersonTypeDescription
	    {
		    get
		    {
			    return this._personTypeDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PersonTypeDescription);
				}
				this._personTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.DocumentNumber);
				}
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryName.
		/// </summary>
		/// <value>Propiedad BeneficiaryName.</value>
	    [
		DescriptionKey("BENEFICIARY_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryName
	    {
		    get
		    {
			    return this._beneficiaryName;
		    }
		    set
		    {
				this._beneficiaryName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalAmount.
		/// </summary>
		/// <value>Propiedad TotalAmount.</value>
	    [
		DescriptionKey("TOTAL_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalAmount
	    {
		    get
		    {
			    return this._totalAmount;
		    }
		    set
		    {
				this._totalAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
				}
				this._accountName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodTypeCode
	    {
		    get
		    {
			    return this._paymentMethodTypeCode;
		    }
		    set
		    {
				this._paymentMethodTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeDescription.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeDescription.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PaymentMethodTypeDescription
	    {
		    get
		    {
			    return this._paymentMethodTypeDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PaymentMethodTypeDescription);
				}
				this._paymentMethodTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestDescription.
		/// </summary>
		/// <value>Propiedad PaymentRequestDescription.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_REQUEST_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PaymentRequestDescription
	    {
		    get
		    {
			    return this._paymentRequestDescription;
		    }
		    set
		    {
				this._paymentRequestDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectCode.
		/// </summary>
		/// <value>Propiedad CollectCode.</value>
	    [
		DescriptionKey("COLLECT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COLLECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int CollectCode
	    {
		    get
		    {
			    return this._collectCode;
		    }
		    set
		    {
				this._collectCode = value;
			}
	    }

    }
}