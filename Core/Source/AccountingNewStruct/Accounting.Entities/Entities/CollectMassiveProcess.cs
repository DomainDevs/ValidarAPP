/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.CollectMassiveProcess.dict v1.0
 * FileSize=8238 Header=281 CRC=1051167814
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CollectMassiveProcess.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CollectMassiveProcess.dict"),
    Serializable(),
    DescriptionKey("COLLECT_MASSIVE_PROCESS_ENTITY"),
    TableMap(TableName="COLLECT_MASSIVE_PROCESS", Schema="ACC"),
    ]
    public partial class CollectMassiveProcess :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CollectMassiveProcessId = "CollectMassiveProcessId";
			public static readonly string BeginDate = "BeginDate";
			public static readonly string EndDate = "EndDate";
			public static readonly string UserId = "UserId";
			public static readonly string Status = "Status";
			public static readonly string TotalRecords = "TotalRecords";
			public static readonly string SuccessfulRecords = "SuccessfulRecords";
			public static readonly string FailedRecords = "FailedRecords";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="collectMassiveProcessId">Propiedad clave CollectMassiveProcessId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int collectMassiveProcessId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CollectMassiveProcessId, collectMassiveProcessId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="collectMassiveProcessId">Propiedad clave CollectMassiveProcessId.</param>
		public static PrimaryKey CreatePrimaryKey(int collectMassiveProcessId)
	    {
			return InternalCreatePrimaryKey<CollectMassiveProcess>(collectMassiveProcessId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BeginDate.
		/// </summary>
        private DateTime? _beginDate = null;
		/// <summary>
		/// Atributo para la propiedad EndDate.
		/// </summary>
        private DateTime? _endDate = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private bool? _status = null;
		/// <summary>
		/// Atributo para la propiedad TotalRecords.
		/// </summary>
        private int? _totalRecords = null;
		/// <summary>
		/// Atributo para la propiedad SuccessfulRecords.
		/// </summary>
        private int? _successfulRecords = null;
		/// <summary>
		/// Atributo para la propiedad FailedRecords.
		/// </summary>
        private int? _failedRecords = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="collectMassiveProcessId">CollectMassiveProcessId key property.</param>
	    public CollectMassiveProcess(int collectMassiveProcessId):
			this(CollectMassiveProcess.CreatePrimaryKey(collectMassiveProcessId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CollectMassiveProcess(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectMassiveProcessId.
		/// </summary>
		/// <value>Propiedad CollectMassiveProcessId.</value>
	    [
		DescriptionKey("COLLECT_MASSIVE_PROCESS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_MASSIVE_PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectMassiveProcessId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectMassiveProcessId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectMassiveProcessId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeginDate.
		/// </summary>
		/// <value>Propiedad BeginDate.</value>
	    [
		DescriptionKey("BEGIN_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BEGIN_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? BeginDate
	    {
		    get
		    {
			    return this._beginDate;
		    }
		    set
		    {
				this._beginDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndDate.
		/// </summary>
		/// <value>Propiedad EndDate.</value>
	    [
		DescriptionKey("END_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="END_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EndDate
	    {
		    get
		    {
			    return this._endDate;
		    }
		    set
		    {
				this._endDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public bool? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalRecords.
		/// </summary>
		/// <value>Propiedad TotalRecords.</value>
	    [
		DescriptionKey("TOTAL_RECORDS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_RECORDS", DbType=System.Data.DbType.String),
	    ]
        public int? TotalRecords
	    {
		    get
		    {
			    return this._totalRecords;
		    }
		    set
		    {
				this._totalRecords = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SuccessfulRecords.
		/// </summary>
		/// <value>Propiedad SuccessfulRecords.</value>
	    [
		DescriptionKey("SUCCESSFUL_RECORDS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SUCCESSFUL_RECORDS", DbType=System.Data.DbType.String),
	    ]
        public int? SuccessfulRecords
	    {
		    get
		    {
			    return this._successfulRecords;
		    }
		    set
		    {
				this._successfulRecords = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FailedRecords.
		/// </summary>
		/// <value>Propiedad FailedRecords.</value>
	    [
		DescriptionKey("FAILED_RECORDS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FAILED_RECORDS", DbType=System.Data.DbType.String),
	    ]
        public int? FailedRecords
	    {
		    get
		    {
			    return this._failedRecords;
		    }
		    set
		    {
				this._failedRecords = value;
			}
	    }

    }
}