/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.PaymentMethodAccountType.dict v1.0
 * FileSize=5086 Header=284 CRC=2266904479
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad PaymentMethodAccountType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.PaymentMethodAccountType.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_METHOD_ACCOUNT_TYPE_ENTITY"),
    TableMap(TableName="PAYMENT_METHOD_ACCOUNT_TYPE", Schema="ACC"),
    ]
    public partial class PaymentMethodAccountType :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentMethodCode = "PaymentMethodCode";
			public static readonly string AccountTypeCode = "AccountTypeCode";
			public static readonly string DebitCode = "DebitCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentMethodCode">Propiedad clave PaymentMethodCode.</param>
		/// <param name="accountTypeCode">Propiedad clave AccountTypeCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentMethodCode, int accountTypeCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentMethodCode, paymentMethodCode);
		    keys.Add(Properties.AccountTypeCode, accountTypeCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentMethodCode">Propiedad clave PaymentMethodCode.</param>
		/// <param name="accountTypeCode">Propiedad clave AccountTypeCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentMethodCode, int accountTypeCode)
	    {
			return InternalCreatePrimaryKey<PaymentMethodAccountType>(paymentMethodCode, accountTypeCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad DebitCode.
		/// </summary>
        private string _debitCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentMethodCode">PaymentMethodCode key property.</param>
		/// <param name="accountTypeCode">AccountTypeCode key property.</param>
	    public PaymentMethodAccountType(int paymentMethodCode, int accountTypeCode):
			this(PaymentMethodAccountType.CreatePrimaryKey(paymentMethodCode, accountTypeCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentMethodAccountType(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentMethodCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentMethodCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentMethodCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountTypeCode.
		/// </summary>
		/// <value>Propiedad AccountTypeCode.</value>
	    [
		DescriptionKey("ACCOUNT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ACCOUNT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int AccountTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AccountTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.AccountTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DebitCode.
		/// </summary>
		/// <value>Propiedad DebitCode.</value>
	    [
		DescriptionKey("DEBIT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DEBIT_CD", DbType=System.Data.DbType.String),
	    ]
        public string DebitCode
	    {
		    get
		    {
			    return this._debitCode;
		    }
		    set
		    {
				this._debitCode = value;
			}
	    }

    }
}