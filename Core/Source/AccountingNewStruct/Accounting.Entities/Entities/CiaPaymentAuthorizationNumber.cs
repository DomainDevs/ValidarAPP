/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Accounting.CiaPaymentAuthorizationNumber.dict v1.0
 * FileSize=4557 Header=270 CRC=1388507059
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad CiaPaymentAuthorizationNumber.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.CiaPaymentAuthorizationNumber.dict"),
    Serializable(),
    DescriptionKey("CIA_PAYMENT_AUTHORIZATION_NUMBER_ENTITY"),
    TableMap(TableName="CIA_PAYMENT_AUTHORIZATION_NUMBER", Schema="ACC"),
    ]
    public partial class CiaPaymentAuthorizationNumber :
        BusinessObject2
    {
        #region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string BallotNumber = "BallotNumber";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(long id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="id">Propiedad clave Id.</param>
		public static PrimaryKey CreatePrimaryKey(long id)
	    {
			return InternalCreatePrimaryKey<CiaPaymentAuthorizationNumber>(id);
		}

        /// <summary>
        /// Creates the primary key.
        /// </summary>
        /// <returns></returns>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CiaPaymentAuthorizationNumber>();
        }

        public CiaPaymentAuthorizationNumber() :
            this(CiaPaymentAuthorizationNumber.CreatePrimaryKey(), null)
        { }

        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad BallotNumber.
        /// </summary>
        private string _ballotNumber = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
        //*** Object Constructors ********************************

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);
            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public CiaPaymentAuthorizationNumber(long id):
			this(CiaPaymentAuthorizationNumber.CreatePrimaryKey(id), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CiaPaymentAuthorizationNumber(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public long Id
	    {
		    get
		    {
				return (long)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BallotNumber.
		/// </summary>
		/// <value>Propiedad BallotNumber.</value>
	    [
		DescriptionKey("BALLOT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BALLOT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string BallotNumber
	    {
		    get
		    {
			    return this._ballotNumber;
		    }
		    set
		    {
				this._ballotNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

    }
}