/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.GetAutomaticCreditNoteProcessHeader.dict v1.0
 * FileSize=15018 Header=249 CRC=2113279446
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad GetAutomaticCreditNoteProcessHeader.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.GetAutomaticCreditNoteProcessHeader.dict"),
    Serializable(),
    DescriptionKey("GET_AUTOMATIC_CREDIT_NOTE_PROCESS_HEADER_ENTITY"),
    TableMap(TableName="GET_AUTOMATIC_CREDIT_NOTE_PROCESS_HEADER", Schema="ACC"),
    ]
    public partial class GetAutomaticCreditNoteProcessHeader :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LogSpecialProcessId = "LogSpecialProcessId";
			public static readonly string ProcessDate = "ProcessDate";
			public static readonly string BranchId = "BranchId";
			public static readonly string ProcessTypeId = "ProcessTypeId";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string UserId = "UserId";
			public static readonly string ImputationId = "ImputationId";
			public static readonly string TempImputationId = "TempImputationId";
			public static readonly string ImputationReceiptNumber = "ImputationReceiptNumber";
			public static readonly string LowUserId = "LowUserId";
			public static readonly string LowDate = "LowDate";
			public static readonly string StartDate = "StartDate";
			public static readonly string EndDate = "EndDate";
			public static readonly string Status = "Status";
			public static readonly string RecordsProcessed = "RecordsProcessed";
			public static readonly string AccountName = "AccountName";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="logSpecialProcessId">Propiedad clave LogSpecialProcessId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int logSpecialProcessId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LogSpecialProcessId, logSpecialProcessId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="logSpecialProcessId">Propiedad clave LogSpecialProcessId.</param>
		public static PrimaryKey CreatePrimaryKey(int logSpecialProcessId)
	    {
			return InternalCreatePrimaryKey<GetAutomaticCreditNoteProcessHeader>(logSpecialProcessId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ProcessDate.
		/// </summary>
        private DateTime _processDate;
		/// <summary>
		/// Atributo para la propiedad BranchId.
		/// </summary>
        private int? _branchId = null;
		/// <summary>
		/// Atributo para la propiedad ProcessTypeId.
		/// </summary>
        private int _processTypeId;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal _incomeAmount;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal _exchangeRate;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal _amount;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
		/// <summary>
		/// Atributo para la propiedad ImputationId.
		/// </summary>
        private int _imputationId;
		/// <summary>
		/// Atributo para la propiedad TempImputationId.
		/// </summary>
        private int _tempImputationId;
		/// <summary>
		/// Atributo para la propiedad ImputationReceiptNumber.
		/// </summary>
        private int? _imputationReceiptNumber = null;
		/// <summary>
		/// Atributo para la propiedad LowUserId.
		/// </summary>
        private int? _lowUserId = null;
		/// <summary>
		/// Atributo para la propiedad LowDate.
		/// </summary>
        private DateTime? _lowDate = null;
		/// <summary>
		/// Atributo para la propiedad StartDate.
		/// </summary>
        private DateTime _startDate;
		/// <summary>
		/// Atributo para la propiedad EndDate.
		/// </summary>
        private DateTime? _endDate = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad RecordsProcessed.
		/// </summary>
        private int? _recordsProcessed = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="logSpecialProcessId">LogSpecialProcessId key property.</param>
	    public GetAutomaticCreditNoteProcessHeader(int logSpecialProcessId):
			this(GetAutomaticCreditNoteProcessHeader.CreatePrimaryKey(logSpecialProcessId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetAutomaticCreditNoteProcessHeader(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LogSpecialProcessId.
		/// </summary>
		/// <value>Propiedad LogSpecialProcessId.</value>
	    [
		DescriptionKey("LOG_SPECIAL_PROCESS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LOG_SPECIAL_PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int LogSpecialProcessId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LogSpecialProcessId];
		    }
		    set
		    {
				this._primaryKey[Properties.LogSpecialProcessId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessDate.
		/// </summary>
		/// <value>Propiedad ProcessDate.</value>
	    [
		DescriptionKey("PROCESS_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime ProcessDate
	    {
		    get
		    {
			    return this._processDate;
		    }
		    set
		    {
				this._processDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchId.
		/// </summary>
		/// <value>Propiedad BranchId.</value>
	    [
		DescriptionKey("BRANCH_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BranchId
	    {
		    get
		    {
			    return this._branchId;
		    }
		    set
		    {
				this._branchId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessTypeId.
		/// </summary>
		/// <value>Propiedad ProcessTypeId.</value>
	    [
		DescriptionKey("PROCESS_TYPE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProcessTypeId
	    {
		    get
		    {
			    return this._processTypeId;
		    }
		    set
		    {
				this._processTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationId.
		/// </summary>
		/// <value>Propiedad ImputationId.</value>
	    [
		DescriptionKey("IMPUTATION_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IMPUTATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int ImputationId
	    {
		    get
		    {
			    return this._imputationId;
		    }
		    set
		    {
				this._imputationId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationId.
		/// </summary>
		/// <value>Propiedad TempImputationId.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TEMP_IMPUTATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int TempImputationId
	    {
		    get
		    {
			    return this._tempImputationId;
		    }
		    set
		    {
				this._tempImputationId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationReceiptNumber.
		/// </summary>
		/// <value>Propiedad ImputationReceiptNumber.</value>
	    [
		DescriptionKey("IMPUTATION_RECEIPT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IMPUTATION_RECEIPT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? ImputationReceiptNumber
	    {
		    get
		    {
			    return this._imputationReceiptNumber;
		    }
		    set
		    {
				this._imputationReceiptNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LowUserId.
		/// </summary>
		/// <value>Propiedad LowUserId.</value>
	    [
		DescriptionKey("LOW_USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOW_USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? LowUserId
	    {
		    get
		    {
			    return this._lowUserId;
		    }
		    set
		    {
				this._lowUserId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LowDate.
		/// </summary>
		/// <value>Propiedad LowDate.</value>
	    [
		DescriptionKey("LOW_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOW_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? LowDate
	    {
		    get
		    {
			    return this._lowDate;
		    }
		    set
		    {
				this._lowDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StartDate.
		/// </summary>
		/// <value>Propiedad StartDate.</value>
	    [
		DescriptionKey("START_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="START_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime StartDate
	    {
		    get
		    {
			    return this._startDate;
		    }
		    set
		    {
				this._startDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndDate.
		/// </summary>
		/// <value>Propiedad EndDate.</value>
	    [
		DescriptionKey("END_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="END_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EndDate
	    {
		    get
		    {
			    return this._endDate;
		    }
		    set
		    {
				this._endDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RecordsProcessed.
		/// </summary>
		/// <value>Propiedad RecordsProcessed.</value>
	    [
		DescriptionKey("RECORDS_PROCESSED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECORDS_PROCESSED", DbType=System.Data.DbType.String),
	    ]
        public int? RecordsProcessed
	    {
		    get
		    {
			    return this._recordsProcessed;
		    }
		    set
		    {
				this._recordsProcessed = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
				}
				this._accountName = value;
			}
	    }

    }
}