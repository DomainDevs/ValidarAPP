/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.GetPaymentBallot.dict v1.0
 * FileSize=12174 Header=262 CRC=3710006920
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.Accounting.Entities
{
    /// <summary>
    /// Definición de entidad GetPaymentBallot.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.Accounting.GetPaymentBallot.dict"),
    Serializable(),
    DescriptionKey("GET_PAYMENT_BALLOT_ENTITY"),
    TableMap(TableName = "GET_PAYMENT_BALLOT", Schema = "ACC"),
    ]
    public partial class GetPaymentBallot :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentTicketCode = "PaymentTicketCode";
			public static readonly string BankCode = "BankCode";
			public static readonly string BankName = "BankName";
			public static readonly string Amount = "Amount";
			public static readonly string AmountBallot = "AmountBallot";
			public static readonly string BankBallotCode = "BankBallotCode";
			public static readonly string BankBallotName = "BankBallotName";
			public static readonly string PaymentBallotNumber = "PaymentBallotNumber";
			public static readonly string Description = "Description";
			public static readonly string RegisterDate = "RegisterDate";
            public static readonly string Quantity = "Quantity";
			public static readonly string Status = "Status";
			public static readonly string PaymentTicketNumber = "PaymentTicketNumber";
            public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
            public static readonly string PaymentMethodTicket = "PaymentMethodTicket";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentTicketCode">Propiedad clave PaymentTicketCode.</param>
		/// <param name="paymentTicketNumber">Propiedad clave PaymentTicketNumber.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentTicketCode, int paymentTicketNumber)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentTicketCode, paymentTicketCode);
		    keys.Add(Properties.PaymentTicketNumber, paymentTicketNumber);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentTicketCode">Propiedad clave PaymentTicketCode.</param>
		/// <param name="paymentTicketNumber">Propiedad clave PaymentTicketNumber.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentTicketCode, int paymentTicketNumber)
	    {
			return InternalCreatePrimaryKey<GetPaymentBallot>(paymentTicketCode, paymentTicketNumber);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BankCode.
		/// </summary>
        private int? _bankCode = null;
		/// <summary>
		/// Atributo para la propiedad BankName.
		/// </summary>
        private string _bankName = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad AmountBallot.
		/// </summary>
        private decimal? _amountBallot = null;
		/// <summary>
		/// Atributo para la propiedad BankBallotCode.
		/// </summary>
        private int? _bankBallotCode = null;
		/// <summary>
		/// Atributo para la propiedad BankBallotName.
		/// </summary>
        private string _bankBallotName = null;
		/// <summary>
		/// Atributo para la propiedad PaymentBallotNumber.
		/// </summary>
        private string _paymentBallotNumber = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad Quantity.
		/// </summary>
        private int? _quantity = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private string _status = null;
        /// <summary>
        /// Atributo para la propiedad PaymentMethodTypeCode.
        /// </summary>
        private int? _paymentMethodTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad PaymentMethodTicket.
        /// </summary>
        private string _paymentMethodTicket = null;
        //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentTicketCode">PaymentTicketCode key property.</param>
		/// <param name="paymentTicketNumber">PaymentTicketNumber key property.</param>
	    public GetPaymentBallot(int paymentTicketCode, int paymentTicketNumber):
			this(GetPaymentBallot.CreatePrimaryKey(paymentTicketCode, paymentTicketNumber), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetPaymentBallot(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentTicketCode.
		/// </summary>
		/// <value>Propiedad PaymentTicketCode.</value>
	    [
		DescriptionKey("PAYMENT_TICKET_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_TICKET_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentTicketCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentTicketCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentTicketCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankCode.
		/// </summary>
		/// <value>Propiedad BankCode.</value>
	    [
		DescriptionKey("BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankCode
	    {
		    get
		    {
			    return this._bankCode;
		    }
		    set
		    {
				this._bankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankName.
		/// </summary>
		/// <value>Propiedad BankName.</value>
	    [
		DescriptionKey("BANK_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BANK_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BankName
	    {
		    get
		    {
			    return this._bankName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BankName);
				}
				this._bankName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AmountBallot.
		/// </summary>
		/// <value>Propiedad AmountBallot.</value>
	    [
		DescriptionKey("AMOUNT_BALLOT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT_BALLOT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AmountBallot
	    {
		    get
		    {
			    return this._amountBallot;
		    }
		    set
		    {
				this._amountBallot = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankBallotCode.
		/// </summary>
		/// <value>Propiedad BankBallotCode.</value>
	    [
		DescriptionKey("BANK_BALLOT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_BALLOT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankBallotCode
	    {
		    get
		    {
			    return this._bankBallotCode;
		    }
		    set
		    {
				this._bankBallotCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankBallotName.
		/// </summary>
		/// <value>Propiedad BankBallotName.</value>
	    [
		DescriptionKey("BANK_BALLOT_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_BALLOT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BankBallotName
	    {
		    get
		    {
			    return this._bankBallotName;
		    }
		    set
		    {
				this._bankBallotName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentBallotNumber.
		/// </summary>
		/// <value>Propiedad PaymentBallotNumber.</value>
	    [
		DescriptionKey("PAYMENT_BALLOT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_BALLOT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string PaymentBallotNumber
	    {
		    get
		    {
			    return this._paymentBallotNumber;
		    }
		    set
		    {
				this._paymentBallotNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Quantity.
		/// </summary>
		/// <value>Propiedad Quantity.</value>
	    [
		DescriptionKey("QUANTITY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="QUANTITY", DbType=System.Data.DbType.String),
	    ]
        public int? Quantity
	    {
		    get
		    {
			    return this._quantity;
		    }
		    set
		    {
				this._quantity = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public string Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Status);
				}
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentTicketNumber.
		/// </summary>
		/// <value>Propiedad PaymentTicketNumber.</value>
	    [
		DescriptionKey("PAYMENT_TICKET_NUMBER_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_TICKET_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int PaymentTicketNumber
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentTicketNumber];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentTicketNumber] = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
        /// </summary>
        /// <value>Propiedad PaymentMethodTypeCode.</value>
        [
        DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_METHOD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? PaymentMethodTypeCode
        {
            get
            {
                return this._paymentMethodTypeCode;
            }
            set
            {
                this._paymentMethodTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentMethodTicket.
        /// </summary>
        /// <value>Propiedad PaymentMethodTicket.</value>
        [
        DescriptionKey("PAYMENT_METHOD_TICKET_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_METHOD_TICKET", DbType = System.Data.DbType.String),
        ]
        public string PaymentMethodTicket
        {
            get
            {
                return this._paymentMethodTicket;
            }
            set
            {
                this._paymentMethodTicket = value;
            }
        }
    }
}