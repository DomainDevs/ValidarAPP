<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="a" xml:space="preserve">
    <value>a</value>
  </data>
  <data name="AccordingNumberReceipt" xml:space="preserve">
    <value>AccordingNumberReceipt</value>
  </data>
  <data name="AccountingIntegrationUnbalanceEntry" xml:space="preserve">
    <value>AccountingIntegrationUnbalanceEntry</value>
  </data>
  <data name="BRANCH_USER_VALIDATION_EXCEPTION" xml:space="preserve">
    <value>The Branch was not entered or the User does not exist</value>
  </data>
  <data name="BusinessException" xml:space="preserve">
    <value>Business Exception</value>
  </data>
  <data name="By" xml:space="preserve">
    <value>By</value>
  </data>
  <data name="Collect" xml:space="preserve">
    <value>Collect</value>
  </data>
  <data name="Credit" xml:space="preserve">
    <value>Credit</value>
  </data>
  <data name="Debit" xml:space="preserve">
    <value>Debit</value>
  </data>
  <data name="EntryRecordingError" xml:space="preserve">
    <value>EntryRecordingError</value>
  </data>
  <data name="ErroClosedBranch" xml:space="preserve">
    <value>The branch box is closed.</value>
  </data>
  <data name="ErrorClosedBranch" xml:space="preserve">
    <value>Error closed branch</value>
  </data>
  <data name="GENERIC_ERROR" xml:space="preserve">
    <value>Error on request</value>
  </data>
  <data name="IntegrationServiceDisabledLabel" xml:space="preserve">
    <value>IntegrationServiceDisabledLabel</value>
  </data>
  <data name="JournalEntry" xml:space="preserve">
    <value>Journal Entry</value>
  </data>
  <data name="PaymentOrder" xml:space="preserve">
    <value>Payment Order</value>
  </data>
  <data name="PreLiquidation" xml:space="preserve">
    <value>Pre Liquidation</value>
  </data>
  <data name="IntegrationSuccessMessage" xml:space="preserve">
    <value>IntegrationSuccessMessage</value>
  </data>
  <data name="ErrorApplicationNotBalanced" xml:space="preserve">
    <value>Error Application Not Balanced</value>
  </data>
  <data name="ErrorCollectNotFound" xml:space="preserve">
    <value>Error Collect Not Found</value>
  </data>
  <data name="ErrorCouldNotConvertApplication" xml:space="preserve">
    <value>Error Could Not Convert Application</value>
  </data>
  <data name="ErrorModuleNotSupported" xml:space="preserve">
    <value>Error Module Not Supported</value>
  </data>
  <data name="ErrorSavingApplication" xml:space="preserve">
    <value>Error Saving Application</value>
  </data>
  <data name="ErrorTemporalNotFound" xml:space="preserve">
    <value>Error Temporal Not Found</value>
  </data>
  <data name="ErrorApplicationNotFound" xml:space="preserve">
    <value>Error Application Not Found</value>
  </data>
  <data name="PaymentTicket" xml:space="preserve">
    <value>Payment Ticket</value>
  </data>
  <data name="ErrorGetParticipationPercentageByEndorsementId" xml:space="preserve">
    <value>Error getting participation percentage by endorsement Id</value>
  </data>
  <data name="ErrorGetPayerPaymentComponentsByEndorsementIdQuotaNumber" xml:space="preserve">
    <value>Error getting payer payment components for premium</value>
  </data>
  <data name="ErrorGetPaymentQuotas" xml:space="preserve">
    <value>Error getting payment quotas</value>
  </data>
  <data name="ErrorGetTempApplicationPremiumComponentsByTemApp" xml:space="preserve">
    <value>Error getting temporal application premium components by Temporal Id</value>
  </data>
  <data name="ErrorUpdTempApplicationPremiumComponents" xml:space="preserve">
    <value>Error updating application premium temporal components</value>
  </data>
  <data name="ErrorGetTempApplicationByEndorsementIdQuotaNumber" xml:space="preserve">
    <value>Error gettting temporal application by endorsement id and quota number</value>
  </data>
  <data name="ErrorSaveTempApplicationPremiumComponents" xml:space="preserve">
    <value>Error saving temporal application premium</value>
  </data>
  <data name="ErrorCheckoutAnalysisConceptKey" xml:space="preserve">
    <value>Error Checkout Analysis Concept Key</value>
  </data>
  <data name="ErrorGetTempApplicationAccountingCostCentersByTempAppAccountingId" xml:space="preserve">
    <value>Error Get Temp Accounting Cost Centers</value>
  </data>
  <data name="ErrorAnalysisCodeValueNotExist" xml:space="preserve">
    <value>Error Analysis Code Value Not Exist: {0}</value>
  </data>
  <data name="ErrorGetPaymentTicketsByCollectId" xml:space="preserve">
    <value>Error getting payment tickets asociated to a collect</value>
  </data>
  <data name="ErrorNotFoundColumnAnalysisCode" xml:space="preserve">
    <value>Error Not Found Column parametizer In Analysis Code for value: {0}</value>
  </data>
  <data name="ErrorNotFoundConceptKeyId" xml:space="preserve">
    <value>Error Not Found Concept Key Id</value>
  </data>
  <data name="ErrorNotFoundTableAnalysisCode" xml:space="preserve">
    <value>Error Not Found Table parametizer In Analysis Code for value: {0}</value>
  </data>
  <data name="AccountDepositBallot" xml:space="preserve">
    <value>Account Deposit Ballot</value>
  </data>
  <data name="ErrorGetAvaibleAccountsByCurrencyIdBankId" xml:space="preserve">
    <value>Error getting avaible accounts by currency id and bank id</value>
  </data>
  <data name="ErrorGetAvaibleBanksByCurrencyId" xml:space="preserve">
    <value>Error getting avaible banks by currency id</value>
  </data>
  <data name="ErrorGetAvaibleCurrencies" xml:space="preserve">
    <value>Error getting avaible currencies</value>
  </data>
  <data name="PaymentDescription" xml:space="preserve">
    <value>{0} {1}-{2}</value>
  </data>
  <data name="ErrorGettingBillReport" xml:space="preserve">
    <value>Error getting bill report information</value>
  </data>
  <data name="ErrorCouldNotCreateApplication" xml:space="preserve">
    <value>Error could not create application</value>
  </data>
  <data name="ErrorCouldNotReverseApplication" xml:space="preserve">
    <value>Error could not reverse application</value>
  </data>
  <data name="ErrorCouldNotUpdateSourceStatus" xml:space="preserve">
    <value>Error could not update source status</value>
  </data>
  <data name="ErrorReverseApplication" xml:space="preserve">
    <value>Error could not reverse application</value>
  </data>
  <data name="ErrorSavingJournalEntry" xml:space="preserve">
    <value>Error could not create new journal entry</value>
  </data>
  <data name="JournalEntryReversionComment" xml:space="preserve">
    <value>Application for reverse {0}</value>
  </data>
  <data name="CollectControlIsClosed" xml:space="preserve">
    <value>Collect control is closed</value>
  </data>
  <data name="CollectHasBallotTicketAssociated" xml:space="preserve">
    <value>The collect has ticket ballot ticket {0} associated. It cannot cancel</value>
  </data>
  <data name="CollectIsNotJustCash" xml:space="preserve">
    <value>The collect is not just cash, it cannot cancel</value>
  </data>
  <data name="ErrorGetApplicationPremiumsByEndorsementId" xml:space="preserve">
    <value>Error getting application premium by endorsement id</value>
  </data>
  <data name="CollectAlreadyApplied" xml:space="preserve">
    <value>Collect already applied</value>
  </data>
  <data name="CollectAlreadyCanceled" xml:space="preserve">
    <value>Collect already canceled</value>
  </data>
  <data name="ErrorCouldNotUpdateCollectStatus" xml:space="preserve">
    <value>Error, could not update collect status</value>
  </data>
  <data name="InvalidBranchId" xml:space="preserve">
    <value>Invalid branch identifier</value>
  </data>
  <data name="InvalidTechnicalTransaction" xml:space="preserve">
    <value>Invalid technical transaction</value>
  </data>
  <data name="ValueToCollectGreater" xml:space="preserve">
    <value>Value to collect, greater than total premium {0}</value>
  </data>
  <data name="ErrorReverseJournalEntry" xml:space="preserve">
    <value>Error reversing journal entry</value>
  </data>
  <data name="ErrorSaveLogMassiveDataPolicy" xml:space="preserve">
    <value>Error Saving Log Massive Data Policy</value>
  </data>
  <data name="CollectAlreadyReversed" xml:space="preserve">
    <value>Collect already reversed</value>
  </data>
  <data name="Reversed" xml:space="preserve">
    <value>Reversed</value>
  </data>
  <data name="ErrorGetPaymentTicketSequence" xml:space="preserve">
    <value>Error generando el identificador del número de depósito</value>
  </data>
  <data name="AutomaticAdjustment" xml:space="preserve">
    <value>Adjustment</value>
  </data>
  <data name="ErrorExistsPaymenTechnicalTransactioByBallotNumber" xml:space="preserve">
    <value>Error getting existing payment ballot ticket by ballot number</value>
  </data>
  <data name="ErrorGettingPaymentComponents" xml:space="preserve">
    <value>Error getting payment components</value>
  </data>
  <data name="ErrorCancelAppliationReceipt" xml:space="preserve">
    <value>Error deleting temporal for application</value>
  </data>
</root>