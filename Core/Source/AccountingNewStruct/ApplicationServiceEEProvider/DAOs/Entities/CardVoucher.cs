/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.GetCardVoucher.dict v1.0
 * FileSize=16494 Header=275 CRC=3395552991
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CardVoucher View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.CardVoucher.dict"),
    Serializable(),
    DescriptionKey("GET_CARD_VOUCHER_ENTITY"),
    TableMap(TableName="GET_CARD_VOUCHER", Schema="ACC"),
    ]
    public partial class CardVoucher :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentCode = "PaymentCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string Description = "Description";
			public static readonly string CreditCardTypeCode = "CreditCardTypeCode";
			public static readonly string CardDescription = "CardDescription";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string Voucher = "Voucher";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Amount = "Amount";
			public static readonly string Taxes = "Taxes";
			public static readonly string Retention = "Retention";
			public static readonly string Commission = "Commission";
			public static readonly string CollectCode = "CollectCode";
			public static readonly string DatePayment = "DatePayment";
			public static readonly string CardDate = "CardDate";
			public static readonly string Status = "Status";
			public static readonly string StatusDescription = "StatusDescription";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentCode, paymentCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentCode">Propiedad clave PaymentCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentCode)
	    {
			return InternalCreatePrimaryKey<CardVoucher>(paymentCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad CreditCardTypeCode.
		/// </summary>
        private int? _creditCardTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad CardDescription.
		/// </summary>
        private string _cardDescription = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad Voucher.
		/// </summary>
        private string _voucher = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Taxes.
		/// </summary>
        private decimal? _taxes = null;
		/// <summary>
		/// Atributo para la propiedad Retention.
		/// </summary>
        private decimal? _retention = null;
		/// <summary>
		/// Atributo para la propiedad Commission.
		/// </summary>
        private decimal? _commission = null;
		/// <summary>
		/// Atributo para la propiedad CollectCode.
		/// </summary>
        private int? _collectCode = null;
		/// <summary>
		/// Atributo para la propiedad DatePayment.
		/// </summary>
        private DateTime? _datePayment = null;
		/// <summary>
		/// Atributo para la propiedad CardDate.
		/// </summary>
        private string _cardDate = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad StatusDescription.
		/// </summary>
        private string _statusDescription = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentCode">PaymentCode key property.</param>
	    public CardVoucher(int paymentCode):
			this(CardVoucher.CreatePrimaryKey(paymentCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CardVoucher(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentCode.
		/// </summary>
		/// <value>Propiedad PaymentCode.</value>
	    [
		DescriptionKey("PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CreditCardTypeCode.
		/// </summary>
		/// <value>Propiedad CreditCardTypeCode.</value>
	    [
		DescriptionKey("CREDIT_CARD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CREDIT_CARD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CreditCardTypeCode
	    {
		    get
		    {
			    return this._creditCardTypeCode;
		    }
		    set
		    {
				this._creditCardTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CardDescription.
		/// </summary>
		/// <value>Propiedad CardDescription.</value>
	    [
		DescriptionKey("CARD_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CARD_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CardDescription
	    {
		    get
		    {
			    return this._cardDescription;
		    }
		    set
		    {
				this._cardDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Voucher.
		/// </summary>
		/// <value>Propiedad Voucher.</value>
	    [
		DescriptionKey("VOUCHER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="VOUCHER", DbType=System.Data.DbType.String),
	    ]
        public string Voucher
	    {
		    get
		    {
			    return this._voucher;
		    }
		    set
		    {
				this._voucher = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Taxes.
		/// </summary>
		/// <value>Propiedad Taxes.</value>
	    [
		DescriptionKey("TAXES_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAXES", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Taxes
	    {
		    get
		    {
			    return this._taxes;
		    }
		    set
		    {
				this._taxes = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Retention.
		/// </summary>
		/// <value>Propiedad Retention.</value>
	    [
		DescriptionKey("RETENTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RETENTION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Retention
	    {
		    get
		    {
			    return this._retention;
		    }
		    set
		    {
				this._retention = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Commission.
		/// </summary>
		/// <value>Propiedad Commission.</value>
	    [
		DescriptionKey("COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Commission
	    {
		    get
		    {
			    return this._commission;
		    }
		    set
		    {
				this._commission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectCode.
		/// </summary>
		/// <value>Propiedad CollectCode.</value>
	    [
		DescriptionKey("COLLECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CollectCode
	    {
		    get
		    {
			    return this._collectCode;
		    }
		    set
		    {
				this._collectCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DatePayment.
		/// </summary>
		/// <value>Propiedad DatePayment.</value>
	    [
		DescriptionKey("DATE_PAYMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_PAYMENT", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DatePayment
	    {
		    get
		    {
			    return this._datePayment;
		    }
		    set
		    {
				this._datePayment = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CardDate.
		/// </summary>
		/// <value>Propiedad CardDate.</value>
	    [
		DescriptionKey("CARD_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CARD_DATE", DbType=System.Data.DbType.String),
	    ]
        public string CardDate
	    {
		    get
		    {
			    return this._cardDate;
		    }
		    set
		    {
				this._cardDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StatusDescription.
		/// </summary>
		/// <value>Propiedad StatusDescription.</value>
	    [
		DescriptionKey("STATUS_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string StatusDescription
	    {
		    get
		    {
			    return this._statusDescription;
		    }
		    set
		    {
				this._statusDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

    }
}