/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.GetCollectView.dict v1.0
 * FileSize=16596 Header=275 CRC=2131685907
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad GetCollectView.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.GetCollectView.dict"),
    Serializable(),
    DescriptionKey("GET_COLLECT_VIEW_ENTITY"),
    TableMap(TableName="GET_COLLECT_VIEW", Schema="ACC"),
    ]
    public partial class GetCollectView :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CollectStatus = "CollectStatus";
			public static readonly string CollectControlCode = "CollectControlCode";
			public static readonly string CollectId = "CollectId";
			public static readonly string UserId = "UserId";
			public static readonly string AccountName = "AccountName";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string Status = "Status";
			public static readonly string DateTransaction = "DateTransaction";
			public static readonly string CollectItemId = "CollectItemId";
			public static readonly string Policy = "Policy";
			public static readonly string Endorsement = "Endorsement";
			public static readonly string Quota = "Quota";
			public static readonly string Amount = "Amount";
			public static readonly string AmountReceived = "AmountReceived";
			public static readonly string Description = "Description";
			public static readonly string CollectConceptId = "CollectConceptId";
			public static readonly string CollectConceptDescription = "CollectConceptDescription";
			public static readonly string NamePayer = "NamePayer";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="collectId">Propiedad clave CollectId.</param>
		/// <param name="collectItemId">Propiedad clave CollectItemId.</param>
		/// <param name="collectConceptId">Propiedad clave CollectConceptId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int collectId, int collectItemId, int collectConceptId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CollectId, collectId);
		    keys.Add(Properties.CollectItemId, collectItemId);
		    keys.Add(Properties.CollectConceptId, collectConceptId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="collectId">Propiedad clave CollectId.</param>
		/// <param name="collectItemId">Propiedad clave CollectItemId.</param>
		/// <param name="collectConceptId">Propiedad clave CollectConceptId.</param>
		public static PrimaryKey CreatePrimaryKey(int collectId, int collectItemId, int collectConceptId)
	    {
			return InternalCreatePrimaryKey<GetCollectView>(collectId, collectItemId, collectConceptId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CollectStatus.
		/// </summary>
        private int? _collectStatus = null;
		/// <summary>
		/// Atributo para la propiedad CollectControlCode.
		/// </summary>
        private int? _collectControlCode = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad DateTransaction.
		/// </summary>
        private DateTime? _dateTransaction = null;
		/// <summary>
		/// Atributo para la propiedad Policy.
		/// </summary>
        private decimal _policy;
		/// <summary>
		/// Atributo para la propiedad Endorsement.
		/// </summary>
        private string _endorsement = null;
		/// <summary>
		/// Atributo para la propiedad Quota.
		/// </summary>
        private string _quota = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad AmountReceived.
		/// </summary>
        private decimal? _amountReceived = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad CollectConceptDescription.
		/// </summary>
        private string _collectConceptDescription = null;
		/// <summary>
		/// Atributo para la propiedad NamePayer.
		/// </summary>
        private string _namePayer = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="collectId">CollectId key property.</param>
		/// <param name="collectItemId">CollectItemId key property.</param>
		/// <param name="collectConceptId">CollectConceptId key property.</param>
	    public GetCollectView(int collectId, int collectItemId, int collectConceptId):
			this(GetCollectView.CreatePrimaryKey(collectId, collectItemId, collectConceptId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetCollectView(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectStatus.
		/// </summary>
		/// <value>Propiedad CollectStatus.</value>
	    [
		DescriptionKey("COLLECT_STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? CollectStatus
	    {
		    get
		    {
			    return this._collectStatus;
		    }
		    set
		    {
				this._collectStatus = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectControlCode.
		/// </summary>
		/// <value>Propiedad CollectControlCode.</value>
	    [
		DescriptionKey("COLLECT_CONTROL_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CONTROL_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CollectControlCode
	    {
		    get
		    {
			    return this._collectControlCode;
		    }
		    set
		    {
				this._collectControlCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectId.
		/// </summary>
		/// <value>Propiedad CollectId.</value>
	    [
		DescriptionKey("COLLECT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
				}
				this._accountName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DateTransaction.
		/// </summary>
		/// <value>Propiedad DateTransaction.</value>
	    [
		DescriptionKey("DATE_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DATE_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DateTransaction
	    {
		    get
		    {
			    return this._dateTransaction;
		    }
		    set
		    {
				this._dateTransaction = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectItemId.
		/// </summary>
		/// <value>Propiedad CollectItemId.</value>
	    [
		DescriptionKey("COLLECT_ITEM_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_ITEM_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectItemId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectItemId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectItemId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Policy.
		/// </summary>
		/// <value>Propiedad Policy.</value>
	    [
		DescriptionKey("POLICY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Policy
	    {
		    get
		    {
			    return this._policy;
		    }
		    set
		    {
				this._policy = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Endorsement.
		/// </summary>
		/// <value>Propiedad Endorsement.</value>
	    [
		DescriptionKey("ENDORSEMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENDORSEMENT", DbType=System.Data.DbType.String),
	    ]
        public string Endorsement
	    {
		    get
		    {
			    return this._endorsement;
		    }
		    set
		    {
				this._endorsement = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Quota.
		/// </summary>
		/// <value>Propiedad Quota.</value>
	    [
		DescriptionKey("QUOTA_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="QUOTA", DbType=System.Data.DbType.String),
	    ]
        public string Quota
	    {
		    get
		    {
			    return this._quota;
		    }
		    set
		    {
				this._quota = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AmountReceived.
		/// </summary>
		/// <value>Propiedad AmountReceived.</value>
	    [
		DescriptionKey("AMOUNT_RECEIVED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT_RECEIVED", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AmountReceived
	    {
		    get
		    {
			    return this._amountReceived;
		    }
		    set
		    {
				this._amountReceived = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectConceptId.
		/// </summary>
		/// <value>Propiedad CollectConceptId.</value>
	    [
		DescriptionKey("COLLECT_CONCEPT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_CONCEPT_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectConceptId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectConceptId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectConceptId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectConceptDescription.
		/// </summary>
		/// <value>Propiedad CollectConceptDescription.</value>
	    [
		DescriptionKey("COLLECT_CONCEPT_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COLLECT_CONCEPT_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CollectConceptDescription
	    {
		    get
		    {
			    return this._collectConceptDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CollectConceptDescription);
				}
				this._collectConceptDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NamePayer.
		/// </summary>
		/// <value>Propiedad NamePayer.</value>
	    [
		DescriptionKey("NAME_PAYER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NAME_PAYER", DbType=System.Data.DbType.String),
	    ]
        public string NamePayer
	    {
		    get
		    {
			    return this._namePayer;
		    }
		    set
		    {
				this._namePayer = value;
			}
	    }

    }
}