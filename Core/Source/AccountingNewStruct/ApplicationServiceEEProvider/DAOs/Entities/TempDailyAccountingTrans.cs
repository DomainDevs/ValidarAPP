/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.TempDailyAccountingTrans.dict v1.0
 * FileSize=15713 Header=285 CRC=3976362919
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad TempDailyAccountingTrans.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.TempDailyAccountingTrans.dict"),
    Serializable(),
    DescriptionKey("TEMP_DAILY_ACCOUNTING_TRANS_ENTITY"),
    TableMap(TableName="TEMP_DAILY_ACCOUNTING_TRANS", Schema="ACC"),
    ]
    public partial class TempDailyAccountingTrans :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempDailyAccountingTransId = "TempDailyAccountingTransId";
			public static readonly string TempImputationCode = "TempImputationCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string CompanyCode = "CompanyCode";
			public static readonly string PaymentConceptCode = "PaymentConceptCode";
			public static readonly string BeneficiaryId = "BeneficiaryId";
			public static readonly string BookAccountCode = "BookAccountCode";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string Description = "Description";
			public static readonly string BankReconciliationId = "BankReconciliationId";
			public static readonly string ReceiptNumber = "ReceiptNumber";
			public static readonly string ReceiptDate = "ReceiptDate";
			public static readonly string PostdatedAmount = "PostdatedAmount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="tempDailyAccountingTransId">Propiedad clave TempDailyAccountingTransId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempDailyAccountingTransId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TempDailyAccountingTransId, tempDailyAccountingTransId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="tempDailyAccountingTransId">Propiedad clave TempDailyAccountingTransId.</param>
		public static PrimaryKey CreatePrimaryKey(int tempDailyAccountingTransId)
	    {
			return InternalCreatePrimaryKey<TempDailyAccountingTrans>(tempDailyAccountingTransId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempImputationCode.
		/// </summary>
        private int? _tempImputationCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private int? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad CompanyCode.
		/// </summary>
        private int? _companyCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentConceptCode.
		/// </summary>
        private int? _paymentConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryId.
		/// </summary>
        private int? _beneficiaryId = null;
		/// <summary>
		/// Atributo para la propiedad BookAccountCode.
		/// </summary>
        private int? _bookAccountCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNature.
		/// </summary>
        private int? _accountingNature = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad BankReconciliationId.
		/// </summary>
        private int? _bankReconciliationId = null;
		/// <summary>
		/// Atributo para la propiedad ReceiptNumber.
		/// </summary>
        private int? _receiptNumber = null;
		/// <summary>
		/// Atributo para la propiedad ReceiptDate.
		/// </summary>
        private DateTime? _receiptDate = null;
		/// <summary>
		/// Atributo para la propiedad PostdatedAmount.
		/// </summary>
        private decimal? _postdatedAmount = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="tempDailyAccountingTransId">TempDailyAccountingTransId key property.</param>
	    public TempDailyAccountingTrans(int tempDailyAccountingTransId):
			this(TempDailyAccountingTrans.CreatePrimaryKey(tempDailyAccountingTransId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempDailyAccountingTrans(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempDailyAccountingTransId.
		/// </summary>
		/// <value>Propiedad TempDailyAccountingTransId.</value>
	    [
		DescriptionKey("TEMP_DAILY_ACCOUNTING_TRANS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TEMP_DAILY_ACCOUNTING_TRANS_ID", DbType=System.Data.DbType.String),
	    ]
        public int TempDailyAccountingTransId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempDailyAccountingTransId];
		    }
		    set
		    {
				this._primaryKey[Properties.TempDailyAccountingTransId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationCode.
		/// </summary>
		/// <value>Propiedad TempImputationCode.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_IMPUTATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempImputationCode
	    {
		    get
		    {
			    return this._tempImputationCode;
		    }
		    set
		    {
				this._tempImputationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyCode.
		/// </summary>
		/// <value>Propiedad CompanyCode.</value>
	    [
		DescriptionKey("COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CompanyCode
	    {
		    get
		    {
			    return this._companyCode;
		    }
		    set
		    {
				this._companyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentConceptCode.
		/// </summary>
		/// <value>Propiedad PaymentConceptCode.</value>
	    [
		DescriptionKey("PAYMENT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentConceptCode
	    {
		    get
		    {
			    return this._paymentConceptCode;
		    }
		    set
		    {
				this._paymentConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryId.
		/// </summary>
		/// <value>Propiedad BeneficiaryId.</value>
	    [
		DescriptionKey("BENEFICIARY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BeneficiaryId
	    {
		    get
		    {
			    return this._beneficiaryId;
		    }
		    set
		    {
				this._beneficiaryId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BookAccountCode.
		/// </summary>
		/// <value>Propiedad BookAccountCode.</value>
	    [
		DescriptionKey("BOOK_ACCOUNT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BOOK_ACCOUNT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BookAccountCode
	    {
		    get
		    {
			    return this._bookAccountCode;
		    }
		    set
		    {
				this._bookAccountCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNature.
		/// </summary>
		/// <value>Propiedad AccountingNature.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankReconciliationId.
		/// </summary>
		/// <value>Propiedad BankReconciliationId.</value>
	    [
		DescriptionKey("BANK_RECONCILIATION_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_RECONCILIATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BankReconciliationId
	    {
		    get
		    {
			    return this._bankReconciliationId;
		    }
		    set
		    {
				this._bankReconciliationId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceiptNumber.
		/// </summary>
		/// <value>Propiedad ReceiptNumber.</value>
	    [
		DescriptionKey("RECEIPT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIPT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? ReceiptNumber
	    {
		    get
		    {
			    return this._receiptNumber;
		    }
		    set
		    {
				this._receiptNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReceiptDate.
		/// </summary>
		/// <value>Propiedad ReceiptDate.</value>
	    [
		DescriptionKey("RECEIPT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RECEIPT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ReceiptDate
	    {
		    get
		    {
			    return this._receiptDate;
		    }
		    set
		    {
				this._receiptDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PostdatedAmount.
		/// </summary>
		/// <value>Propiedad PostdatedAmount.</value>
	    [
		DescriptionKey("POSTDATED_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POSTDATED_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PostdatedAmount
	    {
		    get
		    {
			    return this._postdatedAmount;
		    }
		    set
		    {
				this._postdatedAmount = value;
			}
	    }

    }
}