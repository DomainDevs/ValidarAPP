/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.BranchVA.dict v1.0
 * FileSize=14304 Header=269 CRC=3771922418
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad BranchVA.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.BranchVA.dict"),
    Serializable(),
    DescriptionKey("BRANCH_V_A_ENTITY"),
    TableMap(TableName="BRANCH_V_A", Schema="ACC"),
    ]
    public partial class BranchVA :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentRequestId = "PaymentRequestId";
			public static readonly string Number = "Number";
			public static readonly string Branchcode = "Branchcode";
			public static readonly string Conceptsourcecode = "Conceptsourcecode";
			public static readonly string Beneficiarycode = "Beneficiarycode";
			public static readonly string Currencycode = "Currencycode";
			public static readonly string Accountingdate = "Accountingdate";
			public static readonly string Accountingconceptcode = "Accountingconceptcode";
			public static readonly string Amount = "Amount";
			public static readonly string VoucherConceptCode = "VoucherConceptCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string ConceptSourceCode = "ConceptSourceCode";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string VoucherId = "VoucherId";
		}

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="PaymentRequestId">Propiedad clave PaymentRequestId.</param>
        /// <param name="accountingconceptcode">Propiedad clave Accountingconceptcode.</param>
        /// <param name="VoucherConceptCode">Propiedad clave VoucherConceptCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int PaymentRequestId, int accountingconceptcode, int VoucherConceptCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentRequestId, PaymentRequestId);
		    keys.Add(Properties.Accountingconceptcode, accountingconceptcode);
		    keys.Add(Properties.VoucherConceptCode, VoucherConceptCode);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="PaymentRequestId">Propiedad clave PaymentRequestId.</param>
        /// <param name="accountingconceptcode">Propiedad clave Accountingconceptcode.</param>
        /// <param name="VoucherConceptCode">Propiedad clave VoucherConceptCode.</param>
        public static PrimaryKey CreatePrimaryKey(int PaymentRequestId, int accountingconceptcode, int VoucherConceptCode)
	    {
			return InternalCreatePrimaryKey<BranchVA>(PaymentRequestId, accountingconceptcode, VoucherConceptCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Number.
		/// </summary>
        private string _number = null;
		/// <summary>
		/// Atributo para la propiedad Branchcode.
		/// </summary>
        private int? _branchcode = null;
		/// <summary>
		/// Atributo para la propiedad Conceptsourcecode.
		/// </summary>
        private int? _conceptsourcecode = null;
		/// <summary>
		/// Atributo para la propiedad Beneficiarycode.
		/// </summary>
        private int? _beneficiarycode = null;
		/// <summary>
		/// Atributo para la propiedad Currencycode.
		/// </summary>
        private int? _currencycode = null;
		/// <summary>
		/// Atributo para la propiedad Accountingdate.
		/// </summary>
        private DateTime? _accountingdate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int _branchCode;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int _personTypeCode;
		/// <summary>
		/// Atributo para la propiedad ConceptSourceCode.
		/// </summary>
        private int _conceptSourceCode;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int _individualId;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int _currencyCode;
		/// <summary>
		/// Atributo para la propiedad VoucherId.
		/// </summary>
        private int _voucherId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="PaymentRequestId">Paymentrequestid key property.</param>
        /// <param name="accountingconceptcode">Accountingconceptcode key property.</param>
        /// <param name="voucherconceptid">Voucherconceptid key property.</param>
        public BranchVA(int PaymentRequestId, int accountingconceptcode, int voucherconceptid):
			this(BranchVA.CreatePrimaryKey(PaymentRequestId, accountingconceptcode, voucherconceptid), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BranchVA(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentRequestId.
        /// </summary>
        /// <value>Propiedad PaymentRequestId.</value>
        [
        DescriptionKey("PAYMENTREQUESTID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName= "PaymentRequestId", DbType=System.Data.DbType.String),
	    ]
        public int Paymentrequestid
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentRequestId];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentRequestId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Number.
		/// </summary>
		/// <value>Propiedad Number.</value>
	    [
		DescriptionKey("NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Number", DbType=System.Data.DbType.String),
	    ]
        public string Number
	    {
		    get
		    {
			    return this._number;
		    }
		    set
		    {
				this._number = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Branchcode.
		/// </summary>
		/// <value>Propiedad Branchcode.</value>
	    [
		DescriptionKey("BRANCHCODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BranchCode", DbType=System.Data.DbType.String),
	    ]
        public int? Branchcode
	    {
		    get
		    {
			    return this._branchcode;
		    }
		    set
		    {
				this._branchcode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Conceptsourcecode.
		/// </summary>
		/// <value>Propiedad Conceptsourcecode.</value>
	    [
		DescriptionKey("CONCEPTSOURCECODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ConceptSourceCode", DbType=System.Data.DbType.String),
	    ]
        public int? Conceptsourcecode
	    {
		    get
		    {
			    return this._conceptsourcecode;
		    }
		    set
		    {
				this._conceptsourcecode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Beneficiarycode.
		/// </summary>
		/// <value>Propiedad Beneficiarycode.</value>
	    [
		DescriptionKey("BENEFICIARYCODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BeneficiaryCode", DbType=System.Data.DbType.String),
	    ]
        public int? Beneficiarycode
	    {
		    get
		    {
			    return this._beneficiarycode;
		    }
		    set
		    {
				this._beneficiarycode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Currencycode.
		/// </summary>
		/// <value>Propiedad Currencycode.</value>
	    [
		DescriptionKey("CURRENCYCODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CurrencyCode", DbType=System.Data.DbType.String),
	    ]
        public int? Currencycode
	    {
		    get
		    {
			    return this._currencycode;
		    }
		    set
		    {
				this._currencycode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Accountingdate.
		/// </summary>
		/// <value>Propiedad Accountingdate.</value>
	    [
		DescriptionKey("ACCOUNTINGDATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AccountingDate", DbType=System.Data.DbType.String),
	    ]
        public DateTime? Accountingdate
	    {
		    get
		    {
			    return this._accountingdate;
		    }
		    set
		    {
				this._accountingdate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Accountingconceptcode.
		/// </summary>
		/// <value>Propiedad Accountingconceptcode.</value>
	    [
		DescriptionKey("ACCOUNTINGCONCEPTCODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="AccountingConceptCode", DbType=System.Data.DbType.String),
	    ]
        public int Accountingconceptcode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Accountingconceptcode];
		    }
		    set
		    {
				this._primaryKey[Properties.Accountingconceptcode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Amount", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VoucherConceptCode.
        /// </summary>
        /// <value>Propiedad VoucherConceptCode.</value>
        [
        DescriptionKey("VOUCHERCONCEPTCODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName= "VoucherConceptCode", DbType=System.Data.DbType.String),
	    ]
        public int VoucherConceptCode
        {
		    get
		    {
				return (int)this._primaryKey[Properties.VoucherConceptCode];
		    }
		    set
		    {
				this._primaryKey[Properties.VoucherConceptCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PERSON_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }


		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		
    }
}