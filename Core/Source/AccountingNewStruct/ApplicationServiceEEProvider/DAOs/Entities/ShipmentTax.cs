/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.ShipmentTax.dict v1.0
 * FileSize=7455 Header=271 CRC=2029881958
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad ShipmentTax.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.ShipmentTax.dict"),
    Serializable(),
    DescriptionKey("SHIPMENT_TAX_ENTITY"),
    TableMap(TableName="SHIPMENT_TAX", Schema="ACC"),
    ]
    public partial class ShipmentTax :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ShipmentId = "ShipmentId";
			public static readonly string PrimeAmount = "PrimeAmount";
			public static readonly string CommissionAmount = "CommissionAmount";
			public static readonly string WithholdingAtSource = "WithholdingAtSource";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string JournalEntryCode = "JournalEntryCode";
			public static readonly string CollectCode = "CollectCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="shipmentId">Propiedad clave ShipmentId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(string shipmentId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ShipmentId, shipmentId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="shipmentId">Propiedad clave ShipmentId.</param>
		public static PrimaryKey CreatePrimaryKey(string shipmentId)
	    {
			return InternalCreatePrimaryKey<ShipmentTax>(shipmentId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PrimeAmount.
		/// </summary>
        private decimal? _primeAmount = null;
		/// <summary>
		/// Atributo para la propiedad CommissionAmount.
		/// </summary>
        private decimal? _commissionAmount = null;
		/// <summary>
		/// Atributo para la propiedad WithholdingAtSource.
		/// </summary>
        private decimal? _withholdingAtSource = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad JournalEntryCode.
		/// </summary>
        private int? _journalEntryCode = null;
		/// <summary>
		/// Atributo para la propiedad CollectCode.
		/// </summary>
        private int? _collectCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="shipmentId">ShipmentId key property.</param>
	    public ShipmentTax(string shipmentId):
			this(ShipmentTax.CreatePrimaryKey(shipmentId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ShipmentTax(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ShipmentId.
		/// </summary>
		/// <value>Propiedad ShipmentId.</value>
	    [
		DescriptionKey("SHIPMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SHIPMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public string ShipmentId
	    {
		    get
		    {
				return (string)this._primaryKey[Properties.ShipmentId];
		    }
		    set
		    {
				this._primaryKey[Properties.ShipmentId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrimeAmount.
		/// </summary>
		/// <value>Propiedad PrimeAmount.</value>
	    [
		DescriptionKey("PRIME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PRIME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PrimeAmount
	    {
		    get
		    {
			    return this._primeAmount;
		    }
		    set
		    {
				this._primeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionAmount.
		/// </summary>
		/// <value>Propiedad CommissionAmount.</value>
	    [
		DescriptionKey("COMMISSION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionAmount
	    {
		    get
		    {
			    return this._commissionAmount;
		    }
		    set
		    {
				this._commissionAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad WithholdingAtSource.
		/// </summary>
		/// <value>Propiedad WithholdingAtSource.</value>
	    [
		DescriptionKey("WITHHOLDING_AT_SOURCE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="WITHHOLDING_AT_SOURCE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? WithholdingAtSource
	    {
		    get
		    {
			    return this._withholdingAtSource;
		    }
		    set
		    {
				this._withholdingAtSource = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JournalEntryCode.
		/// </summary>
		/// <value>Propiedad JournalEntryCode.</value>
	    [
		DescriptionKey("JOURNAL_ENTRY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="JOURNAL_ENTRY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? JournalEntryCode
	    {
		    get
		    {
			    return this._journalEntryCode;
		    }
		    set
		    {
				this._journalEntryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectCode.
		/// </summary>
		/// <value>Propiedad CollectCode.</value>
	    [
		DescriptionKey("COLLECT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CollectCode
	    {
		    get
		    {
			    return this._collectCode;
		    }
		    set
		    {
				this._collectCode = value;
			}
	    }

    }
}