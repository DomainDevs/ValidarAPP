/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.PerceivedRetention.dict v1.0
 * FileSize=6968 Header=278 CRC=2415821146
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PerceivedRetention.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PerceivedRetention.dict"),
    Serializable(),
    DescriptionKey("PERCEIVED_RETENTION_ENTITY"),
    TableMap(TableName = "PERCEIVED_RETENTION", Schema = "ACC"),
    ]
    public partial class PerceivedRetention :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PerceivedRetentionId = "PerceivedRetentionId";
            public static readonly string Description = "Description";
            public static readonly string RetentionBaseCode = "RetentionBaseCode";
            public static readonly string RetentionPercentage = "RetentionPercentage";
            public static readonly string MaximumDifferenceTax = "MaximumDifferenceTax";
            public static readonly string IsActive = "IsActive";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="perceivedRetentionId">Propiedad clave PerceivedRetentionId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int perceivedRetentionId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PerceivedRetentionId, perceivedRetentionId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="perceivedRetentionId">Propiedad clave PerceivedRetentionId.</param>
        public static PrimaryKey CreatePrimaryKey(int perceivedRetentionId)
        {
            return InternalCreatePrimaryKey<PerceivedRetention>(perceivedRetentionId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad RetentionBaseCode.
        /// </summary>
        private int _retentionBaseCode;
        /// <summary>
        /// Atributo para la propiedad RetentionPercentage.
        /// </summary>
        private decimal _retentionPercentage;
        /// <summary>
        /// Atributo para la propiedad MaximumDifferenceTax.
        /// </summary>
        private decimal _maximumDifferenceTax;
        /// <summary>
        /// Atributo para la propiedad IsActive.
        /// </summary>
        private bool _isActive;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="perceivedRetentionId">PerceivedRetentionId key property.</param>
        public PerceivedRetention(int perceivedRetentionId) :
            this(PerceivedRetention.CreatePrimaryKey(perceivedRetentionId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PerceivedRetention(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PerceivedRetentionId.
        /// </summary>
        /// <value>Propiedad PerceivedRetentionId.</value>
        [
        DescriptionKey("PERCEIVED_RETENTION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PERCEIVED_RETENTION_ID", DbType = System.Data.DbType.String),
        ]
        public int PerceivedRetentionId
        {
            get
            {
                return (int)this._primaryKey[Properties.PerceivedRetentionId];
            }
            set
            {
                this._primaryKey[Properties.PerceivedRetentionId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RetentionBaseCode.
        /// </summary>
        /// <value>Propiedad RetentionBaseCode.</value>
        [
        DescriptionKey("RETENTION_BASE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RETENTION_BASE_CD", DbType = System.Data.DbType.String),
        ]
        public int RetentionBaseCode
        {
            get
            {
                return this._retentionBaseCode;
            }
            set
            {
                this._retentionBaseCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RetentionPercentage.
        /// </summary>
        /// <value>Propiedad RetentionPercentage.</value>
        [
        DescriptionKey("RETENTION_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RETENTION_PERCENTAGE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal RetentionPercentage
        {
            get
            {
                return this._retentionPercentage;
            }
            set
            {
                this._retentionPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MaximumDifferenceTax.
        /// </summary>
        /// <value>Propiedad MaximumDifferenceTax.</value>
        [
        DescriptionKey("MAXIMUM_DIFFERENCE_TAX_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MAXIMUM_DIFFERENCE_TAX", DbType = System.Data.DbType.Decimal),
        ]
        public decimal MaximumDifferenceTax
        {
            get
            {
                return this._maximumDifferenceTax;
            }
            set
            {
                this._maximumDifferenceTax = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsActive.
        /// </summary>
        /// <value>Propiedad IsActive.</value>
        [
        DescriptionKey("IS_ACTIVE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "IS_ACTIVE", DbType = System.Data.DbType.String),
        ]
        public bool IsActive
        {
            get
            {
                return this._isActive;
            }
            set
            {
                this._isActive = value;
            }
        }

    }
}
