/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.CollectControl.dict v1.0
 * FileSize=7272 Header=272 CRC=71657094
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CollectControl.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.CollectControl.dict"),
    Serializable(),
    DescriptionKey("COLLECT_CONTROL_ENTITY"),
    TableMap(TableName="COLLECT_CONTROL", Schema="ACC"),
    ]
    public partial class CollectControl :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CollectControlId = "CollectControlId";
			public static readonly string UserId = "UserId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string Status = "Status";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string OpenDate = "OpenDate";
			public static readonly string CloseDate = "CloseDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="collectControlId">Propiedad clave CollectControlId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int collectControlId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CollectControlId, collectControlId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="collectControlId">Propiedad clave CollectControlId.</param>
		public static PrimaryKey CreatePrimaryKey(int collectControlId)
	    {
			return InternalCreatePrimaryKey<CollectControl>(collectControlId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad OpenDate.
		/// </summary>
        private DateTime? _openDate = null;
		/// <summary>
		/// Atributo para la propiedad CloseDate.
		/// </summary>
        private DateTime? _closeDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="collectControlId">CollectControlId key property.</param>
	    public CollectControl(int collectControlId):
			this(CollectControl.CreatePrimaryKey(collectControlId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CollectControl(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectControlId.
		/// </summary>
		/// <value>Propiedad CollectControlId.</value>
	    [
		DescriptionKey("COLLECT_CONTROL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_CONTROL_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectControlId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectControlId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectControlId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OpenDate.
		/// </summary>
		/// <value>Propiedad OpenDate.</value>
	    [
		DescriptionKey("OPEN_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="OPEN_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? OpenDate
	    {
		    get
		    {
			    return this._openDate;
		    }
		    set
		    {
				this._openDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CloseDate.
		/// </summary>
		/// <value>Propiedad CloseDate.</value>
	    [
		DescriptionKey("CLOSE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CLOSE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CloseDate
	    {
		    get
		    {
			    return this._closeDate;
		    }
		    set
		    {
				this._closeDate = value;
			}
	    }

    }
}