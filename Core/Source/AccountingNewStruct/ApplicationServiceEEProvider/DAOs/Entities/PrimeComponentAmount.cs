/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.GetPrimeComponentAmount.dict v1.0
 * FileSize=5881 Header=268 CRC=2022098953
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad View PrimeComponentAmount.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PrimeComponentAmount.dict"),
    Serializable(),
    DescriptionKey("GET_PRIME_COMPONENT_AMOUNT_ENTITY"),
    TableMap(TableName = "GET_PRIME_COMPONENT_AMOUNT", Schema = "ACC"),
    ]
    public partial class PrimeComponentAmount :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PolicyId = "PolicyId";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string ComponentAmount = "ComponentAmount";
			public static readonly string ComponentCode = "ComponentCode";
			public static readonly string SmallDescription = "SmallDescription";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<PrimeComponentAmount>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PolicyId.
		/// </summary>
        private int _policyId;
		/// <summary>
		/// Atributo para la propiedad EndorsementId.
		/// </summary>
        private int _endorsementId;
		/// <summary>
		/// Atributo para la propiedad ComponentAmount.
		/// </summary>
        private decimal? _componentAmount = null;
		/// <summary>
		/// Atributo para la propiedad ComponentCode.
		/// </summary>
        private int _componentCode;
		/// <summary>
		/// Atributo para la propiedad SmallDescription.
		/// </summary>
        private string _smallDescription = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public PrimeComponentAmount():
			this(PrimeComponentAmount.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PrimeComponentAmount(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
			    return this._endorsementId;
		    }
		    set
		    {
				this._endorsementId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ComponentAmount.
		/// </summary>
		/// <value>Propiedad ComponentAmount.</value>
	    [
		DescriptionKey("COMPONENT_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMPONENT_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ComponentAmount
	    {
		    get
		    {
			    return this._componentAmount;
		    }
		    set
		    {
				this._componentAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ComponentCode.
		/// </summary>
		/// <value>Propiedad ComponentCode.</value>
	    [
		DescriptionKey("COMPONENT_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COMPONENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int ComponentCode
	    {
		    get
		    {
			    return this._componentCode;
		    }
		    set
		    {
				this._componentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SmallDescription.
		/// </summary>
		/// <value>Propiedad SmallDescription.</value>
	    [
		DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SMALL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SmallDescription
	    {
		    get
		    {
			    return this._smallDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
				}
				this._smallDescription = value;
			}
	    }

    }
}