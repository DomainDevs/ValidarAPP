/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.PaymentConcept.dict v1.0
 * FileSize=5985 Header=259 CRC=1452558182
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PaymentConcept.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PaymentConcept.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_CONCEPT_ENTITY"),
    TableMap(TableName="PAYMENT_CONCEPT", Schema="PARAM"),
    ]
    public partial class PaymentConcept :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentConceptCode = "PaymentConceptCode";
			public static readonly string Description = "Description";
			public static readonly string TaxCode = "TaxCode";
			public static readonly string Rate = "Rate";
            public static readonly string AccountingAccountCode = "AccountingAccountCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentConceptCode">Propiedad clave PaymentConceptCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentConceptCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentConceptCode, paymentConceptCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentConceptCode">Propiedad clave PaymentConceptCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentConceptCode)
	    {
			return InternalCreatePrimaryKey<PaymentConcept>(paymentConceptCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad TaxCode.
		/// </summary>
        private int? _taxCode = null;
		/// <summary>
		/// Atributo para la propiedad Rate.
		/// </summary>
        private decimal? _rate = null;
		/// <summary>
        /// Atributo para la propiedad AccountingAccountCode.
		/// </summary>
        private int? _accountingAccountCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentConceptCode">PaymentConceptCode key property.</param>
	    public PaymentConcept(int paymentConceptCode):
			this(PaymentConcept.CreatePrimaryKey(paymentConceptCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentConcept(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentConceptCode.
		/// </summary>
		/// <value>Propiedad PaymentConceptCode.</value>
	    [
		DescriptionKey("PAYMENT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentConceptCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentConceptCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentConceptCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxCode.
		/// </summary>
		/// <value>Propiedad TaxCode.</value>
	    [
		DescriptionKey("TAX_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAX_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TaxCode
	    {
		    get
		    {
			    return this._taxCode;
		    }
		    set
		    {
				this._taxCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Rate.
		/// </summary>
		/// <value>Propiedad Rate.</value>
	    [
		DescriptionKey("RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Rate
	    {
		    get
		    {
			    return this._rate;
		    }
		    set
		    {
				this._rate = value;
			}
	    }

		/// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingAccountCode.
		/// </summary>
        /// <value>Propiedad AccountingAccountCode.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountCode
	    {
		    get
		    {
                return this._accountingAccountCode;
		    }
		    set
		    {
                this._accountingAccountCode = value;
			}
	    }

    }
}