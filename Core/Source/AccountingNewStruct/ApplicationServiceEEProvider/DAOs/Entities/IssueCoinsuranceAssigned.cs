/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.IssueCoinsuranceAssigned.dict v1.0
 * FileSize=7420 Header=285 CRC=3300920504
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad IssueCoinsuranceAssigned.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.IssueCoinsuranceAssigned.dict"),
    Serializable(),
    DescriptionKey("ISSUE_COINSURANCE_ASSIGNED_V_ENTITY"),
    TableMap(TableName="ISSUE_COINSURANCE_ASSIGNED_V", Schema="ACC"),
    ]
    public partial class IssueCoinsuranceAssigned :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string InsuranceCompanyId = "InsuranceCompanyId";
			public static readonly string PartCiaPercentage = "PartCiaPercentage";
			public static readonly string ExpensesPercentage = "ExpensesPercentage";
			public static readonly string CompanyNum = "CompanyNum";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="insuranceCompanyId">Propiedad clave InsuranceCompanyId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int endorsementId, int policyId, decimal insuranceCompanyId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.EndorsementId, endorsementId);
		    keys.Add(Properties.PolicyId, policyId);
		    keys.Add(Properties.InsuranceCompanyId, insuranceCompanyId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="insuranceCompanyId">Propiedad clave InsuranceCompanyId.</param>
		public static PrimaryKey CreatePrimaryKey(int endorsementId, int policyId, decimal insuranceCompanyId)
	    {
			return InternalCreatePrimaryKey<IssueCoinsuranceAssigned>(endorsementId, policyId, insuranceCompanyId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PartCiaPercentage.
		/// </summary>
        private decimal _partCiaPercentage;
		/// <summary>
		/// Atributo para la propiedad ExpensesPercentage.
		/// </summary>
        private decimal _expensesPercentage;
		/// <summary>
		/// Atributo para la propiedad CompanyNum.
		/// </summary>
        private int _companyNum;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="endorsementId">EndorsementId key property.</param>
		/// <param name="policyId">PolicyId key property.</param>
		/// <param name="insuranceCompanyId">InsuranceCompanyId key property.</param>
	    public IssueCoinsuranceAssigned(int endorsementId, int policyId, decimal insuranceCompanyId):
			this(IssueCoinsuranceAssigned.CreatePrimaryKey(endorsementId, policyId, insuranceCompanyId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public IssueCoinsuranceAssigned(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EndorsementId];
		    }
		    set
		    {
				this._primaryKey[Properties.EndorsementId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PolicyId];
		    }
		    set
		    {
				this._primaryKey[Properties.PolicyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuranceCompanyId.
		/// </summary>
		/// <value>Propiedad InsuranceCompanyId.</value>
	    [
		DescriptionKey("INSURANCE_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INSURANCE_COMPANY_ID", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal InsuranceCompanyId
	    {
		    get
		    {
				return (decimal)this._primaryKey[Properties.InsuranceCompanyId];
		    }
		    set
		    {
				this._primaryKey[Properties.InsuranceCompanyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PartCiaPercentage.
		/// </summary>
		/// <value>Propiedad PartCiaPercentage.</value>
	    [
		DescriptionKey("PART_CIA_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PART_CIA_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PartCiaPercentage
	    {
		    get
		    {
			    return this._partCiaPercentage;
		    }
		    set
		    {
				this._partCiaPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExpensesPercentage.
		/// </summary>
		/// <value>Propiedad ExpensesPercentage.</value>
	    [
		DescriptionKey("EXPENSES_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXPENSES_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ExpensesPercentage
	    {
		    get
		    {
			    return this._expensesPercentage;
		    }
		    set
		    {
				this._expensesPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyNum.
		/// </summary>
		/// <value>Propiedad CompanyNum.</value>
	    [
		DescriptionKey("COMPANY_NUM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COMPANY_NUM", DbType=System.Data.DbType.String),
	    ]
        public int CompanyNum
	    {
		    get
		    {
			    return this._companyNum;
		    }
		    set
		    {
				this._companyNum = value;
			}
	    }

    }
}