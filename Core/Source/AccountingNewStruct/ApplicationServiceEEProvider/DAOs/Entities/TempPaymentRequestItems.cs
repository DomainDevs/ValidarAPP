/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.TempPaymentRequestItems.dict v1.0
 * FileSize=28029 Header=285 CRC=1099385257
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad TempPaymentRequestItemsV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.TempPaymentRequestItems.dict"),
    Serializable(),
    DescriptionKey("TEMP_PAYMENT_REQUEST_ITEMS_V_ENTITY"),
    TableMap(TableName="TEMP_PAYMENT_REQUEST_ITEMS_V", Schema="ACC"),
    ]
    public partial class TempPaymentRequestItems :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempPaymentRequestTransId = "TempPaymentRequestTransId";
			public static readonly string TempImputationCode = "TempImputationCode";
			public static readonly string PaymentRequestId = "PaymentRequestId";
			public static readonly string PaymentRequestNumber = "PaymentRequestNumber";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string PrefixDescription = "PrefixDescription";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string PersonTypeDescription = "PersonTypeDescription";
			public static readonly string ConceptSourceCode = "ConceptSourceCode";
			public static readonly string ConceptSourceDescription = "ConceptSourceDescription";
			public static readonly string ClaimCode = "ClaimCode";
			public static readonly string ClaimNumber = "ClaimNumber";
			public static readonly string BeneficiaryId = "BeneficiaryId";
			public static readonly string BeneficiaryDocumentNumber = "BeneficiaryDocumentNumber";
			public static readonly string BeneficiaryName = "BeneficiaryName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string EstimatedPaymentDate = "EstimatedPaymentDate";
			public static readonly string PaymentDate = "PaymentDate";
			public static readonly string BusinessTypeCode = "BusinessTypeCode";
			public static readonly string BusinessTypeDescription = "BusinessTypeDescription";
			public static readonly string FinancialPlanNumber = "FinancialPlanNumber";
			public static readonly string TotalAmount = "TotalAmount";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string RegistrationDate = "RegistrationDate";
			public static readonly string EstimationDate = "EstimationDate";
			public static readonly string PaymentNumber = "PaymentNumber";
			public static readonly string PaymentExpirationDate = "PaymentExpirationDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="tempPaymentRequestTransId">Propiedad clave TempPaymentRequestTransId.</param>
		/// <param name="paymentRequestId">Propiedad clave PaymentRequestId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempPaymentRequestTransId, int paymentRequestId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TempPaymentRequestTransId, tempPaymentRequestTransId);
		    keys.Add(Properties.PaymentRequestId, paymentRequestId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="tempPaymentRequestTransId">Propiedad clave TempPaymentRequestTransId.</param>
		/// <param name="paymentRequestId">Propiedad clave PaymentRequestId.</param>
		public static PrimaryKey CreatePrimaryKey(int tempPaymentRequestTransId, int paymentRequestId)
	    {
			return InternalCreatePrimaryKey<TempPaymentRequestItems>(tempPaymentRequestTransId, paymentRequestId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempImputationCode.
		/// </summary>
        private int? _tempImputationCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentRequestNumber.
		/// </summary>
        private int? _paymentRequestNumber = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int? _prefixCode = null;
		/// <summary>
		/// Atributo para la propiedad PrefixDescription.
		/// </summary>
        private string _prefixDescription = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int? _personTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeDescription.
		/// </summary>
        private string _personTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad ConceptSourceCode.
		/// </summary>
        private int? _conceptSourceCode = null;
		/// <summary>
		/// Atributo para la propiedad ConceptSourceDescription.
		/// </summary>
        private string _conceptSourceDescription = null;
		/// <summary>
		/// Atributo para la propiedad ClaimCode.
		/// </summary>
        private int _claimCode;
		/// <summary>
		/// Atributo para la propiedad ClaimNumber.
		/// </summary>
        private int _claimNumber;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryId.
		/// </summary>
        private int? _beneficiaryId = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryDocumentNumber.
		/// </summary>
        private string _beneficiaryDocumentNumber = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryName.
		/// </summary>
        private string _beneficiaryName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad EstimatedPaymentDate.
		/// </summary>
        private DateTime? _estimatedPaymentDate = null;
		/// <summary>
		/// Atributo para la propiedad PaymentDate.
		/// </summary>
        private DateTime? _paymentDate = null;
		/// <summary>
		/// Atributo para la propiedad BusinessTypeCode.
		/// </summary>
        private int _businessTypeCode;
		/// <summary>
		/// Atributo para la propiedad BusinessTypeDescription.
		/// </summary>
        private string _businessTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad FinancialPlanNumber.
		/// </summary>
        private int _financialPlanNumber;
		/// <summary>
		/// Atributo para la propiedad TotalAmount.
		/// </summary>
        private decimal? _totalAmount = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad RegistrationDate.
		/// </summary>
        private DateTime? _registrationDate = null;
		/// <summary>
		/// Atributo para la propiedad EstimationDate.
		/// </summary>
        private DateTime? _estimationDate = null;
		/// <summary>
		/// Atributo para la propiedad PaymentNumber.
		/// </summary>
        private int? _paymentNumber = null;
		/// <summary>
		/// Atributo para la propiedad PaymentExpirationDate.
		/// </summary>
        private DateTime? _paymentExpirationDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="tempPaymentRequestTransId">TempPaymentRequestTransId key property.</param>
		/// <param name="paymentRequestId">PaymentRequestId key property.</param>
	    public TempPaymentRequestItems(int tempPaymentRequestTransId, int paymentRequestId):
			this(TempPaymentRequestItems.CreatePrimaryKey(tempPaymentRequestTransId, paymentRequestId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempPaymentRequestItems(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempPaymentRequestTransId.
		/// </summary>
		/// <value>Propiedad TempPaymentRequestTransId.</value>
	    [
		DescriptionKey("TEMP_PAYMENT_REQUEST_TRANS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TEMP_PAYMENT_REQUEST_TRANS_ID", DbType=System.Data.DbType.String),
	    ]
        public int TempPaymentRequestTransId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempPaymentRequestTransId];
		    }
		    set
		    {
				this._primaryKey[Properties.TempPaymentRequestTransId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationCode.
		/// </summary>
		/// <value>Propiedad TempImputationCode.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_IMPUTATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempImputationCode
	    {
		    get
		    {
			    return this._tempImputationCode;
		    }
		    set
		    {
				this._tempImputationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestId.
		/// </summary>
		/// <value>Propiedad PaymentRequestId.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_REQUEST_ID", DbType=System.Data.DbType.String),
	    ]
        public int PaymentRequestId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentRequestId];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentRequestId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentRequestNumber.
		/// </summary>
		/// <value>Propiedad PaymentRequestNumber.</value>
	    [
		DescriptionKey("PAYMENT_REQUEST_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_REQUEST_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentRequestNumber
	    {
		    get
		    {
			    return this._paymentRequestNumber;
		    }
		    set
		    {
				this._paymentRequestNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixDescription.
		/// </summary>
		/// <value>Propiedad PrefixDescription.</value>
	    [
		DescriptionKey("PREFIX_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREFIX_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PrefixDescription
	    {
		    get
		    {
			    return this._prefixDescription;
		    }
		    set
		    {
				this._prefixDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeDescription.
		/// </summary>
		/// <value>Propiedad PersonTypeDescription.</value>
	    [
		DescriptionKey("PERSON_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PersonTypeDescription
	    {
		    get
		    {
			    return this._personTypeDescription;
		    }
		    set
		    {
				this._personTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptSourceCode.
		/// </summary>
		/// <value>Propiedad ConceptSourceCode.</value>
	    [
		DescriptionKey("CONCEPT_SOURCE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CONCEPT_SOURCE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ConceptSourceCode
	    {
		    get
		    {
			    return this._conceptSourceCode;
		    }
		    set
		    {
				this._conceptSourceCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptSourceDescription.
		/// </summary>
		/// <value>Propiedad ConceptSourceDescription.</value>
	    [
		DescriptionKey("CONCEPT_SOURCE_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CONCEPT_SOURCE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string ConceptSourceDescription
	    {
		    get
		    {
			    return this._conceptSourceDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.ConceptSourceDescription);
				}
				this._conceptSourceDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimCode.
		/// </summary>
		/// <value>Propiedad ClaimCode.</value>
	    [
		DescriptionKey("CLAIM_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CLAIM_CD", DbType=System.Data.DbType.String),
	    ]
        public int ClaimCode
	    {
		    get
		    {
			    return this._claimCode;
		    }
		    set
		    {
				this._claimCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ClaimNumber.
		/// </summary>
		/// <value>Propiedad ClaimNumber.</value>
	    [
		DescriptionKey("CLAIM_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CLAIM_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int ClaimNumber
	    {
		    get
		    {
			    return this._claimNumber;
		    }
		    set
		    {
				this._claimNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryId.
		/// </summary>
		/// <value>Propiedad BeneficiaryId.</value>
	    [
		DescriptionKey("BENEFICIARY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? BeneficiaryId
	    {
		    get
		    {
			    return this._beneficiaryId;
		    }
		    set
		    {
				this._beneficiaryId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryDocumentNumber.
		/// </summary>
		/// <value>Propiedad BeneficiaryDocumentNumber.</value>
	    [
		DescriptionKey("BENEFICIARY_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BENEFICIARY_DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryDocumentNumber
	    {
		    get
		    {
			    return this._beneficiaryDocumentNumber;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BeneficiaryDocumentNumber);
				}
				this._beneficiaryDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryName.
		/// </summary>
		/// <value>Propiedad BeneficiaryName.</value>
	    [
		DescriptionKey("BENEFICIARY_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryName
	    {
		    get
		    {
			    return this._beneficiaryName;
		    }
		    set
		    {
				this._beneficiaryName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimatedPaymentDate.
		/// </summary>
		/// <value>Propiedad EstimatedPaymentDate.</value>
	    [
		DescriptionKey("ESTIMATED_PAYMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATED_PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimatedPaymentDate
	    {
		    get
		    {
			    return this._estimatedPaymentDate;
		    }
		    set
		    {
				this._estimatedPaymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentDate.
		/// </summary>
		/// <value>Propiedad PaymentDate.</value>
	    [
		DescriptionKey("PAYMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? PaymentDate
	    {
		    get
		    {
			    return this._paymentDate;
		    }
		    set
		    {
				this._paymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BusinessTypeCode.
		/// </summary>
		/// <value>Propiedad BusinessTypeCode.</value>
	    [
		DescriptionKey("BUSINESS_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BUSINESS_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int BusinessTypeCode
	    {
		    get
		    {
			    return this._businessTypeCode;
		    }
		    set
		    {
				this._businessTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BusinessTypeDescription.
		/// </summary>
		/// <value>Propiedad BusinessTypeDescription.</value>
	    [
		DescriptionKey("BUSINESS_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BUSINESS_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BusinessTypeDescription
	    {
		    get
		    {
			    return this._businessTypeDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BusinessTypeDescription);
				}
				this._businessTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FinancialPlanNumber.
		/// </summary>
		/// <value>Propiedad FinancialPlanNumber.</value>
	    [
		DescriptionKey("FINANCIAL_PLAN_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="FINANCIAL_PLAN_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int FinancialPlanNumber
	    {
		    get
		    {
			    return this._financialPlanNumber;
		    }
		    set
		    {
				this._financialPlanNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalAmount.
		/// </summary>
		/// <value>Propiedad TotalAmount.</value>
	    [
		DescriptionKey("TOTAL_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalAmount
	    {
		    get
		    {
			    return this._totalAmount;
		    }
		    set
		    {
				this._totalAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegistrationDate.
		/// </summary>
		/// <value>Propiedad RegistrationDate.</value>
	    [
		DescriptionKey("REGISTRATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegistrationDate
	    {
		    get
		    {
			    return this._registrationDate;
		    }
		    set
		    {
				this._registrationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimationDate.
		/// </summary>
		/// <value>Propiedad EstimationDate.</value>
	    [
		DescriptionKey("ESTIMATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimationDate
	    {
		    get
		    {
			    return this._estimationDate;
		    }
		    set
		    {
				this._estimationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentNumber.
		/// </summary>
		/// <value>Propiedad PaymentNumber.</value>
	    [
		DescriptionKey("PAYMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentNumber
	    {
		    get
		    {
			    return this._paymentNumber;
		    }
		    set
		    {
				this._paymentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentExpirationDate.
		/// </summary>
		/// <value>Propiedad PaymentExpirationDate.</value>
	    [
		DescriptionKey("PAYMENT_EXPIRATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_EXPIRATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? PaymentExpirationDate
	    {
		    get
		    {
			    return this._paymentExpirationDate;
		    }
		    set
		    {
				this._paymentExpirationDate = value;
			}
	    }

    }
}