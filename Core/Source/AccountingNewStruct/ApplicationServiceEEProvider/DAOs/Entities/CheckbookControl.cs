/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.CheckbookControl.dict v1.0
 * FileSize=8071 Header=261 CRC=2655820090
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CheckbookControl.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.CheckbookControl.dict"),
    Serializable(),
    DescriptionKey("CHECKBOOK_CONTROL_ENTITY"),
    TableMap(TableName = "CHECKBOOK_CONTROL", Schema = "ACC"),
    ]
    public partial class CheckbookControl :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CheckbookControlCode = "CheckbookControlCode";
			public static readonly string AccountBankCode = "AccountBankCode";
			public static readonly string IsAutomatic = "IsAutomatic";
			public static readonly string CheckFrom = "CheckFrom";
			public static readonly string CheckTo = "CheckTo";
			public static readonly string LastCheck = "LastCheck";
			public static readonly string Status = "Status";
			public static readonly string DisabledDate = "DisabledDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="checkbookControlCode">Propiedad clave CheckbookControlCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int checkbookControlCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CheckbookControlCode, checkbookControlCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="checkbookControlCode">Propiedad clave CheckbookControlCode.</param>
		public static PrimaryKey CreatePrimaryKey(int checkbookControlCode)
	    {
			return InternalCreatePrimaryKey<CheckbookControl>(checkbookControlCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountBankCode.
		/// </summary>
        private int? _accountBankCode = null;
		/// <summary>
		/// Atributo para la propiedad IsAutomatic.
		/// </summary>
        private bool? _isAutomatic = null;
		/// <summary>
		/// Atributo para la propiedad CheckFrom.
		/// </summary>
        private int? _checkFrom = null;
		/// <summary>
		/// Atributo para la propiedad CheckTo.
		/// </summary>
        private int? _checkTo = null;
		/// <summary>
		/// Atributo para la propiedad LastCheck.
		/// </summary>
        private int? _lastCheck = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad DisabledDate.
		/// </summary>
        private DateTime? _disabledDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="checkbookControlCode">CheckbookControlCode key property.</param>
	    public CheckbookControl(int checkbookControlCode):
			this(CheckbookControl.CreatePrimaryKey(checkbookControlCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CheckbookControl(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckbookControlCode.
		/// </summary>
		/// <value>Propiedad CheckbookControlCode.</value>
	    [
		DescriptionKey("CHECKBOOK_CONTROL_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CHECKBOOK_CONTROL_CD", DbType=System.Data.DbType.String),
	    ]
        public int CheckbookControlCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CheckbookControlCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CheckbookControlCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountBankCode.
		/// </summary>
		/// <value>Propiedad AccountBankCode.</value>
	    [
		DescriptionKey("ACCOUNT_BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountBankCode
	    {
		    get
		    {
			    return this._accountBankCode;
		    }
		    set
		    {
				this._accountBankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsAutomatic.
		/// </summary>
		/// <value>Propiedad IsAutomatic.</value>
	    [
		DescriptionKey("IS_AUTOMATIC_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_AUTOMATIC", DbType=System.Data.DbType.String),
	    ]
        public bool? IsAutomatic
	    {
		    get
		    {
			    return this._isAutomatic;
		    }
		    set
		    {
				this._isAutomatic = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckFrom.
		/// </summary>
		/// <value>Propiedad CheckFrom.</value>
	    [
		DescriptionKey("CHECK_FROM_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHECK_FROM", DbType=System.Data.DbType.String),
	    ]
        public int? CheckFrom
	    {
		    get
		    {
			    return this._checkFrom;
		    }
		    set
		    {
				this._checkFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckTo.
		/// </summary>
		/// <value>Propiedad CheckTo.</value>
	    [
		DescriptionKey("CHECK_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHECK_TO", DbType=System.Data.DbType.String),
	    ]
        public int? CheckTo
	    {
		    get
		    {
			    return this._checkTo;
		    }
		    set
		    {
				this._checkTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LastCheck.
		/// </summary>
		/// <value>Propiedad LastCheck.</value>
	    [
		DescriptionKey("LAST_CHECK_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LAST_CHECK", DbType=System.Data.DbType.String),
	    ]
        public int? LastCheck
	    {
		    get
		    {
			    return this._lastCheck;
		    }
		    set
		    {
				this._lastCheck = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DisabledDate.
		/// </summary>
		/// <value>Propiedad DisabledDate.</value>
	    [
		DescriptionKey("DISABLED_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DISABLED_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DisabledDate
	    {
		    get
		    {
			    return this._disabledDate;
		    }
		    set
		    {
				this._disabledDate = value;
			}
	    }

    }
}