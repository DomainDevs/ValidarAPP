/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.GetBrokerCheckingAccountNotPaid.dict v1.0
 * FileSize=29188 Header=292 CRC=4048053639
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad GetBrokerCheckingAccountNotPaid.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.GetBrokerCheckingAccountNotPaid.dict"),
    Serializable(),
    DescriptionKey("GET_BROKER_CHECKING_ACCOUNT_NOT_PAID_ENTITY"),
    TableMap(TableName="GET_BROKER_CHECKING_ACCOUNT_NOT_PAID", Schema="ACC"),
    ]
    public partial class GetBrokerCheckingAccountNotPaid :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BrokerCheckingAccountTransId = "BrokerCheckingAccountTransId";
			public static readonly string Description = "Description";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string DocumentNumPolicy = "DocumentNumPolicy";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string AgentId = "AgentId";
			public static readonly string DocumentNumAgent = "DocumentNumAgent";
			public static readonly string AgentName = "AgentName";
			public static readonly string AgentTypeCode = "AgentTypeCode";
			public static readonly string AgentType = "AgentType";
			public static readonly string DocumentNumEndorsement = "DocumentNumEndorsement";
			public static readonly string InsuredId = "InsuredId";
			public static readonly string DocumentNumInsured = "DocumentNumInsured";
			public static readonly string InsuredName = "InsuredName";
			public static readonly string PrefixId = "PrefixId";
			public static readonly string PrefixDescription = "PrefixDescription";
			public static readonly string LineBusinessCode = "LineBusinessCode";
			public static readonly string LineBusinessDescription = "LineBusinessDescription";
			public static readonly string CommissionTypeCode = "CommissionTypeCode";
			public static readonly string StCommissionPercentage = "StCommissionPercentage";
			public static readonly string AccountingNature = "AccountingNature";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string Amount = "Amount";
			public static readonly string Payed = "Payed";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string Branch = "Branch";
			public static readonly string AccountingCompanyCode = "AccountingCompanyCode";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string ParticipationPercentage = "ParticipationPercentage";
			public static readonly string StComissionPercentage = "StComissionPercentage";
			public static readonly string AdditCommissPercentage = "AdditCommissPercentage";
			public static readonly string StCommissionAmountTotal = "StCommissionAmountTotal";
			public static readonly string DiscountedCommissionTotal = "DiscountedCommissionTotal";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="brokerCheckingAccountTransId">Propiedad clave BrokerCheckingAccountTransId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int brokerCheckingAccountTransId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BrokerCheckingAccountTransId, brokerCheckingAccountTransId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="brokerCheckingAccountTransId">Propiedad clave BrokerCheckingAccountTransId.</param>
		public static PrimaryKey CreatePrimaryKey(int brokerCheckingAccountTransId)
	    {
			return InternalCreatePrimaryKey<GetBrokerCheckingAccountNotPaid>(brokerCheckingAccountTransId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad PolicyId.
		/// </summary>
        private int? _policyId = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumPolicy.
		/// </summary>
        private decimal? _documentNumPolicy = null;
		/// <summary>
		/// Atributo para la propiedad EndorsementId.
		/// </summary>
        private int? _endorsementId = null;
		/// <summary>
		/// Atributo para la propiedad AgentId.
		/// </summary>
        private int? _agentId = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumAgent.
		/// </summary>
        private string _documentNumAgent = null;
		/// <summary>
		/// Atributo para la propiedad AgentName.
		/// </summary>
        private string _agentName = null;
		/// <summary>
		/// Atributo para la propiedad AgentTypeCode.
		/// </summary>
        private int? _agentTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad AgentType.
		/// </summary>
        private string _agentType = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumEndorsement.
		/// </summary>
        private int? _documentNumEndorsement = null;
		/// <summary>
		/// Atributo para la propiedad InsuredId.
		/// </summary>
        private int? _insuredId = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumInsured.
		/// </summary>
        private string _documentNumInsured = null;
		/// <summary>
		/// Atributo para la propiedad InsuredName.
		/// </summary>
        private string _insuredName = null;
		/// <summary>
		/// Atributo para la propiedad PrefixId.
		/// </summary>
        private int? _prefixId = null;
		/// <summary>
		/// Atributo para la propiedad PrefixDescription.
		/// </summary>
        private string _prefixDescription = null;
		/// <summary>
		/// Atributo para la propiedad LineBusinessCode.
		/// </summary>
        private int? _lineBusinessCode = null;
		/// <summary>
		/// Atributo para la propiedad LineBusinessDescription.
		/// </summary>
        private string _lineBusinessDescription = null;
		/// <summary>
		/// Atributo para la propiedad CommissionTypeCode.
		/// </summary>
        private int? _commissionTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad StCommissionPercentage.
        /// </summary>
        private decimal? _stCommissionPercentage = null;
        /// <summary>
        /// Atributo para la propiedad AccountingNature.
        /// </summary>
        private int? _accountingNature = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Payed.
		/// </summary>
        private bool? _payed = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad Branch.
		/// </summary>
        private string _branch = null;
		/// <summary>
		/// Atributo para la propiedad AccountingCompanyCode.
		/// </summary>
        private int? _accountingCompanyCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad ParticipationPercentage.
		/// </summary>
        private decimal? _participationPercentage = null;
		/// <summary>
		/// Atributo para la propiedad StComissionPercentage.
		/// </summary>
        private decimal? _stComissionPercentage = null;
		/// <summary>
		/// Atributo para la propiedad AdditCommissPercentage.
		/// </summary>
        private decimal? _additCommissPercentage = null;
		/// <summary>
		/// Atributo para la propiedad StCommissionAmountTotal.
		/// </summary>
        private decimal? _stcommissionAmountTotal = null;
		/// <summary>
		/// Atributo para la propiedad DiscountedCommissionTotal.
		/// </summary>
        private decimal? _discountedCommissionTotal = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="brokerCheckingAccountTransId">BrokerCheckingAccountTransId key property.</param>
	    public GetBrokerCheckingAccountNotPaid(int brokerCheckingAccountTransId):
			this(GetBrokerCheckingAccountNotPaid.CreatePrimaryKey(brokerCheckingAccountTransId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public GetBrokerCheckingAccountNotPaid(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BrokerCheckingAccountTransId.
		/// </summary>
		/// <value>Propiedad BrokerCheckingAccountTransId.</value>
	    [
		DescriptionKey("BROKER_CHECKING_ACCOUNT_TRANS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BROKER_CHECKING_ACCOUNT_TRANS_ID", DbType=System.Data.DbType.String),
	    ]
        public int BrokerCheckingAccountTransId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BrokerCheckingAccountTransId];
		    }
		    set
		    {
				this._primaryKey[Properties.BrokerCheckingAccountTransId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumPolicy.
		/// </summary>
		/// <value>Propiedad DocumentNumPolicy.</value>
	    [
		DescriptionKey("DOCUMENT_NUM_POLICY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUM_POLICY", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? DocumentNumPolicy
	    {
		    get
		    {
			    return this._documentNumPolicy;
		    }
		    set
		    {
				this._documentNumPolicy = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? EndorsementId
	    {
		    get
		    {
			    return this._endorsementId;
		    }
		    set
		    {
				this._endorsementId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentId.
		/// </summary>
		/// <value>Propiedad AgentId.</value>
	    [
		DescriptionKey("AGENT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? AgentId
	    {
		    get
		    {
			    return this._agentId;
		    }
		    set
		    {
				this._agentId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumAgent.
		/// </summary>
		/// <value>Propiedad DocumentNumAgent.</value>
	    [
		DescriptionKey("DOCUMENT_NUM_AGENT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DOCUMENT_NUM_AGENT", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumAgent
	    {
		    get
		    {
			    return this._documentNumAgent;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.DocumentNumAgent);
				}
				this._documentNumAgent = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentName.
		/// </summary>
		/// <value>Propiedad AgentName.</value>
	    [
		DescriptionKey("AGENT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AGENT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AgentName
	    {
		    get
		    {
			    return this._agentName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AgentName);
				}
				this._agentName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentTypeCode.
		/// </summary>
		/// <value>Propiedad AgentTypeCode.</value>
	    [
		DescriptionKey("AGENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AgentTypeCode
	    {
		    get
		    {
			    return this._agentTypeCode;
		    }
		    set
		    {
				this._agentTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentType.
		/// </summary>
		/// <value>Propiedad AgentType.</value>
	    [
		DescriptionKey("AGENT_TYPE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AGENT_TYPE", DbType=System.Data.DbType.String),
	    ]
        public string AgentType
	    {
		    get
		    {
			    return this._agentType;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AgentType);
				}
				this._agentType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumEndorsement.
		/// </summary>
		/// <value>Propiedad DocumentNumEndorsement.</value>
	    [
		DescriptionKey("DOCUMENT_NUM_ENDORSEMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUM_ENDORSEMENT", DbType=System.Data.DbType.String),
	    ]
        public int? DocumentNumEndorsement
	    {
		    get
		    {
			    return this._documentNumEndorsement;
		    }
		    set
		    {
				this._documentNumEndorsement = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredId.
		/// </summary>
		/// <value>Propiedad InsuredId.</value>
	    [
		DescriptionKey("INSURED_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_ID", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredId
	    {
		    get
		    {
			    return this._insuredId;
		    }
		    set
		    {
				this._insuredId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumInsured.
		/// </summary>
		/// <value>Propiedad DocumentNumInsured.</value>
	    [
		DescriptionKey("DOCUMENT_NUM_INSURED_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DOCUMENT_NUM_INSURED", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumInsured
	    {
		    get
		    {
			    return this._documentNumInsured;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.DocumentNumInsured);
				}
				this._documentNumInsured = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredName.
		/// </summary>
		/// <value>Propiedad InsuredName.</value>
	    [
		DescriptionKey("INSURED_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_NAME", DbType=System.Data.DbType.String),
	    ]
        public string InsuredName
	    {
		    get
		    {
			    return this._insuredName;
		    }
		    set
		    {
				this._insuredName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixId.
		/// </summary>
		/// <value>Propiedad PrefixId.</value>
	    [
		DescriptionKey("PREFIX_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREFIX_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PrefixId
	    {
		    get
		    {
			    return this._prefixId;
		    }
		    set
		    {
				this._prefixId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixDescription.
		/// </summary>
		/// <value>Propiedad PrefixDescription.</value>
	    [
		DescriptionKey("PREFIX_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PREFIX_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PrefixDescription
	    {
		    get
		    {
			    return this._prefixDescription;
		    }
		    set
		    {
				this._prefixDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LineBusinessCode.
		/// </summary>
		/// <value>Propiedad LineBusinessCode.</value>
	    [
		DescriptionKey("LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LINE_BUSINESS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? LineBusinessCode
	    {
		    get
		    {
			    return this._lineBusinessCode;
		    }
		    set
		    {
				this._lineBusinessCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LineBusinessDescription.
		/// </summary>
		/// <value>Propiedad LineBusinessDescription.</value>
	    [
		DescriptionKey("LINE_BUSINESS_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LINE_BUSINESS_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string LineBusinessDescription
	    {
		    get
		    {
			    return this._lineBusinessDescription;
		    }
		    set
		    {
				this._lineBusinessDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionTypeCode.
		/// </summary>
		/// <value>Propiedad CommissionTypeCode.</value>
	    [
		DescriptionKey("COMMISSION_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CommissionTypeCode
	    {
		    get
		    {
			    return this._commissionTypeCode;
		    }
		    set
		    {
				this._commissionTypeCode = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StCommissionPercentage.
        /// </summary>
        /// <value>Propiedad StCommissionPercentage.</value>
        [
        DescriptionKey("ST_COMMISSION_PERCENTAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ST_COMMISSION_PERCENTAGE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? StCommissionPercentage
        {
            get
            {
                return this._stCommissionPercentage;
            }
            set
            {
                this._stCommissionPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingNature.
        /// </summary>
        /// <value>Propiedad AccountingNature.</value>
        [
		DescriptionKey("ACCOUNTING_NATURE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNature
	    {
		    get
		    {
			    return this._accountingNature;
		    }
		    set
		    {
				this._accountingNature = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
				}
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Payed.
		/// </summary>
		/// <value>Propiedad Payed.</value>
	    [
		DescriptionKey("PAYED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYED", DbType=System.Data.DbType.String),
	    ]
        public bool? Payed
	    {
		    get
		    {
			    return this._payed;
		    }
		    set
		    {
				this._payed = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Branch.
		/// </summary>
		/// <value>Propiedad Branch.</value>
	    [
		DescriptionKey("BRANCH_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH", DbType=System.Data.DbType.String),
	    ]
        public string Branch
	    {
		    get
		    {
			    return this._branch;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Branch);
				}
				this._branch = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyCode.
		/// </summary>
		/// <value>Propiedad AccountingCompanyCode.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingCompanyCode
	    {
		    get
		    {
			    return this._accountingCompanyCode;
		    }
		    set
		    {
				this._accountingCompanyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ParticipationPercentage.
		/// </summary>
		/// <value>Propiedad ParticipationPercentage.</value>
	    [
		DescriptionKey("PARTICIPATION_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PARTICIPATION_PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ParticipationPercentage
	    {
		    get
		    {
			    return this._participationPercentage;
		    }
		    set
		    {
				this._participationPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StComissionPercentage.
		/// </summary>
		/// <value>Propiedad StComissionPercentage.</value>
	    [
		DescriptionKey("ST_COMISSION_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ST_COMISSION_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? StComissionPercentage
	    {
		    get
		    {
			    return this._stComissionPercentage;
		    }
		    set
		    {
				this._stComissionPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AdditCommissPercentage.
		/// </summary>
		/// <value>Propiedad AdditCommissPercentage.</value>
	    [
		DescriptionKey("ADDIT_COMMISS_PERCENTAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ADDIT_COMMISS_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AdditCommissPercentage
	    {
		    get
		    {
			    return this._additCommissPercentage;
		    }
		    set
		    {
				this._additCommissPercentage = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StCommissionAmountTotal.
        /// </summary>
        /// <value>Propiedad StCommissionAmountTotal.</value>
        [
        DescriptionKey("ST_COMMISSION_AMOUNT_TOTAL_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ST_COMMISSION_AMOUNT_TOTAL", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? StCommissionAmountTotal
        {
		    get
		    {
			    return this._stcommissionAmountTotal;
		    }
		    set
		    {
				this._stcommissionAmountTotal = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DiscountedCommissionTotal.
		/// </summary>
		/// <value>Propiedad DiscountedCommissionTotal.</value>
	    [
		DescriptionKey("DISCOUNTED_COMMISSION_TOTAL_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DISCOUNTED_COMMISSION_TOTAL", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? DiscountedCommissionTotal
	    {
		    get
		    {
			    return this._discountedCommissionTotal;
		    }
		    set
		    {
				this._discountedCommissionTotal = value;
			}
	    }

    }
}