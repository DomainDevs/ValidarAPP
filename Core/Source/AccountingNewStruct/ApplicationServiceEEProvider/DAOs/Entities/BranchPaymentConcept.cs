/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.BranchPaymentConcept.dict v1.0
 * FileSize=5659 Header=265 CRC=2458433251
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad BranchPaymentConcept.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.BranchPaymentConcept.dict"),
    Serializable(),
    DescriptionKey("BRANCH_PAYMENT_CONCEPT_ENTITY"),
    TableMap(TableName="BRANCH_PAYMENT_CONCEPT", Schema="PARAM"),
    ]
    public partial class BranchPaymentConcept :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BranchPaymentCode = "BranchPaymentCode";
			public static readonly string PaymentMovementTypeCode = "PaymentMovementTypeCode";
			public static readonly string PaymentBranchCode = "PaymentBranchCode";
			public static readonly string PaymentConceptCode = "PaymentConceptCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="branchPaymentCode">Propiedad clave BranchPaymentCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int branchPaymentCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BranchPaymentCode, branchPaymentCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="branchPaymentCode">Propiedad clave BranchPaymentCode.</param>
		public static PrimaryKey CreatePrimaryKey(int branchPaymentCode)
	    {
			return InternalCreatePrimaryKey<BranchPaymentConcept>(branchPaymentCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentMovementTypeCode.
		/// </summary>
        private int? _paymentMovementTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentBranchCode.
		/// </summary>
        private int? _paymentBranchCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentConceptCode.
		/// </summary>
        private int? _paymentConceptCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="branchPaymentCode">BranchPaymentCode key property.</param>
	    public BranchPaymentConcept(int branchPaymentCode):
			this(BranchPaymentConcept.CreatePrimaryKey(branchPaymentCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BranchPaymentConcept(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchPaymentCode.
		/// </summary>
		/// <value>Propiedad BranchPaymentCode.</value>
	    [
		DescriptionKey("BRANCH_PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BRANCH_PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int BranchPaymentCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BranchPaymentCode];
		    }
		    set
		    {
				this._primaryKey[Properties.BranchPaymentCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMovementTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMovementTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_MOVEMENT_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_MOVEMENT_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMovementTypeCode
	    {
		    get
		    {
			    return this._paymentMovementTypeCode;
		    }
		    set
		    {
				this._paymentMovementTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentBranchCode.
		/// </summary>
		/// <value>Propiedad PaymentBranchCode.</value>
	    [
		DescriptionKey("PAYMENT_BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentBranchCode
	    {
		    get
		    {
			    return this._paymentBranchCode;
		    }
		    set
		    {
				this._paymentBranchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentConceptCode.
		/// </summary>
		/// <value>Propiedad PaymentConceptCode.</value>
	    [
		DescriptionKey("PAYMENT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentConceptCode
	    {
		    get
		    {
			    return this._paymentConceptCode;
		    }
		    set
		    {
				this._paymentConceptCode = value;
			}
	    }

    }
}