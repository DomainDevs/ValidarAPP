/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.GetBalanceEnquiries.dict v1.0
 * FileSize=11708 Header=280 CRC=3465610449
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad BalanceEnquiries.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.BalanceEnquiries.dict"),
    Serializable(),
    DescriptionKey("GET_BALANCE_ENQUIRIES_ENTITY"),
    TableMap(TableName = "GET_BALANCE_ENQUIRIES", Schema = "ACC"),
    ]
    public partial class BalanceEnquiries :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
            public static readonly string PaymentDescription = "PaymentDescription";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string CurrencyDescription = "CurrencyDescription";
            public static readonly string IncomeAmount = "IncomeAmount";
            public static readonly string Amount = "Amount";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string Description = "Description";
            public static readonly string UserId = "UserId";
            public static readonly string AccountName = "AccountName";
            public static readonly string RegisterDate = "RegisterDate";
            public static readonly string CollectControlId = "CollectControlId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="currencyCode">Propiedad clave CurrencyCode.</param>
        /// <param name="collectControlId">Propiedad clave CollectControlId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int currencyCode, int collectControlId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CurrencyCode, currencyCode);
            keys.Add(Properties.CollectControlId, collectControlId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="currencyCode">Propiedad clave CurrencyCode.</param>
        /// <param name="collectControlId">Propiedad clave CollectControlId.</param>
        public static PrimaryKey CreatePrimaryKey(int currencyCode, int collectControlId)
        {
            return InternalCreatePrimaryKey<BalanceEnquiries>(currencyCode, collectControlId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentMethodTypeCode.
        /// </summary>
        private int? _paymentMethodTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad PaymentDescription.
        /// </summary>
        private string _paymentDescription = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyDescription.
        /// </summary>
        private string _currencyDescription = null;
        /// <summary>
        /// Atributo para la propiedad IncomeAmount.
        /// </summary>
        private decimal? _incomeAmount = null;
        /// <summary>
        /// Atributo para la propiedad Amount.
        /// </summary>
        private decimal? _amount = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int? _branchCode = null;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int? _userId = null;
        /// <summary>
        /// Atributo para la propiedad AccountName.
        /// </summary>
        private string _accountName = null;
        /// <summary>
        /// Atributo para la propiedad RegisterDate.
        /// </summary>
        private string _registerDate = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="currencyCode">CurrencyCode key property.</param>
        /// <param name="collectControlId">CollectControlId key property.</param>
        public BalanceEnquiries(int currencyCode, int collectControlId) :
            this(BalanceEnquiries.CreatePrimaryKey(currencyCode, collectControlId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public BalanceEnquiries(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
        /// </summary>
        /// <value>Propiedad PaymentMethodTypeCode.</value>
        [
        DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_METHOD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? PaymentMethodTypeCode
        {
            get
            {
                return this._paymentMethodTypeCode;
            }
            set
            {
                this._paymentMethodTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentDescription.
        /// </summary>
        /// <value>Propiedad PaymentDescription.</value>
        [
        DescriptionKey("PAYMENT_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string PaymentDescription
        {
            get
            {
                return this._paymentDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PaymentDescription);
                }
                this._paymentDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CURRENCY_CODE", DbType = System.Data.DbType.String),
        ]
        public int CurrencyCode
        {
            get
            {
                return (int)this._primaryKey[Properties.CurrencyCode];
            }
            set
            {
                this._primaryKey[Properties.CurrencyCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyDescription.
        /// </summary>
        /// <value>Propiedad CurrencyDescription.</value>
        [
        DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string CurrencyDescription
        {
            get
            {
                return this._currencyDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
                }
                this._currencyDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IncomeAmount.
        /// </summary>
        /// <value>Propiedad IncomeAmount.</value>
        [
        DescriptionKey("INCOME_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INCOME_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? IncomeAmount
        {
            get
            {
                return this._incomeAmount;
            }
            set
            {
                this._incomeAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Amount.
        /// </summary>
        /// <value>Propiedad Amount.</value>
        [
        DescriptionKey("AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                this._amount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int? BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountName.
        /// </summary>
        /// <value>Propiedad AccountName.</value>
        [
        DescriptionKey("ACCOUNT_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNT_NAME", DbType = System.Data.DbType.String),
        ]
        public string AccountName
        {
            get
            {
                return this._accountName;
            }
            set
            {
                this._accountName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RegisterDate.
        /// </summary>
        /// <value>Propiedad RegisterDate.</value>
        [
        DescriptionKey("REGISTER_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "REGISTER_DATE", DbType = System.Data.DbType.String),
        ]
        public string RegisterDate
        {
            get
            {
                return this._registerDate;
            }
            set
            {
                this._registerDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CollectControlId.
        /// </summary>
        /// <value>Propiedad CollectControlId.</value>
        [
        DescriptionKey("COLLECT_CONTROL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "COLLECT_CONTROL_ID", DbType = System.Data.DbType.String),
        ]
        public int CollectControlId
        {
            get
            {
                return (int)this._primaryKey[Properties.CollectControlId];
            }
            set
            {
                this._primaryKey[Properties.CollectControlId] = value;
            }
        }

    }
}