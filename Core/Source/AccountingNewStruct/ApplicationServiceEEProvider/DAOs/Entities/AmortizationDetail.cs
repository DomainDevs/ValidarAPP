/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.AmortizationDetail.dict v1.0
 * FileSize=22934 Header=280 CRC=3398503197
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad AmortizationDetail.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.AmortizationDetail.dict"),
    Serializable(),
    DescriptionKey("AMORTIZATION_DETAIL_V_ENTITY"),
    TableMap(TableName="AMORTIZATION_DETAIL_V", Schema="ACC"),
    ]
    public partial class AmortizationDetail :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LogSpecialProcessId = "LogSpecialProcessId";
			public static readonly string ProcessTypeId = "ProcessTypeId";
			public static readonly string TempImputationId = "TempImputationId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchName = "BranchName";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string PrefixName = "PrefixName";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string PolicyNumber = "PolicyNumber";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string EndorsementNumber = "EndorsementNumber";
			public static readonly string InsuredId = "InsuredId";
			public static readonly string InsuredDocument = "InsuredDocument";
			public static readonly string InsuredName = "InsuredName";
			public static readonly string AgentId = "AgentId";
			public static readonly string AgentDocument = "AgentDocument";
			public static readonly string AgentName = "AgentName";
			public static readonly string PayerId = "PayerId";
			public static readonly string PayerDocument = "PayerDocument";
			public static readonly string PayerName = "PayerName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyName = "CurrencyName";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
			public static readonly string ImputationReceiptNumber = "ImputationReceiptNumber";
			public static readonly string CorrelativeNumber = "CorrelativeNumber";
			public static readonly string UserId = "UserId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="logSpecialProcessId">Propiedad clave LogSpecialProcessId.</param>
		/// <param name="correlativeNumber">Propiedad clave CorrelativeNumber.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int logSpecialProcessId, int correlativeNumber)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LogSpecialProcessId, logSpecialProcessId);
		    keys.Add(Properties.CorrelativeNumber, correlativeNumber);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="logSpecialProcessId">Propiedad clave LogSpecialProcessId.</param>
		/// <param name="correlativeNumber">Propiedad clave CorrelativeNumber.</param>
		public static PrimaryKey CreatePrimaryKey(int logSpecialProcessId, int correlativeNumber)
	    {
			return InternalCreatePrimaryKey<AmortizationDetail>(logSpecialProcessId, correlativeNumber);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ProcessTypeId.
		/// </summary>
        private int _processTypeId;
		/// <summary>
		/// Atributo para la propiedad TempImputationId.
		/// </summary>
        private int _tempImputationId;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchName.
		/// </summary>
        private string _branchName = null;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad PrefixName.
		/// </summary>
        private string _prefixName = null;
		/// <summary>
		/// Atributo para la propiedad PolicyId.
		/// </summary>
        private int? _policyId = null;
		/// <summary>
		/// Atributo para la propiedad PolicyNumber.
		/// </summary>
        private decimal _policyNumber;
		/// <summary>
		/// Atributo para la propiedad EndorsementId.
		/// </summary>
        private int? _endorsementId = null;
		/// <summary>
		/// Atributo para la propiedad EndorsementNumber.
		/// </summary>
        private int _endorsementNumber;
		/// <summary>
		/// Atributo para la propiedad InsuredId.
		/// </summary>
        private int? _insuredId = null;
		/// <summary>
		/// Atributo para la propiedad InsuredDocument.
		/// </summary>
        private string _insuredDocument = null;
		/// <summary>
		/// Atributo para la propiedad InsuredName.
		/// </summary>
        private string _insuredName = null;
		/// <summary>
		/// Atributo para la propiedad AgentId.
		/// </summary>
        private int _agentId;
		/// <summary>
		/// Atributo para la propiedad AgentDocument.
		/// </summary>
        private string _agentDocument = null;
		/// <summary>
		/// Atributo para la propiedad AgentName.
		/// </summary>
        private string _agentName = null;
		/// <summary>
		/// Atributo para la propiedad PayerId.
		/// </summary>
        private int _payerId;
		/// <summary>
		/// Atributo para la propiedad PayerDocument.
		/// </summary>
        private string _payerDocument = null;
		/// <summary>
		/// Atributo para la propiedad PayerName.
		/// </summary>
        private string _payerName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyName.
		/// </summary>
        private string _currencyName = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad ImputationReceiptNumber.
		/// </summary>
        private int? _imputationReceiptNumber = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="logSpecialProcessId">LogSpecialProcessId key property.</param>
		/// <param name="correlativeNumber">CorrelativeNumber key property.</param>
	    public AmortizationDetail(int logSpecialProcessId, int correlativeNumber):
			this(AmortizationDetail.CreatePrimaryKey(logSpecialProcessId, correlativeNumber), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public AmortizationDetail(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LogSpecialProcessId.
		/// </summary>
		/// <value>Propiedad LogSpecialProcessId.</value>
	    [
		DescriptionKey("LOG_SPECIAL_PROCESS_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LOG_SPECIAL_PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int LogSpecialProcessId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.LogSpecialProcessId];
		    }
		    set
		    {
				this._primaryKey[Properties.LogSpecialProcessId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessTypeId.
		/// </summary>
		/// <value>Propiedad ProcessTypeId.</value>
	    [
		DescriptionKey("PROCESS_TYPE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_TYPE_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProcessTypeId
	    {
		    get
		    {
			    return this._processTypeId;
		    }
		    set
		    {
				this._processTypeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationId.
		/// </summary>
		/// <value>Propiedad TempImputationId.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TEMP_IMPUTATION_ID", DbType=System.Data.DbType.String),
	    ]
        public int TempImputationId
	    {
		    get
		    {
			    return this._tempImputationId;
		    }
		    set
		    {
				this._tempImputationId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchName.
		/// </summary>
		/// <value>Propiedad BranchName.</value>
	    [
		DescriptionKey("BRANCH_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BranchName
	    {
		    get
		    {
			    return this._branchName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchName);
				}
				this._branchName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixName.
		/// </summary>
		/// <value>Propiedad PrefixName.</value>
	    [
		DescriptionKey("PREFIX_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PrefixName
	    {
		    get
		    {
			    return this._prefixName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PrefixName);
				}
				this._prefixName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyNumber.
		/// </summary>
		/// <value>Propiedad PolicyNumber.</value>
	    [
		DescriptionKey("POLICY_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_NUMBER", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PolicyNumber
	    {
		    get
		    {
			    return this._policyNumber;
		    }
		    set
		    {
				this._policyNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int? EndorsementId
	    {
		    get
		    {
			    return this._endorsementId;
		    }
		    set
		    {
				this._endorsementId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementNumber.
		/// </summary>
		/// <value>Propiedad EndorsementNumber.</value>
	    [
		DescriptionKey("ENDORSEMENT_NUMBER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementNumber
	    {
		    get
		    {
			    return this._endorsementNumber;
		    }
		    set
		    {
				this._endorsementNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredId.
		/// </summary>
		/// <value>Propiedad InsuredId.</value>
	    [
		DescriptionKey("INSURED_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_ID", DbType=System.Data.DbType.String),
	    ]
        public int? InsuredId
	    {
		    get
		    {
			    return this._insuredId;
		    }
		    set
		    {
				this._insuredId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredDocument.
		/// </summary>
		/// <value>Propiedad InsuredDocument.</value>
	    [
		DescriptionKey("INSURED_DOCUMENT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INSURED_DOCUMENT", DbType=System.Data.DbType.String),
	    ]
        public string InsuredDocument
	    {
		    get
		    {
			    return this._insuredDocument;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.InsuredDocument);
				}
				this._insuredDocument = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredName.
		/// </summary>
		/// <value>Propiedad InsuredName.</value>
	    [
		DescriptionKey("INSURED_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_NAME", DbType=System.Data.DbType.String),
	    ]
        public string InsuredName
	    {
		    get
		    {
			    return this._insuredName;
		    }
		    set
		    {
				this._insuredName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentId.
		/// </summary>
		/// <value>Propiedad AgentId.</value>
	    [
		DescriptionKey("AGENT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AGENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int AgentId
	    {
		    get
		    {
			    return this._agentId;
		    }
		    set
		    {
				this._agentId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentDocument.
		/// </summary>
		/// <value>Propiedad AgentDocument.</value>
	    [
		DescriptionKey("AGENT_DOCUMENT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="AGENT_DOCUMENT", DbType=System.Data.DbType.String),
	    ]
        public string AgentDocument
	    {
		    get
		    {
			    return this._agentDocument;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AgentDocument);
				}
				this._agentDocument = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentName.
		/// </summary>
		/// <value>Propiedad AgentName.</value>
	    [
		DescriptionKey("AGENT_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AGENT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AgentName
	    {
		    get
		    {
			    return this._agentName;
		    }
		    set
		    {
				this._agentName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerId.
		/// </summary>
		/// <value>Propiedad PayerId.</value>
	    [
		DescriptionKey("PAYER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYER_ID", DbType=System.Data.DbType.String),
	    ]
        public int PayerId
	    {
		    get
		    {
			    return this._payerId;
		    }
		    set
		    {
				this._payerId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerDocument.
		/// </summary>
		/// <value>Propiedad PayerDocument.</value>
	    [
		DescriptionKey("PAYER_DOCUMENT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYER_DOCUMENT", DbType=System.Data.DbType.String),
	    ]
        public string PayerDocument
	    {
		    get
		    {
			    return this._payerDocument;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PayerDocument);
				}
				this._payerDocument = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerName.
		/// </summary>
		/// <value>Propiedad PayerName.</value>
	    [
		DescriptionKey("PAYER_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PayerName
	    {
		    get
		    {
			    return this._payerName;
		    }
		    set
		    {
				this._payerName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyName.
		/// </summary>
		/// <value>Propiedad CurrencyName.</value>
	    [
		DescriptionKey("CURRENCY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyName
	    {
		    get
		    {
			    return this._currencyName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
				}
				this._currencyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationReceiptNumber.
		/// </summary>
		/// <value>Propiedad ImputationReceiptNumber.</value>
	    [
		DescriptionKey("IMPUTATION_RECEIPT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IMPUTATION_RECEIPT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int? ImputationReceiptNumber
	    {
		    get
		    {
			    return this._imputationReceiptNumber;
		    }
		    set
		    {
				this._imputationReceiptNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CorrelativeNumber.
		/// </summary>
		/// <value>Propiedad CorrelativeNumber.</value>
	    [
		DescriptionKey("CORRELATIVE_NUMBER_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CORRELATIVE_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public int CorrelativeNumber
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CorrelativeNumber];
		    }
		    set
		    {
				this._primaryKey[Properties.CorrelativeNumber] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

    }
}