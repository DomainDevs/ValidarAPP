/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.RejectedPayment.dict v1.0
 * FileSize=8826 Header=260 CRC=3307379199
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad RejectedPayment.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.RejectedPayment.dict"),
    Serializable(),
    DescriptionKey("REJECTED_PAYMENT_ENTITY"),
    TableMap(TableName = "REJECTED_PAYMENT", Schema = "ACC"),
    ]
    public partial class RejectedPayment :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RejectedPaymentCode = "RejectedPaymentCode";
			public static readonly string PaymentCode = "PaymentCode";
			public static readonly string RejectionCode = "RejectionCode";
			public static readonly string RejectionDate = "RejectionDate";
			public static readonly string Comission = "Comission";
			public static readonly string TaxComission = "TaxComission";
			public static readonly string Description = "Description";
			public static readonly string UserId = "UserId";
			public static readonly string RegisterDate = "RegisterDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="rejectedPaymentCode">Propiedad clave RejectedPaymentCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int rejectedPaymentCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RejectedPaymentCode, rejectedPaymentCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="rejectedPaymentCode">Propiedad clave RejectedPaymentCode.</param>
		public static PrimaryKey CreatePrimaryKey(int rejectedPaymentCode)
	    {
			return InternalCreatePrimaryKey<RejectedPayment>(rejectedPaymentCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentCode.
		/// </summary>
        private int? _paymentCode = null;
		/// <summary>
		/// Atributo para la propiedad RejectionCode.
		/// </summary>
        private int? _rejectionCode = null;
		/// <summary>
		/// Atributo para la propiedad RejectionDate.
		/// </summary>
        private DateTime? _rejectionDate = null;
		/// <summary>
		/// Atributo para la propiedad Comission.
		/// </summary>
        private decimal? _comission = null;
		/// <summary>
		/// Atributo para la propiedad TaxComission.
		/// </summary>
        private decimal? _taxComission = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="rejectedPaymentCode">RejectedPaymentCode key property.</param>
	    public RejectedPayment(int rejectedPaymentCode):
			this(RejectedPayment.CreatePrimaryKey(rejectedPaymentCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public RejectedPayment(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectedPaymentCode.
		/// </summary>
		/// <value>Propiedad RejectedPaymentCode.</value>
	    [
		DescriptionKey("REJECTED_PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="REJECTED_PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int RejectedPaymentCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RejectedPaymentCode];
		    }
		    set
		    {
				this._primaryKey[Properties.RejectedPaymentCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentCode.
		/// </summary>
		/// <value>Propiedad PaymentCode.</value>
	    [
		DescriptionKey("PAYMENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentCode
	    {
		    get
		    {
			    return this._paymentCode;
		    }
		    set
		    {
				this._paymentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectionCode.
		/// </summary>
		/// <value>Propiedad RejectionCode.</value>
	    [
		DescriptionKey("REJECTION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REJECTION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? RejectionCode
	    {
		    get
		    {
			    return this._rejectionCode;
		    }
		    set
		    {
				this._rejectionCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RejectionDate.
		/// </summary>
		/// <value>Propiedad RejectionDate.</value>
	    [
		DescriptionKey("REJECTION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REJECTION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RejectionDate
	    {
		    get
		    {
			    return this._rejectionDate;
		    }
		    set
		    {
				this._rejectionDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Comission.
		/// </summary>
		/// <value>Propiedad Comission.</value>
	    [
		DescriptionKey("COMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Comission
	    {
		    get
		    {
			    return this._comission;
		    }
		    set
		    {
				this._comission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxComission.
		/// </summary>
		/// <value>Propiedad TaxComission.</value>
	    [
		DescriptionKey("TAX_COMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAX_COMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TaxComission
	    {
		    get
		    {
			    return this._taxComission;
		    }
		    set
		    {
				this._taxComission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

    }
}