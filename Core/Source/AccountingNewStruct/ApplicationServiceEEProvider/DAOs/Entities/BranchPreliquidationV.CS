/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.BranchPreliquidationV.dict v1.0
 * FileSize=19540 Header=282 CRC=3358954471
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad BranchPreliquidationV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.BranchPreliquidationV.dict"),
    Serializable(),
    DescriptionKey("BRANCH_PRELIQUIDATION_V_ENTITY"),
    TableMap(TableName="BRANCH_PRELIQUIDATION_V", Schema="ACC"),
    ]
    public partial class BranchPreliquidationV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PreliquidationCode = "PreliquidationCode";
			public static readonly string PreliquidationStatus = "PreliquidationStatus";
			public static readonly string PreliquidationDescription = "PreliquidationDescription";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string UserId = "UserId";
			public static readonly string AccountName = "AccountName";
			public static readonly string SalesPointCode = "SalesPointCode";
			public static readonly string SalesPointDescription = "SalesPointDescription";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string CompanyCode = "CompanyCode";
			public static readonly string AccountingCompanyDescription = "AccountingCompanyDescription";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string PersonTypeDescription = "PersonTypeDescription";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string Name = "Name";
			public static readonly string TempImputationCode = "TempImputationCode";
			public static readonly string SourceCode = "SourceCode";
			public static readonly string ImputationTypeCode = "ImputationTypeCode";
			public static readonly string ImputationTypeDescription = "ImputationTypeDescription";
			public static readonly string IsRealSource = "IsRealSource";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="preliquidationCode">Propiedad clave PreliquidationCode.</param>
		/// <param name="tempImputationCode">Propiedad clave TempImputationCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int preliquidationCode, int tempImputationCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PreliquidationCode, preliquidationCode);
		    keys.Add(Properties.TempImputationCode, tempImputationCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="preliquidationCode">Propiedad clave PreliquidationCode.</param>
		/// <param name="tempImputationCode">Propiedad clave TempImputationCode.</param>
		public static PrimaryKey CreatePrimaryKey(int preliquidationCode, int tempImputationCode)
	    {
			return InternalCreatePrimaryKey<BranchPreliquidationV>(preliquidationCode, tempImputationCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PreliquidationStatus.
		/// </summary>
        private int? _preliquidationStatus = null;
		/// <summary>
		/// Atributo para la propiedad PreliquidationDescription.
		/// </summary>
        private string _preliquidationDescription = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
		/// <summary>
		/// Atributo para la propiedad SalesPointCode.
		/// </summary>
        private int? _salesPointCode = null;
		/// <summary>
		/// Atributo para la propiedad SalesPointDescription.
		/// </summary>
        private string _salesPointDescription = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad CompanyCode.
		/// </summary>
        private int? _companyCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingCompanyDescription.
		/// </summary>
        private string _accountingCompanyDescription = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int? _personTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeDescription.
		/// </summary>
        private string _personTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad Name.
		/// </summary>
        private string _name = null;
		/// <summary>
		/// Atributo para la propiedad SourceCode.
		/// </summary>
        private int? _sourceCode = null;
		/// <summary>
		/// Atributo para la propiedad ImputationTypeCode.
		/// </summary>
        private int? _imputationTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad ImputationTypeDescription.
		/// </summary>
        private string _imputationTypeDescription = null;
		/// <summary>
		/// Atributo para la propiedad IsRealSource.
		/// </summary>
        private bool? _isRealSource = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="preliquidationCode">PreliquidationCode key property.</param>
		/// <param name="tempImputationCode">TempImputationCode key property.</param>
	    public BranchPreliquidationV(int preliquidationCode, int tempImputationCode):
			this(BranchPreliquidationV.CreatePrimaryKey(preliquidationCode, tempImputationCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BranchPreliquidationV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PreliquidationCode.
		/// </summary>
		/// <value>Propiedad PreliquidationCode.</value>
	    [
		DescriptionKey("PRELIQUIDATION_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PRELIQUIDATION_CODE", DbType=System.Data.DbType.String),
	    ]
        public int PreliquidationCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PreliquidationCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PreliquidationCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PreliquidationStatus.
		/// </summary>
		/// <value>Propiedad PreliquidationStatus.</value>
	    [
		DescriptionKey("PRELIQUIDATION_STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PRELIQUIDATION_STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? PreliquidationStatus
	    {
		    get
		    {
			    return this._preliquidationStatus;
		    }
		    set
		    {
				this._preliquidationStatus = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PreliquidationDescription.
		/// </summary>
		/// <value>Propiedad PreliquidationDescription.</value>
	    [
		DescriptionKey("PRELIQUIDATION_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PRELIQUIDATION_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PreliquidationDescription
	    {
		    get
		    {
			    return this._preliquidationDescription;
		    }
		    set
		    {
				this._preliquidationDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
				}
				this._accountName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalesPointCode.
		/// </summary>
		/// <value>Propiedad SalesPointCode.</value>
	    [
		DescriptionKey("SALES_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALES_POINT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? SalesPointCode
	    {
		    get
		    {
			    return this._salesPointCode;
		    }
		    set
		    {
				this._salesPointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalesPointDescription.
		/// </summary>
		/// <value>Propiedad SalesPointDescription.</value>
	    [
		DescriptionKey("SALES_POINT_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SALES_POINT_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SalesPointDescription
	    {
		    get
		    {
			    return this._salesPointDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SalesPointDescription);
				}
				this._salesPointDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CompanyCode.
		/// </summary>
		/// <value>Propiedad CompanyCode.</value>
	    [
		DescriptionKey("COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMPANY_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CompanyCode
	    {
		    get
		    {
			    return this._companyCode;
		    }
		    set
		    {
				this._companyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyDescription.
		/// </summary>
		/// <value>Propiedad AccountingCompanyDescription.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string AccountingCompanyDescription
	    {
		    get
		    {
			    return this._accountingCompanyDescription;
		    }
		    set
		    {
				this._accountingCompanyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeDescription.
		/// </summary>
		/// <value>Propiedad PersonTypeDescription.</value>
	    [
		DescriptionKey("PERSON_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string PersonTypeDescription
	    {
		    get
		    {
			    return this._personTypeDescription;
		    }
		    set
		    {
				this._personTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Name.
		/// </summary>
		/// <value>Propiedad Name.</value>
	    [
		DescriptionKey("NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="NAME", DbType=System.Data.DbType.String),
	    ]
        public string Name
	    {
		    get
		    {
			    return this._name;
		    }
		    set
		    {
				this._name = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationCode.
		/// </summary>
		/// <value>Propiedad TempImputationCode.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TEMP_IMPUTATION_CODE", DbType=System.Data.DbType.String),
	    ]
        public int TempImputationCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempImputationCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TempImputationCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SourceCode.
		/// </summary>
		/// <value>Propiedad SourceCode.</value>
	    [
		DescriptionKey("SOURCE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SOURCE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? SourceCode
	    {
		    get
		    {
			    return this._sourceCode;
		    }
		    set
		    {
				this._sourceCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationTypeCode.
		/// </summary>
		/// <value>Propiedad ImputationTypeCode.</value>
	    [
		DescriptionKey("IMPUTATION_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IMPUTATION_TYPE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? ImputationTypeCode
	    {
		    get
		    {
			    return this._imputationTypeCode;
		    }
		    set
		    {
				this._imputationTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationTypeDescription.
		/// </summary>
		/// <value>Propiedad ImputationTypeDescription.</value>
	    [
		DescriptionKey("IMPUTATION_TYPE_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IMPUTATION_TYPE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string ImputationTypeDescription
	    {
		    get
		    {
			    return this._imputationTypeDescription;
		    }
		    set
		    {
				this._imputationTypeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsRealSource.
		/// </summary>
		/// <value>Propiedad IsRealSource.</value>
	    [
		DescriptionKey("IS_REAL_SOURCE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_REAL_SOURCE", DbType=System.Data.DbType.String),
	    ]
        public bool? IsRealSource
	    {
		    get
		    {
			    return this._isRealSource;
		    }
		    set
		    {
				this._isRealSource = value;
			}
	    }

    }
}