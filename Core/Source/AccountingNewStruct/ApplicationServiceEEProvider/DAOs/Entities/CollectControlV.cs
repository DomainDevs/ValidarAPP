/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.CollectControlV.dict v1.0
 * FileSize=13614 Header=276 CRC=1073404585
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CollectControlV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.CollectControlV.dict"),
    Serializable(),
    DescriptionKey("COLLECT_CONTROL_V_ENTITY"),
    TableMap(TableName="COLLECT_CONTROL_V", Schema="ACC"),
    ]
    public partial class CollectControlV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CollectId = "CollectId";
			public static readonly string CollectStatus = "CollectStatus";
			public static readonly string PaymentsTotal = "PaymentsTotal";
			public static readonly string AccountName = "AccountName";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string CollectConceptCode = "CollectConceptCode";
			public static readonly string UserId = "UserId";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string CollectControlId = "CollectControlId";
			public static readonly string Payer = "Payer";
			public static readonly string DocumentNumber = "DocumentNumber";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="collectId">Propiedad clave CollectId.</param>
		/// <param name="collectControlId">Propiedad clave CollectControlId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int collectId, int collectControlId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CollectId, collectId);
		    keys.Add(Properties.CollectControlId, collectControlId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="collectId">Propiedad clave CollectId.</param>
		/// <param name="collectControlId">Propiedad clave CollectControlId.</param>
		public static PrimaryKey CreatePrimaryKey(int collectId, int collectControlId)
	    {
			return InternalCreatePrimaryKey<CollectControlV>(collectId, collectControlId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CollectStatus.
		/// </summary>
        private int? _collectStatus = null;
		/// <summary>
		/// Atributo para la propiedad PaymentsTotal.
		/// </summary>
        private decimal? _paymentsTotal = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad CollectConceptCode.
		/// </summary>
        private int? _collectConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad Payer.
		/// </summary>
        private string _payer = null;
		/// <summary>
		/// Atributo para la propiedad DocumentNumber.
		/// </summary>
        private string _documentNumber = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="collectId">CollectId key property.</param>
		/// <param name="collectControlId">CollectControlId key property.</param>
	    public CollectControlV(int collectId, int collectControlId):
			this(CollectControlV.CreatePrimaryKey(collectId, collectControlId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CollectControlV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectId.
		/// </summary>
		/// <value>Propiedad CollectId.</value>
	    [
		DescriptionKey("COLLECT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectStatus.
		/// </summary>
		/// <value>Propiedad CollectStatus.</value>
	    [
		DescriptionKey("COLLECT_STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? CollectStatus
	    {
		    get
		    {
			    return this._collectStatus;
		    }
		    set
		    {
				this._collectStatus = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentsTotal.
		/// </summary>
		/// <value>Propiedad PaymentsTotal.</value>
	    [
		DescriptionKey("PAYMENTS_TOTAL_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENTS_TOTAL", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PaymentsTotal
	    {
		    get
		    {
			    return this._paymentsTotal;
		    }
		    set
		    {
				this._paymentsTotal = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AccountName);
				}
				this._accountName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectConceptCode.
		/// </summary>
		/// <value>Propiedad CollectConceptCode.</value>
	    [
		DescriptionKey("COLLECT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CONCEPT_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CollectConceptCode
	    {
		    get
		    {
			    return this._collectConceptCode;
		    }
		    set
		    {
				this._collectConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectControlId.
		/// </summary>
		/// <value>Propiedad CollectControlId.</value>
	    [
		DescriptionKey("COLLECT_CONTROL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_CONTROL_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectControlId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectControlId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectControlId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Payer.
		/// </summary>
		/// <value>Propiedad Payer.</value>
	    [
		DescriptionKey("PAYER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER", DbType=System.Data.DbType.String),
	    ]
        public string Payer
	    {
		    get
		    {
			    return this._payer;
		    }
		    set
		    {
				this._payer = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DocumentNumber.
		/// </summary>
		/// <value>Propiedad DocumentNumber.</value>
	    [
		DescriptionKey("DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string DocumentNumber
	    {
		    get
		    {
			    return this._documentNumber;
		    }
		    set
		    {
				this._documentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

    }
}