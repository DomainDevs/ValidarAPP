/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.PaymentCollectMethodType.dict v1.0
 * FileSize=11956 Header=290 CRC=2253075112
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PaymentCollectMethodType.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PaymentCollectMethodType.dict"),
    Serializable(),
    DescriptionKey("GET_CARD_CASH_CHECK_TO_CLOSE_REPORT_ENTITY"),
    TableMap(TableName = "GET_CARD_CASH_CHECK_TO_CLOSE_REPORT", Schema = "ACC"),
    ]
    public partial class PaymentCollectMethodType :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string UserId = "UserId";
            public static readonly string UserDescription = "UserDescription";
            public static readonly string AccountingDate = "AccountingDate";
            public static readonly string OpenDate = "OpenDate";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string Branch = "Branch";
            public static readonly string TechnicalTransaction = "TechnicalTransaction";
            public static readonly string PaymentMethod = "PaymentMethod";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string Currency = "Currency";
            public static readonly string StatusDescription = "StatusDescription";
            public static readonly string IncomeAmount = "IncomeAmount";
            public static readonly string CollectControlStatus = "CollectControlStatus";
            public static readonly string CollectControlId = "CollectControlId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<PaymentCollectMethodType>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int? _userId = null;
        /// <summary>
        /// Atributo para la propiedad UserDescription.
        /// </summary>
        private string _userDescription = null;
        /// <summary>
        /// Atributo para la propiedad AccountingDate.
        /// </summary>
        private DateTime? _accountingDate = null;
        /// <summary>
        /// Atributo para la propiedad OpenDate.
        /// </summary>
        private DateTime? _openDate = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int? _branchCode = null;
        /// <summary>
        /// Atributo para la propiedad Branch.
        /// </summary>
        private string _branch = null;
        /// <summary>
        /// Atributo para la propiedad TechnicalTransaction.
        /// </summary>
        private int _technicalTransaction;
        /// <summary>
        /// Atributo para la propiedad PaymentMethod.
        /// </summary>
        private string _paymentMethod = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int? _currencyCode = null;
        /// <summary>
        /// Atributo para la propiedad Currency.
        /// </summary>
        private string _currency = null;
        /// <summary>
        /// Atributo para la propiedad StatusDescription.
        /// </summary>
        private string _statusDescription = null;
        /// <summary>
        /// Atributo para la propiedad IncomeAmount.
        /// </summary>
        private decimal _incomeAmount;
        /// <summary>
        /// Atributo para la propiedad CollectControlStatus.
        /// </summary>
        private int? _collectControlStatus = null;
        /// <summary>
        /// Atributo para la propiedad CollectControlId.
        /// </summary>
        private int _collectControlId;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public PaymentCollectMethodType() :
            this(PaymentCollectMethodType.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PaymentCollectMethodType(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserDescription.
        /// </summary>
        /// <value>Propiedad UserDescription.</value>
        [
        DescriptionKey("USER_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string UserDescription
        {
            get
            {
                return this._userDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.UserDescription);
                }
                this._userDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingDate.
        /// </summary>
        /// <value>Propiedad AccountingDate.</value>
        [
        DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? AccountingDate
        {
            get
            {
                return this._accountingDate;
            }
            set
            {
                this._accountingDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OpenDate.
        /// </summary>
        /// <value>Propiedad OpenDate.</value>
        [
        DescriptionKey("OPEN_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OPEN_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? OpenDate
        {
            get
            {
                return this._openDate;
            }
            set
            {
                this._openDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int? BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Branch.
        /// </summary>
        /// <value>Propiedad Branch.</value>
        [
        DescriptionKey("BRANCH_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH", DbType = System.Data.DbType.String),
        ]
        public string Branch
        {
            get
            {
                return this._branch;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Branch);
                }
                this._branch = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad TechnicalTransaction.
        /// </summary>
        /// <value>Propiedad TechnicalTransaction.</value>
        [
        DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "TECHNICAL_TRANSACTION", DbType = System.Data.DbType.String),
        ]
        public int TechnicalTransaction
        {
            get
            {
                return this._technicalTransaction;
            }
            set
            {
                this._technicalTransaction = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentMethod.
        /// </summary>
        /// <value>Propiedad PaymentMethod.</value>
        [
        DescriptionKey("PAYMENT_METHOD_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_METHOD", DbType = System.Data.DbType.String),
        ]
        public string PaymentMethod
        {
            get
            {
                return this._paymentMethod;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PaymentMethod);
                }
                this._paymentMethod = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Currency.
        /// </summary>
        /// <value>Propiedad Currency.</value>
        [
        DescriptionKey("CURRENCY_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY", DbType = System.Data.DbType.String),
        ]
        public string Currency
        {
            get
            {
                return this._currency;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Currency);
                }
                this._currency = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StatusDescription.
        /// </summary>
        /// <value>Propiedad StatusDescription.</value>
        [
        DescriptionKey("STATUS_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATUS_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string StatusDescription
        {
            get
            {
                return this._statusDescription;
            }
            set
            {
                this._statusDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IncomeAmount.
        /// </summary>
        /// <value>Propiedad IncomeAmount.</value>
        [
        DescriptionKey("INCOME_AMOUNT_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INCOME_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal IncomeAmount
        {
            get
            {
                return this._incomeAmount;
            }
            set
            {
                this._incomeAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CollectControlStatus.
        /// </summary>
        /// <value>Propiedad CollectControlStatus.</value>
        [
        DescriptionKey("COLLECT_CONTROL_STATUS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COLLECT_CONTROL_STATUS", DbType = System.Data.DbType.String),
        ]
        public int? CollectControlStatus
        {
            get
            {
                return this._collectControlStatus;
            }
            set
            {
                this._collectControlStatus = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CollectControlId.
        /// </summary>
        /// <value>Propiedad CollectControlId.</value>
        [
        DescriptionKey("COLLECT_CONTROL_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "COLLECT_CONTROL_ID", DbType = System.Data.DbType.String),
        ]
        public int CollectControlId
        {
            get
            {
                return this._collectControlId;
            }
            set
            {
                this._collectControlId = value;
            }
        }

    }
}
