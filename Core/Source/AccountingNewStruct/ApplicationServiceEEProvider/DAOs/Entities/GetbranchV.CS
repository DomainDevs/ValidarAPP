/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.GetbranchV.dict v1.0
 * FileSize=14374 Header=270 CRC=532741892
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad GetbranchV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.GetbranchV.dict"),
    Serializable(),
    DescriptionKey("GETBRANCH_V_ENTITY"),
    TableMap(TableName = "GETBRANCH_V", Schema = "ACC"),
    ]
    public partial class GetbranchV :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PaymentRequestId = "PaymentRequestId";
            public static readonly string Number = "Number";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string ConceptSourceCode = "ConceptSourceCode";
            public static readonly string BeneficiaryCode = "BeneficiaryCode";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string AccountingDate = "AccountingDate";
            public static readonly string AccountingConceptCode = "AccountingConceptCode";
            public static readonly string Amount = "Amount";
            public static readonly string VoucherConceptId = "VoucherConceptId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="paymentRequestId">Propiedad clave PaymentRequestId.</param>
        /// <param name="accountingConceptCode">Propiedad clave AccountingConceptCode.</param>
        /// <param name="voucherConceptId">Propiedad clave VoucherConceptId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentRequestId, int accountingConceptCode, int voucherConceptId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentRequestId, paymentRequestId);
            keys.Add(Properties.AccountingConceptCode, accountingConceptCode);
            keys.Add(Properties.VoucherConceptId, voucherConceptId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentRequestId">Propiedad clave PaymentRequestId.</param>
        /// <param name="accountingConceptCode">Propiedad clave AccountingConceptCode.</param>
        /// <param name="voucherConceptId">Propiedad clave VoucherConceptId.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentRequestId, int accountingConceptCode, int voucherConceptId)
        {
            return InternalCreatePrimaryKey<GetbranchV>(paymentRequestId, accountingConceptCode, voucherConceptId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Number.
        /// </summary>
        private string _number = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int? _branchCode = null;
        /// <summary>
        /// Atributo para la propiedad ConceptSourceCode.
        /// </summary>
        private int? _conceptSourceCode = null;
        /// <summary>
        /// Atributo para la propiedad BeneficiaryCode.
        /// </summary>
        private int? _beneficiaryCode = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int? _currencyCode = null;
        /// <summary>
        /// Atributo para la propiedad AccountingDate.
        /// </summary>
        private DateTime? _accountingDate = null;
        /// <summary>
        /// Atributo para la propiedad Amount.
        /// </summary>
        private decimal? _amount = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="paymentRequestId">PaymentRequestId key property.</param>
        /// <param name="accountingConceptCode">AccountingConceptCode key property.</param>
        /// <param name="voucherConceptId">VoucherConceptId key property.</param>
        public GetbranchV(int paymentRequestId, int accountingConceptCode, int voucherConceptId) :
            this(GetbranchV.CreatePrimaryKey(paymentRequestId, accountingConceptCode, voucherConceptId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public GetbranchV(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentRequestId.
        /// </summary>
        /// <value>Propiedad PaymentRequestId.</value>
        [
        DescriptionKey("PAYMENT_REQUEST_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_REQUEST_ID", DbType = System.Data.DbType.String),
        ]
        public int PaymentRequestId
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentRequestId];
            }
            set
            {
                this._primaryKey[Properties.PaymentRequestId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Number.
        /// </summary>
        /// <value>Propiedad Number.</value>
        [
        DescriptionKey("NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NUMBER", DbType = System.Data.DbType.String),
        ]
        public string Number
        {
            get
            {
                return this._number;
            }
            set
            {
                this._number = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_CODE", DbType = System.Data.DbType.String),
        ]
        public int? BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ConceptSourceCode.
        /// </summary>
        /// <value>Propiedad ConceptSourceCode.</value>
        [
        DescriptionKey("CONCEPT_SOURCE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CONCEPT_SOURCE_CODE", DbType = System.Data.DbType.String),
        ]
        public int? ConceptSourceCode
        {
            get
            {
                return this._conceptSourceCode;
            }
            set
            {
                this._conceptSourceCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BeneficiaryCode.
        /// </summary>
        /// <value>Propiedad BeneficiaryCode.</value>
        [
        DescriptionKey("BENEFICIARY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BENEFICIARY_CODE", DbType = System.Data.DbType.String),
        ]
        public int? BeneficiaryCode
        {
            get
            {
                return this._beneficiaryCode;
            }
            set
            {
                this._beneficiaryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENCY_CODE", DbType = System.Data.DbType.String),
        ]
        public int? CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingDate.
        /// </summary>
        /// <value>Propiedad AccountingDate.</value>
        [
        DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNTING_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? AccountingDate
        {
            get
            {
                return this._accountingDate;
            }
            set
            {
                this._accountingDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountingConceptCode.
        /// </summary>
        /// <value>Propiedad AccountingConceptCode.</value>
        [
        DescriptionKey("ACCOUNTING_CONCEPT_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ACCOUNTING_CONCEPT_CODE", DbType = System.Data.DbType.String),
        ]
        public int AccountingConceptCode
        {
            get
            {
                return (int)this._primaryKey[Properties.AccountingConceptCode];
            }
            set
            {
                this._primaryKey[Properties.AccountingConceptCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Amount.
        /// </summary>
        /// <value>Propiedad Amount.</value>
        [
        DescriptionKey("AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                this._amount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad VoucherConceptId.
        /// </summary>
        /// <value>Propiedad VoucherConceptId.</value>
        [
        DescriptionKey("VOUCHER_CONCEPT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "VOUCHER_CONCEPT_ID", DbType = System.Data.DbType.String),
        ]
        public int VoucherConceptId
        {
            get
            {
                return (int)this._primaryKey[Properties.VoucherConceptId];
            }
            set
            {
                this._primaryKey[Properties.VoucherConceptId] = value;
            }
        }
    }
}