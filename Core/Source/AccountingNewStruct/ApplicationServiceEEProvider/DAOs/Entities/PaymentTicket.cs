/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.PaymentTicket.dict v1.0
 * FileSize=12244 Header=258 CRC=570025330
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PaymentTicket.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PaymentTicket.dict"),
    Serializable(),
    DescriptionKey("PAYMENT_TICKET_ENTITY"),
    TableMap(TableName = "PAYMENT_TICKET", Schema = "ACC"),
    ]
    public partial class PaymentTicket :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PaymentTicketCode = "PaymentTicketCode";
            public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
            public static readonly string BranchCode = "BranchCode";
            public static readonly string Amount = "Amount";
            public static readonly string CommissionAmount = "CommissionAmount";
            public static readonly string CashAmount = "CashAmount";
            public static readonly string BankCode = "BankCode";
            public static readonly string AccountNumber = "AccountNumber";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string RegisterDate = "RegisterDate";
            public static readonly string UserId = "UserId";
            public static readonly string Status = "Status";
            public static readonly string DisabledDate = "DisabledDate";
            public static readonly string DisabledUserId = "DisabledUserId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="paymentTicketCode">Propiedad clave PaymentTicketCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentTicketCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PaymentTicketCode, paymentTicketCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="paymentTicketCode">Propiedad clave PaymentTicketCode.</param>
        public static PrimaryKey CreatePrimaryKey(int paymentTicketCode)
        {
            return InternalCreatePrimaryKey<PaymentTicket>(paymentTicketCode);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad PaymentMethodTypeCode.
        /// </summary>
        private int? _paymentMethodTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int? _branchCode = null;
        /// <summary>
        /// Atributo para la propiedad Amount.
        /// </summary>
        private decimal? _amount = null;
        /// <summary>
        /// Atributo para la propiedad CommissionAmount.
        /// </summary>
        private decimal? _commissionAmount = null;
        /// <summary>
        /// Atributo para la propiedad CashAmount.
        /// </summary>
        private decimal? _cashAmount = null;
        /// <summary>
        /// Atributo para la propiedad BankCode.
        /// </summary>
        private int? _bankCode = null;
        /// <summary>
        /// Atributo para la propiedad AccountNumber.
        /// </summary>
        private string _accountNumber = null;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int? _currencyCode = null;
        /// <summary>
        /// Atributo para la propiedad RegisterDate.
        /// </summary>
        private DateTime? _registerDate = null;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int? _userId = null;
        /// <summary>
        /// Atributo para la propiedad Status.
        /// </summary>
        private int? _status = null;
        /// <summary>
        /// Atributo para la propiedad DisabledDate.
        /// </summary>
        private DateTime? _disabledDate = null;
        /// <summary>
        /// Atributo para la propiedad DisabledUserId.
        /// </summary>
        private int? _disabledUserId = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="paymentTicketCode">PaymentTicketCode key property.</param>
        public PaymentTicket(int paymentTicketCode) :
            this(PaymentTicket.CreatePrimaryKey(paymentTicketCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public PaymentTicket(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentTicketCode.
        /// </summary>
        /// <value>Propiedad PaymentTicketCode.</value>
        [
        DescriptionKey("PAYMENT_TICKET_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_TICKET_CD", DbType = System.Data.DbType.String),
        ]
        public int PaymentTicketCode
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentTicketCode];
            }
            set
            {
                this._primaryKey[Properties.PaymentTicketCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
        /// </summary>
        /// <value>Propiedad PaymentMethodTypeCode.</value>
        [
        DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_METHOD_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? PaymentMethodTypeCode
        {
            get
            {
                return this._paymentMethodTypeCode;
            }
            set
            {
                this._paymentMethodTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int? BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Amount.
        /// </summary>
        /// <value>Propiedad Amount.</value>
        [
        DescriptionKey("AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                this._amount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CommissionAmount.
        /// </summary>
        /// <value>Propiedad CommissionAmount.</value>
        [
        DescriptionKey("COMMISSION_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COMMISSION_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? CommissionAmount
        {
            get
            {
                return this._commissionAmount;
            }
            set
            {
                this._commissionAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CashAmount.
        /// </summary>
        /// <value>Propiedad CashAmount.</value>
        [
        DescriptionKey("CASH_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CASH_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? CashAmount
        {
            get
            {
                return this._cashAmount;
            }
            set
            {
                this._cashAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BankCode.
        /// </summary>
        /// <value>Propiedad BankCode.</value>
        [
        DescriptionKey("BANK_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BANK_CD", DbType = System.Data.DbType.String),
        ]
        public int? BankCode
        {
            get
            {
                return this._bankCode;
            }
            set
            {
                this._bankCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccountNumber.
        /// </summary>
        /// <value>Propiedad AccountNumber.</value>
        [
        DescriptionKey("ACCOUNT_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ACCOUNT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string AccountNumber
        {
            get
            {
                return this._accountNumber;
            }
            set
            {
                this._accountNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RegisterDate.
        /// </summary>
        /// <value>Propiedad RegisterDate.</value>
        [
        DescriptionKey("REGISTER_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "REGISTER_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? RegisterDate
        {
            get
            {
                return this._registerDate;
            }
            set
            {
                this._registerDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Status.
        /// </summary>
        /// <value>Propiedad Status.</value>
        [
        DescriptionKey("STATUS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATUS", DbType = System.Data.DbType.String),
        ]
        public int? Status
        {
            get
            {
                return this._status;
            }
            set
            {
                this._status = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DisabledDate.
        /// </summary>
        /// <value>Propiedad DisabledDate.</value>
        [
        DescriptionKey("DISABLED_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DISABLED_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? DisabledDate
        {
            get
            {
                return this._disabledDate;
            }
            set
            {
                this._disabledDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DisabledUserId.
        /// </summary>
        /// <value>Propiedad DisabledUserId.</value>
        [
        DescriptionKey("DISABLED_USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DISABLED_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int? DisabledUserId
        {
            get
            {
                return this._disabledUserId;
            }
            set
            {
                this._disabledUserId = value;
            }
        }

    }
}
