/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.StatusPayment.dict v1.0
 * FileSize=4866 Header=258 CRC=4158328323
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad StatusPayment.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.StatusPayment.dict"),
    Serializable(),
    DescriptionKey("STATUS_PAYMENT_ENTITY"),
    TableMap(TableName = "STATUS_PAYMENT", Schema = "ACC"),
    ]
    public partial class StatusPayment :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
			public static readonly string Status = "Status";
			public static readonly string Description = "Description";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentMethodTypeCode">Propiedad clave PaymentMethodTypeCode.</param>
		/// <param name="status">Propiedad clave Status.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentMethodTypeCode, int status)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentMethodTypeCode, paymentMethodTypeCode);
		    keys.Add(Properties.Status, status);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentMethodTypeCode">Propiedad clave PaymentMethodTypeCode.</param>
		/// <param name="status">Propiedad clave Status.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentMethodTypeCode, int status)
	    {
			return InternalCreatePrimaryKey<StatusPayment>(paymentMethodTypeCode, status);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentMethodTypeCode">PaymentMethodTypeCode key property.</param>
		/// <param name="status">Status key property.</param>
	    public StatusPayment(int paymentMethodTypeCode, int status):
			this(StatusPayment.CreatePrimaryKey(paymentMethodTypeCode, status), null)
	    {
	    }


		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public StatusPayment(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentMethodTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentMethodTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentMethodTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int Status
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Status];
		    }
		    set
		    {
				this._primaryKey[Properties.Status] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

    }
}