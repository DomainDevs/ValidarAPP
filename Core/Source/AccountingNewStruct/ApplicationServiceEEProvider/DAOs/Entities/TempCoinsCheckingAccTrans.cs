/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.TempCoinsCheckingAccTrans.dict v1.0
 * FileSize=14736 Header=286 CRC=2416888697
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad TempCoinsCheckingAccTrans.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.TempCoinsCheckingAccTrans.dict"),
    Serializable(),
    DescriptionKey("TEMP_COINS_CHECKING_ACC_TRANS_ENTITY"),
    TableMap(TableName="TEMP_COINS_CHECKING_ACC_TRANS", Schema="ACC"),
    ]
    public partial class TempCoinsCheckingAccTrans :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempCoinsCheckingAccTransCode = "TempCoinsCheckingAccTransCode";
			public static readonly string TempImputationCode = "TempImputationCode";
			public static readonly string TempCoinsuranceParentCode = "TempCoinsuranceParentCode";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string AccountingCompanyCode = "AccountingCompanyCode";
			public static readonly string SalePointCode = "SalePointCode";
			public static readonly string CoinsuranceType = "CoinsuranceType";
			public static readonly string CoinsuredCompanyId = "CoinsuredCompanyId";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string CheckingAccountConceptCode = "CheckingAccountConceptCode";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string Amount = "Amount";
			public static readonly string Description = "Description";
			public static readonly string AccountingNatureCode = "AccountingNatureCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="tempCoinsCheckingAccTransCode">Propiedad clave TempCoinsCheckingAccTransCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempCoinsCheckingAccTransCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TempCoinsCheckingAccTransCode, tempCoinsCheckingAccTransCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="tempCoinsCheckingAccTransCode">Propiedad clave TempCoinsCheckingAccTransCode.</param>
		public static PrimaryKey CreatePrimaryKey(int tempCoinsCheckingAccTransCode)
	    {
			return InternalCreatePrimaryKey<TempCoinsCheckingAccTrans>(tempCoinsCheckingAccTransCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempImputationCode.
		/// </summary>
        private int? _tempImputationCode = null;
		/// <summary>
		/// Atributo para la propiedad TempCoinsuranceParentCode.
		/// </summary>
        private int? _tempCoinsuranceParentCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad AccountingCompanyCode.
		/// </summary>
        private int? _accountingCompanyCode = null;
		/// <summary>
		/// Atributo para la propiedad SalePointCode.
		/// </summary>
        private int? _salePointCode = null;
		/// <summary>
		/// Atributo para la propiedad CoinsuranceType.
		/// </summary>
        private int? _coinsuranceType = null;
		/// <summary>
		/// Atributo para la propiedad CoinsuredCompanyId.
		/// </summary>
        private int? _coinsuredCompanyId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad CheckingAccountConceptCode.
		/// </summary>
        private int? _checkingAccountConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad AccountingNatureCode.
		/// </summary>
        private int? _accountingNatureCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="tempCoinsCheckingAccTransCode">TempCoinsCheckingAccTransCode key property.</param>
	    public TempCoinsCheckingAccTrans(int tempCoinsCheckingAccTransCode):
			this(TempCoinsCheckingAccTrans.CreatePrimaryKey(tempCoinsCheckingAccTransCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempCoinsCheckingAccTrans(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempCoinsCheckingAccTransCode.
		/// </summary>
		/// <value>Propiedad TempCoinsCheckingAccTransCode.</value>
	    [
		DescriptionKey("TEMP_COINS_CHECKING_ACC_TRANS_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TEMP_COINS_CHECKING_ACC_TRANS_CD", DbType=System.Data.DbType.String),
	    ]
        public int TempCoinsCheckingAccTransCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempCoinsCheckingAccTransCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TempCoinsCheckingAccTransCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempImputationCode.
		/// </summary>
		/// <value>Propiedad TempImputationCode.</value>
	    [
		DescriptionKey("TEMP_IMPUTATION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_IMPUTATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempImputationCode
	    {
		    get
		    {
			    return this._tempImputationCode;
		    }
		    set
		    {
				this._tempImputationCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempCoinsuranceParentCode.
		/// </summary>
		/// <value>Propiedad TempCoinsuranceParentCode.</value>
	    [
		DescriptionKey("TEMP_COINSURANCE_PARENT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TEMP_COINSURANCE_PARENT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? TempCoinsuranceParentCode
	    {
		    get
		    {
			    return this._tempCoinsuranceParentCode;
		    }
		    set
		    {
				this._tempCoinsuranceParentCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingCompanyCode.
		/// </summary>
		/// <value>Propiedad AccountingCompanyCode.</value>
	    [
		DescriptionKey("ACCOUNTING_COMPANY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_COMPANY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingCompanyCode
	    {
		    get
		    {
			    return this._accountingCompanyCode;
		    }
		    set
		    {
				this._accountingCompanyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointCode.
		/// </summary>
		/// <value>Propiedad SalePointCode.</value>
	    [
		DescriptionKey("SALE_POINT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SALE_POINT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SalePointCode
	    {
		    get
		    {
			    return this._salePointCode;
		    }
		    set
		    {
				this._salePointCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuranceType.
		/// </summary>
		/// <value>Propiedad CoinsuranceType.</value>
	    [
		DescriptionKey("COINSURANCE_TYPE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURANCE_TYPE", DbType=System.Data.DbType.String),
	    ]
        public int? CoinsuranceType
	    {
		    get
		    {
			    return this._coinsuranceType;
		    }
		    set
		    {
				this._coinsuranceType = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoinsuredCompanyId.
		/// </summary>
		/// <value>Propiedad CoinsuredCompanyId.</value>
	    [
		DescriptionKey("COINSURED_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COINSURED_COMPANY_ID", DbType=System.Data.DbType.String),
	    ]
        public int? CoinsuredCompanyId
	    {
		    get
		    {
			    return this._coinsuredCompanyId;
		    }
		    set
		    {
				this._coinsuredCompanyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CheckingAccountConceptCode.
		/// </summary>
		/// <value>Propiedad CheckingAccountConceptCode.</value>
	    [
		DescriptionKey("CHECKING_ACCOUNT_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHECKING_ACCOUNT_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CheckingAccountConceptCode
	    {
		    get
		    {
			    return this._checkingAccountConceptCode;
		    }
		    set
		    {
				this._checkingAccountConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingNatureCode.
		/// </summary>
		/// <value>Propiedad AccountingNatureCode.</value>
	    [
		DescriptionKey("ACCOUNTING_NATURE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_NATURE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingNatureCode
	    {
		    get
		    {
			    return this._accountingNatureCode;
		    }
		    set
		    {
				this._accountingNatureCode = value;
			}
	    }

    }
}