/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.PayerOrderUnauthorizedView.dict v1.0
 * FileSize=12320 Header=284 CRC=3191656905
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PayerOrderUnauthorizedView.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PayerOrderUnauthorizedView.dict"),
    Serializable(),
    DescriptionKey("PAYER_ORDER_UNAUTHORIZED_V_ENTITY"),
    TableMap(TableName="PAYER_ORDER_UNAUTHORIZED_V", Schema="ACC"),
    ]
    public partial class PayerOrderUnauthorizedView :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentOrderCode = "PaymentOrderCode";
			public static readonly string PaymentMethodCode = "PaymentMethodCode";
			public static readonly string PaymentMethodName = "PaymentMethodName";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchName = "BranchName";
			public static readonly string BeneficiaryName = "BeneficiaryName";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyName = "CurrencyName";
			public static readonly string PersonTypeCode = "PersonTypeCode";
			public static readonly string PersonTypeName = "PersonTypeName";
			public static readonly string EstimatedPaymentDate = "EstimatedPaymentDate";
			public static readonly string Sarlaft = "Sarlaft";
			public static readonly string UserId = "UserId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="paymentOrderCode">Propiedad clave PaymentOrderCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int paymentOrderCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PaymentOrderCode, paymentOrderCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="paymentOrderCode">Propiedad clave PaymentOrderCode.</param>
		public static PrimaryKey CreatePrimaryKey(int paymentOrderCode)
	    {
			return InternalCreatePrimaryKey<PayerOrderUnauthorizedView>(paymentOrderCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentMethodCode.
		/// </summary>
        private int? _paymentMethodCode = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodName.
		/// </summary>
        private string _paymentMethodName = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchName.
		/// </summary>
        private string _branchName = null;
		/// <summary>
		/// Atributo para la propiedad BeneficiaryName.
		/// </summary>
        private string _beneficiaryName = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyName.
		/// </summary>
        private string _currencyName = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeCode.
		/// </summary>
        private int? _personTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad PersonTypeName.
		/// </summary>
        private string _personTypeName = null;
		/// <summary>
		/// Atributo para la propiedad EstimatedPaymentDate.
		/// </summary>
        private DateTime? _estimatedPaymentDate = null;
		/// <summary>
		/// Atributo para la propiedad Sarlaft.
		/// </summary>
        private string _sarlaft = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="paymentOrderCode">PaymentOrderCode key property.</param>
	    public PayerOrderUnauthorizedView(int paymentOrderCode):
			this(PayerOrderUnauthorizedView.CreatePrimaryKey(paymentOrderCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PayerOrderUnauthorizedView(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentOrderCode.
		/// </summary>
		/// <value>Propiedad PaymentOrderCode.</value>
	    [
		DescriptionKey("PAYMENT_ORDER_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PAYMENT_ORDER_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentOrderCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PaymentOrderCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PaymentOrderCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodCode
	    {
		    get
		    {
			    return this._paymentMethodCode;
		    }
		    set
		    {
				this._paymentMethodCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodName.
		/// </summary>
		/// <value>Propiedad PaymentMethodName.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_METHOD_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PaymentMethodName
	    {
		    get
		    {
			    return this._paymentMethodName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PaymentMethodName);
				}
				this._paymentMethodName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchName.
		/// </summary>
		/// <value>Propiedad BranchName.</value>
	    [
		DescriptionKey("BRANCH_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BranchName
	    {
		    get
		    {
			    return this._branchName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchName);
				}
				this._branchName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeneficiaryName.
		/// </summary>
		/// <value>Propiedad BeneficiaryName.</value>
	    [
		DescriptionKey("BENEFICIARY_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BENEFICIARY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string BeneficiaryName
	    {
		    get
		    {
			    return this._beneficiaryName;
		    }
		    set
		    {
				this._beneficiaryName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyName.
		/// </summary>
		/// <value>Propiedad CurrencyName.</value>
	    [
		DescriptionKey("CURRENCY_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENCY_NAME", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyName
	    {
		    get
		    {
			    return this._currencyName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyName);
				}
				this._currencyName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeCode.
		/// </summary>
		/// <value>Propiedad PersonTypeCode.</value>
	    [
		DescriptionKey("PERSON_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PersonTypeCode
	    {
		    get
		    {
			    return this._personTypeCode;
		    }
		    set
		    {
				this._personTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PersonTypeName.
		/// </summary>
		/// <value>Propiedad PersonTypeName.</value>
	    [
		DescriptionKey("PERSON_TYPE_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PERSON_TYPE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string PersonTypeName
	    {
		    get
		    {
			    return this._personTypeName;
		    }
		    set
		    {
				this._personTypeName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EstimatedPaymentDate.
		/// </summary>
		/// <value>Propiedad EstimatedPaymentDate.</value>
	    [
		DescriptionKey("ESTIMATED_PAYMENT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ESTIMATED_PAYMENT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? EstimatedPaymentDate
	    {
		    get
		    {
			    return this._estimatedPaymentDate;
		    }
		    set
		    {
				this._estimatedPaymentDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Sarlaft.
		/// </summary>
		/// <value>Propiedad Sarlaft.</value>
	    [
		DescriptionKey("SARLAFT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SARLAFT", DbType=System.Data.DbType.String),
	    ]
        public string Sarlaft
	    {
		    get
		    {
			    return this._sarlaft;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Sarlaft);
				}
				this._sarlaft = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

    }
}