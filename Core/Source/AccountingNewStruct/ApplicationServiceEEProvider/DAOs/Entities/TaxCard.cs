/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.CommonService3GProvider.GetTaxCard.dict v1.0
 * FileSize=15474 Header=265 CRC=1143805982
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad TaxCard View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.TaxCard.dict"),
    Serializable(),
    DescriptionKey("GET_TAX_CARD_ENTITY"),
    TableMap(TableName="GET_TAX_CARD", Schema="COMM"),
    ]
    public partial class TaxCard :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CreditCardTypeCode = "CreditCardTypeCode";
			public static readonly string Conducto = "Conducto";
			public static readonly string Commission = "Commission";
			public static readonly string CreditCardTypeTaxCode = "CreditCardTypeTaxCode";
			public static readonly string TaxCode = "TaxCode";
			public static readonly string IsRetention = "IsRetention";
			public static readonly string TaxDescription = "TaxDescription";
			public static readonly string SmallDescription = "SmallDescription";
			public static readonly string TaxConditionCode = "TaxConditionCode";
			public static readonly string TaxCondition = "TaxCondition";
			public static readonly string TaxCategoryCode = "TaxCategoryCode";
			public static readonly string TaxCategory = "TaxCategory";
			public static readonly string BranchCode = "BranchCode";
			public static readonly string BranchDescription = "BranchDescription";
			public static readonly string CurrentFrom = "CurrentFrom";
			public static readonly string Rate = "Rate";
			public static readonly string TaxRateId = "TaxRateId";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="creditCardTypeCode">Propiedad clave CreditCardTypeCode.</param>
		/// <param name="creditCardTypeTaxCode">Propiedad clave CreditCardTypeTaxCode.</param>
		/// <param name="taxCode">Propiedad clave TaxCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int creditCardTypeCode, int creditCardTypeTaxCode, int taxCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CreditCardTypeCode, creditCardTypeCode);
		    keys.Add(Properties.CreditCardTypeTaxCode, creditCardTypeTaxCode);
		    keys.Add(Properties.TaxCode, taxCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="creditCardTypeCode">Propiedad clave CreditCardTypeCode.</param>
		/// <param name="creditCardTypeTaxCode">Propiedad clave CreditCardTypeTaxCode.</param>
		/// <param name="taxCode">Propiedad clave TaxCode.</param>
		public static PrimaryKey CreatePrimaryKey(int creditCardTypeCode, int creditCardTypeTaxCode, int taxCode)
	    {
			return InternalCreatePrimaryKey<TaxCard>(creditCardTypeCode, creditCardTypeTaxCode, taxCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Conducto.
		/// </summary>
        private string _conducto = null;
		/// <summary>
		/// Atributo para la propiedad Commission.
		/// </summary>
        private decimal? _commission = null;
		/// <summary>
		/// Atributo para la propiedad IsRetention.
		/// </summary>
        private bool _isRetention;
		/// <summary>
		/// Atributo para la propiedad TaxDescription.
		/// </summary>
        private string _taxDescription = null;
		/// <summary>
		/// Atributo para la propiedad SmallDescription.
		/// </summary>
        private string _smallDescription = null;
		/// <summary>
		/// Atributo para la propiedad TaxConditionCode.
		/// </summary>
        private int _taxConditionCode;
		/// <summary>
		/// Atributo para la propiedad TaxCondition.
		/// </summary>
        private string _taxCondition = null;
		/// <summary>
		/// Atributo para la propiedad TaxCategoryCode.
		/// </summary>
        private int _taxCategoryCode;
		/// <summary>
		/// Atributo para la propiedad TaxCategory.
		/// </summary>
        private string _taxCategory = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
		/// <summary>
		/// Atributo para la propiedad BranchDescription.
		/// </summary>
        private string _branchDescription = null;
		/// <summary>
		/// Atributo para la propiedad CurrentFrom.
		/// </summary>
        private DateTime _currentFrom;
		/// <summary>
		/// Atributo para la propiedad Rate.
		/// </summary>
        private decimal _rate;
		/// <summary>
		/// Atributo para la propiedad TaxRateId.
		/// </summary>
        private int _taxRateId;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="creditCardTypeCode">CreditCardTypeCode key property.</param>
		/// <param name="creditCardTypeTaxCode">CreditCardTypeTaxCode key property.</param>
		/// <param name="taxCode">TaxCode key property.</param>
	    public TaxCard(int creditCardTypeCode, int creditCardTypeTaxCode, int taxCode):
			this(TaxCard.CreatePrimaryKey(creditCardTypeCode, creditCardTypeTaxCode, taxCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TaxCard(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CreditCardTypeCode.
		/// </summary>
		/// <value>Propiedad CreditCardTypeCode.</value>
	    [
		DescriptionKey("CREDIT_CARD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CREDIT_CARD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int CreditCardTypeCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CreditCardTypeCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CreditCardTypeCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Conducto.
		/// </summary>
		/// <value>Propiedad Conducto.</value>
	    [
		DescriptionKey("CONDUCTO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CONDUCTO", DbType=System.Data.DbType.String),
	    ]
        public string Conducto
	    {
		    get
		    {
			    return this._conducto;
		    }
		    set
		    {
				this._conducto = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Commission.
		/// </summary>
		/// <value>Propiedad Commission.</value>
	    [
		DescriptionKey("COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Commission
	    {
		    get
		    {
			    return this._commission;
		    }
		    set
		    {
				this._commission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CreditCardTypeTaxCode.
		/// </summary>
		/// <value>Propiedad CreditCardTypeTaxCode.</value>
	    [
		DescriptionKey("CREDIT_CARD_TYPE_TAX_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="CREDIT_CARD_TYPE_TAX_CD", DbType=System.Data.DbType.String),
	    ]
        public int CreditCardTypeTaxCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CreditCardTypeTaxCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CreditCardTypeTaxCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxCode.
		/// </summary>
		/// <value>Propiedad TaxCode.</value>
	    [
		DescriptionKey("TAX_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TAX_CD", DbType=System.Data.DbType.String),
	    ]
        public int TaxCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TaxCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TaxCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsRetention.
		/// </summary>
		/// <value>Propiedad IsRetention.</value>
	    [
		DescriptionKey("IS_RETENTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_RETENTION", DbType=System.Data.DbType.String),
	    ]
        public bool IsRetention
	    {
		    get
		    {
			    return this._isRetention;
		    }
		    set
		    {
				this._isRetention = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxDescription.
		/// </summary>
		/// <value>Propiedad TaxDescription.</value>
	    [
		DescriptionKey("TAX_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TAX_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string TaxDescription
	    {
		    get
		    {
			    return this._taxDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.TaxDescription);
				}
				this._taxDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SmallDescription.
		/// </summary>
		/// <value>Propiedad SmallDescription.</value>
	    [
		DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SMALL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SmallDescription
	    {
		    get
		    {
			    return this._smallDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
				}
				this._smallDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxConditionCode.
		/// </summary>
		/// <value>Propiedad TaxConditionCode.</value>
	    [
		DescriptionKey("TAX_CONDITION_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TAX_CONDITION_CD", DbType=System.Data.DbType.String),
	    ]
        public int TaxConditionCode
	    {
		    get
		    {
			    return this._taxConditionCode;
		    }
		    set
		    {
				this._taxConditionCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxCondition.
		/// </summary>
		/// <value>Propiedad TaxCondition.</value>
	    [
		DescriptionKey("TAX_CONDITION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TAX_CONDITION", DbType=System.Data.DbType.String),
	    ]
        public string TaxCondition
	    {
		    get
		    {
			    return this._taxCondition;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.TaxCondition);
				}
				this._taxCondition = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxCategoryCode.
		/// </summary>
		/// <value>Propiedad TaxCategoryCode.</value>
	    [
		DescriptionKey("TAX_CATEGORY_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TAX_CATEGORY_CD", DbType=System.Data.DbType.String),
	    ]
        public int TaxCategoryCode
	    {
		    get
		    {
			    return this._taxCategoryCode;
		    }
		    set
		    {
				this._taxCategoryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxCategory.
		/// </summary>
		/// <value>Propiedad TaxCategory.</value>
	    [
		DescriptionKey("TAX_CATEGORY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TAX_CATEGORY", DbType=System.Data.DbType.String),
	    ]
        public string TaxCategory
	    {
		    get
		    {
			    return this._taxCategory;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.TaxCategory);
				}
				this._taxCategory = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchDescription.
		/// </summary>
		/// <value>Propiedad BranchDescription.</value>
	    [
		DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BRANCH_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BranchDescription
	    {
		    get
		    {
			    return this._branchDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
				}
				this._branchDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentFrom.
		/// </summary>
		/// <value>Propiedad CurrentFrom.</value>
	    [
		DescriptionKey("CURRENT_FROM_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CURRENT_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime CurrentFrom
	    {
		    get
		    {
			    return this._currentFrom;
		    }
		    set
		    {
				this._currentFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Rate.
		/// </summary>
		/// <value>Propiedad Rate.</value>
	    [
		DescriptionKey("RATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Rate
	    {
		    get
		    {
			    return this._rate;
		    }
		    set
		    {
				this._rate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TaxRateId.
		/// </summary>
		/// <value>Propiedad TaxRateId.</value>
	    [
		DescriptionKey("TAX_RATE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TAX_RATE_ID", DbType=System.Data.DbType.String),
	    ]
        public int TaxRateId
	    {
		    get
		    {
			    return this._taxRateId;
		    }
		    set
		    {
				this._taxRateId = value;
			}
	    }

    }
}