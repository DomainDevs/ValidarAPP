/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.PrefixComponentCollection.dict v1.0
 * FileSize=8016 Header=270 CRC=1303203579
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PrefixComponentCollection.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PrefixComponentCollection.dict"),
    Serializable(),
    DescriptionKey("PREFIX_COMPONENT_COLLECTION_ENTITY"),
    TableMap(TableName = "PREFIX_COMPONENT_COLLECTION", Schema = "ACC"),
    ]
    public partial class PrefixComponentCollection :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PrefixComponentCollectionCode = "PrefixComponentCollectionCode";
			public static readonly string ComponentCollectionCode = "ComponentCollectionCode";
			public static readonly string LineBusinessCode = "LineBusinessCode";
			public static readonly string SubLineBusinessCode = "SubLineBusinessCode";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExchangeRate = "ExchangeRate";
			public static readonly string Amount = "Amount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="prefixComponentCollectionCode">Propiedad clave PrefixComponentCollectionCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int prefixComponentCollectionCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PrefixComponentCollectionCode, prefixComponentCollectionCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="prefixComponentCollectionCode">Propiedad clave PrefixComponentCollectionCode.</param>
		public static PrimaryKey CreatePrimaryKey(int prefixComponentCollectionCode)
	    {
			return InternalCreatePrimaryKey<PrefixComponentCollection>(prefixComponentCollectionCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ComponentCollectionCode.
		/// </summary>
        private int? _componentCollectionCode = null;
		/// <summary>
		/// Atributo para la propiedad LineBusinessCode.
		/// </summary>
        private int? _lineBusinessCode = null;
		/// <summary>
		/// Atributo para la propiedad SubLineBusinessCode.
		/// </summary>
        private int? _subLineBusinessCode = null;
		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal? _incomeAmount = null;
		/// <summary>
		/// Atributo para la propiedad ExchangeRate.
		/// </summary>
        private decimal? _exchangeRate = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="prefixComponentCollectionCode">PrefixComponentCollectionCode key property.</param>
	    public PrefixComponentCollection(int prefixComponentCollectionCode):
			this(PrefixComponentCollection.CreatePrimaryKey(prefixComponentCollectionCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PrefixComponentCollection(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixComponentCollectionCode.
		/// </summary>
		/// <value>Propiedad PrefixComponentCollectionCode.</value>
	    [
		DescriptionKey("PREFIX_COMPONENT_COLLECTION_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PREFIX_COMPONENT_COLLECTION_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixComponentCollectionCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PrefixComponentCollectionCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PrefixComponentCollectionCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ComponentCollectionCode.
		/// </summary>
		/// <value>Propiedad ComponentCollectionCode.</value>
	    [
		DescriptionKey("COMPONENT_COLLECTION_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMPONENT_COLLECTION_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ComponentCollectionCode
	    {
		    get
		    {
			    return this._componentCollectionCode;
		    }
		    set
		    {
				this._componentCollectionCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LineBusinessCode.
		/// </summary>
		/// <value>Propiedad LineBusinessCode.</value>
	    [
		DescriptionKey("LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LINE_BUSINESS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? LineBusinessCode
	    {
		    get
		    {
			    return this._lineBusinessCode;
		    }
		    set
		    {
				this._lineBusinessCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SubLineBusinessCode.
		/// </summary>
		/// <value>Propiedad SubLineBusinessCode.</value>
	    [
		DescriptionKey("SUB_LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SUB_LINE_BUSINESS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SubLineBusinessCode
	    {
		    get
		    {
			    return this._subLineBusinessCode;
		    }
		    set
		    {
				this._subLineBusinessCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INCOME_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExchangeRate.
		/// </summary>
		/// <value>Propiedad ExchangeRate.</value>
	    [
		DescriptionKey("EXCHANGE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCHANGE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ExchangeRate
	    {
		    get
		    {
			    return this._exchangeRate;
		    }
		    set
		    {
				this._exchangeRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

    }
}