/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.TransferPaymentOrder.dict v1.0
 * FileSize=6901 Header=264 CRC=208884200
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad TransferPaymentOrder.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.TransferPaymentOrder.dict"),
    Serializable(),
    DescriptionKey("TRANSFER_PAYMENT_ORDER_ENTITY"),
    TableMap(TableName = "TRANSFER_PAYMENT_ORDER", Schema = "ACC"),
    ]
    public partial class TransferPaymentOrder :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TransferPaymentOrderCode = "TransferPaymentOrderCode";
			public static readonly string AccountBankCode = "AccountBankCode";
			public static readonly string DeliveryDate = "DeliveryDate";
			public static readonly string Status = "Status";
			public static readonly string CancellationDate = "CancellationDate";
			public static readonly string User = "User";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="transferPaymentOrderCode">Propiedad clave TransferPaymentOrderCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int transferPaymentOrderCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TransferPaymentOrderCode, transferPaymentOrderCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="transferPaymentOrderCode">Propiedad clave TransferPaymentOrderCode.</param>
		public static PrimaryKey CreatePrimaryKey(int transferPaymentOrderCode)
	    {
			return InternalCreatePrimaryKey<TransferPaymentOrder>(transferPaymentOrderCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad AccountBankCode.
		/// </summary>
        private int? _accountBankCode = null;
		/// <summary>
		/// Atributo para la propiedad DeliveryDate.
		/// </summary>
        private DateTime? _deliveryDate = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad CancellationDate.
		/// </summary>
        private DateTime? _cancellationDate = null;
		/// <summary>
		/// Atributo para la propiedad User.
		/// </summary>
        private int? _user = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="transferPaymentOrderCode">TransferPaymentOrderCode key property.</param>
	    public TransferPaymentOrder(int transferPaymentOrderCode):
			this(TransferPaymentOrder.CreatePrimaryKey(transferPaymentOrderCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TransferPaymentOrder(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TransferPaymentOrderCode.
		/// </summary>
		/// <value>Propiedad TransferPaymentOrderCode.</value>
	    [
		DescriptionKey("TRANSFER_PAYMENT_ORDER_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="TRANSFER_PAYMENT_ORDER_CD", DbType=System.Data.DbType.String),
	    ]
        public int TransferPaymentOrderCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TransferPaymentOrderCode];
		    }
		    set
		    {
				this._primaryKey[Properties.TransferPaymentOrderCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountBankCode.
		/// </summary>
		/// <value>Propiedad AccountBankCode.</value>
	    [
		DescriptionKey("ACCOUNT_BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountBankCode
	    {
		    get
		    {
			    return this._accountBankCode;
		    }
		    set
		    {
				this._accountBankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeliveryDate.
		/// </summary>
		/// <value>Propiedad DeliveryDate.</value>
	    [
		DescriptionKey("DELIVERY_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DELIVERY_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DeliveryDate
	    {
		    get
		    {
			    return this._deliveryDate;
		    }
		    set
		    {
				this._deliveryDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CancellationDate.
		/// </summary>
		/// <value>Propiedad CancellationDate.</value>
	    [
		DescriptionKey("CANCELLATION_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CANCELLATION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CancellationDate
	    {
		    get
		    {
			    return this._cancellationDate;
		    }
		    set
		    {
				this._cancellationDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad User.
		/// </summary>
		/// <value>Propiedad User.</value>
	    [
		DescriptionKey("USER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER", DbType=System.Data.DbType.String),
	    ]
        public int? User
	    {
		    get
		    {
			    return this._user;
		    }
		    set
		    {
				this._user = value;
			}
	    }

    }
}