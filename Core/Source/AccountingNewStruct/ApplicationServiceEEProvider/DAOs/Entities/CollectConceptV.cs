/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.CollectConceptV.dict v1.0
 * FileSize=11940 Header=275 CRC=231571260
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CollectConceptV.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.CollectConceptV.dict"),
    Serializable(),
    DescriptionKey("COLLECT_CONCEPT_V_ENTITY"),
    TableMap(TableName="COLLECT_CONCEPT_V", Schema="ACC"),
    ]
    public partial class CollectConceptV :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CollectId = "CollectId";
			public static readonly string CollectDescription = "CollectDescription";
			public static readonly string CollectConceptDescription = "CollectConceptDescription";
			public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
			public static readonly string Amount = "Amount";
			public static readonly string Comments = "Comments";
			public static readonly string CollectControlCode = "CollectControlCode";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string Payer = "Payer";
			public static readonly string PayerDocumentNumber = "PayerDocumentNumber";
			public static readonly string AccountingDate = "AccountingDate";
			public static readonly string PaymentsTotal = "PaymentsTotal";
			public static readonly string BranchCode = "BranchCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="collectId">Propiedad clave CollectId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int collectId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CollectId, collectId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="collectId">Propiedad clave CollectId.</param>
		public static PrimaryKey CreatePrimaryKey(int collectId)
	    {
			return InternalCreatePrimaryKey<CollectConceptV>(collectId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CollectDescription.
		/// </summary>
        private string _collectDescription = null;
		/// <summary>
		/// Atributo para la propiedad CollectConceptDescription.
		/// </summary>
        private string _collectConceptDescription = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeCode.
		/// </summary>
        private int? _paymentMethodTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Comments.
		/// </summary>
        private string _comments = null;
		/// <summary>
		/// Atributo para la propiedad CollectControlCode.
		/// </summary>
        private int? _collectControlCode = null;
		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int? _individualId = null;
		/// <summary>
		/// Atributo para la propiedad Payer.
		/// </summary>
        private string _payer = null;
		/// <summary>
		/// Atributo para la propiedad PayerDocumentNumber.
		/// </summary>
        private string _payerDocumentNumber = null;
		/// <summary>
		/// Atributo para la propiedad AccountingDate.
		/// </summary>
        private DateTime? _accountingDate = null;
		/// <summary>
		/// Atributo para la propiedad PaymentsTotal.
		/// </summary>
        private decimal? _paymentsTotal = null;
		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int? _branchCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="collectId">CollectId key property.</param>
	    public CollectConceptV(int collectId):
			this(CollectConceptV.CreatePrimaryKey(collectId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CollectConceptV(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectId.
		/// </summary>
		/// <value>Propiedad CollectId.</value>
	    [
		DescriptionKey("COLLECT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COLLECT_ID", DbType=System.Data.DbType.String),
	    ]
        public int CollectId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CollectId];
		    }
		    set
		    {
				this._primaryKey[Properties.CollectId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectDescription.
		/// </summary>
		/// <value>Propiedad CollectDescription.</value>
	    [
		DescriptionKey("COLLECT_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CollectDescription
	    {
		    get
		    {
			    return this._collectDescription;
		    }
		    set
		    {
				this._collectDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectConceptDescription.
		/// </summary>
		/// <value>Propiedad CollectConceptDescription.</value>
	    [
		DescriptionKey("COLLECT_CONCEPT_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COLLECT_CONCEPT_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CollectConceptDescription
	    {
		    get
		    {
			    return this._collectConceptDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CollectConceptDescription);
				}
				this._collectConceptDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodTypeCode
	    {
		    get
		    {
			    return this._paymentMethodTypeCode;
		    }
		    set
		    {
				this._paymentMethodTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Comments.
		/// </summary>
		/// <value>Propiedad Comments.</value>
	    [
		DescriptionKey("COMMENTS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMENTS", DbType=System.Data.DbType.String),
	    ]
        public string Comments
	    {
		    get
		    {
			    return this._comments;
		    }
		    set
		    {
				this._comments = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CollectControlCode.
		/// </summary>
		/// <value>Propiedad CollectControlCode.</value>
	    [
		DescriptionKey("COLLECT_CONTROL_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COLLECT_CONTROL_CODE", DbType=System.Data.DbType.String),
	    ]
        public int? CollectControlCode
	    {
		    get
		    {
			    return this._collectControlCode;
		    }
		    set
		    {
				this._collectControlCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int? IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Payer.
		/// </summary>
		/// <value>Propiedad Payer.</value>
	    [
		DescriptionKey("PAYER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER", DbType=System.Data.DbType.String),
	    ]
        public string Payer
	    {
		    get
		    {
			    return this._payer;
		    }
		    set
		    {
				this._payer = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PayerDocumentNumber.
		/// </summary>
		/// <value>Propiedad PayerDocumentNumber.</value>
	    [
		DescriptionKey("PAYER_DOCUMENT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYER_DOCUMENT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string PayerDocumentNumber
	    {
		    get
		    {
			    return this._payerDocumentNumber;
		    }
		    set
		    {
				this._payerDocumentNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingDate.
		/// </summary>
		/// <value>Propiedad AccountingDate.</value>
	    [
		DescriptionKey("ACCOUNTING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? AccountingDate
	    {
		    get
		    {
			    return this._accountingDate;
		    }
		    set
		    {
				this._accountingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentsTotal.
		/// </summary>
		/// <value>Propiedad PaymentsTotal.</value>
	    [
		DescriptionKey("PAYMENTS_TOTAL_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENTS_TOTAL", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? PaymentsTotal
	    {
		    get
		    {
			    return this._paymentsTotal;
		    }
		    set
		    {
				this._paymentsTotal = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
		DescriptionKey("BRANCH_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BRANCH_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

    }
}