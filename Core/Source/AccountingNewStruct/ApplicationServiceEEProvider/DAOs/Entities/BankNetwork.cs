/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.BankNetwork.dict v1.0
 * FileSize=17445 Header=272 CRC=1317359891
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad BankNetwork.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.BankNetwork.dict"),
    Serializable(),
    DescriptionKey("BANK_NETWORK_ENTITY"),
    TableMap(TableName="BANK_NETWORK", Schema="ACC"),
    ]
    public partial class BankNetwork :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string BankNetworkId = "BankNetworkId";
			public static readonly string Description = "Description";
			public static readonly string Commission = "Commission";
			public static readonly string Tax = "Tax";
			public static readonly string MaximumCoupon = "MaximumCoupon";
			public static readonly string TypePercentageCommission = "TypePercentageCommission";
			public static readonly string CommissionRate = "CommissionRate";
			public static readonly string CommissionAmount = "CommissionAmount";
			public static readonly string Header = "Header";
			public static readonly string Summary = "Summary";
			public static readonly string HeaderFileFormat = "HeaderFileFormat";
			public static readonly string DetailFileFormat = "DetailFileFormat";
			public static readonly string FooterFileFormat = "FooterFileFormat";
			public static readonly string ReferencePayment = "ReferencePayment";
			public static readonly string GlobalReceipt = "GlobalReceipt";
			public static readonly string AccountingAccountCode = "AccountingAccountCode";
			public static readonly string AnalysisCode = "AnalysisCode";
			public static readonly string ConceptCode = "ConceptCode";
			public static readonly string KeyConceptCode = "KeyConceptCode";
			public static readonly string SeparatorLine = "SeparatorLine";
			public static readonly string Prenotification = "Prenotification";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="bankNetworkId">Propiedad clave BankNetworkId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int bankNetworkId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.BankNetworkId, bankNetworkId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="bankNetworkId">Propiedad clave BankNetworkId.</param>
		public static PrimaryKey CreatePrimaryKey(int bankNetworkId)
	    {
			return InternalCreatePrimaryKey<BankNetwork>(bankNetworkId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad Commission.
		/// </summary>
        private bool? _commission = null;
		/// <summary>
		/// Atributo para la propiedad Tax.
		/// </summary>
        private bool? _tax = null;
		/// <summary>
		/// Atributo para la propiedad MaximumCoupon.
		/// </summary>
        private int? _maximumCoupon = null;
		/// <summary>
		/// Atributo para la propiedad TypePercentageCommission.
		/// </summary>
        private int? _typePercentageCommission = null;
		/// <summary>
		/// Atributo para la propiedad CommissionRate.
		/// </summary>
        private decimal? _commissionRate = null;
		/// <summary>
		/// Atributo para la propiedad CommissionAmount.
		/// </summary>
        private decimal? _commissionAmount = null;
		/// <summary>
		/// Atributo para la propiedad Header.
		/// </summary>
        private bool? _header = null;
		/// <summary>
		/// Atributo para la propiedad Summary.
		/// </summary>
        private bool? _summary = null;
		/// <summary>
		/// Atributo para la propiedad HeaderFileFormat.
		/// </summary>
        private string _headerFileFormat = null;
		/// <summary>
		/// Atributo para la propiedad DetailFileFormat.
		/// </summary>
        private string _detailFileFormat = null;
		/// <summary>
		/// Atributo para la propiedad FooterFileFormat.
		/// </summary>
        private string _footerFileFormat = null;
		/// <summary>
		/// Atributo para la propiedad ReferencePayment.
		/// </summary>
        private bool? _referencePayment = null;
		/// <summary>
		/// Atributo para la propiedad GlobalReceipt.
		/// </summary>
        private bool? _globalReceipt = null;
		/// <summary>
		/// Atributo para la propiedad AccountingAccountCode.
		/// </summary>
        private int? _accountingAccountCode = null;
		/// <summary>
		/// Atributo para la propiedad AnalysisCode.
		/// </summary>
        private int? _analysisCode = null;
		/// <summary>
		/// Atributo para la propiedad ConceptCode.
		/// </summary>
        private int? _conceptCode = null;
		/// <summary>
		/// Atributo para la propiedad KeyConceptCode.
		/// </summary>
        private int? _keyConceptCode = null;
		/// <summary>
		/// Atributo para la propiedad SeparatorLine.
		/// </summary>
        private bool? _separatorLine = null;
		/// <summary>
		/// Atributo para la propiedad Prenotification.
		/// </summary>
        private bool? _prenotification = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="bankNetworkId">BankNetworkId key property.</param>
	    public BankNetwork(int bankNetworkId):
			this(BankNetwork.CreatePrimaryKey(bankNetworkId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public BankNetwork(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankNetworkId.
		/// </summary>
		/// <value>Propiedad BankNetworkId.</value>
	    [
		DescriptionKey("BANK_NETWORK_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BANK_NETWORK_ID", DbType=System.Data.DbType.String),
	    ]
        public int BankNetworkId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BankNetworkId];
		    }
		    set
		    {
				this._primaryKey[Properties.BankNetworkId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Commission.
		/// </summary>
		/// <value>Propiedad Commission.</value>
	    [
		DescriptionKey("COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION", DbType=System.Data.DbType.String),
	    ]
        public bool? Commission
	    {
		    get
		    {
			    return this._commission;
		    }
		    set
		    {
				this._commission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Tax.
		/// </summary>
		/// <value>Propiedad Tax.</value>
	    [
		DescriptionKey("TAX_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TAX", DbType=System.Data.DbType.String),
	    ]
        public bool? Tax
	    {
		    get
		    {
			    return this._tax;
		    }
		    set
		    {
				this._tax = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MaximumCoupon.
		/// </summary>
		/// <value>Propiedad MaximumCoupon.</value>
	    [
		DescriptionKey("MAXIMUM_COUPON_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="MAXIMUM_COUPON", DbType=System.Data.DbType.String),
	    ]
        public int? MaximumCoupon
	    {
		    get
		    {
			    return this._maximumCoupon;
		    }
		    set
		    {
				this._maximumCoupon = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TypePercentageCommission.
		/// </summary>
		/// <value>Propiedad TypePercentageCommission.</value>
	    [
		DescriptionKey("TYPE_PERCENTAGE_COMMISSION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TYPE_PERCENTAGE_COMMISSION", DbType=System.Data.DbType.String),
	    ]
        public int? TypePercentageCommission
	    {
		    get
		    {
			    return this._typePercentageCommission;
		    }
		    set
		    {
				this._typePercentageCommission = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionRate.
		/// </summary>
		/// <value>Propiedad CommissionRate.</value>
	    [
		DescriptionKey("COMMISSION_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionRate
	    {
		    get
		    {
			    return this._commissionRate;
		    }
		    set
		    {
				this._commissionRate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CommissionAmount.
		/// </summary>
		/// <value>Propiedad CommissionAmount.</value>
	    [
		DescriptionKey("COMMISSION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COMMISSION_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CommissionAmount
	    {
		    get
		    {
			    return this._commissionAmount;
		    }
		    set
		    {
				this._commissionAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Header.
		/// </summary>
		/// <value>Propiedad Header.</value>
	    [
		DescriptionKey("HEADER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="HEADER", DbType=System.Data.DbType.String),
	    ]
        public bool? Header
	    {
		    get
		    {
			    return this._header;
		    }
		    set
		    {
				this._header = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Summary.
		/// </summary>
		/// <value>Propiedad Summary.</value>
	    [
		DescriptionKey("SUMMARY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SUMMARY", DbType=System.Data.DbType.String),
	    ]
        public bool? Summary
	    {
		    get
		    {
			    return this._summary;
		    }
		    set
		    {
				this._summary = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad HeaderFileFormat.
		/// </summary>
		/// <value>Propiedad HeaderFileFormat.</value>
	    [
		DescriptionKey("HEADER_FILE_FORMAT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="HEADER_FILE_FORMAT", DbType=System.Data.DbType.String),
	    ]
        public string HeaderFileFormat
	    {
		    get
		    {
			    return this._headerFileFormat;
		    }
		    set
		    {
				this._headerFileFormat = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DetailFileFormat.
		/// </summary>
		/// <value>Propiedad DetailFileFormat.</value>
	    [
		DescriptionKey("DETAIL_FILE_FORMAT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DETAIL_FILE_FORMAT", DbType=System.Data.DbType.String),
	    ]
        public string DetailFileFormat
	    {
		    get
		    {
			    return this._detailFileFormat;
		    }
		    set
		    {
				this._detailFileFormat = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FooterFileFormat.
		/// </summary>
		/// <value>Propiedad FooterFileFormat.</value>
	    [
		DescriptionKey("FOOTER_FILE_FORMAT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FOOTER_FILE_FORMAT", DbType=System.Data.DbType.String),
	    ]
        public string FooterFileFormat
	    {
		    get
		    {
			    return this._footerFileFormat;
		    }
		    set
		    {
				this._footerFileFormat = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReferencePayment.
		/// </summary>
		/// <value>Propiedad ReferencePayment.</value>
	    [
		DescriptionKey("REFERENCE_PAYMENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REFERENCE_PAYMENT", DbType=System.Data.DbType.String),
	    ]
        public bool? ReferencePayment
	    {
		    get
		    {
			    return this._referencePayment;
		    }
		    set
		    {
				this._referencePayment = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad GlobalReceipt.
		/// </summary>
		/// <value>Propiedad GlobalReceipt.</value>
	    [
		DescriptionKey("GLOBAL_RECEIPT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="GLOBAL_RECEIPT", DbType=System.Data.DbType.String),
	    ]
        public bool? GlobalReceipt
	    {
		    get
		    {
			    return this._globalReceipt;
		    }
		    set
		    {
				this._globalReceipt = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingAccountCode.
		/// </summary>
		/// <value>Propiedad AccountingAccountCode.</value>
	    [
		DescriptionKey("ACCOUNTING_ACCOUNT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_ACCOUNT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingAccountCode
	    {
		    get
		    {
			    return this._accountingAccountCode;
		    }
		    set
		    {
				this._accountingAccountCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnalysisCode.
		/// </summary>
		/// <value>Propiedad AnalysisCode.</value>
	    [
		DescriptionKey("ANALYSIS_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ANALYSIS_CD", DbType=System.Data.DbType.String),
	    ]
        public int? AnalysisCode
	    {
		    get
		    {
			    return this._analysisCode;
		    }
		    set
		    {
				this._analysisCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ConceptCode.
		/// </summary>
		/// <value>Propiedad ConceptCode.</value>
	    [
		DescriptionKey("CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ConceptCode
	    {
		    get
		    {
			    return this._conceptCode;
		    }
		    set
		    {
				this._conceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad KeyConceptCode.
		/// </summary>
		/// <value>Propiedad KeyConceptCode.</value>
	    [
		DescriptionKey("KEY_CONCEPT_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="KEY_CONCEPT_CD", DbType=System.Data.DbType.String),
	    ]
        public int? KeyConceptCode
	    {
		    get
		    {
			    return this._keyConceptCode;
		    }
		    set
		    {
				this._keyConceptCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SeparatorLine.
		/// </summary>
		/// <value>Propiedad SeparatorLine.</value>
	    [
		DescriptionKey("SEPARATOR_LINE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SEPARATOR_LINE", DbType=System.Data.DbType.String),
	    ]
        public bool? SeparatorLine
	    {
		    get
		    {
			    return this._separatorLine;
		    }
		    set
		    {
				this._separatorLine = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Prenotification.
		/// </summary>
		/// <value>Propiedad Prenotification.</value>
	    [
		DescriptionKey("PRENOTIFICATION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PRENOTIFICATION", DbType=System.Data.DbType.String),
	    ]
        public bool? Prenotification
	    {
		    get
		    {
			    return this._prenotification;
		    }
		    set
		    {
				this._prenotification = value;
			}
	    }

    }
}