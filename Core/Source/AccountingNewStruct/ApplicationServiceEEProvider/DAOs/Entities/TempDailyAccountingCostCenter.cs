/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.TempDailyAccountingCostCenter.dict v1.0
 * FileSize=5997 Header=289 CRC=1385483073
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad TempDailyAccountingCostCenter.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.TempDailyAccountingCostCenter.dict"),
    Serializable(),
    DescriptionKey("TEMP_DAILY_ACCOUNTING_COST_CENTER_ENTITY"),
    TableMap(TableName="TEMP_DAILY_ACCOUNTING_COST_CENTER", Schema="ACC"),
    ]
    public partial class TempDailyAccountingCostCenter :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string TempDailyAccountingCostCenterId = "TempDailyAccountingCostCenterId";
			public static readonly string TempDailyAccountingTransCode = "TempDailyAccountingTransCode";
			public static readonly string CostCenterCode = "CostCenterCode";
			public static readonly string Percentage = "Percentage";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="tempDailyAccountingCostCenterId">Propiedad clave TempDailyAccountingCostCenterId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int tempDailyAccountingCostCenterId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.TempDailyAccountingCostCenterId, tempDailyAccountingCostCenterId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="tempDailyAccountingCostCenterId">Propiedad clave TempDailyAccountingCostCenterId.</param>
		public static PrimaryKey CreatePrimaryKey(int tempDailyAccountingCostCenterId)
	    {
			return InternalCreatePrimaryKey<TempDailyAccountingCostCenter>(tempDailyAccountingCostCenterId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad TempDailyAccountingTransCode.
		/// </summary>
        private int _tempDailyAccountingTransCode;
		/// <summary>
		/// Atributo para la propiedad CostCenterCode.
		/// </summary>
        private int _costCenterCode;
		/// <summary>
		/// Atributo para la propiedad Percentage.
		/// </summary>
        private decimal _percentage;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="tempDailyAccountingCostCenterId">TempDailyAccountingCostCenterId key property.</param>
	    public TempDailyAccountingCostCenter(int tempDailyAccountingCostCenterId):
			this(TempDailyAccountingCostCenter.CreatePrimaryKey(tempDailyAccountingCostCenterId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public TempDailyAccountingCostCenter(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempDailyAccountingCostCenterId.
		/// </summary>
		/// <value>Propiedad TempDailyAccountingCostCenterId.</value>
	    [
		DescriptionKey("TEMP_DAILY_ACCOUNTING_COST_CENTER_ID_PROPERTY"),
		PersistentProperty(IsKey = true, DataName = "TempDailyAccountingCostCenterId"),
        ColumnMap(ColumnName="TEMP_DAILY_ACCOUNTING_COST_CENTER_ID", DbType=System.Data.DbType.String),
	    ]
        public int TempDailyAccountingCostCenterId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.TempDailyAccountingCostCenterId];
		    }
		    set
		    {
				this._primaryKey[Properties.TempDailyAccountingCostCenterId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TempDailyAccountingTransCode.
		/// </summary>
		/// <value>Propiedad TempDailyAccountingTransCode.</value>
	    [
		DescriptionKey("TEMP_DAILY_ACCOUNTING_TRANS_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TEMP_DAILY_ACCOUNTING_TRANS_CD", DbType=System.Data.DbType.String),
	    ]
        public int TempDailyAccountingTransCode
	    {
		    get
		    {
			    return this._tempDailyAccountingTransCode;
		    }
		    set
		    {
				this._tempDailyAccountingTransCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CostCenterCode.
		/// </summary>
		/// <value>Propiedad CostCenterCode.</value>
	    [
		DescriptionKey("COST_CENTER_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COST_CENTER_CD", DbType=System.Data.DbType.String),
	    ]
        public int CostCenterCode
	    {
		    get
		    {
			    return this._costCenterCode;
		    }
		    set
		    {
				this._costCenterCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Percentage.
		/// </summary>
		/// <value>Propiedad Percentage.</value>
	    [
		DescriptionKey("PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PERCENTAGE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Percentage
	    {
		    get
		    {
			    return this._percentage;
		    }
		    set
		    {
				this._percentage = value;
			}
	    }

    }
}