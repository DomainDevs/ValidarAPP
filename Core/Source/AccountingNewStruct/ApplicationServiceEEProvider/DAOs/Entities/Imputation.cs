/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.EEProvider.Imputation.dict v1.0
 * FileSize=7542 Header=270 CRC=2573464321
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad Imputation.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.Imputation.dict"),
    Serializable(),
    DescriptionKey("IMPUTATION_ENTITY"),
    TableMap(TableName="IMPUTATION", Schema="ACC"),
    ]
    public partial class Imputation :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ImputationCode = "ImputationCode";
			public static readonly string ImputationTypeCode = "ImputationTypeCode";
			public static readonly string SourceCode = "SourceCode";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string UserId = "UserId";
			public static readonly string AccountingTransaction = "AccountingTransaction";
			public static readonly string TechnicalTransaction = "TechnicalTransaction";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="imputationCode">Propiedad clave ImputationCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int imputationCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ImputationCode, imputationCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="imputationCode">Propiedad clave ImputationCode.</param>
		public static PrimaryKey CreatePrimaryKey(int imputationCode)
	    {
			return InternalCreatePrimaryKey<Imputation>(imputationCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad ImputationTypeCode.
		/// </summary>
        private int? _imputationTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad SourceCode.
		/// </summary>
        private int? _sourceCode = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad AccountingTransaction.
		/// </summary>
        private int? _accountingTransaction = null;
		/// <summary>
		/// Atributo para la propiedad TechnicalTransaction.
		/// </summary>
        private int? _technicalTransaction = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="imputationCode">ImputationCode key property.</param>
	    public Imputation(int imputationCode):
			this(Imputation.CreatePrimaryKey(imputationCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public Imputation(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationCode.
		/// </summary>
		/// <value>Propiedad ImputationCode.</value>
	    [
		DescriptionKey("IMPUTATION_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="IMPUTATION_CD", DbType=System.Data.DbType.String),
	    ]
        public int ImputationCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ImputationCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ImputationCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ImputationTypeCode.
		/// </summary>
		/// <value>Propiedad ImputationTypeCode.</value>
	    [
		DescriptionKey("IMPUTATION_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IMPUTATION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ImputationTypeCode
	    {
		    get
		    {
			    return this._imputationTypeCode;
		    }
		    set
		    {
				this._imputationTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SourceCode.
		/// </summary>
		/// <value>Propiedad SourceCode.</value>
	    [
		DescriptionKey("SOURCE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SOURCE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? SourceCode
	    {
		    get
		    {
			    return this._sourceCode;
		    }
		    set
		    {
				this._sourceCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountingTransaction.
		/// </summary>
		/// <value>Propiedad AccountingTransaction.</value>
	    [
		DescriptionKey("ACCOUNTING_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNTING_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? AccountingTransaction
	    {
		    get
		    {
			    return this._accountingTransaction;
		    }
		    set
		    {
				this._accountingTransaction = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TechnicalTransaction.
		/// </summary>
		/// <value>Propiedad TechnicalTransaction.</value>
	    [
		DescriptionKey("TECHNICAL_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TECHNICAL_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public int? TechnicalTransaction
	    {
		    get
		    {
			    return this._technicalTransaction;
		    }
		    set
		    {
				this._technicalTransaction = value;
			}
	    }

    }
}