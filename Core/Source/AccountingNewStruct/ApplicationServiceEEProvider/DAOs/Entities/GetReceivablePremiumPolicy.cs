/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.GetReceivablePremiumPolicy.dict v1.0
 * FileSize=18696 Header=272 CRC=3506467066
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad GetReceivablePremiumPolicy.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.GetReceivablePremiumPolicy.dict"),
    Serializable(),
    DescriptionKey("GET_RECEIVABLE_PREMIUM_POLICY_ENTITY"),
    TableMap(TableName = "GET_RECEIVABLE_PREMIUM_POLICY", Schema = "ACC"),
    ]
    public partial class GetReceivablePremiumPolicy :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BranchCode = "BranchCode";
            public static readonly string BranchDescription = "BranchDescription";
            public static readonly string PrefixCode = "PrefixCode";
            public static readonly string PrefixDescription = "PrefixDescription";
            public static readonly string PolicyId = "PolicyId";
            public static readonly string PolicyDocumentNumber = "PolicyDocumentNumber";
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string EndorsementDocumentNumber = "EndorsementDocumentNumber";
            public static readonly string CurrencyCode = "CurrencyCode";
            public static readonly string CurrencyDescription = "CurrencyDescription";
            public static readonly string PaymentNum = "PaymentNum";
            public static readonly string PaymentAmount = "PaymentAmount";
            public static readonly string PaymentExpirationDate = "PaymentExpirationDate";
            public static readonly string InsuredIndividualId = "InsuredIndividualId";
            public static readonly string InsuredDocumentNumber = "InsuredDocumentNumber";
            public static readonly string InsuredName = "InsuredName";
            public static readonly string PolicyAgentIndividualId = "PolicyAgentIndividualId";
            public static readonly string PolicyAgentName = "PolicyAgentName";
            public static readonly string StandardCommissionPercentage = "StandardCommissionPercentage";
            public static readonly string AgentComission = "AgentComission";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="paymentNum">Propiedad clave PaymentNum.</param>
        /// <param name="policyAgentIndividualId">Propiedad clave PolicyAgentIndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int policyId, int endorsementId, int paymentNum, int policyAgentIndividualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PolicyId, policyId);
            keys.Add(Properties.EndorsementId, endorsementId);
            keys.Add(Properties.PaymentNum, paymentNum);
            keys.Add(Properties.PolicyAgentIndividualId, policyAgentIndividualId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <param name="paymentNum">Propiedad clave PaymentNum.</param>
        /// <param name="policyAgentIndividualId">Propiedad clave PolicyAgentIndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int policyId, int endorsementId, int paymentNum, int policyAgentIndividualId)
        {
            return InternalCreatePrimaryKey<GetReceivablePremiumPolicy>(policyId, endorsementId, paymentNum, policyAgentIndividualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad BranchCode.
        /// </summary>
        private int _branchCode;
        /// <summary>
        /// Atributo para la propiedad BranchDescription.
        /// </summary>
        private string _branchDescription = null;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int _prefixCode;
        /// <summary>
        /// Atributo para la propiedad PrefixDescription.
        /// </summary>
        private string _prefixDescription = null;
        /// <summary>
        /// Atributo para la propiedad PolicyDocumentNumber.
        /// </summary>
        private decimal _policyDocumentNumber;
        /// <summary>
        /// Atributo para la propiedad EndorsementDocumentNumber.
        /// </summary>
        private int _endorsementDocumentNumber;
        /// <summary>
        /// Atributo para la propiedad CurrencyCode.
        /// </summary>
        private int _currencyCode;
        /// <summary>
        /// Atributo para la propiedad CurrencyDescription.
        /// </summary>
        private string _currencyDescription = null;
        /// <summary>
        /// Atributo para la propiedad PaymentAmount.
        /// </summary>
        private decimal? _paymentAmount = null;
        /// <summary>
        /// Atributo para la propiedad PaymentExpirationDate.
        /// </summary>
        private DateTime _paymentExpirationDate;
        /// <summary>
        /// Atributo para la propiedad InsuredIndividualId.
        /// </summary>
        private int? _insuredIndividualId = null;
        /// <summary>
        /// Atributo para la propiedad InsuredDocumentNumber.
        /// </summary>
        private string _insuredDocumentNumber = null;
        /// <summary>
        /// Atributo para la propiedad InsuredName.
        /// </summary>
        private string _insuredName = null;
        /// <summary>
        /// Atributo para la propiedad PolicyAgentName.
        /// </summary>
        private string _policyAgentName = null;
        /// <summary>
        /// Atributo para la propiedad StandardCommissionPercentage.
        /// </summary>
        private decimal _standardCommissionPercentage;
        /// <summary>
        /// Atributo para la propiedad AgentComission.
        /// </summary>
        private decimal? _agentComission = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="policyId">PolicyId key property.</param>
        /// <param name="endorsementId">EndorsementId key property.</param>
        /// <param name="paymentNum">PaymentNum key property.</param>
        /// <param name="policyAgentIndividualId">PolicyAgentIndividualId key property.</param>
        public GetReceivablePremiumPolicy(int policyId, int endorsementId, int paymentNum, int policyAgentIndividualId) :
            this(GetReceivablePremiumPolicy.CreatePrimaryKey(policyId, endorsementId, paymentNum, policyAgentIndividualId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public GetReceivablePremiumPolicy(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchCode.
        /// </summary>
        /// <value>Propiedad BranchCode.</value>
        [
        DescriptionKey("BRANCH_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_CD", DbType = System.Data.DbType.String),
        ]
        public int BranchCode
        {
            get
            {
                return this._branchCode;
            }
            set
            {
                this._branchCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchDescription.
        /// </summary>
        /// <value>Propiedad BranchDescription.</value>
        [
        DescriptionKey("BRANCH_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BRANCH_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string BranchDescription
        {
            get
            {
                return this._branchDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.BranchDescription);
                }
                this._branchDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixDescription.
        /// </summary>
        /// <value>Propiedad PrefixDescription.</value>
        [
        DescriptionKey("PREFIX_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PREFIX_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string PrefixDescription
        {
            get
            {
                return this._prefixDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PrefixDescription);
                }
                this._prefixDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyId];
            }
            set
            {
                this._primaryKey[Properties.PolicyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyDocumentNumber.
        /// </summary>
        /// <value>Propiedad PolicyDocumentNumber.</value>
        [
        DescriptionKey("POLICY_DOCUMENT_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "POLICY_DOCUMENT_NUMBER", DbType = System.Data.DbType.Decimal),
        ]
        public decimal PolicyDocumentNumber
        {
            get
            {
                return this._policyDocumentNumber;
            }
            set
            {
                this._policyDocumentNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementDocumentNumber.
        /// </summary>
        /// <value>Propiedad EndorsementDocumentNumber.</value>
        [
        DescriptionKey("ENDORSEMENT_DOCUMENT_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENDORSEMENT_DOCUMENT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public int EndorsementDocumentNumber
        {
            get
            {
                return this._endorsementDocumentNumber;
            }
            set
            {
                this._endorsementDocumentNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyCode.
        /// </summary>
        /// <value>Propiedad CurrencyCode.</value>
        [
        DescriptionKey("CURRENCY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_CD", DbType = System.Data.DbType.String),
        ]
        public int CurrencyCode
        {
            get
            {
                return this._currencyCode;
            }
            set
            {
                this._currencyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrencyDescription.
        /// </summary>
        /// <value>Propiedad CurrencyDescription.</value>
        [
        DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "CURRENCY_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string CurrencyDescription
        {
            get
            {
                return this._currencyDescription;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.CurrencyDescription);
                }
                this._currencyDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentNum.
        /// </summary>
        /// <value>Propiedad PaymentNum.</value>
        [
        DescriptionKey("PAYMENT_NUM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "PAYMENT_NUM", DbType = System.Data.DbType.String),
        ]
        public int PaymentNum
        {
            get
            {
                return (int)this._primaryKey[Properties.PaymentNum];
            }
            set
            {
                this._primaryKey[Properties.PaymentNum] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentAmount.
        /// </summary>
        /// <value>Propiedad PaymentAmount.</value>
        [
        DescriptionKey("PAYMENT_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PAYMENT_AMOUNT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? PaymentAmount
        {
            get
            {
                return this._paymentAmount;
            }
            set
            {
                this._paymentAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PaymentExpirationDate.
        /// </summary>
        /// <value>Propiedad PaymentExpirationDate.</value>
        [
        DescriptionKey("PAYMENT_EXPIRATION_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PAYMENT_EXPIRATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime PaymentExpirationDate
        {
            get
            {
                return this._paymentExpirationDate;
            }
            set
            {
                this._paymentExpirationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredIndividualId.
        /// </summary>
        /// <value>Propiedad InsuredIndividualId.</value>
        [
        DescriptionKey("INSURED_INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INSURED_INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int? InsuredIndividualId
        {
            get
            {
                return this._insuredIndividualId;
            }
            set
            {
                this._insuredIndividualId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredDocumentNumber.
        /// </summary>
        /// <value>Propiedad InsuredDocumentNumber.</value>
        [
        DescriptionKey("INSURED_DOCUMENT_NUMBER_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "INSURED_DOCUMENT_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string InsuredDocumentNumber
        {
            get
            {
                return this._insuredDocumentNumber;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.InsuredDocumentNumber);
                }
                this._insuredDocumentNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad InsuredName.
        /// </summary>
        /// <value>Propiedad InsuredName.</value>
        [
        DescriptionKey("INSURED_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INSURED_NAME", DbType = System.Data.DbType.String),
        ]
        public string InsuredName
        {
            get
            {
                return this._insuredName;
            }
            set
            {
                this._insuredName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyAgentIndividualId.
        /// </summary>
        /// <value>Propiedad PolicyAgentIndividualId.</value>
        [
        DescriptionKey("POLICY_AGENT_INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_AGENT_INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyAgentIndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyAgentIndividualId];
            }
            set
            {
                this._primaryKey[Properties.PolicyAgentIndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyAgentName.
        /// </summary>
        /// <value>Propiedad PolicyAgentName.</value>
        [
        DescriptionKey("POLICY_AGENT_NAME_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_AGENT_NAME", DbType = System.Data.DbType.String),
        ]
        public string PolicyAgentName
        {
            get
            {
                return this._policyAgentName;
            }
            set
            {
                this._policyAgentName = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StandardCommissionPercentage.
        /// </summary>
        /// <value>Propiedad StandardCommissionPercentage.</value>
        [
        DescriptionKey("STANDARD_COMMISSION_PERCENTAGE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "STANDARD_COMMISSION_PERCENTAGE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal StandardCommissionPercentage
        {
            get
            {
                return this._standardCommissionPercentage;
            }
            set
            {
                this._standardCommissionPercentage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AgentComission.
        /// </summary>
        /// <value>Propiedad AgentComission.</value>
        [
        DescriptionKey("AGENT_COMISSION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AGENT_COMISSION", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? AgentComission
        {
            get
            {
                return this._agentComission;
            }
            set
            {
                this._agentComission = value;
            }
        }

    }
}