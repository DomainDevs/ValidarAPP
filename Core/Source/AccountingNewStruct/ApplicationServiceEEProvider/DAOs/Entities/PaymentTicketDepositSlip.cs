/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.AccountingServices.GetDepositSlipSearch.dict v1.0
 * FileSize=12800 Header=266 CRC=1720831972
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Core.Application.AccountingServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad PaymentTicketDepositSlip View.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.AccountingServices.EEProvider.PaymentTicketDepositSlip.dict"),
    Serializable(),
    DescriptionKey("GET_DEPOSIT_SLIP_SEARCH_ENTITY"),
    TableMap(TableName = "GET_DEPOSIT_SLIP_SEARCH", Schema = "ACC"),
    ]
    public partial class PaymentTicketDepositSlip :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PaymentTicketCode = "PaymentTicketCode";
			public static readonly string BankCode = "BankCode";
			public static readonly string BankDescription = "BankDescription";
			public static readonly string RegisterDate = "RegisterDate";
			public static readonly string AccountNumber = "AccountNumber";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string CurrencyDescription = "CurrencyDescription";
			public static readonly string CashAmount = "CashAmount";
			public static readonly string Amount = "Amount";
			public static readonly string Status = "Status";
			public static readonly string UserId = "UserId";
			public static readonly string AccountName = "AccountName";
			public static readonly string PaymentBallotNumber = "PaymentBallotNumber";
			public static readonly string DepositDate = "DepositDate";
			public static readonly string PaymentMethodTypeCode = "PaymentMethodTypeCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<PaymentTicketDepositSlip>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PaymentTicketCode.
		/// </summary>
        private int _paymentTicketCode;
		/// <summary>
		/// Atributo para la propiedad BankCode.
		/// </summary>
        private int? _bankCode = null;
		/// <summary>
		/// Atributo para la propiedad BankDescription.
		/// </summary>
        private string _bankDescription = null;
		/// <summary>
		/// Atributo para la propiedad RegisterDate.
		/// </summary>
        private DateTime? _registerDate = null;
		/// <summary>
		/// Atributo para la propiedad AccountNumber.
		/// </summary>
        private string _accountNumber = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyDescription.
		/// </summary>
        private string _currencyDescription = null;
		/// <summary>
		/// Atributo para la propiedad CashAmount.
		/// </summary>
        private decimal? _cashAmount = null;
		/// <summary>
		/// Atributo para la propiedad Amount.
		/// </summary>
        private decimal? _amount = null;
		/// <summary>
		/// Atributo para la propiedad Status.
		/// </summary>
        private int? _status = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int? _userId = null;
		/// <summary>
		/// Atributo para la propiedad AccountName.
		/// </summary>
        private string _accountName = null;
		/// <summary>
		/// Atributo para la propiedad PaymentBallotNumber.
		/// </summary>
        private string _paymentBallotNumber = null;
		/// <summary>
		/// Atributo para la propiedad DepositDate.
		/// </summary>
        private DateTime? _depositDate = null;
		/// <summary>
		/// Atributo para la propiedad PaymentMethodTypeCode.
		/// </summary>
        private int? _paymentMethodTypeCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public PaymentTicketDepositSlip():
			this(PaymentTicketDepositSlip.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PaymentTicketDepositSlip(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentTicketCode.
		/// </summary>
		/// <value>Propiedad PaymentTicketCode.</value>
	    [
		DescriptionKey("PAYMENT_TICKET_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PAYMENT_TICKET_CD", DbType=System.Data.DbType.String),
	    ]
        public int PaymentTicketCode
	    {
		    get
		    {
			    return this._paymentTicketCode;
		    }
		    set
		    {
				this._paymentTicketCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankCode.
		/// </summary>
		/// <value>Propiedad BankCode.</value>
	    [
		DescriptionKey("BANK_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_CD", DbType=System.Data.DbType.String),
	    ]
        public int? BankCode
	    {
		    get
		    {
			    return this._bankCode;
		    }
		    set
		    {
				this._bankCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BankDescription.
		/// </summary>
		/// <value>Propiedad BankDescription.</value>
	    [
		DescriptionKey("BANK_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BANK_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string BankDescription
	    {
		    get
		    {
			    return this._bankDescription;
		    }
		    set
		    {
				this._bankDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RegisterDate.
		/// </summary>
		/// <value>Propiedad RegisterDate.</value>
	    [
		DescriptionKey("REGISTER_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="REGISTER_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? RegisterDate
	    {
		    get
		    {
			    return this._registerDate;
		    }
		    set
		    {
				this._registerDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountNumber.
		/// </summary>
		/// <value>Propiedad AccountNumber.</value>
	    [
		DescriptionKey("ACCOUNT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string AccountNumber
	    {
		    get
		    {
			    return this._accountNumber;
		    }
		    set
		    {
				this._accountNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyDescription.
		/// </summary>
		/// <value>Propiedad CurrencyDescription.</value>
	    [
		DescriptionKey("CURRENCY_DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CurrencyDescription
	    {
		    get
		    {
			    return this._currencyDescription;
		    }
		    set
		    {
				this._currencyDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CashAmount.
		/// </summary>
		/// <value>Propiedad CashAmount.</value>
	    [
		DescriptionKey("CASH_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CASH_AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? CashAmount
	    {
		    get
		    {
			    return this._cashAmount;
		    }
		    set
		    {
				this._cashAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Amount.
		/// </summary>
		/// <value>Propiedad Amount.</value>
	    [
		DescriptionKey("AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AMOUNT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? Amount
	    {
		    get
		    {
			    return this._amount;
		    }
		    set
		    {
				this._amount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Status.
		/// </summary>
		/// <value>Propiedad Status.</value>
	    [
		DescriptionKey("STATUS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATUS", DbType=System.Data.DbType.String),
	    ]
        public int? Status
	    {
		    get
		    {
			    return this._status;
		    }
		    set
		    {
				this._status = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int? UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AccountName.
		/// </summary>
		/// <value>Propiedad AccountName.</value>
	    [
		DescriptionKey("ACCOUNT_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ACCOUNT_NAME", DbType=System.Data.DbType.String),
	    ]
        public string AccountName
	    {
		    get
		    {
			    return this._accountName;
		    }
		    set
		    {
				this._accountName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentBallotNumber.
		/// </summary>
		/// <value>Propiedad PaymentBallotNumber.</value>
	    [
		DescriptionKey("PAYMENT_BALLOT_NUMBER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_BALLOT_NUMBER", DbType=System.Data.DbType.String),
	    ]
        public string PaymentBallotNumber
	    {
		    get
		    {
			    return this._paymentBallotNumber;
		    }
		    set
		    {
				this._paymentBallotNumber = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DepositDate.
		/// </summary>
		/// <value>Propiedad DepositDate.</value>
	    [
		DescriptionKey("DEPOSIT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DEPOSIT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DepositDate
	    {
		    get
		    {
			    return this._depositDate;
		    }
		    set
		    {
				this._depositDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PaymentMethodTypeCode.
		/// </summary>
		/// <value>Propiedad PaymentMethodTypeCode.</value>
	    [
		DescriptionKey("PAYMENT_METHOD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PAYMENT_METHOD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? PaymentMethodTypeCode
	    {
		    get
		    {
			    return this._paymentMethodTypeCode;
		    }
		    set
		    {
				this._paymentMethodTypeCode = value;
			}
	    }

    }
}