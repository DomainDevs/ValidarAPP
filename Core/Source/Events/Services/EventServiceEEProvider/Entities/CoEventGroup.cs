/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.EventsServices.EEProvider.CoEventGroup.dict v1.0
 * FileSize=8237 Header=269 CRC=49429321
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.EventsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CoEventGroup.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.EventsServices.EEProvider.CoEventGroup.dict"),
    Serializable(),
    DescriptionKey("CO_EVENT_GROUP_ENTITY"),
    TableMap(TableName = "CO_EVENT_GROUP", Schema = "EVE"),
    ]
    public partial class CoEventGroup :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string GroupEventId = "GroupEventId";
            public static readonly string ModuleCode = "ModuleCode";
            public static readonly string SubmoduleCode = "SubmoduleCode";
            public static readonly string Description = "Description";
            public static readonly string EnabledInd = "EnabledInd";
            public static readonly string AuthorizationReport = "AuthorizationReport";
            public static readonly string ProcedureAuthorized = "ProcedureAuthorized";
            public static readonly string ProcedureReject = "ProcedureReject";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="groupEventId">Propiedad clave GroupEventId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int groupEventId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.GroupEventId, groupEventId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="groupEventId">Propiedad clave GroupEventId.</param>
        public static PrimaryKey CreatePrimaryKey(int groupEventId)
        {
            return InternalCreatePrimaryKey<CoEventGroup>(groupEventId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ModuleCode.
        /// </summary>
        private int _moduleCode;
        /// <summary>
        /// Atributo para la propiedad SubmoduleCode.
        /// </summary>
        private int _submoduleCode;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad EnabledInd.
        /// </summary>
        private bool _enabledInd;
        /// <summary>
        /// Atributo para la propiedad AuthorizationReport.
        /// </summary>
        private string _authorizationReport = null;
        /// <summary>
        /// Atributo para la propiedad ProcedureAuthorized.
        /// </summary>
        private string _procedureAuthorized = null;
        /// <summary>
        /// Atributo para la propiedad ProcedureReject.
        /// </summary>
        private string _procedureReject = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="groupEventId">GroupEventId key property.</param>
        public CoEventGroup(int groupEventId) :
            this(CoEventGroup.CreatePrimaryKey(groupEventId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoEventGroup(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad GroupEventId.
        /// </summary>
        /// <value>Propiedad GroupEventId.</value>
        [
        DescriptionKey("GROUP_EVENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "GROUP_EVENT_ID", DbType = System.Data.DbType.String),
        ]
        public int GroupEventId
        {
            get
            {
                return (int)this._primaryKey[Properties.GroupEventId];
            }
            set
            {
                this._primaryKey[Properties.GroupEventId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ModuleCode.
        /// </summary>
        /// <value>Propiedad ModuleCode.</value>
        [
        DescriptionKey("MODULE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "MODULE_CD", DbType = System.Data.DbType.String),
        ]
        public int ModuleCode
        {
            get
            {
                return this._moduleCode;
            }
            set
            {
                this._moduleCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SubmoduleCode.
        /// </summary>
        /// <value>Propiedad SubmoduleCode.</value>
        [
        DescriptionKey("SUBMODULE_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SUBMODULE_CD", DbType = System.Data.DbType.String),
        ]
        public int SubmoduleCode
        {
            get
            {
                return this._submoduleCode;
            }
            set
            {
                this._submoduleCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EnabledInd.
        /// </summary>
        /// <value>Propiedad EnabledInd.</value>
        [
        DescriptionKey("ENABLED_IND_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ENABLED_IND", DbType = System.Data.DbType.String),
        ]
        public bool EnabledInd
        {
            get
            {
                return this._enabledInd;
            }
            set
            {
                this._enabledInd = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationReport.
        /// </summary>
        /// <value>Propiedad AuthorizationReport.</value>
        [
        DescriptionKey("AUTHORIZATION_REPORT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AUTHORIZATION_REPORT", DbType = System.Data.DbType.String),
        ]
        public string AuthorizationReport
        {
            get
            {
                return this._authorizationReport;
            }
            set
            {
                this._authorizationReport = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcedureAuthorized.
        /// </summary>
        /// <value>Propiedad ProcedureAuthorized.</value>
        [
        DescriptionKey("PROCEDURE_AUTHORIZED_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PROCEDURE_AUTHORIZED", DbType = System.Data.DbType.String),
        ]
        public string ProcedureAuthorized
        {
            get
            {
                return this._procedureAuthorized;
            }
            set
            {
                this._procedureAuthorized = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProcedureReject.
        /// </summary>
        /// <value>Propiedad ProcedureReject.</value>
        [
        DescriptionKey("PROCEDURE_REJECT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PROCEDURE_REJECT", DbType = System.Data.DbType.String),
        ]
        public string ProcedureReject
        {
            get
            {
                return this._procedureReject;
            }
            set
            {
                this._procedureReject = value;
            }
        }

    }
}