/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.EventsServices.EEProvider.CoEventDelegationResult.dict v1.0
 * FileSize=12584 Header=280 CRC=2238226519
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.EventsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CoEventDelegationResult.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.EventsServices.EEProvider.CoEventDelegationResult.dict"),
    Serializable(),
    DescriptionKey("CO_EVENT_DELEGATION_RESULT_ENTITY"),
    TableMap(TableName = "CO_EVENT_DELEGATION_RESULT", Schema = "EVE"),
    ]
    public partial class CoEventDelegationResult :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string ResultId = "ResultId";
            public static readonly string RecordId = "RecordId";
            public static readonly string GroupEventId = "GroupEventId";
            public static readonly string EventId = "EventId";
            public static readonly string DelegationId = "DelegationId";
            public static readonly string AccessId = "AccessId";
            public static readonly string UserId = "UserId";
            public static readonly string Operation1Id = "Operation1Id";
            public static readonly string Key1Field = "Key1Field";
            public static readonly string Key2Field = "Key2Field";
            public static readonly string Key3Field = "Key3Field";
            public static readonly string Key4Field = "Key4Field";
            public static readonly string RejectInd = "RejectInd";
            public static readonly string DescriptionErrorMessage = "DescriptionErrorMessage";
            public static readonly string EventDate = "EventDate";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="resultId">Propiedad clave ResultId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int resultId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ResultId, resultId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="resultId">Propiedad clave ResultId.</param>
        public static PrimaryKey CreatePrimaryKey(int resultId)
        {
            return InternalCreatePrimaryKey<CoEventDelegationResult>(resultId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad RecordId.
        /// </summary>
        private int _recordId;
        /// <summary>
        /// Atributo para la propiedad GroupEventId.
        /// </summary>
        private int _groupEventId;
        /// <summary>
        /// Atributo para la propiedad EventId.
        /// </summary>
        private int _eventId;
        /// <summary>
        /// Atributo para la propiedad DelegationId.
        /// </summary>
        private int _delegationId;
        /// <summary>
        /// Atributo para la propiedad AccessId.
        /// </summary>
        private int _accessId;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private int _userId;
        /// <summary>
        /// Atributo para la propiedad Operation1Id.
        /// </summary>
        private string _operation1Id = null;
        /// <summary>
        /// Atributo para la propiedad Key1Field.
        /// </summary>
        private string _key1Field = null;
        /// <summary>
        /// Atributo para la propiedad Key2Field.
        /// </summary>
        private string _key2Field = null;
        /// <summary>
        /// Atributo para la propiedad Key3Field.
        /// </summary>
        private string _key3Field = null;
        /// <summary>
        /// Atributo para la propiedad Key4Field.
        /// </summary>
        private string _key4Field = null;
        /// <summary>
        /// Atributo para la propiedad RejectInd.
        /// </summary>
        private bool _rejectInd;
        /// <summary>
        /// Atributo para la propiedad DescriptionErrorMessage.
        /// </summary>
        private string _descriptionErrorMessage = null;
        /// <summary>
        /// Atributo para la propiedad EventDate.
        /// </summary>
        private DateTime _eventDate;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="resultId">ResultId key property.</param>
        public CoEventDelegationResult(int resultId) :
            this(CoEventDelegationResult.CreatePrimaryKey(resultId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoEventDelegationResult(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad ResultId.
        /// </summary>
        /// <value>Propiedad ResultId.</value>
        [
        DescriptionKey("RESULT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "RESULT_ID", DbType = System.Data.DbType.String),
        ]
        public int ResultId
        {
            get
            {
                return (int)this._primaryKey[Properties.ResultId];
            }
            set
            {
                this._primaryKey[Properties.ResultId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RecordId.
        /// </summary>
        /// <value>Propiedad RecordId.</value>
        [
        DescriptionKey("RECORD_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RECORD_ID", DbType = System.Data.DbType.String),
        ]
        public int RecordId
        {
            get
            {
                return this._recordId;
            }
            set
            {
                this._recordId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GroupEventId.
        /// </summary>
        /// <value>Propiedad GroupEventId.</value>
        [
        DescriptionKey("GROUP_EVENT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "GROUP_EVENT_ID", DbType = System.Data.DbType.String),
        ]
        public int GroupEventId
        {
            get
            {
                return this._groupEventId;
            }
            set
            {
                this._groupEventId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EventId.
        /// </summary>
        /// <value>Propiedad EventId.</value>
        [
        DescriptionKey("EVENT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EVENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EventId
        {
            get
            {
                return this._eventId;
            }
            set
            {
                this._eventId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DelegationId.
        /// </summary>
        /// <value>Propiedad DelegationId.</value>
        [
        DescriptionKey("DELEGATION_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DELEGATION_ID", DbType = System.Data.DbType.String),
        ]
        public int DelegationId
        {
            get
            {
                return this._delegationId;
            }
            set
            {
                this._delegationId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccessId.
        /// </summary>
        /// <value>Propiedad AccessId.</value>
        [
        DescriptionKey("ACCESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ACCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int AccessId
        {
            get
            {
                return this._accessId;
            }
            set
            {
                this._accessId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public int UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Operation1Id.
        /// </summary>
        /// <value>Propiedad Operation1Id.</value>
        [
        DescriptionKey("OPERATION1_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "OPERATION1_ID", DbType = System.Data.DbType.String),
        ]
        public string Operation1Id
        {
            get
            {
                return this._operation1Id;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Operation1Id);
                }
                this._operation1Id = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key1Field.
        /// </summary>
        /// <value>Propiedad Key1Field.</value>
        [
        DescriptionKey("KEY1_FIELD_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY1_FIELD", DbType = System.Data.DbType.String),
        ]
        public string Key1Field
        {
            get
            {
                return this._key1Field;
            }
            set
            {
                this._key1Field = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key2Field.
        /// </summary>
        /// <value>Propiedad Key2Field.</value>
        [
        DescriptionKey("KEY2_FIELD_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY2_FIELD", DbType = System.Data.DbType.String),
        ]
        public string Key2Field
        {
            get
            {
                return this._key2Field;
            }
            set
            {
                this._key2Field = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key3Field.
        /// </summary>
        /// <value>Propiedad Key3Field.</value>
        [
        DescriptionKey("KEY3_FIELD_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY3_FIELD", DbType = System.Data.DbType.String),
        ]
        public string Key3Field
        {
            get
            {
                return this._key3Field;
            }
            set
            {
                this._key3Field = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Key4Field.
        /// </summary>
        /// <value>Propiedad Key4Field.</value>
        [
        DescriptionKey("KEY4_FIELD_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "KEY4_FIELD", DbType = System.Data.DbType.String),
        ]
        public string Key4Field
        {
            get
            {
                return this._key4Field;
            }
            set
            {
                this._key4Field = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RejectInd.
        /// </summary>
        /// <value>Propiedad RejectInd.</value>
        [
        DescriptionKey("REJECT_IND_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REJECT_IND", DbType = System.Data.DbType.String),
        ]
        public bool RejectInd
        {
            get
            {
                return this._rejectInd;
            }
            set
            {
                this._rejectInd = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionErrorMessage.
        /// </summary>
        /// <value>Propiedad DescriptionErrorMessage.</value>
        [
        DescriptionKey("DESCRIPTION_ERROR_MESSAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_ERROR_MESSAGE", DbType = System.Data.DbType.String),
        ]
        public string DescriptionErrorMessage
        {
            get
            {
                return this._descriptionErrorMessage;
            }
            set
            {
                this._descriptionErrorMessage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EventDate.
        /// </summary>
        /// <value>Propiedad EventDate.</value>
        [
        DescriptionKey("EVENT_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EVENT_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime EventDate
        {
            get
            {
                return this._eventDate;
            }
            set
            {
                this._eventDate = value;
            }
        }

    }
}