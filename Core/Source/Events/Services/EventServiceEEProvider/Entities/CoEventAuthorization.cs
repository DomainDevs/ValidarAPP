/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.EventsServices.EEProvider.CoEventAuthorization.dict v1.0
 * FileSize=16097 Header=277 CRC=2226910112
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Core.Application.EventsServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CoEventAuthorization.
    /// </summary>
    [
    PersistentClass("Sistran.Core.Application.EventsServices.EEProvider.CoEventAuthorization.dict"),
    Serializable(),
    DescriptionKey("CO_EVENT_AUTHORIZATION_ENTITY"),
    TableMap(TableName = "CO_EVENT_AUTHORIZATION", Schema = "EVE"),
    ]
    public partial class CoEventAuthorization :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string AuthorizationId = "AuthorizationId";
            public static readonly string GroupEventId = "GroupEventId";
            public static readonly string EventId = "EventId";
            public static readonly string AccessId = "AccessId";
            public static readonly string HierarchyCode = "HierarchyCode";
            public static readonly string EventUserId = "EventUserId";
            public static readonly string AuthoUserId = "AuthoUserId";
            public static readonly string Operation1Id = "Operation1Id";
            public static readonly string Operation2Id = "Operation2Id";
            public static readonly string AuthorizedInd = "AuthorizedInd";
            public static readonly string RejectInd = "RejectInd";
            public static readonly string RejectId = "RejectId";
            public static readonly string EventDate = "EventDate";
            public static readonly string AuthorizationDate = "AuthorizationDate";
            public static readonly string DescriptionErrorMessage = "DescriptionErrorMessage";
            public static readonly string Description = "Description";
            public static readonly string AuthorizationDescription = "AuthorizationDescription";
            public static readonly string EntityDescriptionValues = "EntityDescriptionValues";
            public static readonly string AuthorizationReasonCode = "AuthorizationReasonCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="authorizationId">Propiedad clave AuthorizationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int authorizationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.AuthorizationId, authorizationId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="authorizationId">Propiedad clave AuthorizationId.</param>
        public static PrimaryKey CreatePrimaryKey(int authorizationId)
        {
            return InternalCreatePrimaryKey<CoEventAuthorization>(authorizationId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad GroupEventId.
        /// </summary>
        private int _groupEventId;
        /// <summary>
        /// Atributo para la propiedad EventId.
        /// </summary>
        private int _eventId;
        /// <summary>
        /// Atributo para la propiedad AccessId.
        /// </summary>
        private int _accessId;
        /// <summary>
        /// Atributo para la propiedad HierarchyCode.
        /// </summary>
        private int _hierarchyCode;
        /// <summary>
        /// Atributo para la propiedad EventUserId.
        /// </summary>
        private int _eventUserId;
        /// <summary>
        /// Atributo para la propiedad AuthoUserId.
        /// </summary>
        private int _authoUserId;
        /// <summary>
        /// Atributo para la propiedad Operation1Id.
        /// </summary>
        private string _operation1Id = null;
        /// <summary>
        /// Atributo para la propiedad Operation2Id.
        /// </summary>
        private string _operation2Id = null;
        /// <summary>
        /// Atributo para la propiedad AuthorizedInd.
        /// </summary>
        private bool _authorizedInd;
        /// <summary>
        /// Atributo para la propiedad RejectInd.
        /// </summary>
        private bool _rejectInd;
        /// <summary>
        /// Atributo para la propiedad RejectId.
        /// </summary>
        private int? _rejectId = null;
        /// <summary>
        /// Atributo para la propiedad EventDate.
        /// </summary>
        private DateTime _eventDate;
        /// <summary>
        /// Atributo para la propiedad AuthorizationDate.
        /// </summary>
        private DateTime? _authorizationDate = null;
        /// <summary>
        /// Atributo para la propiedad DescriptionErrorMessage.
        /// </summary>
        private string _descriptionErrorMessage = null;
        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad AuthorizationDescription.
        /// </summary>
        private string _authorizationDescription = null;
        /// <summary>
        /// Atributo para la propiedad EntityDescriptionValues.
        /// </summary>
        private string _entityDescriptionValues = null;
        /// <summary>
        /// Atributo para la propiedad AuthorizationReasonCode.
        /// </summary>
        private int? _authorizationReasonCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="authorizationId">AuthorizationId key property.</param>
        public CoEventAuthorization(int authorizationId) :
            this(CoEventAuthorization.CreatePrimaryKey(authorizationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoEventAuthorization(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationId.
        /// </summary>
        /// <value>Propiedad AuthorizationId.</value>
        [
        DescriptionKey("AUTHORIZATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "AUTHORIZATION_ID", DbType = System.Data.DbType.String),
        ]
        public int AuthorizationId
        {
            get
            {
                return (int)this._primaryKey[Properties.AuthorizationId];
            }
            set
            {
                this._primaryKey[Properties.AuthorizationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GroupEventId.
        /// </summary>
        /// <value>Propiedad GroupEventId.</value>
        [
        DescriptionKey("GROUP_EVENT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "GROUP_EVENT_ID", DbType = System.Data.DbType.String),
        ]
        public int GroupEventId
        {
            get
            {
                return this._groupEventId;
            }
            set
            {
                this._groupEventId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EventId.
        /// </summary>
        /// <value>Propiedad EventId.</value>
        [
        DescriptionKey("EVENT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EVENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EventId
        {
            get
            {
                return this._eventId;
            }
            set
            {
                this._eventId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AccessId.
        /// </summary>
        /// <value>Propiedad AccessId.</value>
        [
        DescriptionKey("ACCESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ACCESS_ID", DbType = System.Data.DbType.String),
        ]
        public int AccessId
        {
            get
            {
                return this._accessId;
            }
            set
            {
                this._accessId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad HierarchyCode.
        /// </summary>
        /// <value>Propiedad HierarchyCode.</value>
        [
        DescriptionKey("HIERARCHY_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "HIERARCHY_CD", DbType = System.Data.DbType.String),
        ]
        public int HierarchyCode
        {
            get
            {
                return this._hierarchyCode;
            }
            set
            {
                this._hierarchyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EventUserId.
        /// </summary>
        /// <value>Propiedad EventUserId.</value>
        [
        DescriptionKey("EVENT_USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EVENT_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int EventUserId
        {
            get
            {
                return this._eventUserId;
            }
            set
            {
                this._eventUserId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthoUserId.
        /// </summary>
        /// <value>Propiedad AuthoUserId.</value>
        [
        DescriptionKey("AUTHO_USER_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AUTHO_USER_ID", DbType = System.Data.DbType.String),
        ]
        public int AuthoUserId
        {
            get
            {
                return this._authoUserId;
            }
            set
            {
                this._authoUserId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Operation1Id.
        /// </summary>
        /// <value>Propiedad Operation1Id.</value>
        [
        DescriptionKey("OPERATION1_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "OPERATION1_ID", DbType = System.Data.DbType.String),
        ]
        public string Operation1Id
        {
            get
            {
                return this._operation1Id;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Operation1Id);
                }
                this._operation1Id = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Operation2Id.
        /// </summary>
        /// <value>Propiedad Operation2Id.</value>
        [
        DescriptionKey("OPERATION2_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OPERATION2_ID", DbType = System.Data.DbType.String),
        ]
        public string Operation2Id
        {
            get
            {
                return this._operation2Id;
            }
            set
            {
                this._operation2Id = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizedInd.
        /// </summary>
        /// <value>Propiedad AuthorizedInd.</value>
        [
        DescriptionKey("AUTHORIZED_IND_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "AUTHORIZED_IND", DbType = System.Data.DbType.String),
        ]
        public bool AuthorizedInd
        {
            get
            {
                return this._authorizedInd;
            }
            set
            {
                this._authorizedInd = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RejectInd.
        /// </summary>
        /// <value>Propiedad RejectInd.</value>
        [
        DescriptionKey("REJECT_IND_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "REJECT_IND", DbType = System.Data.DbType.String),
        ]
        public bool RejectInd
        {
            get
            {
                return this._rejectInd;
            }
            set
            {
                this._rejectInd = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RejectId.
        /// </summary>
        /// <value>Propiedad RejectId.</value>
        [
        DescriptionKey("REJECT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "REJECT_ID", DbType = System.Data.DbType.String),
        ]
        public int? RejectId
        {
            get
            {
                return this._rejectId;
            }
            set
            {
                this._rejectId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EventDate.
        /// </summary>
        /// <value>Propiedad EventDate.</value>
        [
        DescriptionKey("EVENT_DATE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "EVENT_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime EventDate
        {
            get
            {
                return this._eventDate;
            }
            set
            {
                this._eventDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationDate.
        /// </summary>
        /// <value>Propiedad AuthorizationDate.</value>
        [
        DescriptionKey("AUTHORIZATION_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AUTHORIZATION_DATE", DbType = System.Data.DbType.String),
        ]
        public DateTime? AuthorizationDate
        {
            get
            {
                return this._authorizationDate;
            }
            set
            {
                this._authorizationDate = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad DescriptionErrorMessage.
        /// </summary>
        /// <value>Propiedad DescriptionErrorMessage.</value>
        [
        DescriptionKey("DESCRIPTION_ERROR_MESSAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION_ERROR_MESSAGE", DbType = System.Data.DbType.String),
        ]
        public string DescriptionErrorMessage
        {
            get
            {
                return this._descriptionErrorMessage;
            }
            set
            {
                this._descriptionErrorMessage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationDescription.
        /// </summary>
        /// <value>Propiedad AuthorizationDescription.</value>
        [
        DescriptionKey("AUTHORIZATION_DESCRIPTION_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AUTHORIZATION_DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string AuthorizationDescription
        {
            get
            {
                return this._authorizationDescription;
            }
            set
            {
                this._authorizationDescription = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EntityDescriptionValues.
        /// </summary>
        /// <value>Propiedad EntityDescriptionValues.</value>
        [
        DescriptionKey("ENTITY_DESCRIPTION_VALUES_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ENTITY_DESCRIPTION_VALUES", DbType = System.Data.DbType.String),
        ]
        public string EntityDescriptionValues
        {
            get
            {
                return this._entityDescriptionValues;
            }
            set
            {
                this._entityDescriptionValues = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AuthorizationReasonCode.
        /// </summary>
        /// <value>Propiedad AuthorizationReasonCode.</value>
        [
        DescriptionKey("AUTHORIZATION_REASON_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "AUTHORIZATION_REASON_CD", DbType = System.Data.DbType.String),
        ]
        public int? AuthorizationReasonCode
        {
            get
            {
                return this._authorizationReasonCode;
            }
            set
            {
                this._authorizationReasonCode = value;
            }
        }

    }
}