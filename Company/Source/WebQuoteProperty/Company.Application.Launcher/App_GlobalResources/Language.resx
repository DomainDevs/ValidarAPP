<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="ClientDocumentNum" xml:space="preserve">
    <value>Client document number</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ConsultationQuotation" xml:space="preserve">
    <value>Consultation quotation</value>
  </data>
  <data name="ContentCoverage" xml:space="preserve">
    <value>&lt;tr&gt;
	&lt;td&gt;
		{{itemTitle}}
		&lt;br/&gt;
		Deductible {{itemDeductible}}
	&lt;/td&gt;
	&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;</value>
  </data>
  <data name="ContentEmailQuotation" xml:space="preserve">
    <value>&lt;table border="0" style="width: 700px;"&gt;
	&lt;tbody&gt;
		&lt;tr&gt;
			&lt;td&gt;&lt;img alt="" src="{{logo}}" style="width: 100px; height: 100px; float: left;" /&gt;&lt;/td&gt;
			&lt;td colspan="2" style="text-align:center;"&gt;
			&lt;h2&gt;&lt;strong&gt;Quotation Nro. &amp;nbsp; &lt;span style="color:red"&gt;{{quotation}}&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;
			&lt;/td&gt;
			&lt;td style="text-align:center;"&gt;
			&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;
			&lt;/td&gt;
			&lt;td&gt;
			&lt;h2 style="text-align: center;"&gt;{{date}}&lt;/h2&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;
			&lt;h1&gt;&amp;nbsp;&lt;/h1&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;
			&lt;h3&gt;&lt;strong&gt;Dear Sir:&lt;/strong&gt;&lt;/h3&gt;

			&lt;h3&gt;{{personName}}&lt;/h3&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;
			&lt;h3&gt;&amp;nbsp;&lt;/h3&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;&lt;em&gt;Below we present the insurance quote Property:&lt;/em&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5" style="color:blue"&gt;Property Address: {{fullAddress}}&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;
			&lt;h1&gt;&amp;nbsp;&lt;/h1&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="3"&gt;
			&lt;h2 style="color:#8c8c8c"&gt;&lt;strong&gt;Insured Amount:&lt;/strong&gt;&lt;/h2&gt;
			&lt;/td&gt;
			&lt;td colspan="2"&gt;
			&lt;h2 style="color:#FFA550"&gt;{{value}}&lt;/h2&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;&amp;nbsp;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;
			&lt;h3&gt;&lt;strong&gt;Coverages Detail&lt;/strong&gt;&lt;/h3&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5" style="background-color: #D6D6D6;"&gt;
			&lt;table border="0" style="width: 700px;"&gt;
				&lt;tbody&gt;
					{{itemDetails}}
				&lt;/tbody&gt;
			&lt;/table&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td style="background-color: #D6D6D6;"&gt;Premium &lt;br/&gt; &lt;b&gt;{{premium}}&lt;/b&gt;&lt;/td&gt;
			&lt;td style="background-color: #D6D6D6;"&gt;Taxes &lt;br/&gt; &lt;b&gt;{{taxes}}&lt;/b&gt;&lt;/td&gt;
			&lt;td style="background-color: #D6D6D6;"&gt;Expenses &lt;br/&gt; &lt;b&gt;{{expenses}}&lt;/b&gt;&lt;/td&gt;
			&lt;td colspan="2" style="background-color: #D6D6D6;"&gt;&lt;b&gt;Total {{premium}}&lt;/b&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;
			&lt;hr /&gt;
			&lt;hr /&gt;&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td colspan="5"&gt;&lt;em&gt;This quote will be valid for 30 calendar days, from the date&lt;/em&gt;&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/tbody&gt;
&lt;/table&gt;</value>
    <comment>Plantilla Correo Cotización</comment>
  </data>
  <data name="ContentInsuredObject" xml:space="preserve">
    <value>&lt;tr&gt;
	&lt;td&gt;
		&lt;strong&gt;{{itemTitle}}&lt;/strong&gt;
	&lt;/td&gt;
	&lt;td style="text-align: right;"&gt;
		{{itemValue}}
	&lt;/td&gt;
&lt;/tr&gt;</value>
    <comment>Contenido Cotización</comment>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateFrom" xml:space="preserve">
    <value>Date From</value>
  </data>
  <data name="DateLessCurrent" xml:space="preserve">
    <value>Date must be less than the current</value>
  </data>
  <data name="DateTo" xml:space="preserve">
    <value>Date To</value>
  </data>
  <data name="ErrorGetQuotationAdv" xml:space="preserve">
    <value>Error Get Quotation</value>
  </data>
  <data name="ErrorGetUser" xml:space="preserve">
    <value>Error Get User</value>
  </data>
  <data name="ErrorSendEmail" xml:space="preserve">
    <value>Error To Send Email</value>
  </data>
  <data name="ErrorTempNoExist" xml:space="preserve">
    <value>Quotation not found</value>
  </data>
  <data name="LabelAddress" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="LabelBirthDate" xml:space="preserve">
    <value>Birthdate</value>
  </data>
  <data name="LabelCity" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="LabelConstructionYear" xml:space="preserve">
    <value>Construction Year</value>
  </data>
  <data name="LabelCorrespondenceAddress" xml:space="preserve">
    <value>Correspondence Address</value>
  </data>
  <data name="LabelCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="LabelDetails" xml:space="preserve">
    <value>details</value>
  </data>
  <data name="LabelDocumentNumber" xml:space="preserve">
    <value>Document Number</value>
  </data>
  <data name="LabelDocumentType" xml:space="preserve">
    <value>Document Type</value>
  </data>
  <data name="LabelDownloadPDF" xml:space="preserve">
    <value>Download PDF</value>
  </data>
  <data name="LabelEmail" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="LabelExpenses" xml:space="preserve">
    <value>Expenses</value>
  </data>
  <data name="LabelFemale" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="LabelFullAddress" xml:space="preserve">
    <value>Full Address</value>
  </data>
  <data name="LabelGroupCoverages" xml:space="preserve">
    <value>Group Coverages</value>
  </data>
  <data name="LabelInsuranceData" xml:space="preserve">
    <value>Insurance Data</value>
  </data>
  <data name="LabelInsuredObject" xml:space="preserve">
    <value>Insured Object</value>
  </data>
  <data name="LabelInsuredObjectPremium" xml:space="preserve">
    <value>Total Premium</value>
  </data>
  <data name="LabelInsuredValue" xml:space="preserve">
    <value>Insured Value</value>
  </data>
  <data name="LabelMale" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="LabelNames" xml:space="preserve">
    <value>Names</value>
  </data>
  <data name="LabelNewQuotation" xml:space="preserve">
    <value>New Quotation</value>
  </data>
  <data name="LabelPhone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="LabelPremium" xml:space="preserve">
    <value>Premium</value>
  </data>
  <data name="LabelProduct" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="LabelPropertyData" xml:space="preserve">
    <value>Property Data</value>
  </data>
  <data name="LabelQuotation" xml:space="preserve">
    <value>Quotation</value>
  </data>
  <data name="LabelQuotationDate" xml:space="preserve">
    <value>Quotation Date</value>
  </data>
  <data name="LabelQuote" xml:space="preserve">
    <value>Quote</value>
  </data>
  <data name="LabelSearchQuotation" xml:space="preserve">
    <value>Search Quotation</value>
  </data>
  <data name="LabelSecondSurname" xml:space="preserve">
    <value>Second Surname</value>
  </data>
  <data name="LabelSendToEmail" xml:space="preserve">
    <value>Send To Email</value>
  </data>
  <data name="LabelSmallCompany" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="LabelSmallPerson" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="LabelState" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="LabelSurname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="LabelTax" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="LabelTotal" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="LabelTradeName" xml:space="preserve">
    <value>Trade Name</value>
  </data>
  <data name="LabelVersion" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="MessageCustomerNotFound" xml:space="preserve">
    <value>Document Number Not Found</value>
  </data>
  <data name="MessageEmailSend" xml:space="preserve">
    <value>Mail Sent Correctly</value>
  </data>
  <data name="MessageQuotationNotExist" xml:space="preserve">
    <value>Quotation Not Exists</value>
  </data>
  <data name="MessageUserBlocked" xml:space="preserve">
    <value>Blocked User, Contact the Administrator</value>
  </data>
  <data name="MessageUserPasswordNotMatch" xml:space="preserve">
    <value>Incorrect user or password</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SumInsured" xml:space="preserve">
    <value>Sum Insured</value>
  </data>
  <data name="SummaryCoverage" xml:space="preserve">
    <value>Summary coverage</value>
  </data>
  <data name="TitleCustomerData" xml:space="preserve">
    <value>Customer Data</value>
  </data>
  <data name="TitleQuotation" xml:space="preserve">
    <value>Quote Property</value>
  </data>
  <data name="TitleSummaryQuotation" xml:space="preserve">
    <value>Quotation Summary</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="ValidationMinimumInsuredObjects" xml:space="preserve">
    <value>You must enter at least one insurance object</value>
  </data>
  <data name="ValidationRequiredCity" xml:space="preserve">
    <value>The City field is mandatory.</value>
  </data>
  <data name="ValidationRequiredCorrespondenceAddress" xml:space="preserve">
    <value>The Correspondence Address field is mandatory.</value>
  </data>
  <data name="ValidationRequiredCountry" xml:space="preserve">
    <value>The Country field is mandatory.</value>
  </data>
  <data name="ValidationRequiredDocumentNumber" xml:space="preserve">
    <value>The Document Number field is mandatory.</value>
  </data>
  <data name="ValidationRequiredDocumentType" xml:space="preserve">
    <value>The Document Type field is mandatory.</value>
  </data>
  <data name="ValidationRequiredEmail" xml:space="preserve">
    <value>The E-mail field is mandatory.</value>
  </data>
  <data name="ValidationRequiredGroupCoverage" xml:space="preserve">
    <value>The Group Coverages field is mandatory.</value>
  </data>
  <data name="ValidationRequiredNames" xml:space="preserve">
    <value>The Names field is mandatory.</value>
  </data>
  <data name="ValidationRequiredProduct" xml:space="preserve">
    <value>The Product field is mandatory.</value>
  </data>
  <data name="ValidationRequiredState" xml:space="preserve">
    <value>The State field is mandatory.</value>
  </data>
  <data name="ValidationRequiredSurname" xml:space="preserve">
    <value>The Surname field is mandatory.</value>
  </data>
  <data name="ValidationRequiredTradeName" xml:space="preserve">
    <value>The Trade Name field is mandatory.</value>
  </data>
</root>