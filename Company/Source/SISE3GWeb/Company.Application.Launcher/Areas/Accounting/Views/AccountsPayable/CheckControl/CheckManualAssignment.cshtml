@using Sistran.Core.Framework.UIF.Web.Resources

@{
    ViewBag.Title = @Global.ManualCheckAssignment;
    Layout = "~/Views/Shared/_UIFLayout-r2-BigMenu.cshtml";
}

@section Breadcrumb
{
    <ol class="breadcrumb global-header-breadcrumb">
        <li>@Global.AccountingAdministrative</li>
        <li>@Global.MenuCashOtuflows</li>
        <li>@Global.ManualCheckAssignment</li>
    </ol>
}

@section Toolbar
{
    <footer>
        <button id="CancelManualAssignment" class="btn btn-default" role="button">
            <i class="fa fa-remove"></i> @Global.Cancel
        </button>
        <button id="AcceptManualAssignment" class="btn btn-primary" role="button">
            <i class="fa fa-check"></i> @Global.Accept
        </button>
    </footer>
}

<form id="ManualAssignment" onsubmit="return false">
    <div class="uif-row">
        <div class="uif-col-3">
            <label class="control-label" for="BranchManualAssignment">
                @Global.Branch
            </label>
            @Html.DropDownList("BranchManualAssignment", Enumerable.Empty<SelectListItem>(), new
             {
                 @class = "uif-select form-control",
                 data_source = @Url.Content("~/Accounting/Common/GetListBranchesbyUserName"),
                 data_id = "Id",
                 data_name = "Description",
                 data_selectedid = @ViewBag.BranchDefault,
                 data_val = "true",
                 data_native = "true",
                 data_val_required = @Global.RequiredField
             })
            <span class="text-danger" data-valmsg-for="BranchManualAssignment" data-valmsg-replace="true" />
        </div>
        <div class="uif-col-3">
            <label class="control-label" for="NameBankManualAssignment">
                @Global.BankName
            </label>
            @Html.DropDownList("NameBankManualAssignment", Enumerable.Empty<SelectListItem>(), new
             {
                 @class = "uif-select form-control",
                 data_id = "Id",
                 data_name = "Description",
                 data_val = "true",
                 data_native = "true",
                 data_val_required = @Global.RequiredField
             })
            <span class="text-danger" data-valmsg-for="NameBankManualAssignment" data-valmsg-replace="true" />
        </div>
        <div class="uif-col-3">
            <label class="control-label" for="AccountNumberManualAssignment">
                @Global.BankAccountNumber
            </label>
            @Html.DropDownList("AccountNumberManualAssignment", Enumerable.Empty<SelectListItem>(), new
             {
                 @class = "uif-select form-control",
                 data_id = "Id",
                 data_name = "Number",
                 data_val = "true",
                 data_native = "true",
                 data_val_required = @Global.RequiredField
             })
            <span class="text-danger" data-valmsg-for="AccountNumberManualAssignment" data-valmsg-replace="true" />
        </div>
        <div class="uif-col-3">
            <label class="control-label" for="lastCheckManualAssignment">
                @Global.LastCheckAsigment
            </label>
            <input type="text" id="lastCheckManualAssignment" name="lastCheckManualAssignment" onblur="this.value = this.value.toUpperCase();" disabled="disabled" />
        </div>
    </div>

    <div class="uif-row">
        <div class="uif-col-3">
            <label class="control-label" for="currencyManualAssignment">
                @Global.Currency
            </label>
            <input type="text" id="currencyManualAssignment" name="currencyManualAssignment" onblur="this.value = this.value.toUpperCase();" disabled="disabled" />
        </div>
        <div class="uif-col-3">
            <label class="control-label" for="numberPaymentOrderManualAssignment">
                @Global.PaymentOrderNumber
            </label>
            @Html.TextBox("numberPaymentOrderManualAssignment", "", new
            {
                onkeypress = "return JustNumbers(event, this)",
                maxlength = "20",
                data_val = "true",
                data_val_required = @Global.RequiredField
            })
            <span class="text-danger" data-valmsg-for="numberPaymentOrderManualAssignment" data-valmsg-replace="true" />

        </div>
        <div class="uif-col-6">
            <label class="control-label" for="nameBeneficiaryManualAssignment">
                @Global.BeneficiaryName
            </label>
            <input type="text" id="nameBeneficiaryManualAssignment" name="nameBeneficiaryManualAssignment" onblur="this.value = this.value.toUpperCase();"
                   disabled="disabled" />
        </div>

    </div>
    <div class="uif-row">
        <div class="uif-col-3">
            <label class="control-label" for="amountPaymentOrderManualAssignment">
                @Global.Amount
            </label>
            <input type="text" id="amountPaymentOrderManualAssignment" name="amountPaymentOrderManualAssignment" onblur="this.value = this.value.toUpperCase();"
                   disabled="disabled" style="text-align: right" />
        </div>
        <div class="uif-col-3">
            <label class="control-label" for="estimatedPaymentDateManualAssignment">
                @Global.EstimatedPaymentDate
            </label>
            <input type="text" id="estimatedPaymentDateManualAssignment" name="estimatedPaymentDateManualAssignment" class="uif-datepicker"
                   data-mask="99/99/9999" onblur="this.value = this.value.toUpperCase();" disabled="disabled" />
        </div>
        <div class="uif-col-3">
            <label>@Global.CheckNumber</label>
            @Html.TextBox("checkNumberManualAssignment", "", new
            {
                onkeypress = "return JustNumbers(event, this)",
                maxlength = "20",
                data_val = "true",
                data_val_required = @Global.RequiredField
            })
            <span class="text-danger" data-valmsg-for="checkNumberManualAssignment" data-valmsg-replace="true" />
        </div>
    </div>
    <div class="uif-row">
        <div class="uif-col-12">
            <div class="form-footer">
                <button id="CleanManualAssignment" class="btn btn-default" role="button">
                    <span class="fa fa-paint-brush"></span>  @Global.Clean
                </button>
                <button id="AddPaymentOrderManualAssignment" class="btn btn-primary" role="button">
                    <span class="fa fa-plus"></span>  @Global.Add
                </button>
            </div>
        </div>
    </div>

    <div class="uif-row">
        <div class="uif-col-12">
            <div class="uif-alert" id="alertManualAssignment"></div>
        </div>
    </div>


    <div class="uif-row">
        <div class="uif-col-12">
            <table class="uif-table" id="PaymentOrdersManualAssignment" data-exporttocsv="false"
                   data-add="false" data-edit="false" data-delete="false" data-selectiontype="none" data-filter="false"
                   data-paginate="true" data-title="@Global.PaymentOrders">
                <thead>
                    <tr>
                        <th data-property="TempPaymentOrderId">@Global.PaymentOrderNumber</th>
                        <th data-property="BeneficiaryTypeId" data-visible="false">'BeneficiaryTypeId'</th>
                        <th data-property="BeneficiaryType">@Global.BeneficiaryType</th>
                        <th data-property="BeneficiaryName">@Global.BeneficiaryName</th>
                        <th data-property="EstimatedPaymentDate">@Global.EstimatedDate</th>
                        <th data-property="Amount">@Global.Amount</th>
                        <th data-property="CheckNumber">@Global.CheckNumber</th>
                        <th data-property="BankAccountCurrent">@Global.LabelBankAccountCurrent</th>
                        <th data-property="IndividualId" data-visible="false">'IndividualId'</th>
                        <th data-property="AccountBankId" data-visible="false">'AccountBankId'</th>
                        <th data-property="checkBookControlIdManual" data-visible="false">'CheckPaymentOrderCode'</th>
                        <th data-property="BankId" data-visible="false">'BankId'</th>
                        <th data-property="AccountBankNumber" data-visible="false">'AccountBankNumber'</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</form>

@*VIEWBAGS*@
<input type="hidden" id="ViewBagBranchDisableCheckManual" value="@ViewBag.BranchDisable" />

@section scripts
{
    @Scripts.Render("~/accounting/bundles/CheckManualAssignment")
}