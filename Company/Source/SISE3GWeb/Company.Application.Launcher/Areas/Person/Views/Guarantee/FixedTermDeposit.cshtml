@model Sistran.Core.Framework.UIF.Web.Areas.Person.Models.FixedTermDepositViewModel

<form id="AddFixedTermDeposit" name="AddFixedTermDeposit">
    @Html.AntiForgeryToken()
    <div class="row uif-row-pc">
        <div class="uif-col col-md-4">
            <label class="field-required">@Resources.Language.LabelCountry</label>
            <input class="uif-input-search"
                data-val="true" id="inputCountry-FixedTermDeposit" name="inputCountry-FixedTermDeposit" placeholder="@Resources.Language.NameCountry" type="text">
        </div>
        <div class="uif-col col-md-4">
            <label class="field-required">@Resources.Language.LabelState</label>
            <input class="uif-input-search"
                data-val="true" id="inputState-FixedTermDeposit" name="inputState-FixedTermDeposit" placeholder="@Resources.Language.NameDepartment" type="text">
        </div>
        <div class="uif-col col-md-4">
            <label class="field-required">@Resources.Language.LabelCity</label>
            <input class="uif-input-search"
                data-val="true" id="inputCity-FixedTermDeposit" name="inputCity-FixedTermDeposit" placeholder="@Resources.Language.NameCity" type="text">
        </div>
    </div>

    <div class="row uif-row-pc">
        <div class="uif-col col-md-3">
            <label  class="field-required">@Resources.Language.LabelDocumentNumber </labe>
            @Html.TextBoxFor(model => model.DocumentNumber, new { id = "FixedTermDeposit-DocumentNumber", @class = "changeToUpper" })
            @Html.ValidationMessageFor(model => model.DocumentNumber)
        </div>

        <div class="uif-col col-md-3">
            <label  class="field-required">@Resources.Language.LabelIssuingEntity </label>
            @Html.TextBoxFor(model => model.IssuingEntity, new { id = "FixedTermDeposit-IssuingEntity", @class = "changeToUpper" })
            @Html.ValidationMessageFor(model => model.IssuingEntity)
        </div>

        <div class="uif-col col-md-3">
            <label  class="field-required">@Resources.Language.LabelConstitutionDate </label>
            @Html.TextBoxFor(model => model.ConstitutionDate, "{0:dd/MM/yyyy}", new { id = "FixedTermDeposit-ConstitutionDate", @class = "uif-datepicker" })
            @Html.ValidationMessageFor(model => model.ConstitutionDate)
        </div>
        <div class="uif-col col-md-3">
            <label  class="field-required">@Resources.Language.LabelDueDate </label>
            @Html.TextBoxFor(model => model.ExpirationDate, "{0:dd/MM/yyyy}", new { id = "FixedTermDeposit-ExpirationDate", @class = "uif-datepicker" })
            @Html.ValidationMessageFor(model => model.ExpirationDate)
        </div>
    </div>

    <div class="row uif-row-pc">
        <div class="uif-col col-md-3">
            <label  class="field-required">@Resources.Language.LabelNominalValue </label>
            @Html.TextBoxFor(model => model.NominalValue, new { id = "FixedTermDeposit-NominalValue", @class = "numberWithCommas rightAlign" })
            @Html.ValidationMessageFor(model => model.NominalValue)
        </div>

        <div class="uif-col col-md-3">
            <label>@Resources.Language.LabelCoin </label>
            <select class="uif-select form-control" id="FixedTermDeposit-Currency" data-val="true" data-source="@Url.Content("~/Person/Guarantee/GetCurrencies")" data-val-required="@Resources.Language.ErrorDocumentControlCurrency" data-id="Id" data-name="Description" name="Currency">
            </select>
            @Html.ValidationMessageFor(model => model.Currency)
        </div>
    </div>

    <div class="uif-row">
        <div class="uif-col-12">
            <label>@Resources.Language.LabelObservations</label>
            @Html.TextAreaFor(model => model.Observations, new { id = "FixedTermDeposit-Observations", cols = "12", rows = "2", style = "resize: none", @class = "changeToUpper" })
            @Html.ValidationMessageFor(model => model.Observations)
        </div>
    </div>
</form>
