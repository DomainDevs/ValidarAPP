/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Co.Application.Quotations.CoRequestCoinsuranceAccepted.dict v1.0
 * FileSize=9343 Header=276 CRC=578574440
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.MassiveServices.EEProvider.Entities
{
    /// <summary>
    /// Definición de entidad CoRequestCoinsuranceAccepted.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.MassiveServices.EEProvider.CoRequestCoinsuranceAccepted.dict"),
    Serializable(),
    DescriptionKey("CO_REQUEST_COINSURANCE_ACCEPTED_ENTITY"),
    TableMap(TableName="CO_REQUEST_COINSURANCE_ACCEPTED", Schema="REQ"),
    ]
    public partial class CoRequestCoinsuranceAccepted :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RequestEndorsementId = "RequestEndorsementId";
			public static readonly string RequestId = "RequestId";
			public static readonly string InsuranceCompanyId = "InsuranceCompanyId";
			public static readonly string PartCiaPercentage = "PartCiaPercentage";
			public static readonly string ExpensesPercentage = "ExpensesPercentage";
			public static readonly string PartMainPercentage = "PartMainPercentage";
			public static readonly string AnnexNumMain = "AnnexNumMain";
			public static readonly string PolicyNumMain = "PolicyNumMain";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="requestEndorsementId">Propiedad clave RequestEndorsementId.</param>
		/// <param name="requestId">Propiedad clave RequestId.</param>
		/// <param name="insuranceCompanyId">Propiedad clave InsuranceCompanyId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int requestEndorsementId, int requestId, decimal insuranceCompanyId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RequestEndorsementId, requestEndorsementId);
		    keys.Add(Properties.RequestId, requestId);
		    keys.Add(Properties.InsuranceCompanyId, insuranceCompanyId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="requestEndorsementId">Propiedad clave RequestEndorsementId.</param>
		/// <param name="requestId">Propiedad clave RequestId.</param>
		/// <param name="insuranceCompanyId">Propiedad clave InsuranceCompanyId.</param>
		public static PrimaryKey CreatePrimaryKey(int requestEndorsementId, int requestId, decimal insuranceCompanyId)
	    {
			return InternalCreatePrimaryKey<CoRequestCoinsuranceAccepted>(requestEndorsementId, requestId, insuranceCompanyId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PartCiaPercentage.
		/// </summary>
        private decimal _partCiaPercentage;
		/// <summary>
		/// Atributo para la propiedad ExpensesPercentage.
		/// </summary>
        private decimal _expensesPercentage;
		/// <summary>
		/// Atributo para la propiedad PartMainPercentage.
		/// </summary>
        private decimal _partMainPercentage;
		/// <summary>
		/// Atributo para la propiedad AnnexNumMain.
		/// </summary>
        private string _annexNumMain = null;
		/// <summary>
		/// Atributo para la propiedad PolicyNumMain.
		/// </summary>
        private string _policyNumMain = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="requestEndorsementId">RequestEndorsementId key property.</param>
		/// <param name="requestId">RequestId key property.</param>
		/// <param name="insuranceCompanyId">InsuranceCompanyId key property.</param>
	    public CoRequestCoinsuranceAccepted(int requestEndorsementId, int requestId, decimal insuranceCompanyId):
			this(CoRequestCoinsuranceAccepted.CreatePrimaryKey(requestEndorsementId, requestId, insuranceCompanyId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoRequestCoinsuranceAccepted(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RequestEndorsementId.
		/// </summary>
		/// <value>Propiedad RequestEndorsementId.</value>
	    [
		DescriptionKey("REQUEST_ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="REQUEST_ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int RequestEndorsementId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RequestEndorsementId];
		    }
		    set
		    {
				this._primaryKey[Properties.RequestEndorsementId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RequestId.
		/// </summary>
		/// <value>Propiedad RequestId.</value>
	    [
		DescriptionKey("REQUEST_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="REQUEST_ID", DbType=System.Data.DbType.String),
	    ]
        public int RequestId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RequestId];
		    }
		    set
		    {
				this._primaryKey[Properties.RequestId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuranceCompanyId.
		/// </summary>
		/// <value>Propiedad InsuranceCompanyId.</value>
	    [
		DescriptionKey("INSURANCE_COMPANY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INSURANCE_COMPANY_ID", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal InsuranceCompanyId
	    {
		    get
		    {
				return (decimal)this._primaryKey[Properties.InsuranceCompanyId];
		    }
		    set
		    {
				this._primaryKey[Properties.InsuranceCompanyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PartCiaPercentage.
		/// </summary>
		/// <value>Propiedad PartCiaPercentage.</value>
	    [
		DescriptionKey("PART_CIA_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PART_CIA_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PartCiaPercentage
	    {
		    get
		    {
			    return this._partCiaPercentage;
		    }
		    set
		    {
				this._partCiaPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExpensesPercentage.
		/// </summary>
		/// <value>Propiedad ExpensesPercentage.</value>
	    [
		DescriptionKey("EXPENSES_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXPENSES_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ExpensesPercentage
	    {
		    get
		    {
			    return this._expensesPercentage;
		    }
		    set
		    {
				this._expensesPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PartMainPercentage.
		/// </summary>
		/// <value>Propiedad PartMainPercentage.</value>
	    [
		DescriptionKey("PART_MAIN_PERCENTAGE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PART_MAIN_PCT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PartMainPercentage
	    {
		    get
		    {
			    return this._partMainPercentage;
		    }
		    set
		    {
				this._partMainPercentage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AnnexNumMain.
		/// </summary>
		/// <value>Propiedad AnnexNumMain.</value>
	    [
		DescriptionKey("ANNEX_NUM_MAIN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ANNEX_NUM_MAIN", DbType=System.Data.DbType.String),
	    ]
        public string AnnexNumMain
	    {
		    get
		    {
			    return this._annexNumMain;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.AnnexNumMain);
				}
				this._annexNumMain = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyNumMain.
		/// </summary>
		/// <value>Propiedad PolicyNumMain.</value>
	    [
		DescriptionKey("POLICY_NUM_MAIN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_NUM_MAIN", DbType=System.Data.DbType.String),
	    ]
        public string PolicyNumMain
	    {
		    get
		    {
			    return this._policyNumMain;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.PolicyNumMain);
				}
				this._policyNumMain = value;
			}
	    }

    }
}