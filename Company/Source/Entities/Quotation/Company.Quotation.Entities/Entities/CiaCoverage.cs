/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.Quotation.Entities.CiaCoverage.dict v1.0
 * FileSize=5321 Header=263 CRC=1477788130
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad CiaCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Quotation.Entities.CiaCoverage.dict"),
    Serializable(),
    DescriptionKey("CIA_COVERAGE_ENTITY"),
    TableMap(TableName="CIA_COVERAGE", Schema="QUO"),
    ]
    public partial class CiaCoverage :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CoverageId = "CoverageId";
			public static readonly string CoverageNum = "CoverageNum";
			public static readonly string IsPost = "IsPost";
			public static readonly string BeginDate = "BeginDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="coverageNum">Propiedad clave CoverageNum.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int coverageId, int coverageNum)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CoverageId, coverageId);
		    keys.Add(Properties.CoverageNum, coverageNum);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="coverageNum">Propiedad clave CoverageNum.</param>
		public static PrimaryKey CreatePrimaryKey(int coverageId, int coverageNum)
	    {
			return InternalCreatePrimaryKey<CiaCoverage>(coverageId, coverageNum);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IsPost.
		/// </summary>
        private bool _isPost;
		/// <summary>
		/// Atributo para la propiedad BeginDate.
		/// </summary>
        private DateTime? _beginDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="coverageId">CoverageId key property.</param>
		/// <param name="coverageNum">CoverageNum key property.</param>
	    public CiaCoverage(int coverageId, int coverageNum):
			this(CiaCoverage.CreatePrimaryKey(coverageId, coverageNum), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CiaCoverage(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId.
		/// </summary>
		/// <value>Propiedad CoverageId.</value>
	    [
		DescriptionKey("COVERAGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverageId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverageId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageNum.
		/// </summary>
		/// <value>Propiedad CoverageNum.</value>
	    [
		DescriptionKey("COVERAGE_NUM_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_NUM", DbType=System.Data.DbType.String),
	    ]
        public int CoverageNum
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverageNum];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageNum] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsPost.
		/// </summary>
		/// <value>Propiedad IsPost.</value>
	    [
		DescriptionKey("IS_POST_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_POST", DbType=System.Data.DbType.String),
	    ]
        public bool IsPost
	    {
		    get
		    {
			    return this._isPost;
		    }
		    set
		    {
				this._isPost = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeginDate.
		/// </summary>
		/// <value>Propiedad BeginDate.</value>
	    [
		DescriptionKey("BEGIN_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BEGIN_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? BeginDate
	    {
		    get
		    {
			    return this._beginDate;
		    }
		    set
		    {
				this._beginDate = value;
			}
	    }

    }
}