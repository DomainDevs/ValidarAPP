/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Quotation.CoMassiveLoadCollectiveVehicle.dict v1.0
 * FileSize=14799 Header=271 CRC=2976659163
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad CoMassiveLoadCollectiveVehicle.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Quotation.CoMassiveLoadCollectiveVehicle.dict"),
    Serializable(),
    DescriptionKey("CO_MASSIVE_LOAD_COLLECTIVE_VEHICLE_ENTITY"),
    TableMap(TableName="CO_MASSIVE_LOAD_COLLECTIVE_VEHICLE", Schema="QUO"),
    ]
    public partial class CoMassiveLoadCollectiveVehicle :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string MassiveLoadId = "MassiveLoadId";
			public static readonly string MassiveLoadCollectiveVehicleId = "MassiveLoadCollectiveVehicleId";
			public static readonly string LimitsRcCode = "LimitsRcCode";
			public static readonly string FasecoldaMakeId = "FasecoldaMakeId";
			public static readonly string FasecoldaModelId = "FasecoldaModelId";
			public static readonly string InSurname2 = "InSurname2";
			public static readonly string BeSurname2 = "BeSurname2";
			public static readonly string IncludeAssistenceCover = "IncludeAssistenceCover";
			public static readonly string ServiceTypeCode = "ServiceTypeCode";
			public static readonly string IncludeExcessRc = "IncludeExcessRc";
			public static readonly string ExcessRcCode = "ExcessRcCode";
			public static readonly string ToDate = "ToDate";
			public static readonly string InConsecutiveName = "InConsecutiveName";
			public static readonly string BeConsecutiveName = "BeConsecutiveName";
			public static readonly string IsTheInsuredTheBeneficiary = "IsTheInsuredTheBeneficiary";
			public static readonly string UniqueRate = "UniqueRate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="massiveLoadId">Propiedad clave MassiveLoadId.</param>
		/// <param name="massiveLoadCollectiveVehicleId">Propiedad clave MassiveLoadCollectiveVehicleId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int massiveLoadId, int massiveLoadCollectiveVehicleId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.MassiveLoadId, massiveLoadId);
		    keys.Add(Properties.MassiveLoadCollectiveVehicleId, massiveLoadCollectiveVehicleId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="massiveLoadId">Propiedad clave MassiveLoadId.</param>
		/// <param name="massiveLoadCollectiveVehicleId">Propiedad clave MassiveLoadCollectiveVehicleId.</param>
		public static PrimaryKey CreatePrimaryKey(int massiveLoadId, int massiveLoadCollectiveVehicleId)
	    {
			return InternalCreatePrimaryKey<CoMassiveLoadCollectiveVehicle>(massiveLoadId, massiveLoadCollectiveVehicleId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad LimitsRcCode.
		/// </summary>
        private int? _limitsRcCode = null;
		/// <summary>
		/// Atributo para la propiedad FasecoldaMakeId.
		/// </summary>
        private string _fasecoldaMakeId = null;
		/// <summary>
		/// Atributo para la propiedad FasecoldaModelId.
		/// </summary>
        private string _fasecoldaModelId = null;
		/// <summary>
		/// Atributo para la propiedad InSurname2.
		/// </summary>
        private string _inSurname2 = null;
		/// <summary>
		/// Atributo para la propiedad BeSurname2.
		/// </summary>
        private string _beSurname2 = null;
		/// <summary>
		/// Atributo para la propiedad IncludeAssistenceCover.
		/// </summary>
        private bool _includeAssistenceCover;
		/// <summary>
		/// Atributo para la propiedad ServiceTypeCode.
		/// </summary>
        private int? _serviceTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad IncludeExcessRc.
		/// </summary>
        private bool _includeExcessRc;
		/// <summary>
		/// Atributo para la propiedad ExcessRcCode.
		/// </summary>
        private int? _excessRcCode = null;
		/// <summary>
		/// Atributo para la propiedad ToDate.
		/// </summary>
        private DateTime? _toDate = null;
		/// <summary>
		/// Atributo para la propiedad InConsecutiveName.
		/// </summary>
        private int? _inConsecutiveName = null;
		/// <summary>
		/// Atributo para la propiedad BeConsecutiveName.
		/// </summary>
        private int? _beConsecutiveName = null;
		/// <summary>
		/// Atributo para la propiedad IsTheInsuredTheBeneficiary.
		/// </summary>
        private bool _isTheInsuredTheBeneficiary;
		/// <summary>
		/// Atributo para la propiedad UniqueRate.
		/// </summary>
        private decimal? _uniqueRate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="massiveLoadId">MassiveLoadId key property.</param>
		/// <param name="massiveLoadCollectiveVehicleId">MassiveLoadCollectiveVehicleId key property.</param>
	    public CoMassiveLoadCollectiveVehicle(int massiveLoadId, int massiveLoadCollectiveVehicleId):
			this(CoMassiveLoadCollectiveVehicle.CreatePrimaryKey(massiveLoadId, massiveLoadCollectiveVehicleId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoMassiveLoadCollectiveVehicle(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad MassiveLoadId.
		/// </summary>
		/// <value>Propiedad MassiveLoadId.</value>
	    [
		DescriptionKey("MASSIVE_LOAD_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="MASSIVE_LOAD_ID", DbType=System.Data.DbType.String),
	    ]
        public int MassiveLoadId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.MassiveLoadId];
		    }
		    set
		    {
				this._primaryKey[Properties.MassiveLoadId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad MassiveLoadCollectiveVehicleId.
		/// </summary>
		/// <value>Propiedad MassiveLoadCollectiveVehicleId.</value>
	    [
		DescriptionKey("MASSIVE_LOAD_COLLECTIVE_VEHICLE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="MASSIVE_LOAD_COLLECTIVE_VEHICLE_ID", DbType=System.Data.DbType.String),
	    ]
        public int MassiveLoadCollectiveVehicleId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.MassiveLoadCollectiveVehicleId];
		    }
		    set
		    {
				this._primaryKey[Properties.MassiveLoadCollectiveVehicleId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LimitsRcCode.
		/// </summary>
		/// <value>Propiedad LimitsRcCode.</value>
	    [
		DescriptionKey("LIMITS_RC_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LIMITS_RC_CD", DbType=System.Data.DbType.String),
	    ]
        public int? LimitsRcCode
	    {
		    get
		    {
			    return this._limitsRcCode;
		    }
		    set
		    {
				this._limitsRcCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FasecoldaMakeId.
		/// </summary>
		/// <value>Propiedad FasecoldaMakeId.</value>
	    [
		DescriptionKey("FASECOLDA_MAKE_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FASECOLDA_MAKE_ID", DbType=System.Data.DbType.String),
	    ]
        public string FasecoldaMakeId
	    {
		    get
		    {
			    return this._fasecoldaMakeId;
		    }
		    set
		    {
				this._fasecoldaMakeId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FasecoldaModelId.
		/// </summary>
		/// <value>Propiedad FasecoldaModelId.</value>
	    [
		DescriptionKey("FASECOLDA_MODEL_ID_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FASECOLDA_MODEL_ID", DbType=System.Data.DbType.String),
	    ]
        public string FasecoldaModelId
	    {
		    get
		    {
			    return this._fasecoldaModelId;
		    }
		    set
		    {
				this._fasecoldaModelId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InSurname2.
		/// </summary>
		/// <value>Propiedad InSurname2.</value>
	    [
		DescriptionKey("IN_SURNAME2_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IN_SURNAME_2", DbType=System.Data.DbType.String),
	    ]
        public string InSurname2
	    {
		    get
		    {
			    return this._inSurname2;
		    }
		    set
		    {
				this._inSurname2 = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeSurname2.
		/// </summary>
		/// <value>Propiedad BeSurname2.</value>
	    [
		DescriptionKey("BE_SURNAME2_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BE_SURNAME_2", DbType=System.Data.DbType.String),
	    ]
        public string BeSurname2
	    {
		    get
		    {
			    return this._beSurname2;
		    }
		    set
		    {
				this._beSurname2 = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncludeAssistenceCover.
		/// </summary>
		/// <value>Propiedad IncludeAssistenceCover.</value>
	    [
		DescriptionKey("INCLUDE_ASSISTENCE_COVER_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INCLUDE_ASSISTENCE_COVER", DbType=System.Data.DbType.String),
	    ]
        public bool IncludeAssistenceCover
	    {
		    get
		    {
			    return this._includeAssistenceCover;
		    }
		    set
		    {
				this._includeAssistenceCover = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ServiceTypeCode.
		/// </summary>
		/// <value>Propiedad ServiceTypeCode.</value>
	    [
		DescriptionKey("SERVICE_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SERVICE_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ServiceTypeCode
	    {
		    get
		    {
			    return this._serviceTypeCode;
		    }
		    set
		    {
				this._serviceTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncludeExcessRc.
		/// </summary>
		/// <value>Propiedad IncludeExcessRc.</value>
	    [
		DescriptionKey("INCLUDE_EXCESS_RC_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INCLUDE_EXCESS_RC", DbType=System.Data.DbType.String),
	    ]
        public bool IncludeExcessRc
	    {
		    get
		    {
			    return this._includeExcessRc;
		    }
		    set
		    {
				this._includeExcessRc = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExcessRcCode.
		/// </summary>
		/// <value>Propiedad ExcessRcCode.</value>
	    [
		DescriptionKey("EXCESS_RC_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXCESS_RC_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ExcessRcCode
	    {
		    get
		    {
			    return this._excessRcCode;
		    }
		    set
		    {
				this._excessRcCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ToDate.
		/// </summary>
		/// <value>Propiedad ToDate.</value>
	    [
		DescriptionKey("TO_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TO_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ToDate
	    {
		    get
		    {
			    return this._toDate;
		    }
		    set
		    {
				this._toDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InConsecutiveName.
		/// </summary>
		/// <value>Propiedad InConsecutiveName.</value>
	    [
		DescriptionKey("IN_CONSECUTIVE_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IN_CONSECUTIVE_NAME", DbType=System.Data.DbType.String),
	    ]
        public int? InConsecutiveName
	    {
		    get
		    {
			    return this._inConsecutiveName;
		    }
		    set
		    {
				this._inConsecutiveName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeConsecutiveName.
		/// </summary>
		/// <value>Propiedad BeConsecutiveName.</value>
	    [
		DescriptionKey("BE_CONSECUTIVE_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BE_CONSECUTIVE_NAME", DbType=System.Data.DbType.String),
	    ]
        public int? BeConsecutiveName
	    {
		    get
		    {
			    return this._beConsecutiveName;
		    }
		    set
		    {
				this._beConsecutiveName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsTheInsuredTheBeneficiary.
		/// </summary>
		/// <value>Propiedad IsTheInsuredTheBeneficiary.</value>
	    [
		DescriptionKey("IS_THE_INSURED_THE_BENEFICIARY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_THE_INSURED_THE_BENEFICIARY", DbType=System.Data.DbType.String),
	    ]
        public bool IsTheInsuredTheBeneficiary
	    {
		    get
		    {
			    return this._isTheInsuredTheBeneficiary;
		    }
		    set
		    {
				this._isTheInsuredTheBeneficiary = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UniqueRate.
		/// </summary>
		/// <value>Propiedad UniqueRate.</value>
	    [
		DescriptionKey("UNIQUE_RATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="UNIQUE_RATE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? UniqueRate
	    {
		    get
		    {
			    return this._uniqueRate;
		    }
		    set
		    {
				this._uniqueRate = value;
			}
	    }

    }
}