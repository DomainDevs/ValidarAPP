/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.QuotationServices.BusinessConfiguration.dict v1.0
 * FileSize=6418 Header=272 CRC=2156282219
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;

namespace Sistran.Company.Application.Quotation.Entities
{
    /// <summary>
    /// Definición de entidad BusinessConfiguration.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Quotation.BusinessConfiguration.dict"),
    Serializable(),
    DescriptionKey("BUSINESS_CONFIGURATION_ENTITY"),
    TableMap(TableName = "BUSINESS_CONFIGURATION", Schema = "QUO"),
    ]
    public partial class BusinessConfiguration :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BusinessConfigurationId = "BusinessConfigurationId";
            public static readonly string BusinessId = "BusinessId";
            public static readonly string RequestId = "RequestId";
            public static readonly string ProductId = "ProductId";
            public static readonly string GroupCoverageId = "GroupCoverageId";
            public static readonly string AssistanceCode = "AssistanceCode";
            public static readonly string ProductIdResponse = "ProductIdResponse";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="businessConfigurationId">Propiedad clave BusinessConfigurationId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int businessConfigurationId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BusinessConfigurationId, businessConfigurationId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="businessConfigurationId">Propiedad clave BusinessConfigurationId.</param>
        public static PrimaryKey CreatePrimaryKey(int businessConfigurationId)
        {
            return InternalCreatePrimaryKey<BusinessConfiguration>(businessConfigurationId);
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.BusinessConfigurationId, null);
            return new PrimaryKey(typeof(BusinessConfiguration), keys);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad BusinessId.
        /// </summary>
        private int _businessId;
        /// <summary>
        /// Atributo para la propiedad RequestId.
        /// </summary>
        private int? _requestId = null;
        /// <summary>
        /// Atributo para la propiedad ProductId.
        /// </summary>
        private int _productId;
        /// <summary>
        /// Atributo para la propiedad GroupCoverageId.
        /// </summary>
        private int _groupCoverageId;
        /// <summary>
        /// Atributo para la propiedad AssistanceCode.
        /// </summary>
        private int? _assistanceCode = null;
        /// <summary>
        /// Atributo para la propiedad ProductIdResponse.
        /// </summary>
        private string _productIdResponse = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="businessId">BusinessId key property.</param>
        public BusinessConfiguration() :
            this(BusinessConfiguration.CreatePrimaryKey(), null)
        {

        }


        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="businessConfigurationId">BusinessConfigurationId key property.</param>
        public BusinessConfiguration(int businessConfigurationId) :
            this(BusinessConfiguration.CreatePrimaryKey(businessConfigurationId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public BusinessConfiguration(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BusinessConfigurationId.
        /// </summary>
        /// <value>Propiedad BusinessConfigurationId.</value>
        [
        DescriptionKey("BUSINESS_CONFIGURATION_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BUSINESS_CONFIGURATION_ID", DbType = System.Data.DbType.String),
        ]
        public int BusinessConfigurationId
        {
            get
            {
                return (int)this._primaryKey[Properties.BusinessConfigurationId];
            }
            set
            {
                this._primaryKey[Properties.BusinessConfigurationId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BusinessId.
        /// </summary>
        /// <value>Propiedad BusinessId.</value>
        [
        DescriptionKey("BUSINESS_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "BUSINESS_ID", DbType = System.Data.DbType.String),
        ]
        public int BusinessId
        {
            get
            {
                return this._businessId;
            }
            set
            {
                this._businessId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RequestId.
        /// </summary>
        /// <value>Propiedad RequestId.</value>
        [
        DescriptionKey("REQUEST_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "REQUEST_ID", DbType = System.Data.DbType.String),
        ]
        public int? RequestId
        {
            get
            {
                return this._requestId;
            }
            set
            {
                this._requestId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductId.
        /// </summary>
        /// <value>Propiedad ProductId.</value>
        [
        DescriptionKey("PRODUCT_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PRODUCT_ID", DbType = System.Data.DbType.String),
        ]
        public int ProductId
        {
            get
            {
                return this._productId;
            }
            set
            {
                this._productId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad GroupCoverageId.
        /// </summary>
        /// <value>Propiedad GroupCoverageId.</value>
        [
        DescriptionKey("GROUP_COVERAGE_ID_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "GROUP_COVERAGE_ID", DbType = System.Data.DbType.String),
        ]
        public int GroupCoverageId
        {
            get
            {
                return this._groupCoverageId;
            }
            set
            {
                this._groupCoverageId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AssistanceCode.
        /// </summary>
        /// <value>Propiedad AssistanceCode.</value>
        [
        DescriptionKey("ASSISTANCE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ASSISTANCE_CD", DbType = System.Data.DbType.String),
        ]
        public int? AssistanceCode
        {
            get
            {
                return this._assistanceCode;
            }
            set
            {
                this._assistanceCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ProductIdResponse.
        /// </summary>
        /// <value>Propiedad ProductIdResponse.</value>
        [
        DescriptionKey("PRODUCT_ID_RESPONSE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PRODUCT_ID_RESPONSE", DbType = System.Data.DbType.String),
        ]
        public string ProductIdResponse
        {
            get
            {
                return this._productIdResponse;
            }
            set
            {
                this._productIdResponse = value;
            }
        }
    }
}