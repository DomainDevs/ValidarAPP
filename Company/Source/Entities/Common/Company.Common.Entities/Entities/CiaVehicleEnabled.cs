/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.Common.CiaVehicleEnabled.dict v1.0
 * FileSize=7810 Header=257 CRC=2375792283
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CiaVehicleEnabled.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Common.CiaVehicleEnabled.dict"),
    Serializable(),
    DescriptionKey("CIA_VEHICLE_ENABLED_ENTITY"),
    TableMap(TableName="CIA_VEHICLE_ENABLED", Schema="COMM"),
    ]
    public partial class CiaVehicleEnabled :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string VehicleEnabledId = "VehicleEnabledId";
			public static readonly string LicensePlate = "LicensePlate";
			public static readonly string EngineSerNo = "EngineSerNo";
			public static readonly string ChassisSerNo = "ChassisSerNo";
			public static readonly string IsEnabled = "IsEnabled";
			public static readonly string NonInsurableCauseId = "NonInsurableCauseId";
			public static readonly string FasecoldaCode = "FasecoldaCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="vehicleEnabledId">Propiedad clave VehicleEnabledId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int vehicleEnabledId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.VehicleEnabledId, vehicleEnabledId);

		    return new PrimaryKey<T>(keys);
	    }
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.VehicleEnabledId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="vehicleEnabledId">Propiedad clave VehicleEnabledId.</param>
        public static PrimaryKey CreatePrimaryKey(int vehicleEnabledId)
	    {
			return InternalCreatePrimaryKey<CiaVehicleEnabled>(vehicleEnabledId);
		}
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CiaVehicleEnabled>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad LicensePlate.
        /// </summary>
        private string _licensePlate = null;
		/// <summary>
		/// Atributo para la propiedad EngineSerNo.
		/// </summary>
        private string _engineSerNo = null;
		/// <summary>
		/// Atributo para la propiedad ChassisSerNo.
		/// </summary>
        private string _chassisSerNo = null;
		/// <summary>
		/// Atributo para la propiedad IsEnabled.
		/// </summary>
        private bool _isEnabled;
		/// <summary>
		/// Atributo para la propiedad NonInsurableCauseId.
		/// </summary>
        private int _nonInsurableCauseId;
		/// <summary>
		/// Atributo para la propiedad FasecoldaCode.
		/// </summary>
        private string _fasecoldaCode = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="vehicleEnabledId">VehicleEnabledId key property.</param>
	    public CiaVehicleEnabled(int vehicleEnabledId):
			this(CiaVehicleEnabled.CreatePrimaryKey(vehicleEnabledId), null)
	    {
	    }
        public CiaVehicleEnabled() :
           this(CiaVehicleEnabled.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CiaVehicleEnabled(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad VehicleEnabledId.
		/// </summary>
		/// <value>Propiedad VehicleEnabledId.</value>
	    [
		DescriptionKey("VEHICLE_ENABLED_ID_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType ="Identity"),
        ColumnMap(ColumnName="VEHICLE_ENABLED_ID", DbType=System.Data.DbType.String),
	    ]
        public int VehicleEnabledId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.VehicleEnabledId];
		    }
		    set
		    {
				this._primaryKey[Properties.VehicleEnabledId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LicensePlate.
		/// </summary>
		/// <value>Propiedad LicensePlate.</value>
	    [
		DescriptionKey("LICENSE_PLATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LICENSE_PLATE", DbType=System.Data.DbType.String),
	    ]
        public string LicensePlate
	    {
		    get
		    {
			    return this._licensePlate;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.LicensePlate);
				}
				this._licensePlate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EngineSerNo.
		/// </summary>
		/// <value>Propiedad EngineSerNo.</value>
	    [
		DescriptionKey("ENGINE_SER_NO_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENGINE_SER_NO", DbType=System.Data.DbType.String),
	    ]
        public string EngineSerNo
	    {
		    get
		    {
			    return this._engineSerNo;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.EngineSerNo);
				}
				this._engineSerNo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ChassisSerNo.
		/// </summary>
		/// <value>Propiedad ChassisSerNo.</value>
	    [
		DescriptionKey("CHASSIS_SER_NO_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CHASSIS_SER_NO", DbType=System.Data.DbType.String),
	    ]
        public string ChassisSerNo
	    {
		    get
		    {
			    return this._chassisSerNo;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.ChassisSerNo);
				}
				this._chassisSerNo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsEnabled.
		/// </summary>
		/// <value>Propiedad IsEnabled.</value>
	    [
		DescriptionKey("IS_ENABLED_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool IsEnabled
	    {
		    get
		    {
			    return this._isEnabled;
		    }
		    set
		    {
				this._isEnabled = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NonInsurableCauseId.
		/// </summary>
		/// <value>Propiedad NonInsurableCauseId.</value>
	    [
		DescriptionKey("NON_INSURABLE_CAUSE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="NON_INSURABLE_CAUSE_ID", DbType=System.Data.DbType.String),
	    ]
        public int NonInsurableCauseId
	    {
		    get
		    {
			    return this._nonInsurableCauseId;
		    }
		    set
		    {
				this._nonInsurableCauseId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FasecoldaCode.
		/// </summary>
		/// <value>Propiedad FasecoldaCode.</value>
	    [
		DescriptionKey("FASECOLDA_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FASECOLDA_CODE", DbType=System.Data.DbType.String),
	    ]
        public string FasecoldaCode
	    {
		    get
		    {
			    return this._fasecoldaCode;
		    }
		    set
		    {
				this._fasecoldaCode = value;
			}
	    }

    }
}