/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.Common.CiaNonInsurableCauses.dict v1.0
 * FileSize=4617 Header=261 CRC=1355729733
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CiaNonInsurableCauses.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Common.CiaNonInsurableCauses.dict"),
    Serializable(),
    DescriptionKey("CIA_NON_INSURABLE_CAUSES_ENTITY"),
    TableMap(TableName="CIA_NON_INSURABLE_CAUSES", Schema="COMM"),
    ]
    public partial class CiaNonInsurableCauses :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CauseId = "CauseId";
			public static readonly string CauseDescription = "CauseDescription";
			public static readonly string PrefixCode = "PrefixCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="causeId">Propiedad clave CauseId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int causeId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CauseId, causeId);

		    return new PrimaryKey<T>(keys);
	    }
        protected static PrimaryKey InternalCreatePrimaryKey<T>( )
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CauseId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="causeId">Propiedad clave CauseId.</param>
        public static PrimaryKey CreatePrimaryKey(int causeId)
	    {
			return InternalCreatePrimaryKey<CiaNonInsurableCauses>(causeId);
		}
        public static PrimaryKey CreatePrimaryKey( )
        {
            return InternalCreatePrimaryKey<CiaNonInsurableCauses>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CauseDescription.
        /// </summary>
        private string _causeDescription = null;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="causeId">CauseId key property.</param>
	    public CiaNonInsurableCauses(int causeId):
			this(CiaNonInsurableCauses.CreatePrimaryKey(causeId), null)
	    {
	    }
        public CiaNonInsurableCauses( ) :
            this(CiaNonInsurableCauses.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CiaNonInsurableCauses(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CauseId.
		/// </summary>
		/// <value>Propiedad CauseId.</value>
	    [
		DescriptionKey("CAUSE_ID_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType ="Identity"),
        ColumnMap(ColumnName="CAUSE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CauseId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CauseId];
		    }
		    set
		    {
				this._primaryKey[Properties.CauseId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CauseDescription.
		/// </summary>
		/// <value>Propiedad CauseDescription.</value>
	    [
		DescriptionKey("CAUSE_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CAUSE_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string CauseDescription
	    {
		    get
		    {
			    return this._causeDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.CauseDescription);
				}
				this._causeDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

    }
}