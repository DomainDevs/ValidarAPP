/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.ExternalInformationLog.dict v1.0
 * FileSize=8585 Header=259 CRC=2842197456
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System.Collections.Specialized;

namespace Sistran.Company.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad ExternalInformationLog.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Common.ExternalInformationLog.dict"),
    Serializable(),
    DescriptionKey("EXTERNAL_INFORMATION_LOG_ENTITY"),
    TableMap(TableName="EXTERNAL_INFORMATION_LOG", Schema="COMM"),
    ]
    public partial class ExternalInformationLog :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string GuidProcess = "GuidProcess";
            public static readonly string SuccessInvoke = "SuccessInvoke";
            public static readonly string ServerClient = "ServerClient";
			public static readonly string ServiceMethod = "ServiceMethod";
			public static readonly string JsonRequestParams = "JsonRequestParams";
			public static readonly string ErrorMessage = "ErrorMessage";
			public static readonly string TotalTimeResponse = "TotalTimeResponse";
			public static readonly string LocalRequestDate = "LocalRequestDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, id);
		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
        {
            return InternalCreatePrimaryKey<Business>(id);
        }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.Id, null);
            return new PrimaryKey(typeof(ExternalInformationLog), keys);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Id.
		/// </summary>
        private int _id;
		/// <summary>
		/// Atributo para la propiedad GuidProcess.
		/// </summary>
        private Guid? _guidProcess = null;
		/// <summary>
		/// Atributo para la propiedad SucsessInvoke.
		/// </summary>
        private bool _successInvoke;
		/// <summary>
		/// Atributo para la propiedad ServiceClient.
		/// </summary>
        private string _serverClient = null;
		/// <summary>
		/// Atributo para la propiedad ServiceMethod.
		/// </summary>
        private string _serviceMethod = null;
		/// <summary>
		/// Atributo para la propiedad JsonRequestParams.
		/// </summary>
        private string _jsonRequestParams = null;
		/// <summary>
		/// Atributo para la propiedad ErrorMessage.
		/// </summary>
        private string _errorMessage = null;
		/// <summary>
		/// Atributo para la propiedad TotalTimeResponse.
		/// </summary>
        private decimal? _totalTimeResponse = null;
		/// <summary>
		/// Atributo para la propiedad LocalRequestDate.
		/// </summary>
        private DateTime? _localRequestDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public ExternalInformationLog():
			this(ExternalInformationLog.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public ExternalInformationLog(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
			    return this._id;
		    }
		    set
		    {
				this._id = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad GuidProcess.
		/// </summary>
		/// <value>Propiedad GuidProcess.</value>
	    [
		DescriptionKey("GUID_PROCESS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="GUID_PROCESS", DbType=System.Data.DbType.Guid),
	    ]
        public Guid? GuidProcess
	    {
		    get
		    {
			    return this._guidProcess;
		    }
		    set
		    {
				this._guidProcess = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SucsessInvoke.
		/// </summary>
		/// <value>Propiedad SucsessInvoke.</value>
	    [
		DescriptionKey("SUCCESS_INVOKE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SUCCESS_INVOKE", DbType=System.Data.DbType.String),
	    ]
        public bool SuccessInvoke
	    {
		    get
		    {
			    return this._successInvoke;
		    }
		    set
		    {
				this._successInvoke = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ServiceClient.
		/// </summary>
		/// <value>Propiedad ServiceClient.</value>
	    [
		DescriptionKey("SERVICE_CLIENT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SERVICE_CLIENT", DbType=System.Data.DbType.String),
	    ]
        public string ServerClient
	    {
		    get
		    {
			    return this._serverClient;
		    }
		    set
		    {
				this._serverClient = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ServiceMethod.
		/// </summary>
		/// <value>Propiedad ServiceMethod.</value>
	    [
		DescriptionKey("SERVICE_METHOD_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SERVICE_METHOD", DbType=System.Data.DbType.String),
	    ]
        public string ServiceMethod
	    {
		    get
		    {
			    return this._serviceMethod;
		    }
		    set
		    {
				this._serviceMethod = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JsonRequestParams.
		/// </summary>
		/// <value>Propiedad JsonRequestParams.</value>
	    [
		DescriptionKey("JSON_REQUEST_PARAMS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="JSON_REQUEST_PARAMS", DbType=System.Data.DbType.String),
	    ]
        public string JsonRequestParams
	    {
		    get
		    {
			    return this._jsonRequestParams;
		    }
		    set
		    {
				this._jsonRequestParams = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ErrorMessage.
		/// </summary>
		/// <value>Propiedad ErrorMessage.</value>
	    [
		DescriptionKey("ERROR_MESSAGE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ERROR_MESSAGE", DbType=System.Data.DbType.String),
	    ]
        public string ErrorMessage
	    {
		    get
		    {
			    return this._errorMessage;
		    }
		    set
		    {
				this._errorMessage = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalTimeResponse.
		/// </summary>
		/// <value>Propiedad TotalTimeResponse.</value>
	    [
		DescriptionKey("TOTAL_TIME_RESPONSE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="TOTAL_TIME_RESPONSE", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? TotalTimeResponse
	    {
		    get
		    {
			    return this._totalTimeResponse;
		    }
		    set
		    {
				this._totalTimeResponse = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LocalRequestDate.
		/// </summary>
		/// <value>Propiedad LocalRequestDate.</value>
	    [
		DescriptionKey("LOCAL_REQUEST_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LOCAL_REQUEST_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? LocalRequestDate
	    {
		    get
		    {
			    return this._localRequestDate;
		    }
		    set
		    {
				this._localRequestDate = value;
			}
	    }

    }
}