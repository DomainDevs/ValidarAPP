/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.CommonServices.Business.dict v1.0
 * FileSize=3626 Header=265 CRC=1710243814
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System.Collections.Specialized;

namespace Sistran.Company.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad Business.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Common.Business.dict"),
    Serializable(),
    DescriptionKey("BUSINESS_ENTITY"),
    TableMap(TableName = "BUSINESS", Schema = "COMM"),
    ]
    public partial class Business :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string BusinessId = "BusinessId";
            public static readonly string Description = "Description";
            public static readonly string IsEnabled = "IsEnabled";
            public static readonly string PrefixCode = "PrefixCode";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="businessId">Propiedad clave BusinessId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int businessId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.BusinessId, businessId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="businessId">Propiedad clave BusinessId.</param>
        public static PrimaryKey CreatePrimaryKey(int businessId)
        {
            return InternalCreatePrimaryKey<Business>(businessId);
        }

        public static PrimaryKey CreatePrimaryKey()
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.BusinessId, null);
            return new PrimaryKey(typeof(Business), keys);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Description.
        /// </summary>
        private string _description = null;
        /// <summary>
        /// Atributo para la propiedad IsEnabled.
        /// </summary>
        private bool? _isEnabled = null;
        /// <summary>
        /// Atributo para la propiedad PrefixCode.
        /// </summary>
        private int? _prefixCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="businessId">BusinessId key property.</param>
        public Business() :
            this(Business.CreatePrimaryKey(), null)
        {

        }


        public Business(int businessId) :
            this(Business.CreatePrimaryKey(businessId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Business(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad BusinessId.
        /// </summary>
        /// <value>Propiedad BusinessId.</value>
        [
        DescriptionKey("BUSINESS_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BUSINESS_ID", DbType = System.Data.DbType.String),
        ]
        public int BusinessId
        {
            get
            {
                return (int)this._primaryKey[Properties.BusinessId];
            }
            set
            {
                this._primaryKey[Properties.BusinessId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
        DescriptionKey("DESCRIPTION_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "DESCRIPTION", DbType = System.Data.DbType.String),
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
                }
                this._description = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsEnabled.
        /// </summary>
        /// <value>Propiedad IsEnabled.</value>
        [
        DescriptionKey("IS_ENABLED_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IS_ENABLED", DbType = System.Data.DbType.String),
        ]
        public bool? IsEnabled
        {
            get
            {
                return this._isEnabled;
            }
            set
            {
                this._isEnabled = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PrefixCode.
        /// </summary>
        /// <value>Propiedad PrefixCode.</value>
        [
        DescriptionKey("PREFIX_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PREFIX_CD", DbType = System.Data.DbType.String),
        ]
        public int? PrefixCode
        {
            get
            {
                return this._prefixCode;
            }
            set
            {
                this._prefixCode = value;
            }
        }
    }
}