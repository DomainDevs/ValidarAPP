/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.Common.JustificationReason.dict v1.0
 * FileSize=5718 Header=258 CRC=455994635
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad JustificationReason.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Common.JustificationReason.dict"),
    Serializable(),
    DescriptionKey("JUSTIFICATION_REASON_ENTITY"),
    TableMap(TableName="JUSTIFICATION_REASON", Schema="COMM"),
    ]
    public partial class JustificationReason :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string JustificationReasonCode = "JustificationReasonCode";
			public static readonly string Description = "Description";
			public static readonly string SmallDescription = "SmallDescription";
			public static readonly string Enabled = "Enabled";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="justificationReasonCode">Propiedad clave JustificationReasonCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int justificationReasonCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.JustificationReasonCode, justificationReasonCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="justificationReasonCode">Propiedad clave JustificationReasonCode.</param>
		public static PrimaryKey CreatePrimaryKey(int justificationReasonCode)
	    {
			return InternalCreatePrimaryKey<JustificationReason>(justificationReasonCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad SmallDescription.
		/// </summary>
        private string _smallDescription = null;
		/// <summary>
		/// Atributo para la propiedad Enabled.
		/// </summary>
        private bool _enabled;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="justificationReasonCode">JustificationReasonCode key property.</param>
	    public JustificationReason(int justificationReasonCode):
			this(JustificationReason.CreatePrimaryKey(justificationReasonCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public JustificationReason(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad JustificationReasonCode.
		/// </summary>
		/// <value>Propiedad JustificationReasonCode.</value>
	    [
		DescriptionKey("JUSTIFICATION_REASON_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="JUSTIFICATION_REASON_CD", DbType=System.Data.DbType.String),
	    ]
        public int JustificationReasonCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.JustificationReasonCode];
		    }
		    set
		    {
				this._primaryKey[Properties.JustificationReasonCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SmallDescription.
		/// </summary>
		/// <value>Propiedad SmallDescription.</value>
	    [
		DescriptionKey("SMALL_DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SMALL_DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string SmallDescription
	    {
		    get
		    {
			    return this._smallDescription;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.SmallDescription);
				}
				this._smallDescription = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Enabled.
		/// </summary>
		/// <value>Propiedad Enabled.</value>
	    [
		DescriptionKey("ENABLED_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENABLED", DbType=System.Data.DbType.String),
	    ]
        public bool Enabled
	    {
		    get
		    {
			    return this._enabled;
		    }
		    set
		    {
				this._enabled = value;
			}
	    }

    }
}