/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.Common.CiaAsynchronousProcessListRiskMassiveLoad.dict v1.0
 * FileSize=10541 Header=272 CRC=657736970
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Common.Entities
{
    /// <summary>
    /// Definición de entidad CiaAsynchronousProcessListRiskMassiveLoad.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Common.AsynchronousProcessListRiskMassiveLoad.dict"),
    Serializable(),
    DescriptionKey("CIA_ASYNCHRONOUS_PROCESS_LISTRISK_MASSIVE_LOAD_ENTITY"),
    TableMap(TableName= "CIA_ASYNCHRONOUS_PROCESS_LISTRISK_MASSIVE_LOAD", Schema= "COMM"),
    ]
    public partial class CiaAsynchronousProcessListRiskMassiveLoad :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string Id = "Id";
			public static readonly string ProcessId = "ProcessId";
			public static readonly string TotalRows = "TotalRows";
			public static readonly string FileName = "FileName";
			public static readonly string ListCodeId = "ListCodeId";
            public static readonly string RiskListTypeCd = "RiskListTypeCd";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="id">Propiedad clave Id.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int id)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.Id, id);

		    return new PrimaryKey<T>(keys);
	    }

        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.Id, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="id">Propiedad clave Id.</param>
        public static PrimaryKey CreatePrimaryKey(int id)
	    {
			return InternalCreatePrimaryKey<CiaAsynchronousProcessListRiskMassiveLoad>(id);
		}

        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CiaAsynchronousProcessListRiskMassiveLoad>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ProcessId.
        /// </summary>
        private int _processId;
		/// <summary>
		/// Atributo para la propiedad TotalRows.
		/// </summary>
        private int _totalRows;
		/// <summary>
		/// Atributo para la propiedad FileName.
		/// </summary>
        private string _fileName = null;
        /// <summary>
        /// Atributo para la propiedad listCodeId.
        /// </summary>
        private int _listCodeId;
        /// <summary>
        /// Atributo para la propiedad RiskListTypeCd.
        /// </summary>
        private int _riskListTypeCd;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="id">Id key property.</param>
        public CiaAsynchronousProcessListRiskMassiveLoad(int id):
			this(CiaAsynchronousProcessListRiskMassiveLoad.CreatePrimaryKey(id), null)
	    {
	    }

        public CiaAsynchronousProcessListRiskMassiveLoad() :
            this(CiaAsynchronousProcessListRiskMassiveLoad.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CiaAsynchronousProcessListRiskMassiveLoad(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad Id.
		/// </summary>
		/// <value>Propiedad Id.</value>
	    [
		DescriptionKey("ID_PROPERTY"),
		PersistentProperty(IsKey = true, KeyType = "Identity"),
        ColumnMap(ColumnName="ID", DbType=System.Data.DbType.String),
	    ]
        public int Id
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.Id];
		    }
		    set
		    {
				this._primaryKey[Properties.Id] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProcessId.
		/// </summary>
		/// <value>Propiedad ProcessId.</value>
	    [
		DescriptionKey("PROCESS_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROCESS_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProcessId
	    {
		    get
		    {
			    return this._processId;
		    }
		    set
		    {
				this._processId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TotalRows.
		/// </summary>
		/// <value>Propiedad TotalRows.</value>
	    [
		DescriptionKey("TOTAL_ROWS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TOTAL_ROWS", DbType=System.Data.DbType.String),
	    ]
        public int TotalRows
	    {
		    get
		    {
			    return this._totalRows;
		    }
		    set
		    {
				this._totalRows = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad FileName.
		/// </summary>
		/// <value>Propiedad FileName.</value>
	    [
		DescriptionKey("FILE_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FILE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string FileName
	    {
		    get
		    {
			    return this._fileName;
		    }
		    set
		    {
				this._fileName = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LisCodeId.
        /// </summary>
        /// <value>Propiedad LisCodeId.</value>
        [
        DescriptionKey("LIST_CODE_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LIST_CODE_ID", DbType=System.Data.DbType.String),
	    ]
        public int ListCodeId
        {
		    get
		    {
			    return this._listCodeId;
		    }
		    set
		    {
				this._listCodeId = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad RiskListTypeCd.
        /// </summary>
        /// <value>Propiedad LisCodeId.</value>
        [
        DescriptionKey("RISK_LIST_TYPE_CD_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RISK_LIST_TYPE_CD", DbType = System.Data.DbType.Int16),
        ]
        public int RiskListTypeCd
        {
            get
            {
                return this._riskListTypeCd;
            }
            set
            {
                this._riskListTypeCd = value;
            }
        }
    }
}