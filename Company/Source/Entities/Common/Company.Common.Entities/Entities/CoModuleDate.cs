/******************************************
 * Code generated by DictEditor v1.0.3.1
 * Template: Sistran.Company.Application.CommonServices.CoModuleDate.dict v1.0
 * FileSize=11928 Header=259 CRC=1113444664
 ******************************************/
using System;
using System.Collections;
using System.Collections.Specialized;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Common.Entities
{
	/// <summary>
	/// Definición de entidad CoModuleDate.
	/// </summary>
	[
    PersistentClass("Sistran.Company.Application.Common.CoModuleDate.dict"),
	Serializable(),
	DescriptionKey("CO_MODULE_DATE_ENTITY")
	]
    public class CoModuleDate :
		BusinessObject
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public sealed class Properties
		{
			public static readonly string CeilingYyyy = "CeilingYyyy";
			public static readonly string LastClosingYyyy = "LastClosingYyyy";
			public static readonly string OfflineCeilingYyyy = "OfflineCeilingYyyy";
			public static readonly string TypifiedSeatLastNum = "TypifiedSeatLastNum";
			public static readonly string LastClosingMm = "LastClosingMm";
			public static readonly string ModuleCode = "ModuleCode";
			public static readonly string OfflineCeilingMm = "OfflineCeilingMm";
			public static readonly string Description = "Description";
			public static readonly string CeilingMm = "CeilingMm";

			private Properties()
			{
			}
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="moduleCode">Propiedad clave ModuleCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass, decimal moduleCode)
	    {
		    ListDictionary keys = new ListDictionary();
		    keys.Add(Properties.ModuleCode, moduleCode);

		    return new PrimaryKey(concreteClass, keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="moduleCode">Propiedad clave ModuleCode.</param>
		public static PrimaryKey CreatePrimaryKey(decimal moduleCode)
	    {
			return InternalCreatePrimaryKey(typeof(CoModuleDate), moduleCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad CeilingYyyy.
		/// </summary>
        private int? _ceilingYyyy = null;
		/// <summary>
		/// Atributo para la propiedad LastClosingYyyy.
		/// </summary>
        private int? _lastClosingYyyy = null;
		/// <summary>
		/// Atributo para la propiedad OfflineCeilingYyyy.
		/// </summary>
        private int? _offlineCeilingYyyy = null;
		/// <summary>
		/// Atributo para la propiedad TypifiedSeatLastNum.
		/// </summary>
        private decimal? _typifiedSeatLastNum = null;
		/// <summary>
		/// Atributo para la propiedad LastClosingMm.
		/// </summary>
        private int? _lastClosingMm = null;
		/// <summary>
		/// Atributo para la propiedad OfflineCeilingMm.
		/// </summary>
        private int? _offlineCeilingMm = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad CeilingMm.
		/// </summary>
        private int? _ceilingMm = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="moduleCode">ModuleCode key property.</param>
	    public CoModuleDate(decimal moduleCode):
			this(CoModuleDate.CreatePrimaryKey(moduleCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoModuleDate(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CeilingYyyy.
		/// </summary>
		/// <value>Propiedad CeilingYyyy.</value>
	    [
			DescriptionKey("CEILING_YYYY_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public int? CeilingYyyy
	    {
		    get
		    {
			    return this._ceilingYyyy;
		    }
		    set
		    {
				this._ceilingYyyy = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LastClosingYyyy.
		/// </summary>
		/// <value>Propiedad LastClosingYyyy.</value>
	    [
			DescriptionKey("LAST_CLOSING_YYYY_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public int? LastClosingYyyy
	    {
		    get
		    {
			    return this._lastClosingYyyy;
		    }
		    set
		    {
				this._lastClosingYyyy = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OfflineCeilingYyyy.
		/// </summary>
		/// <value>Propiedad OfflineCeilingYyyy.</value>
	    [
			DescriptionKey("OFFLINE_CEILING_YYYY_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public int? OfflineCeilingYyyy
	    {
		    get
		    {
			    return this._offlineCeilingYyyy;
		    }
		    set
		    {
				this._offlineCeilingYyyy = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TypifiedSeatLastNum.
		/// </summary>
		/// <value>Propiedad TypifiedSeatLastNum.</value>
	    [
			DescriptionKey("TYPIFIED_SEAT_LAST_NUM_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public decimal? TypifiedSeatLastNum
	    {
		    get
		    {
			    return this._typifiedSeatLastNum;
		    }
		    set
		    {
				this._typifiedSeatLastNum = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LastClosingMm.
		/// </summary>
		/// <value>Propiedad LastClosingMm.</value>
	    [
			DescriptionKey("LAST_CLOSING_MM_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public int? LastClosingMm
	    {
		    get
		    {
			    return this._lastClosingMm;
		    }
		    set
		    {
				this._lastClosingMm = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ModuleCode.
		/// </summary>
		/// <value>Propiedad ModuleCode.</value>
	    [
			DescriptionKey("MODULE_CODE_PROPERTY"),
			PersistentProperty(IsKey = true)
	    ]
        public decimal ModuleCode
	    {
		    get
		    {
				return (decimal)this._primaryKey[Properties.ModuleCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ModuleCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad OfflineCeilingMm.
		/// </summary>
		/// <value>Propiedad OfflineCeilingMm.</value>
	    [
			DescriptionKey("OFFLINE_CEILING_MM_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public int? OfflineCeilingMm
	    {
		    get
		    {
			    return this._offlineCeilingMm;
		    }
		    set
		    {
				this._offlineCeilingMm = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
			DescriptionKey("DESCRIPTION_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CeilingMm.
		/// </summary>
		/// <value>Propiedad CeilingMm.</value>
	    [
			DescriptionKey("CEILING_MM_PROPERTY"),
			PersistentProperty(IsNullable = true)
	    ]
        public int? CeilingMm
	    {
		    get
		    {
			    return this._ceilingMm;
		    }
		    set
		    {
				this._ceilingMm = value;
			}
	    }

		/// <summary>
		/// Establecer los valores de las propiedades que no forman parte de la clave o identificador de la instancia.
		/// </summary>
		/// <param name="values">
		/// Valores para establecer el estado de la instancia.
		/// </param>
		public override void SetPropertyValues(IDictionary values)
		{
			// Set base properties
			base.SetPropertyValues(values);

			object value;
			value = values[Properties.CeilingYyyy];
			if(value == null)
			{
				this.CeilingYyyy = null;
			}
			else
			{
				this.CeilingYyyy = (int)value;
			}

			value = values[Properties.LastClosingYyyy];
			if(value == null)
			{
				this.LastClosingYyyy = null;
			}
			else
			{
				this.LastClosingYyyy = (int)value;
			}

			value = values[Properties.OfflineCeilingYyyy];
			if(value == null)
			{
				this.OfflineCeilingYyyy = null;
			}
			else
			{
				this.OfflineCeilingYyyy = (int)value;
			}

			value = values[Properties.TypifiedSeatLastNum];
			if(value == null)
			{
				this.TypifiedSeatLastNum = null;
			}
			else
			{
				this.TypifiedSeatLastNum = (decimal)value;
			}

			value = values[Properties.LastClosingMm];
			if(value == null)
			{
				this.LastClosingMm = null;
			}
			else
			{
				this.LastClosingMm = (int)value;
			}

			value = values[Properties.OfflineCeilingMm];
			if(value == null)
			{
				this.OfflineCeilingMm = null;
			}
			else
			{
				this.OfflineCeilingMm = (int)value;
			}

			this.Description = (string)values[Properties.Description];
			value = values[Properties.CeilingMm];
			if(value == null)
			{
				this.CeilingMm = null;
			}
			else
			{
				this.CeilingMm = (int)value;
			}

		}

		/// <summary>
		/// Obtiene el estado a partir de los valores de la instancia de la entidad.
		/// </summary>
		/// <returns>
		/// Diccionario con los valores de las propiedades.
		/// </returns>
		public override IDictionary GetPropertyValues()
		{
			// Get base properties
			IDictionary values = base.GetPropertyValues();

			if(!this.CeilingYyyy.HasValue)
			{
				values.Add(Properties.CeilingYyyy, null);
			}
			else
			{
				values.Add(Properties.CeilingYyyy, this.CeilingYyyy.Value);
			}
			if(!this.LastClosingYyyy.HasValue)
			{
				values.Add(Properties.LastClosingYyyy, null);
			}
			else
			{
				values.Add(Properties.LastClosingYyyy, this.LastClosingYyyy.Value);
			}
			if(!this.OfflineCeilingYyyy.HasValue)
			{
				values.Add(Properties.OfflineCeilingYyyy, null);
			}
			else
			{
				values.Add(Properties.OfflineCeilingYyyy, this.OfflineCeilingYyyy.Value);
			}
			if(!this.TypifiedSeatLastNum.HasValue)
			{
				values.Add(Properties.TypifiedSeatLastNum, null);
			}
			else
			{
				values.Add(Properties.TypifiedSeatLastNum, this.TypifiedSeatLastNum.Value);
			}
			if(!this.LastClosingMm.HasValue)
			{
				values.Add(Properties.LastClosingMm, null);
			}
			else
			{
				values.Add(Properties.LastClosingMm, this.LastClosingMm.Value);
			}
			if(!this.OfflineCeilingMm.HasValue)
			{
				values.Add(Properties.OfflineCeilingMm, null);
			}
			else
			{
				values.Add(Properties.OfflineCeilingMm, this.OfflineCeilingMm.Value);
			}
			values.Add(Properties.Description, this.Description);
			if(!this.CeilingMm.HasValue)
			{
				values.Add(Properties.CeilingMm, null);
			}
			else
			{
				values.Add(Properties.CeilingMm, this.CeilingMm.Value);
			}

			return values;
		}
		
    }
}