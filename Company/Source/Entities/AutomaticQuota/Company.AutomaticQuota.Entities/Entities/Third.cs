/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.AutomaticQuota.Entities.Third.dict v1.0
 * FileSize=8727 Header=262 CRC=3692283988
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.AutomaticQuota.Entities
{
    /// <summary>
    /// Definición de entidad Third.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.AutomaticQuota.Entities.Third.dict"),
    Serializable(),
    DescriptionKey("THIRD_ENTITY"),
    TableMap(TableName="THIRD", Schema="AQ"),
    ]
    public partial class Third :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ThirdCode = "ThirdCode";
            public static readonly string AutomaticQuotaCode = "AutomaticQuotaCode";
            public static readonly string RestrictiveListCode = "RestrictiveListCode";
			public static readonly string RiskCenterListCode = "RiskCenterListCode";
			public static readonly string PromissoryNoteSignatureCode = "PromissoryNoteSignatureCode";
			public static readonly string ReportListSisconcCode = "ReportListSisconcCode";
			public static readonly string CifinDate = "CifinDate";
			public static readonly string PrincipalDeptor = "PrincipalDeptor";
			public static readonly string Creditors = "Creditors";
			public static readonly string Total = "Total";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="thirdCode">Propiedad clave ThirdCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int thirdCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ThirdCode, thirdCode);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="thirdCode">Propiedad clave ThirdCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.ThirdCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="thirdCode">Propiedad clave ThirdCode.</param>
        public static PrimaryKey CreatePrimaryKey(int thirdCode)
	    {
			return InternalCreatePrimaryKey<Third>(thirdCode);
		}

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="thirdCode">Propiedad clave ThirdCode.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<Third>();
        }
        #endregion

        //*** Object Attributes ********************************
        /// <summary>
        /// Atributo para la propiedad AutomaticQuotaCode.
        /// </summary>
        private int _automaticQuotaCode;
        /// <summary>
        /// Atributo para la propiedad RestrictiveListCode.
        /// </summary>
        private int _restrictiveListCode;
		/// <summary>
		/// Atributo para la propiedad RiskCenterListCode.
		/// </summary>
        private int _riskCenterListCode;
		/// <summary>
		/// Atributo para la propiedad PromissoryNoteSignatureCode.
		/// </summary>
        private int _promissoryNoteSignatureCode;
		/// <summary>
		/// Atributo para la propiedad ReportListSisconcCode.
		/// </summary>
        private int _reportListSisconcCode;
		/// <summary>
		/// Atributo para la propiedad CifinDate.
		/// </summary>
        private DateTime _cifinDate;
		/// <summary>
		/// Atributo para la propiedad PrincipalDeptor.
		/// </summary>
        private decimal _principalDeptor;
		/// <summary>
		/// Atributo para la propiedad Creditors.
		/// </summary>
        private decimal _creditors;
		/// <summary>
		/// Atributo para la propiedad Total.
		/// </summary>
        private decimal _total;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="thirdCode">ThirdCode key property.</param>
	    public Third(int thirdCode):
			this(Third.CreatePrimaryKey(thirdCode), null)
	    {
	    }

        /// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="thirdCode">ThirdCode key property.</param>
	    public Third() :
            this(Third.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public Third(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ThirdCode.
		/// </summary>
		/// <value>Propiedad ThirdCode.</value>
	    [
		DescriptionKey("THIRD_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="THIRD_CD", DbType=System.Data.DbType.String),
	    ]
        public int ThirdCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ThirdCode];
		    }
		    set
		    {
				this._primaryKey[Properties.ThirdCode] = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AutomaticQuotaCode.
        /// </summary>
        /// <value>Propiedad AutomaticQuotaCode.</value>
        [
        DescriptionKey("AUTOMATIC_QUOTA_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "AUTOMATIC_QUOTA_CD", DbType = System.Data.DbType.String),
        ]
        public int AutomaticQuotaCode
        {
            get
            {
                return this._automaticQuotaCode;
            }
            set
            {
                this._automaticQuotaCode = value;
            }
        }
        /// <summary>
        /// Devuelve o setea el valor de la propiedad RestrictiveListCode.
        /// </summary>
        /// <value>Propiedad RestrictiveListCode.</value>
        [
		DescriptionKey("RESTRICTIVE_LIST_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RESTRICTIVE_LIST_CD", DbType=System.Data.DbType.String),
	    ]
        public int RestrictiveListCode
	    {
		    get
		    {
			    return this._restrictiveListCode;
		    }
		    set
		    {
				this._restrictiveListCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskCenterListCode.
		/// </summary>
		/// <value>Propiedad RiskCenterListCode.</value>
	    [
		DescriptionKey("RISK_CENTER_LIST_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="RISK_CENTER_LIST_CD", DbType=System.Data.DbType.String),
	    ]
        public int RiskCenterListCode
	    {
		    get
		    {
			    return this._riskCenterListCode;
		    }
		    set
		    {
				this._riskCenterListCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PromissoryNoteSignatureCode.
		/// </summary>
		/// <value>Propiedad PromissoryNoteSignatureCode.</value>
	    [
		DescriptionKey("PROMISSORY_NOTE_SIGNATURE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PROMISSORY_NOTE_SIGNATURE_CD", DbType=System.Data.DbType.String),
	    ]
        public int PromissoryNoteSignatureCode
	    {
		    get
		    {
			    return this._promissoryNoteSignatureCode;
		    }
		    set
		    {
				this._promissoryNoteSignatureCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ReportListSisconcCode.
		/// </summary>
		/// <value>Propiedad ReportListSisconcCode.</value>
	    [
		DescriptionKey("REPORT_LIST_SISCONC_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="REPORT_LIST_SISCONC_CD", DbType=System.Data.DbType.String),
	    ]
        public int ReportListSisconcCode
	    {
		    get
		    {
			    return this._reportListSisconcCode;
		    }
		    set
		    {
				this._reportListSisconcCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CifinDate.
		/// </summary>
		/// <value>Propiedad CifinDate.</value>
	    [
		DescriptionKey("CIFIN_DATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CIFIN_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime CifinDate
	    {
		    get
		    {
			    return this._cifinDate;
		    }
		    set
		    {
				this._cifinDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrincipalDeptor.
		/// </summary>
		/// <value>Propiedad PrincipalDeptor.</value>
	    [
		DescriptionKey("PRINCIPAL_DEPTOR_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="PRINCIPAL_DEPTOR", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal PrincipalDeptor
	    {
		    get
		    {
			    return this._principalDeptor;
		    }
		    set
		    {
				this._principalDeptor = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Creditors.
		/// </summary>
		/// <value>Propiedad Creditors.</value>
	    [
		DescriptionKey("CREDITORS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CREDITORS", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Creditors
	    {
		    get
		    {
			    return this._creditors;
		    }
		    set
		    {
				this._creditors = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Total.
		/// </summary>
		/// <value>Propiedad Total.</value>
	    [
		DescriptionKey("TOTAL_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TOTAL", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal Total
	    {
		    get
		    {
			    return this._total;
		    }
		    set
		    {
				this._total = value;
			}
	    }

    }
}