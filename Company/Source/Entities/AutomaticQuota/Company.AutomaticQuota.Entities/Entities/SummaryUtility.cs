/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.AutomaticQuota.Entities.SummaryUtility.dict v1.0
 * FileSize=5999 Header=271 CRC=2743147594
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.AutomaticQuota.Entities
{
    /// <summary>
    /// Definición de entidad SummaryUtility.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.AutomaticQuota.Entities.SummaryUtility.dict"),
    Serializable(),
    DescriptionKey("SUMMARY_UTILITY_ENTITY"),
    TableMap(TableName = "SUMMARY_UTILITY", Schema = "AQ"),
    ]
    public partial class SummaryUtility :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string SummaryUtilityCode = "SummaryUtilityCode";
            public static readonly string AutomaticQuotaCode = "AutomaticQuotaCode";
            public static readonly string UtilityDetailsCode = "UtilityDetailsCode";
            public static readonly string StartValue = "StartValue";
            public static readonly string EndValue = "EndValue";
            public static readonly string AbsoluteValue = "AbsoluteValue";
            public static readonly string RelativeValue = "RelativeValue";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="summaryUtilityCode">Propiedad clave SummaryUtilityCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int summaryUtilityCode)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SummaryUtilityCode, summaryUtilityCode);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="summaryUtilityCode">Propiedad clave SummaryUtilityCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SummaryUtilityCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="summaryUtilityCode">Propiedad clave SummaryUtilityCode.</param>
        public static PrimaryKey CreatePrimaryKey(int summaryUtilityCode)
        {
            return InternalCreatePrimaryKey<SummaryUtility>(summaryUtilityCode);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="summaryUtilityCode">Propiedad clave SummaryUtilityCode.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<SummaryUtility>();
        }
        #endregion

        //*** Object Attributes ********************************
        /// <summary>
        /// Atributo para la propiedad AutomaticQuotaCode.
        /// </summary>
        private int _automaticQuotaCode;
        /// <summary>
        /// Atributo para la propiedad UtilityDetailsCode.
        /// </summary>
        private int _utilityDetailsCode;
        /// <summary>
        /// Atributo para la propiedad StartValue.
        /// </summary>
        private decimal _startValue;
        /// <summary>
        /// Atributo para la propiedad EndValue.
        /// </summary>
        private decimal _endValue;
        /// <summary>
        /// Atributo para la propiedad AbsoluteValue.
        /// </summary>
        private decimal _absoluteValue;
        /// <summary>
        /// Atributo para la propiedad RelativeValue.
        /// </summary>
        private decimal _relativeValue;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="summaryUtilityCode">SummaryUtilityCode key property.</param>
        public SummaryUtility(int summaryUtilityCode) :
            this(SummaryUtility.CreatePrimaryKey(summaryUtilityCode), null)
        {
        }

        /// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="summaryUtilityCode">SummaryUtilityCode key property.</param>
	    public SummaryUtility() :
            this(SummaryUtility.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public SummaryUtility(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SummaryUtilityCode.
        /// </summary>
        /// <value>Propiedad SummaryUtilityCode.</value>
        [
        DescriptionKey("SUMMARY_UTILITY_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SUMMARY_UTILITY_CD", DbType = System.Data.DbType.String),
        ]
        public int SummaryUtilityCode
        {
            get
            {
                return (int)this._primaryKey[Properties.SummaryUtilityCode];
            }
            set
            {
                this._primaryKey[Properties.SummaryUtilityCode] = value;
            }
        }
        /// <summary>
        /// Devuelve o setea el valor de la propiedad AutomaticQuotaCode.
        /// </summary>
        /// <value>Propiedad AutomaticQuotaCode.</value>
        [
        DescriptionKey("AUTOMATIC_QUOTA_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "AUTOMATIC_QUOTA_CD", DbType = System.Data.DbType.String),
        ]
        public int AutomaticQuotaCode
        {
            get
            {
                return this._automaticQuotaCode;
            }
            set
            {
                this._automaticQuotaCode = value;
            }
        }
        /// <summary>
        /// Devuelve o setea el valor de la propiedad UtilityDetailsCode.
        /// </summary>
        /// <value>Propiedad UtilityDetailsCode.</value>
        [
        DescriptionKey("UTILITY_DETAILS_CODE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "UTILITY_DETAILS_CD", DbType = System.Data.DbType.String),
        ]
        public int UtilityDetailsCode
        {
            get
            {
                return this._utilityDetailsCode;
            }
            set
            {
                this._utilityDetailsCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StartValue.
        /// </summary>
        /// <value>Propiedad StartValue.</value>
        [
        DescriptionKey("START_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "START_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal StartValue
        {
            get
            {
                return this._startValue;
            }
            set
            {
                this._startValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndValue.
        /// </summary>
        /// <value>Propiedad EndValue.</value>
        [
        DescriptionKey("END_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "END_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal EndValue
        {
            get
            {
                return this._endValue;
            }
            set
            {
                this._endValue = value;
            }
        }
        /// <summary>
		/// Devuelve o setea el valor de la propiedad AbsoluteValue.
		/// </summary>
		/// <value>Propiedad StartValue.</value>
	    [
        DescriptionKey("ABSOLUTE_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "ABSOLUTE_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal AbsoluteValue
        {
            get
            {
                return this._absoluteValue;
            }
            set
            {
                this._absoluteValue = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndValue.
        /// </summary>
        /// <value>Propiedad EndValue.</value>
        [
        DescriptionKey("RELATIVE_VALUE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "RELATIVE_VALUE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal RelativeValue
        {
            get
            {
                return this._relativeValue;
            }
            set
            {
                this._relativeValue = value;
            }
        }
    }
}