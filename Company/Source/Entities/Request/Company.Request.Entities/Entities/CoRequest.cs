/******************************************
 * Code generated by DictEditor v1.0.3.1
 * Template: Sistran.Company.Application.QuotationServices.CoRequest.dict v1.0
 * FileSize=9900 Header=255 CRC=2152270440
 ******************************************/
using System;
using System.Collections;
using System.Collections.Specialized;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Request.Entities
{
	/// <summary>
	/// Definición de entidad CoRequest.
	/// </summary>
	[
    PersistentClass("Sistran.Company.Application.Request.CoRequest.dict"),
	Serializable(),
	DescriptionKey("CO_REQUEST_ENTITY")
	]
    public class CoRequest :
		BusinessObject
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public sealed class Properties
		{
			public static readonly string BranchCode = "BranchCode";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string RequestId = "RequestId";
			public static readonly string BillingGroupCode = "BillingGroupCode";
			public static readonly string RequestDate = "RequestDate";
            public static readonly string Description = "Description";
            public static readonly string BusinessTypeCode = "BusinessTypeCode";
        }

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass)
	    {
		    ListDictionary keys = new ListDictionary();
		    keys.Add(Properties.RequestId, null);

		    return new PrimaryKey(concreteClass, keys);
	    }
	    
		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey(typeof(CoRequest));
		}
		
		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="requestId">Propiedad clave RequestId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass, int requestId)
	    {
		    ListDictionary keys = new ListDictionary();
		    keys.Add(Properties.RequestId, requestId);

		    return new PrimaryKey(concreteClass, keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="requestId">Propiedad clave RequestId.</param>
		public static PrimaryKey CreatePrimaryKey(int requestId)
	    {
			return InternalCreatePrimaryKey(typeof(CoRequest), requestId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad BranchCode.
		/// </summary>
        private int _branchCode;
		/// <summary>
		/// Atributo para la propiedad PrefixCode.
		/// </summary>
        private int _prefixCode;
		/// <summary>
		/// Atributo para la propiedad BillingGroupCode.
		/// </summary>
        private int _billingGroupCode;
		/// <summary>
		/// Atributo para la propiedad RequestDate.
		/// </summary>
        private DateTime _requestDate;
        /// <summary>
        /// Atributo para la propiedad RequestDate.
        /// </summary>
        private string _description;
        /// <summary>
		/// Atributo para la propiedad BusinessTypeCode.
		/// </summary>
        private int? _businessTypeCode = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves que no son autonumeradas.
        /// </summary>
        /// <returns>Primary key.</returns>
        public CoRequest():
			this(CoRequest.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="requestId">RequestId key property.</param>
	    public CoRequest(int requestId):
			this(CoRequest.CreatePrimaryKey(requestId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoRequest(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchCode.
		/// </summary>
		/// <value>Propiedad BranchCode.</value>
	    [
			DescriptionKey("BRANCH_CODE_PROPERTY"),
			PersistentProperty()
	    ]
        public int BranchCode
	    {
		    get
		    {
			    return this._branchCode;
		    }
		    set
		    {
				this._branchCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
			DescriptionKey("PREFIX_CODE_PROPERTY"),
			PersistentProperty()
	    ]
        public int PrefixCode
	    {
		    get
		    {
			    return this._prefixCode;
		    }
		    set
		    {
				this._prefixCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RequestId.
		/// </summary>
		/// <value>Propiedad RequestId.</value>
	    [
			DescriptionKey("REQUEST_ID_PROPERTY"),
			PersistentProperty(IsKey = true, IsAutomatic = true)
	    ]
        public int RequestId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RequestId];
		    }
		    set
		    {
				this._primaryKey[Properties.RequestId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BillingGroupCode.
		/// </summary>
		/// <value>Propiedad BillingGroupCode.</value>
	    [
			DescriptionKey("BILLING_GROUP_CODE_PROPERTY"),
			PersistentProperty()
	    ]
        public int BillingGroupCode
	    {
		    get
		    {
			    return this._billingGroupCode;
		    }
		    set
		    {
				this._billingGroupCode = value;
			}
	    }
        
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RequestDate.
		/// </summary>
		/// <value>Propiedad RequestDate.</value>
	    [
			DescriptionKey("REQUEST_DATE_PROPERTY"),
			PersistentProperty()
	    ]
        public DateTime RequestDate
	    {
		    get
		    {
			    return this._requestDate;
		    }
		    set
		    {
				this._requestDate = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Description.
        /// </summary>
        /// <value>Propiedad Description.</value>
        [
            DescriptionKey("DESCRIPTION_PROPERTY"),
            PersistentProperty(IsNullable = true)
        ]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                this._description = value;
            }
        }
        /// <summary>
		/// Devuelve o setea el valor de la propiedad BusinessTypeCode.
		/// </summary>
		/// <value>Propiedad BusinessTypeCode.</value>
	    [
        DescriptionKey("BUSINESS_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BUSINESS_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? BusinessTypeCode
        {
            get
            {
                return this._businessTypeCode;
            }
            set
            {
                this._businessTypeCode = value;
            }
        }
    }
}