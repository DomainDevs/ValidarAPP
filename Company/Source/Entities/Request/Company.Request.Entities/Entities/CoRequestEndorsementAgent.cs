/******************************************
 * Code generated by DictEditor v1.0.3.1
 * Template: Sistran.Company.Application.QuotationServices.CoRequestEndorsementAgent.dict v1.0
 * FileSize=4598 Header=271 CRC=1072421283
 ******************************************/
using System;
using System.Collections;
using System.Collections.Specialized;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Request.Entities
{
	/// <summary>
	/// Definición de entidad CoRequestEndorsementAgent.
	/// </summary>
	[
    PersistentClass("Sistran.Company.Application.Request.CoRequestEndorsementAgent.dict"),
	Serializable(),
	DescriptionKey("CO_REQUEST_ENDORSEMENT_AGENT_ENTITY")
	]
    public class CoRequestEndorsementAgent :
		BusinessObject
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public sealed class Properties
		{
			public static readonly string RequestEndorsementId = "RequestEndorsementId";
			public static readonly string RequestAgentId = "RequestAgentId";

			private Properties()
			{
			}
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="requestEndorsementId">Propiedad clave RequestEndorsementId.</param>
		/// <param name="requestAgentId">Propiedad clave RequestAgentId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass, int requestEndorsementId, int requestAgentId)
	    {
		    ListDictionary keys = new ListDictionary();
		    keys.Add(Properties.RequestEndorsementId, requestEndorsementId);
		    keys.Add(Properties.RequestAgentId, requestAgentId);

		    return new PrimaryKey(concreteClass, keys);
	    }


        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="requestEndorsementId">Propiedad clave RequestEndorsementId.</param>
        /// <param name="requestAgentId">Propiedad clave RequestAgentId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add(Properties.RequestEndorsementId, null);
            keys.Add(Properties.RequestAgentId, null);

            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="requestEndorsementId">Propiedad clave RequestEndorsementId.</param>
        /// <param name="requestAgentId">Propiedad clave RequestAgentId.</param>
        public static PrimaryKey CreatePrimaryKey(int requestEndorsementId, int requestAgentId)
	    {
			return InternalCreatePrimaryKey(typeof(CoRequestEndorsementAgent), requestEndorsementId, requestAgentId);
		}

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="requestEndorsementId">Propiedad clave RequestEndorsementId.</param>
        /// <param name="requestAgentId">Propiedad clave RequestAgentId.</param>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey(typeof(CoRequestEndorsementAgent));
        }
        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="requestEndorsementId">RequestEndorsementId key property.</param>
        /// <param name="requestAgentId">RequestAgentId key property.</param>
        public CoRequestEndorsementAgent() :
            this(CoRequestEndorsementAgent.CreatePrimaryKey(), null)
        {
        }


        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="requestEndorsementId">RequestEndorsementId key property.</param>
        /// <param name="requestAgentId">RequestAgentId key property.</param>
        public CoRequestEndorsementAgent(int requestEndorsementId, int requestAgentId):
			this(CoRequestEndorsementAgent.CreatePrimaryKey(requestEndorsementId, requestAgentId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoRequestEndorsementAgent(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RequestEndorsementId.
		/// </summary>
		/// <value>Propiedad RequestEndorsementId.</value>
	    [
			DescriptionKey("REQUEST_ENDORSEMENT_ID_PROPERTY"),
			PersistentProperty(IsKey = true)
	    ]
        public int RequestEndorsementId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RequestEndorsementId];
		    }
		    set
		    {
				this._primaryKey[Properties.RequestEndorsementId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RequestAgentId.
		/// </summary>
		/// <value>Propiedad RequestAgentId.</value>
	    [
			DescriptionKey("REQUEST_AGENT_ID_PROPERTY"),
			PersistentProperty(IsKey = true)
	    ]
        public int RequestAgentId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RequestAgentId];
		    }
		    set
		    {
				this._primaryKey[Properties.RequestAgentId] = value;
			}
	    }

		/// <summary>
		/// Obtiene el estado a partir de los valores de la instancia de la entidad.
		/// </summary>
		/// <returns>
		/// Diccionario con los valores de las propiedades.
		/// </returns>
		public override IDictionary GetPropertyValues()
		{
			// Get base properties
			IDictionary values = base.GetPropertyValues();


			return values;
		}
		
    }
}