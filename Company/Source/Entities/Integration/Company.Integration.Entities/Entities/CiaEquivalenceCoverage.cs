/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: [AXA_COLPATRIA].CiaEquivalenceCoverage.dict v1.0
 * FileSize=6930 Header=243 CRC=2918542498
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Integration.Entities
{
    /// <summary>
    /// Definición de entidad CiaEquivalenceCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Integration.CiaEquivalenceCoverage.dict"),
    Serializable(),
    DescriptionKey("CIA_EQUIVALENCE_COVERAGE_ENTITY"),
    TableMap(TableName="CIA_EQUIVALENCE_COVERAGE", Schema="INT"),
    ]
    public partial class CiaEquivalenceCoverage :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string EquivalenceCoverageId = "EquivalenceCoverageId";
			public static readonly string CoverageId3g = "CoverageId3g";
			public static readonly string CoverageId2g = "CoverageId2g";
			public static readonly string LineBusinessCode = "LineBusinessCode";
			public static readonly string SubLineBusinessCode = "SubLineBusinessCode";
			public static readonly string InsuredObject2g = "InsuredObject2g";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="equivalenceCoverageId">Propiedad clave EquivalenceCoverageId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int equivalenceCoverageId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.EquivalenceCoverageId, equivalenceCoverageId);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="equivalenceCoverageId">Propiedad clave EquivalenceCoverageId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.EquivalenceCoverageId, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="equivalenceCoverageId">Propiedad clave EquivalenceCoverageId.</param>
        public static PrimaryKey CreatePrimaryKey(int equivalenceCoverageId)
	    {
			return InternalCreatePrimaryKey<CiaEquivalenceCoverage>(equivalenceCoverageId);
		}

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CiaEquivalenceCoverage>();
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad CoverageId3g.
        /// </summary>
        private int _coverageId3g;
		/// <summary>
		/// Atributo para la propiedad CoverageId2g.
		/// </summary>
        private int _coverageId2g;
		/// <summary>
		/// Atributo para la propiedad LineBusinessCode.
		/// </summary>
        private int _lineBusinessCode;
		/// <summary>
		/// Atributo para la propiedad SubLineBusinessCode.
		/// </summary>
        private int _subLineBusinessCode;
		/// <summary>
		/// Atributo para la propiedad InsuredObject2g.
		/// </summary>
        private int _insuredObject2g;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="equivalenceCoverageId">EquivalenceCoverageId key property.</param>
	    public CiaEquivalenceCoverage(int equivalenceCoverageId):
			this(CiaEquivalenceCoverage.CreatePrimaryKey(equivalenceCoverageId), null)
	    {
	    }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        public CiaEquivalenceCoverage() :
            this(CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CiaEquivalenceCoverage(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad EquivalenceCoverageId.
		/// </summary>
		/// <value>Propiedad EquivalenceCoverageId.</value>
	    [
		DescriptionKey("EQUIVALENCE_COVERAGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="EQUIVALENCE_COVERAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int EquivalenceCoverageId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EquivalenceCoverageId];
		    }
		    set
		    {
				this._primaryKey[Properties.EquivalenceCoverageId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId3g.
		/// </summary>
		/// <value>Propiedad CoverageId3g.</value>
	    [
		DescriptionKey("COVERAGE_ID3G_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COVERAGE_ID_3G", DbType=System.Data.DbType.String),
	    ]
        public int CoverageId3g
	    {
		    get
		    {
			    return this._coverageId3g;
		    }
		    set
		    {
				this._coverageId3g = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId2g.
		/// </summary>
		/// <value>Propiedad CoverageId2g.</value>
	    [
		DescriptionKey("COVERAGE_ID2G_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="COVERAGE_ID_2G", DbType=System.Data.DbType.Decimal),
	    ]
        public int CoverageId2g
	    {
		    get
		    {
			    return this._coverageId2g;
		    }
		    set
		    {
				this._coverageId2g = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LineBusinessCode.
		/// </summary>
		/// <value>Propiedad LineBusinessCode.</value>
	    [
		DescriptionKey("LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LINE_BUSINESS_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public int LineBusinessCode
	    {
		    get
		    {
			    return this._lineBusinessCode;
		    }
		    set
		    {
				this._lineBusinessCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SubLineBusinessCode.
		/// </summary>
		/// <value>Propiedad SubLineBusinessCode.</value>
	    [
		DescriptionKey("SUB_LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="SUB_LINE_BUSINESS_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public int SubLineBusinessCode
	    {
		    get
		    {
			    return this._subLineBusinessCode;
		    }
		    set
		    {
				this._subLineBusinessCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredObject2g.
		/// </summary>
		/// <value>Propiedad InsuredObject2g.</value>
	    [
		DescriptionKey("INSURED_OBJECT2G_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INSURED_OBJECT_2G", DbType=System.Data.DbType.Decimal),
	    ]
        public int InsuredObject2g
	    {
		    get
		    {
			    return this._insuredObject2g;
		    }
		    set
		    {
				this._insuredObject2g = value;
			}
	    }

    }
}