/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: CO_COVERAGE_2G.CoCoverage2g.dict v1.0
 * FileSize=6724 Header=230 CRC=41047667
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Integration.Entities
{
    /// <summary>
    /// Definición de entidad CoCoverage2g.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Integration.CoCoverage2g.dict"),
    Serializable(),
    DescriptionKey("CO_COVERAGE2G_ENTITY"),
    TableMap(TableName="CO_COVERAGE_2G", Schema="INT"),
    ]
    public partial class CoCoverage2g :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string LineBusinessCode = "LineBusinessCode";
			public static readonly string SubLineBusinessCode = "SubLineBusinessCode";
			public static readonly string CoverageCode = "CoverageCode";
			public static readonly string InsuredObject = "InsuredObject";
			public static readonly string Description = "Description";
		}

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>()
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.LineBusinessCode, null);
            keys.Add(Properties.SubLineBusinessCode, null);
            keys.Add(Properties.CoverageCode, null);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="lineBusinessCode">Propiedad clave LineBusinessCode.</param>
        /// <param name="subLineBusinessCode">Propiedad clave SubLineBusinessCode.</param>
        /// <param name="coverageCode">Propiedad clave CoverageCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(decimal lineBusinessCode, decimal subLineBusinessCode, decimal coverageCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.LineBusinessCode, lineBusinessCode);
		    keys.Add(Properties.SubLineBusinessCode, subLineBusinessCode);
		    keys.Add(Properties.CoverageCode, coverageCode);

		    return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        public static PrimaryKey CreatePrimaryKey()
        {
            return InternalCreatePrimaryKey<CoCoverage2g>();
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="lineBusinessCode">Propiedad clave LineBusinessCode.</param>
        /// <param name="subLineBusinessCode">Propiedad clave SubLineBusinessCode.</param>
        /// <param name="coverageCode">Propiedad clave CoverageCode.</param>
        public static PrimaryKey CreatePrimaryKey(decimal lineBusinessCode, decimal subLineBusinessCode, decimal coverageCode)
	    {
			return InternalCreatePrimaryKey<CoCoverage2g>(lineBusinessCode, subLineBusinessCode, coverageCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad InsuredObject.
		/// </summary>
        private decimal? _insuredObject = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="lineBusinessCode">LineBusinessCode key property.</param>
        /// <param name="subLineBusinessCode">SubLineBusinessCode key property.</param>
        /// <param name="coverageCode">CoverageCode key property.</param>
        public CoCoverage2g() :
            this(CoCoverage2g.CreatePrimaryKey(), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="lineBusinessCode">LineBusinessCode key property.</param>
        /// <param name="subLineBusinessCode">SubLineBusinessCode key property.</param>
        /// <param name="coverageCode">CoverageCode key property.</param>
        public CoCoverage2g(decimal lineBusinessCode, decimal subLineBusinessCode, decimal coverageCode):
			this(CoCoverage2g.CreatePrimaryKey(lineBusinessCode, subLineBusinessCode, coverageCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoCoverage2g(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad LineBusinessCode.
		/// </summary>
		/// <value>Propiedad LineBusinessCode.</value>
	    [
		DescriptionKey("LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="LINE_BUSINESS_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal LineBusinessCode
	    {
		    get
		    {
				return (decimal)this._primaryKey[Properties.LineBusinessCode];
		    }
		    set
		    {
				this._primaryKey[Properties.LineBusinessCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SubLineBusinessCode.
		/// </summary>
		/// <value>Propiedad SubLineBusinessCode.</value>
	    [
		DescriptionKey("SUB_LINE_BUSINESS_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SUB_LINE_BUSINESS_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal SubLineBusinessCode
	    {
		    get
		    {
				return (decimal)this._primaryKey[Properties.SubLineBusinessCode];
		    }
		    set
		    {
				this._primaryKey[Properties.SubLineBusinessCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageCode.
		/// </summary>
		/// <value>Propiedad CoverageCode.</value>
	    [
		DescriptionKey("COVERAGE_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_CD", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal CoverageCode
	    {
		    get
		    {
				return (decimal)this._primaryKey[Properties.CoverageCode];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad InsuredObject.
		/// </summary>
		/// <value>Propiedad InsuredObject.</value>
	    [
		DescriptionKey("INSURED_OBJECT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="INSURED_OBJECT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? InsuredObject
	    {
		    get
		    {
			    return this._insuredObject;
		    }
		    set
		    {
				this._insuredObject = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

    }
}