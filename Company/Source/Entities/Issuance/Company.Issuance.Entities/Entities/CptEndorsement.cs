/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.Issuance.CptEndorsement.dict v1.0
 * FileSize=8238 Header=256 CRC=4221613165
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Company.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad CptEndorsement.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Issuance.CptEndorsement.dict"),
    Serializable(),
    DescriptionKey("CPT_ENDORSEMENT_ENTITY"),
    TableMap(TableName = "CPT_ENDORSEMENT", Schema = "ISS"),
    ]
    public partial class CptEndorsement :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string PolicyId = "PolicyId";
            public static readonly string EndorsementId = "EndorsementId";
            public static readonly string ExternalPolicyNumber = "ExternalPolicyNumber";
            public static readonly string AllianceId = "AllianceId";
            public static readonly string BranchId = "BranchId";
            public static readonly string SalePointId = "SalePointId";
            public static readonly string IncentiveAmount = "IncentiveAmount";
            public static readonly string Policy2g = "Policy2g";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int policyId, int endorsementId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.PolicyId, policyId);
            keys.Add(Properties.EndorsementId, endorsementId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="policyId">Propiedad clave PolicyId.</param>
        /// <param name="endorsementId">Propiedad clave EndorsementId.</param>
        public static PrimaryKey CreatePrimaryKey(int policyId, int endorsementId)
        {
            return InternalCreatePrimaryKey<CptEndorsement>(policyId, endorsementId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad ExternalPolicyNumber.
        /// </summary>
        private string _externalPolicyNumber = null;
        /// <summary>
        /// Atributo para la propiedad AllianceId.
        /// </summary>
        private int? _allianceId = null;
        /// <summary>
        /// Atributo para la propiedad BranchId.
        /// </summary>
        private int? _branchId = null;
        /// <summary>
        /// Atributo para la propiedad SalePointId.
        /// </summary>
        private int? _salePointId = null;
        /// <summary>
        /// Atributo para la propiedad IncentiveAmount.
        /// </summary>
        private decimal? _incentiveAmount = null;
        /// <summary>
        /// Atributo para la propiedad Policy2g.
        /// </summary>
        private int? _policy2g = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="policyId">PolicyId key property.</param>
        /// <param name="endorsementId">EndorsementId key property.</param>
        public CptEndorsement(int policyId, int endorsementId) :
            this(CptEndorsement.CreatePrimaryKey(policyId, endorsementId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CptEndorsement(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad PolicyId.
        /// </summary>
        /// <value>Propiedad PolicyId.</value>
        [
        DescriptionKey("POLICY_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "POLICY_ID", DbType = System.Data.DbType.String),
        ]
        public int PolicyId
        {
            get
            {
                return (int)this._primaryKey[Properties.PolicyId];
            }
            set
            {
                this._primaryKey[Properties.PolicyId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad EndorsementId.
        /// </summary>
        /// <value>Propiedad EndorsementId.</value>
        [
        DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "ENDORSEMENT_ID", DbType = System.Data.DbType.String),
        ]
        public int EndorsementId
        {
            get
            {
                return (int)this._primaryKey[Properties.EndorsementId];
            }
            set
            {
                this._primaryKey[Properties.EndorsementId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExternalPolicyNumber.
        /// </summary>
        /// <value>Propiedad ExternalPolicyNumber.</value>
        [
        DescriptionKey("EXTERNAL_POLICY_NUMBER_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EXTERNAL_POLICY_NUMBER", DbType = System.Data.DbType.String),
        ]
        public string ExternalPolicyNumber
        {
            get
            {
                return this._externalPolicyNumber;
            }
            set
            {
                this._externalPolicyNumber = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad AllianceId.
        /// </summary>
        /// <value>Propiedad AllianceId.</value>
        [
        DescriptionKey("ALLIANCE_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ALLIANCE_ID", DbType = System.Data.DbType.String),
        ]
        public int? AllianceId
        {
            get
            {
                return this._allianceId;
            }
            set
            {
                this._allianceId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchId.
        /// </summary>
        /// <value>Propiedad BranchId.</value>
        [
        DescriptionKey("BRANCH_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "BRANCH_ID", DbType = System.Data.DbType.String),
        ]
        public int? BranchId
        {
            get
            {
                return this._branchId;
            }
            set
            {
                this._branchId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SalePointId.
        /// </summary>
        /// <value>Propiedad SalePointId.</value>
        [
        DescriptionKey("SALE_POINT_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SALE_POINT_ID", DbType = System.Data.DbType.String),
        ]
        public int? SalePointId
        {
            get
            {
                return this._salePointId;
            }
            set
            {
                this._salePointId = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IncentiveAmount.
        /// </summary>
        /// <value>Propiedad IncentiveAmount.</value>
        [
        DescriptionKey("INCENTIVE_AMOUNT_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "INCENTIVE_AMT", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? IncentiveAmount
        {
            get
            {
                return this._incentiveAmount;
            }
            set
            {
                this._incentiveAmount = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Policy2g.
        /// </summary>
        /// <value>Propiedad Policy2g.</value>
        [
        DescriptionKey("POLICY2G_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "POLICY_2G", DbType = System.Data.DbType.String),
        ]
        public int? Policy2g
        {
            get
            {
                return this._policy2g;
            }
            set
            {
                this._policy2g = value;
            }
        }

    }
}