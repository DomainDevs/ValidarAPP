/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Previsora.PrvRiskCoveragePost.dict v1.0
 * FileSize=12924 Header=235 CRC=2092384778
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad PrvRiskCoveragePost.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Issuance.PrvRiskCoveragePost.dict"),
    Serializable(),
    DescriptionKey("CIA_RISK_COVERAGE_POST_ENTITY"),
    TableMap(TableName="CIA_RISK_COVERAGE_POST", Schema="ISS"),
    ]
    public partial class PrvRiskCoveragePost :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string PolicyId = "PolicyId";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string RiskId = "RiskId";
			public static readonly string RiskCoverId = "RiskCoverId";
			public static readonly string CoverageId = "CoverageId";
			public static readonly string IssueDate = "IssueDate";
			public static readonly string CurrentFrom = "CurrentFrom";
			public static readonly string CurrentTo = "CurrentTo";
			public static readonly string CurrentFromPost = "CurrentFromPost";
			public static readonly string CurrentToPost = "CurrentToPost";
			public static readonly string ContractDate = "ContractDate";
			public static readonly string DeliveryDate = "DeliveryDate";
			public static readonly string UserId = "UserId";
			public static readonly string BeginDate = "BeginDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <param name="riskCoverId">Propiedad clave RiskCoverId.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int policyId, int endorsementId, int riskId, int riskCoverId, int coverageId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.PolicyId, policyId);
		    keys.Add(Properties.EndorsementId, endorsementId);
		    keys.Add(Properties.RiskId, riskId);
		    keys.Add(Properties.RiskCoverId, riskCoverId);
		    keys.Add(Properties.CoverageId, coverageId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="policyId">Propiedad clave PolicyId.</param>
		/// <param name="endorsementId">Propiedad clave EndorsementId.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <param name="riskCoverId">Propiedad clave RiskCoverId.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		public static PrimaryKey CreatePrimaryKey(int policyId, int endorsementId, int riskId, int riskCoverId, int coverageId)
	    {
			return InternalCreatePrimaryKey<PrvRiskCoveragePost>(policyId, endorsementId, riskId, riskCoverId, coverageId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IssueDate.
		/// </summary>
        private DateTime? _issueDate = null;
		/// <summary>
		/// Atributo para la propiedad CurrentFrom.
		/// </summary>
        private DateTime? _currentFrom = null;
		/// <summary>
		/// Atributo para la propiedad CurrentTo.
		/// </summary>
        private DateTime? _currentTo = null;
		/// <summary>
		/// Atributo para la propiedad CurrentFromPost.
		/// </summary>
        private DateTime? _currentFromPost = null;
		/// <summary>
		/// Atributo para la propiedad CurrentToPost.
		/// </summary>
        private DateTime? _currentToPost = null;
		/// <summary>
		/// Atributo para la propiedad ContractDate.
		/// </summary>
        private DateTime? _contractDate = null;
		/// <summary>
		/// Atributo para la propiedad DeliveryDate.
		/// </summary>
        private DateTime? _deliveryDate = null;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
		/// <summary>
		/// Atributo para la propiedad BeginDate.
		/// </summary>
        private DateTime? _beginDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="policyId">PolicyId key property.</param>
		/// <param name="endorsementId">EndorsementId key property.</param>
		/// <param name="riskId">RiskId key property.</param>
		/// <param name="riskCoverId">RiskCoverId key property.</param>
		/// <param name="coverageId">CoverageId key property.</param>
	    public PrvRiskCoveragePost(int policyId, int endorsementId, int riskId, int riskCoverId, int coverageId):
			this(PrvRiskCoveragePost.CreatePrimaryKey(policyId, endorsementId, riskId, riskCoverId, coverageId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PrvRiskCoveragePost(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PolicyId];
		    }
		    set
		    {
				this._primaryKey[Properties.PolicyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.EndorsementId];
		    }
		    set
		    {
				this._primaryKey[Properties.EndorsementId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskId.
		/// </summary>
		/// <value>Propiedad RiskId.</value>
	    [
		DescriptionKey("RISK_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RISK_ID", DbType=System.Data.DbType.String),
	    ]
        public int RiskId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RiskId];
		    }
		    set
		    {
				this._primaryKey[Properties.RiskId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskCoverId.
		/// </summary>
		/// <value>Propiedad RiskCoverId.</value>
	    [
		DescriptionKey("RISK_COVER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RISK_COVER_ID", DbType=System.Data.DbType.String),
	    ]
        public int RiskCoverId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RiskCoverId];
		    }
		    set
		    {
				this._primaryKey[Properties.RiskCoverId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId.
		/// </summary>
		/// <value>Propiedad CoverageId.</value>
	    [
		DescriptionKey("COVERAGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverageId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverageId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IssueDate.
		/// </summary>
		/// <value>Propiedad IssueDate.</value>
	    [
		DescriptionKey("ISSUE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ISSUE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? IssueDate
	    {
		    get
		    {
			    return this._issueDate;
		    }
		    set
		    {
				this._issueDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentFrom.
		/// </summary>
		/// <value>Propiedad CurrentFrom.</value>
	    [
		DescriptionKey("CURRENT_FROM_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_FROM", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentFrom
	    {
		    get
		    {
			    return this._currentFrom;
		    }
		    set
		    {
				this._currentFrom = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentTo.
		/// </summary>
		/// <value>Propiedad CurrentTo.</value>
	    [
		DescriptionKey("CURRENT_TO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_TO", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentTo
	    {
		    get
		    {
			    return this._currentTo;
		    }
		    set
		    {
				this._currentTo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentFromPost.
		/// </summary>
		/// <value>Propiedad CurrentFromPost.</value>
	    [
		DescriptionKey("CURRENT_FROM_POST_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_FROM_POST", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentFromPost
	    {
		    get
		    {
			    return this._currentFromPost;
		    }
		    set
		    {
				this._currentFromPost = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrentToPost.
		/// </summary>
		/// <value>Propiedad CurrentToPost.</value>
	    [
		DescriptionKey("CURRENT_TO_POST_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENT_TO_POST", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CurrentToPost
	    {
		    get
		    {
			    return this._currentToPost;
		    }
		    set
		    {
				this._currentToPost = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ContractDate.
		/// </summary>
		/// <value>Propiedad ContractDate.</value>
	    [
		DescriptionKey("CONTRACT_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CONTRACT_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ContractDate
	    {
		    get
		    {
			    return this._contractDate;
		    }
		    set
		    {
				this._contractDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad DeliveryDate.
		/// </summary>
		/// <value>Propiedad DeliveryDate.</value>
	    [
		DescriptionKey("DELIVERY_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DELIVERY_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? DeliveryDate
	    {
		    get
		    {
			    return this._deliveryDate;
		    }
		    set
		    {
				this._deliveryDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BeginDate.
		/// </summary>
		/// <value>Propiedad BeginDate.</value>
	    [
		DescriptionKey("BEGIN_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BEGIN_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? BeginDate
	    {
		    get
		    {
			    return this._beginDate;
		    }
		    set
		    {
				this._beginDate = value;
			}
	    }

    }
}