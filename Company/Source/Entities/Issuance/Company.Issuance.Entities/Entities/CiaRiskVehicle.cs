/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: CIA_RISK_VEHICLE.CiaRiskVehicle.dict v1.0
 * FileSize=7922 Header=236 CRC=2916232978
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Issuance.Entities
{
    /// <summary>
    /// Definición de entidad CiaRiskVehicle.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Issuance.CiaRiskVehicle.dict"),
    Serializable(),
    DescriptionKey("CIA_RISK_VEHICLE_ENTITY"),
    TableMap(TableName="CIA_RISK_VEHICLE", Schema="ISS"),
    ]
    public partial class CiaRiskVehicle :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string RiskId = "RiskId";
			public static readonly string PolicyId = "PolicyId";
			public static readonly string EndorsementId = "EndorsementId";
			public static readonly string GallonQuantity = "GallonQuantity";
			public static readonly string IsTransformVehicle = "IsTransformVehicle";
			public static readonly string YearTransformVehicle = "YearTransformVehicle";
			public static readonly string TransportCargoTypeCode = "TransportCargoTypeCode";
			public static readonly string YearModel = "YearModel";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int riskId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.RiskId, riskId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="riskId">Propiedad clave RiskId.</param>
		public static PrimaryKey CreatePrimaryKey(int riskId)
	    {
			return InternalCreatePrimaryKey<CiaRiskVehicle>(riskId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad PolicyId.
		/// </summary>
        private int _policyId;
		/// <summary>
		/// Atributo para la propiedad EndorsementId.
		/// </summary>
        private int _endorsementId;
		/// <summary>
		/// Atributo para la propiedad GallonQuantity.
		/// </summary>
        private int _gallonQuantity;
		/// <summary>
		/// Atributo para la propiedad IsTransformVehicle.
		/// </summary>
        private bool _isTransformVehicle;
		/// <summary>
		/// Atributo para la propiedad YearTransformVehicle.
		/// </summary>
        private int _yearTransformVehicle;
		/// <summary>
		/// Atributo para la propiedad TransportCargoTypeCode.
		/// </summary>
        private int _transportCargoTypeCode;
		/// <summary>
		/// Atributo para la propiedad YearModel.
		/// </summary>
        private int? _yearModel = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="riskId">RiskId key property.</param>
	    public CiaRiskVehicle(int riskId):
			this(CiaRiskVehicle.CreatePrimaryKey(riskId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CiaRiskVehicle(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad RiskId.
		/// </summary>
		/// <value>Propiedad RiskId.</value>
	    [
		DescriptionKey("RISK_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="RISK_ID", DbType=System.Data.DbType.String),
	    ]
        public int RiskId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.RiskId];
		    }
		    set
		    {
				this._primaryKey[Properties.RiskId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PolicyId.
		/// </summary>
		/// <value>Propiedad PolicyId.</value>
	    [
		DescriptionKey("POLICY_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="POLICY_ID", DbType=System.Data.DbType.String),
	    ]
        public int PolicyId
	    {
		    get
		    {
			    return this._policyId;
		    }
		    set
		    {
				this._policyId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad EndorsementId.
		/// </summary>
		/// <value>Propiedad EndorsementId.</value>
	    [
		DescriptionKey("ENDORSEMENT_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ENDORSEMENT_ID", DbType=System.Data.DbType.String),
	    ]
        public int EndorsementId
	    {
		    get
		    {
			    return this._endorsementId;
		    }
		    set
		    {
				this._endorsementId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad GallonQuantity.
		/// </summary>
		/// <value>Propiedad GallonQuantity.</value>
	    [
		DescriptionKey("GALLON_QUANTITY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="GALLON_QTY", DbType=System.Data.DbType.String),
	    ]
        public int GallonQuantity
	    {
		    get
		    {
			    return this._gallonQuantity;
		    }
		    set
		    {
				this._gallonQuantity = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsTransformVehicle.
		/// </summary>
		/// <value>Propiedad IsTransformVehicle.</value>
	    [
		DescriptionKey("IS_TRANSFORM_VEHICLE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_TRANSFORM_VEHICLE", DbType=System.Data.DbType.String),
	    ]
        public bool IsTransformVehicle
	    {
		    get
		    {
			    return this._isTransformVehicle;
		    }
		    set
		    {
				this._isTransformVehicle = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad YearTransformVehicle.
		/// </summary>
		/// <value>Propiedad YearTransformVehicle.</value>
	    [
		DescriptionKey("YEAR_TRANSFORM_VEHICLE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="YEAR_TRANSFORM_VEHICLE", DbType=System.Data.DbType.String),
	    ]
        public int YearTransformVehicle
	    {
		    get
		    {
			    return this._yearTransformVehicle;
		    }
		    set
		    {
				this._yearTransformVehicle = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TransportCargoTypeCode.
		/// </summary>
		/// <value>Propiedad TransportCargoTypeCode.</value>
	    [
		DescriptionKey("TRANSPORT_CARGO_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="TRANSPORT_CARGO_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int TransportCargoTypeCode
	    {
		    get
		    {
			    return this._transportCargoTypeCode;
		    }
		    set
		    {
				this._transportCargoTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad YearModel.
		/// </summary>
		/// <value>Propiedad YearModel.</value>
	    [
		DescriptionKey("YEAR_MODEL_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="YEAR_MODEL", DbType=System.Data.DbType.String),
	    ]
        public int? YearModel
	    {
		    get
		    {
			    return this._yearModel;
		    }
		    set
		    {
				this._yearModel = value;
			}
	    }

    }
}