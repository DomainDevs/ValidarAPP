/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.UniquePerson.CoIndividualSarlaft.dict v1.0
 * FileSize=13742 Header=266 CRC=4210912373
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad CoIndividualSarlaft.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.CoIndividualSarlaft.dict"),
    Serializable(),
    DescriptionKey("CO_INDIVIDUAL_SARLAFT_ENTITY"),
    TableMap(TableName = "CO_INDIVIDUAL_SARLAFT", Schema = "UP"),
    ]
    public partial class CoIndividualSarlaft :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string SarlaftId = "SarlaftId";
            public static readonly string IndividualId = "IndividualId";
            public static readonly string Email = "Email";
            public static readonly string Heritage = "Heritage";
            public static readonly string IdCompanyTypeCode = "IdCompanyTypeCode";
            public static readonly string CityCode = "CityCode";
            public static readonly string StateCode = "StateCode";
            public static readonly string CountryCode = "CountryCode";
            public static readonly string OppositorCode = "OppositorCode";
            public static readonly string PersonCode = "PersonCode";
            public static readonly string SocietyCode = "SocietyCode";
            public static readonly string NationalityCode = "NationalityCode";
            public static readonly string NationalityOtherCode = "NationalityOtherCode";
            public static readonly string ExonerationCode = "ExonerationCode";
            public static readonly string Phone = "Phone";
            public static readonly string MainAddress = "MainAddress";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int sarlaftId, int individualId)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.SarlaftId, sarlaftId);
            keys.Add(Properties.IndividualId, individualId);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        public static PrimaryKey CreatePrimaryKey(int sarlaftId, int individualId)
        {
            return InternalCreatePrimaryKey<CoIndividualSarlaft>(sarlaftId, individualId);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad Email.
        /// </summary>
        private string _email = null;
        /// <summary>
        /// Atributo para la propiedad Heritage.
        /// </summary>
        private decimal? _heritage = null;
        /// <summary>
        /// Atributo para la propiedad IdCompanyTypeCode.
        /// </summary>
        private int? _idCompanyTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad CityCode.
        /// </summary>
        private int? _cityCode = null;
        /// <summary>
        /// Atributo para la propiedad StateCode.
        /// </summary>
        private int? _stateCode = null;
        /// <summary>
        /// Atributo para la propiedad CountryCode.
        /// </summary>
        private int? _countryCode = null;
        /// <summary>
        /// Atributo para la propiedad OppositorCode.
        /// </summary>
        private string _oppositorCode = null;
        /// <summary>
        /// Atributo para la propiedad PersonCode.
        /// </summary>
        private int? _personCode = null;
        /// <summary>
        /// Atributo para la propiedad SocietyCode.
        /// </summary>
        private int? _societyCode = null;
        /// <summary>
        /// Atributo para la propiedad NationalityCode.
        /// </summary>
        private int? _nationalityCode = null;
        /// <summary>
        /// Atributo para la propiedad NationalityOtherCode.
        /// </summary>
        private int? _nationalityOtherCode = null;
        /// <summary>
        /// Atributo para la propiedad ExonerationCode.
        /// </summary>
        private int? _exonerationCode = null;
        /// <summary>
        /// Atributo para la propiedad Phone.
        /// </summary>
        private string _phone = null;
        /// <summary>
        /// Atributo para la propiedad MainAddress.
        /// </summary>
        private string _mainAddress = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="sarlaftId">SarlaftId key property.</param>
        /// <param name="individualId">IndividualId key property.</param>
        public CoIndividualSarlaft(int sarlaftId, int individualId) :
            this(CoIndividualSarlaft.CreatePrimaryKey(sarlaftId, individualId), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CoIndividualSarlaft(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad SarlaftId.
        /// </summary>
        /// <value>Propiedad SarlaftId.</value>
        [
        DescriptionKey("SARLAFT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SARLAFT_ID", DbType = System.Data.DbType.String),
        ]
        public int SarlaftId
        {
            get
            {
                return (int)this._primaryKey[Properties.SarlaftId];
            }
            set
            {
                this._primaryKey[Properties.SarlaftId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IndividualId.
        /// </summary>
        /// <value>Propiedad IndividualId.</value>
        [
        DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "INDIVIDUAL_ID", DbType = System.Data.DbType.String),
        ]
        public int IndividualId
        {
            get
            {
                return (int)this._primaryKey[Properties.IndividualId];
            }
            set
            {
                this._primaryKey[Properties.IndividualId] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Email.
        /// </summary>
        /// <value>Propiedad Email.</value>
        [
        DescriptionKey("EMAIL_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EMAIL", DbType = System.Data.DbType.String),
        ]
        public string Email
        {
            get
            {
                return this._email;
            }
            set
            {
                this._email = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Heritage.
        /// </summary>
        /// <value>Propiedad Heritage.</value>
        [
        DescriptionKey("HERITAGE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "HERITAGE", DbType = System.Data.DbType.Decimal),
        ]
        public decimal? Heritage
        {
            get
            {
                return this._heritage;
            }
            set
            {
                this._heritage = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IdCompanyTypeCode.
        /// </summary>
        /// <value>Propiedad IdCompanyTypeCode.</value>
        [
        DescriptionKey("ID_COMPANY_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "ID_COMPANY_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? IdCompanyTypeCode
        {
            get
            {
                return this._idCompanyTypeCode;
            }
            set
            {
                this._idCompanyTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CityCode.
        /// </summary>
        /// <value>Propiedad CityCode.</value>
        [
        DescriptionKey("CITY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "CITY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CityCode
        {
            get
            {
                return this._cityCode;
            }
            set
            {
                this._cityCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad StateCode.
        /// </summary>
        /// <value>Propiedad StateCode.</value>
        [
        DescriptionKey("STATE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "STATE_CD", DbType = System.Data.DbType.String),
        ]
        public int? StateCode
        {
            get
            {
                return this._stateCode;
            }
            set
            {
                this._stateCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CountryCode.
        /// </summary>
        /// <value>Propiedad CountryCode.</value>
        [
        DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "COUNTRY_CD", DbType = System.Data.DbType.String),
        ]
        public int? CountryCode
        {
            get
            {
                return this._countryCode;
            }
            set
            {
                this._countryCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad OppositorCode.
        /// </summary>
        /// <value>Propiedad OppositorCode.</value>
        [
        DescriptionKey("OPPOSITOR_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "OPPOSITOR_CD", DbType = System.Data.DbType.String),
        ]
        public string OppositorCode
        {
            get
            {
                return this._oppositorCode;
            }
            set
            {
                this._oppositorCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PersonCode.
        /// </summary>
        /// <value>Propiedad PersonCode.</value>
        [
        DescriptionKey("PERSON_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PERSON_CD", DbType = System.Data.DbType.String),
        ]
        public int? PersonCode
        {
            get
            {
                return this._personCode;
            }
            set
            {
                this._personCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SocietyCode.
        /// </summary>
        /// <value>Propiedad SocietyCode.</value>
        [
        DescriptionKey("SOCIETY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "SOCIETY_CD", DbType = System.Data.DbType.String),
        ]
        public int? SocietyCode
        {
            get
            {
                return this._societyCode;
            }
            set
            {
                this._societyCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad NationalityCode.
        /// </summary>
        /// <value>Propiedad NationalityCode.</value>
        [
        DescriptionKey("NATIONALITY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NATIONALITY_CD", DbType = System.Data.DbType.String),
        ]
        public int? NationalityCode
        {
            get
            {
                return this._nationalityCode;
            }
            set
            {
                this._nationalityCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad NationalityOtherCode.
        /// </summary>
        /// <value>Propiedad NationalityOtherCode.</value>
        [
        DescriptionKey("NATIONALITY_OTHER_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NATIONALITY_OTHER_CD", DbType = System.Data.DbType.String),
        ]
        public int? NationalityOtherCode
        {
            get
            {
                return this._nationalityOtherCode;
            }
            set
            {
                this._nationalityOtherCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ExonerationCode.
        /// </summary>
        /// <value>Propiedad ExonerationCode.</value>
        [
        DescriptionKey("EXONERATION_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "EXONERATION_CD", DbType = System.Data.DbType.String),
        ]
        public int? ExonerationCode
        {
            get
            {
                return this._exonerationCode;
            }
            set
            {
                this._exonerationCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad Phone.
        /// </summary>
        /// <value>Propiedad Phone.</value>
        [
        DescriptionKey("PHONE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "PHONE", DbType = System.Data.DbType.String),
        ]
        public string Phone
        {
            get
            {
                return this._phone;
            }
            set
            {
                this._phone = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad MainAddress.
        /// </summary>
        /// <value>Propiedad MainAddress.</value>
        [
        DescriptionKey("MAIN_ADDRESS_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "MAIN_ADDRESS", DbType = System.Data.DbType.String),
        ]
        public string MainAddress
        {
            get
            {
                return this._mainAddress;
            }
            set
            {
                this._mainAddress = value;
            }
        }

    }
}