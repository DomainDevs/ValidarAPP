/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.FinancialSarlaft.dict v1.0
 * FileSize=9035 Header=258 CRC=424241761
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad FinancialSarlaft.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.FinancialSarlaft.dict"),
    Serializable(),
    DescriptionKey("FINANCIAL_SARLAFT_ENTITY"),
    TableMap(TableName="FINANCIAL_SARLAFT", Schema="UP"),
    ]
    public partial class FinancialSarlaft :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string SarlaftId = "SarlaftId";
			public static readonly string IncomeAmount = "IncomeAmount";
			public static readonly string ExpenseAmount = "ExpenseAmount";
			public static readonly string ExtraIncomeAmount = "ExtraIncomeAmount";
			public static readonly string AssetsAmount = "AssetsAmount";
			public static readonly string LiabilitiesAmount = "LiabilitiesAmount";
			public static readonly string Description = "Description";
			public static readonly string IsForeingTransaction = "IsForeingTransaction";
			public static readonly string ForeingTransactionAmount = "ForeingTransactionAmount";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int sarlaftId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.SarlaftId, sarlaftId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
		public static PrimaryKey CreatePrimaryKey(int sarlaftId)
	    {
			return InternalCreatePrimaryKey<FinancialSarlaft>(sarlaftId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IncomeAmount.
		/// </summary>
        private decimal _incomeAmount;
		/// <summary>
		/// Atributo para la propiedad ExpenseAmount.
		/// </summary>
        private decimal _expenseAmount;
		/// <summary>
		/// Atributo para la propiedad ExtraIncomeAmount.
		/// </summary>
        private decimal _extraIncomeAmount;
		/// <summary>
		/// Atributo para la propiedad AssetsAmount.
		/// </summary>
        private decimal _assetsAmount;
		/// <summary>
		/// Atributo para la propiedad LiabilitiesAmount.
		/// </summary>
        private decimal _liabilitiesAmount;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad IsForeingTransaction.
		/// </summary>
        private bool? _isForeingTransaction = null;
		/// <summary>
		/// Atributo para la propiedad ForeingTransactionAmount.
		/// </summary>
        private decimal? _foreingTransactionAmount = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="sarlaftId">SarlaftId key property.</param>
	    public FinancialSarlaft(int sarlaftId):
			this(FinancialSarlaft.CreatePrimaryKey(sarlaftId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public FinancialSarlaft(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad SarlaftId.
		/// </summary>
		/// <value>Propiedad SarlaftId.</value>
	    [
		DescriptionKey("SARLAFT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SARLAFT_ID", DbType=System.Data.DbType.String),
	    ]
        public int SarlaftId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.SarlaftId];
		    }
		    set
		    {
				this._primaryKey[Properties.SarlaftId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IncomeAmount.
		/// </summary>
		/// <value>Propiedad IncomeAmount.</value>
	    [
		DescriptionKey("INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INCOME_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal IncomeAmount
	    {
		    get
		    {
			    return this._incomeAmount;
		    }
		    set
		    {
				this._incomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExpenseAmount.
		/// </summary>
		/// <value>Propiedad ExpenseAmount.</value>
	    [
		DescriptionKey("EXPENSE_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXPENSE_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ExpenseAmount
	    {
		    get
		    {
			    return this._expenseAmount;
		    }
		    set
		    {
				this._expenseAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExtraIncomeAmount.
		/// </summary>
		/// <value>Propiedad ExtraIncomeAmount.</value>
	    [
		DescriptionKey("EXTRA_INCOME_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXTRA_INCOME_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal ExtraIncomeAmount
	    {
		    get
		    {
			    return this._extraIncomeAmount;
		    }
		    set
		    {
				this._extraIncomeAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AssetsAmount.
		/// </summary>
		/// <value>Propiedad AssetsAmount.</value>
	    [
		DescriptionKey("ASSETS_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ASSETS_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal AssetsAmount
	    {
		    get
		    {
			    return this._assetsAmount;
		    }
		    set
		    {
				this._assetsAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LiabilitiesAmount.
		/// </summary>
		/// <value>Propiedad LiabilitiesAmount.</value>
	    [
		DescriptionKey("LIABILITIES_AMOUNT_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LIABILITIES_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal LiabilitiesAmount
	    {
		    get
		    {
			    return this._liabilitiesAmount;
		    }
		    set
		    {
				this._liabilitiesAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsForeingTransaction.
		/// </summary>
		/// <value>Propiedad IsForeingTransaction.</value>
	    [
		DescriptionKey("IS_FOREING_TRANSACTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_FOREING_TRANSACTION", DbType=System.Data.DbType.String),
	    ]
        public bool? IsForeingTransaction
	    {
		    get
		    {
			    return this._isForeingTransaction;
		    }
		    set
		    {
				this._isForeingTransaction = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ForeingTransactionAmount.
		/// </summary>
		/// <value>Propiedad ForeingTransactionAmount.</value>
	    [
		DescriptionKey("FOREING_TRANSACTION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="FOREING_TRANSACTION_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? ForeingTransactionAmount
	    {
		    get
		    {
			    return this._foreingTransactionAmount;
		    }
		    set
		    {
				this._foreingTransactionAmount = value;
			}
	    }

    }
}