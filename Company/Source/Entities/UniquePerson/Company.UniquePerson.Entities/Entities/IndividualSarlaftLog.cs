/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.IndividualSarlaftLog.dict v1.0
 * FileSize=6285 Header=262 CRC=942992835
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad IndividualSarlaftLog.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.IndividualSarlaftLog.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_SARLAFT_LOG_ENTITY"),
    TableMap(TableName="INDIVIDUAL_SARLAFT_LOG", Schema="UP"),
    ]
    public partial class IndividualSarlaftLog :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IndividualId = "IndividualId";
			public static readonly string UserId = "UserId";
			public static readonly string ExonerationTypeCode = "ExonerationTypeCode";
			public static readonly string IsExonerated = "IsExonerated";
			public static readonly string ChangeDate = "ChangeDate";
			public static readonly string RoleCode = "RoleCode";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<IndividualSarlaftLog>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IndividualId.
		/// </summary>
        private int _individualId;
		/// <summary>
		/// Atributo para la propiedad UserId.
		/// </summary>
        private int _userId;
		/// <summary>
		/// Atributo para la propiedad ExonerationTypeCode.
		/// </summary>
        private int? _exonerationTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad IsExonerated.
		/// </summary>
        private bool _isExonerated;
		/// <summary>
		/// Atributo para la propiedad ChangeDate.
		/// </summary>
        private DateTime? _changeDate = null;
		/// <summary>
		/// Atributo para la propiedad RoleCode.
		/// </summary>
        private int _roleCode;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public IndividualSarlaftLog():
			this(IndividualSarlaftLog.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public IndividualSarlaftLog(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
			    return this._individualId;
		    }
		    set
		    {
				this._individualId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
			    return this._userId;
		    }
		    set
		    {
				this._userId = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExonerationTypeCode.
		/// </summary>
		/// <value>Propiedad ExonerationTypeCode.</value>
	    [
		DescriptionKey("EXONERATION_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXONERATION_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? ExonerationTypeCode
	    {
		    get
		    {
			    return this._exonerationTypeCode;
		    }
		    set
		    {
				this._exonerationTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsExonerated.
		/// </summary>
		/// <value>Propiedad IsExonerated.</value>
	    [
		DescriptionKey("IS_EXONERATED_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_EXONERATED", DbType=System.Data.DbType.String),
	    ]
        public bool IsExonerated
	    {
		    get
		    {
			    return this._isExonerated;
		    }
		    set
		    {
				this._isExonerated = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ChangeDate.
		/// </summary>
		/// <value>Propiedad ChangeDate.</value>
	    [
		DescriptionKey("CHANGE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CHANGE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ChangeDate
	    {
		    get
		    {
			    return this._changeDate;
		    }
		    set
		    {
				this._changeDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad RoleCode.
		/// </summary>
		/// <value>Propiedad RoleCode.</value>
	    [
		DescriptionKey("ROLE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ROLE_CD", DbType=System.Data.DbType.String),
	    ]
        public int RoleCode
	    {
		    get
		    {
			    return this._roleCode;
		    }
		    set
		    {
				this._roleCode = value;
			}
	    }

    }
}