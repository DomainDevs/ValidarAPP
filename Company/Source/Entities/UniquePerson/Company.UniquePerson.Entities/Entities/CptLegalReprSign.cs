/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.CptLegalReprSign.dict v1.0
 * FileSize=8197 Header=257 CRC=58552757
 ******************************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Generic;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad CptLegalReprSign.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.CptLegalReprSign.dict"),
    Serializable(),
    DescriptionKey("CPT_LEGAL_REPR_SIGN_ENTITY"),
    TableMap(TableName = "CPT_LEGAL_REPR_SIGN", Schema = "COMM"),
    ]
    public partial class CptLegalReprSign :
        BusinessObject2
    {
        #region static
        /// <summary>
        /// Propiedades públicas de la entidad.
        /// </summary>
        public static class Properties
        {
            public static readonly string CiaCode = "CiaCode";
            public static readonly string BranchTypeCode = "BranchTypeCode";
            public static readonly string CurrentFrom = "CurrentFrom";
            public static readonly string LegalRepresentative = "LegalRepresentative";
            public static readonly string PathSignatureImg = "PathSignatureImg";
            public static readonly string SignatureImg = "SignatureImg";
            public static readonly string UserId = "UserId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="ciaCode">Propiedad clave CiaCode.</param>
        /// <param name="branchTypeCode">Propiedad clave BranchTypeCode.</param>
        /// <param name="currentFrom">Propiedad clave CurrentFrom.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(decimal ciaCode, decimal branchTypeCode, DateTime currentFrom)
        {
            Dictionary<string, object> keys = new Dictionary<string, object>();
            keys.Add(Properties.CiaCode, ciaCode);
            keys.Add(Properties.BranchTypeCode, branchTypeCode);
            keys.Add(Properties.CurrentFrom, currentFrom);

            return new PrimaryKey<T>(keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="ciaCode">Propiedad clave CiaCode.</param>
        /// <param name="branchTypeCode">Propiedad clave BranchTypeCode.</param>
        /// <param name="currentFrom">Propiedad clave CurrentFrom.</param>
        public static PrimaryKey CreatePrimaryKey(decimal ciaCode, decimal branchTypeCode, DateTime currentFrom)
        {
            return InternalCreatePrimaryKey<CptLegalReprSign>(ciaCode, branchTypeCode, currentFrom);
        }
        #endregion

        //*** Object Attributes ********************************

        /// <summary>
        /// Atributo para la propiedad LegalRepresentative.
        /// </summary>
        private string _legalRepresentative = null;
        /// <summary>
        /// Atributo para la propiedad PathSignatureImg.
        /// </summary>
        private string _pathSignatureImg = null;
        /// <summary>
        /// Atributo para la propiedad SignatureImg.
        /// </summary>
        private byte[] _signatureImg;
        /// <summary>
        /// Atributo para la propiedad UserId.
        /// </summary>
        private string _userId = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="ciaCode">CiaCode key property.</param>
        /// <param name="branchTypeCode">BranchTypeCode key property.</param>
        /// <param name="currentFrom">CurrentFrom key property.</param>
        public CptLegalReprSign(decimal ciaCode, decimal branchTypeCode, DateTime currentFrom) :
            this(CptLegalReprSign.CreatePrimaryKey(ciaCode, branchTypeCode, currentFrom), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public CptLegalReprSign(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad CiaCode.
        /// </summary>
        /// <value>Propiedad CiaCode.</value>
        [
        DescriptionKey("CIA_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CIA_CD", DbType = System.Data.DbType.Decimal),
        ]
        public decimal CiaCode
        {
            get
            {
                return (decimal)this._primaryKey[Properties.CiaCode];
            }
            set
            {
                this._primaryKey[Properties.CiaCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad BranchTypeCode.
        /// </summary>
        /// <value>Propiedad BranchTypeCode.</value>
        [
        DescriptionKey("BRANCH_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "BRANCH_TYPE_CD", DbType = System.Data.DbType.Decimal),
        ]
        public decimal BranchTypeCode
        {
            get
            {
                return (decimal)this._primaryKey[Properties.BranchTypeCode];
            }
            set
            {
                this._primaryKey[Properties.BranchTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad CurrentFrom.
        /// </summary>
        /// <value>Propiedad CurrentFrom.</value>
        [
        DescriptionKey("CURRENT_FROM_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "CURRENT_FROM", DbType = System.Data.DbType.String),
        ]
        public DateTime CurrentFrom
        {
            get
            {
                return (DateTime)this._primaryKey[Properties.CurrentFrom];
            }
            set
            {
                this._primaryKey[Properties.CurrentFrom] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LegalRepresentative.
        /// </summary>
        /// <value>Propiedad LegalRepresentative.</value>
        [
        DescriptionKey("LEGAL_REPRESENTATIVE_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "LEGAL_REPRESENTATIVE", DbType = System.Data.DbType.String),
        ]
        public string LegalRepresentative
        {
            get
            {
                return this._legalRepresentative;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.LegalRepresentative);
                }
                this._legalRepresentative = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad PathSignatureImg.
        /// </summary>
        /// <value>Propiedad PathSignatureImg.</value>
        [
        DescriptionKey("PATH_SIGNATURE_IMG_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "PATH_SIGNATURE_IMG", DbType = System.Data.DbType.String),
        ]
        public string PathSignatureImg
        {
            get
            {
                return this._pathSignatureImg;
            }
            set
            {
                if (value == null)
                {
                    throw new PropertyNotNullableException(this.GetType().FullName, Properties.PathSignatureImg);
                }
                this._pathSignatureImg = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad SignatureImg.
        /// </summary>
        /// <value>Propiedad SignatureImg.</value>
        [
        DescriptionKey("SIGNATURE_IMG_PROPERTY"),
        PersistentProperty(),
        ColumnMap(ColumnName = "SIGNATURE_IMG", DbType = System.Data.DbType.String),
        ]
        public byte[] SignatureImg
        {
            get
            {
                return this._signatureImg;
            }
            set
            {
                this._signatureImg = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad UserId.
        /// </summary>
        /// <value>Propiedad UserId.</value>
        [
        DescriptionKey("USER_ID_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "USER_ID", DbType = System.Data.DbType.String),
        ]
        public string UserId
        {
            get
            {
                return this._userId;
            }
            set
            {
                this._userId = value;
            }
        }

    }
}