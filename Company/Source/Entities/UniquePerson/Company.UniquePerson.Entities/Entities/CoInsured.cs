/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Core.Application.UniquePerson.CoInsured.dict v1.0
 * FileSize=8690 Header=252 CRC=1760535566
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad CoInsured.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.CoInsured.dict"),
    Serializable(),
    DescriptionKey("CO_INSURED_ENTITY"),
    TableMap(TableName="CO_INSURED", Schema="UP"),
    ]
    public partial class CoInsured :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IndividualId = "IndividualId";
			public static readonly string SigningDate = "SigningDate";
			public static readonly string AuthorizedBy = "AuthorizedBy";
			public static readonly string IdCardNo = "IdCardNo";
			public static readonly string IdCardTypeCode = "IdCardTypeCode";
			public static readonly string UserCreate = "UserCreate";
			public static readonly string CreateDate = "CreateDate";
			public static readonly string LastUpdateUser = "LastUpdateUser";
			public static readonly string LastUpdateDate = "LastUpdateDate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.IndividualId, individualId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		public static PrimaryKey CreatePrimaryKey(int individualId)
	    {
			return InternalCreatePrimaryKey<CoInsured>(individualId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad SigningDate.
		/// </summary>
        private DateTime? _signingDate = null;
		/// <summary>
		/// Atributo para la propiedad AuthorizedBy.
		/// </summary>
        private string _authorizedBy = null;
		/// <summary>
		/// Atributo para la propiedad IdCardNo.
		/// </summary>
        private string _idCardNo = null;
		/// <summary>
		/// Atributo para la propiedad IdCardTypeCode.
		/// </summary>
        private int? _idCardTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad UserCreate.
		/// </summary>
        private int? _userCreate = null;
		/// <summary>
		/// Atributo para la propiedad CreateDate.
		/// </summary>
        private DateTime? _createDate = null;
		/// <summary>
		/// Atributo para la propiedad LastUpdateUser.
		/// </summary>
        private int? _lastUpdateUser = null;
		/// <summary>
		/// Atributo para la propiedad LastUpdateDate.
		/// </summary>
        private DateTime? _lastUpdateDate = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="individualId">IndividualId key property.</param>
	    public CoInsured(int individualId):
			this(CoInsured.CreatePrimaryKey(individualId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoInsured(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SigningDate.
		/// </summary>
		/// <value>Propiedad SigningDate.</value>
	    [
		DescriptionKey("SIGNING_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="SIGNING_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? SigningDate
	    {
		    get
		    {
			    return this._signingDate;
		    }
		    set
		    {
				this._signingDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AuthorizedBy.
		/// </summary>
		/// <value>Propiedad AuthorizedBy.</value>
	    [
		DescriptionKey("AUTHORIZED_BY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AUTHORIZED_BY", DbType=System.Data.DbType.String),
	    ]
        public string AuthorizedBy
	    {
		    get
		    {
			    return this._authorizedBy;
		    }
		    set
		    {
				this._authorizedBy = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdCardNo.
		/// </summary>
		/// <value>Propiedad IdCardNo.</value>
	    [
		DescriptionKey("ID_CARD_NO_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ID_CARD_NO", DbType=System.Data.DbType.String),
	    ]
        public string IdCardNo
	    {
		    get
		    {
			    return this._idCardNo;
		    }
		    set
		    {
				this._idCardNo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdCardTypeCode.
		/// </summary>
		/// <value>Propiedad IdCardTypeCode.</value>
	    [
		DescriptionKey("ID_CARD_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ID_CARD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? IdCardTypeCode
	    {
		    get
		    {
			    return this._idCardTypeCode;
		    }
		    set
		    {
				this._idCardTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserCreate.
		/// </summary>
		/// <value>Propiedad UserCreate.</value>
	    [
		DescriptionKey("USER_CREATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="USER_CREATE", DbType=System.Data.DbType.String),
	    ]
        public int? UserCreate
	    {
		    get
		    {
			    return this._userCreate;
		    }
		    set
		    {
				this._userCreate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CreateDate.
		/// </summary>
		/// <value>Propiedad CreateDate.</value>
	    [
		DescriptionKey("CREATE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CREATE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? CreateDate
	    {
		    get
		    {
			    return this._createDate;
		    }
		    set
		    {
				this._createDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LastUpdateUser.
		/// </summary>
		/// <value>Propiedad LastUpdateUser.</value>
	    [
		DescriptionKey("LAST_UPDATE_USER_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LAST_UPDATE_USER", DbType=System.Data.DbType.String),
	    ]
        public int? LastUpdateUser
	    {
		    get
		    {
			    return this._lastUpdateUser;
		    }
		    set
		    {
				this._lastUpdateUser = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LastUpdateDate.
		/// </summary>
		/// <value>Propiedad LastUpdateDate.</value>
	    [
		DescriptionKey("LAST_UPDATE_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="LAST_UPDATE_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? LastUpdateDate
	    {
		    get
		    {
			    return this._lastUpdateDate;
		    }
		    set
		    {
				this._lastUpdateDate = value;
			}
	    }

    }
}