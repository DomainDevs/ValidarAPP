/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.UniquePerson.IndividualPeps.dict v1.0
 * FileSize=9516 Header=260 CRC=3002441763
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad IndividualPeps.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.Peps.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_PEPS_ENTITY"),
    TableMap(TableName="INDIVIDUAL_PEPS", Schema="UP"),
    ]
    public partial class IndividualPeps :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IndividualId = "IndividualId";
			public static readonly string Exposed = "Exposed";
			public static readonly string TradeName = "TradeName";
			public static readonly string UnlinkedDate = "UnlinkedDate";
			public static readonly string IdCategoryTypeCode = "IdCategoryTypeCode";
			public static readonly string IdLinkTypeCode = "IdLinkTypeCode";
			public static readonly string IdAffinityTypeCode = "IdAffinityTypeCode";
			public static readonly string IdUnlinkedTypeCode = "IdUnlinkedTypeCode";
			public static readonly string Entity = "Entity";
			public static readonly string Observations = "Observations";
            public static readonly string JobOffice = "JobOffice";
            public static readonly string SarlaftId = "SarlaftId";

        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int sarlaftId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.SarlaftId, sarlaftId);

            return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId, int sarlaftId)
	    {
			return InternalCreatePrimaryKey<IndividualPeps>(individualId, sarlaftId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Exposed.
		/// </summary>
        private bool? _exposed = null;
		/// <summary>
		/// Atributo para la propiedad TradeName.
		/// </summary>
        private string _tradeName = null;
		/// <summary>
		/// Atributo para la propiedad UnlinkedDate.
		/// </summary>
        private DateTime? _unlinkedDate = null;
		/// <summary>
		/// Atributo para la propiedad IdCategoryTypeCode.
		/// </summary>
        private int? _idCategoryTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad IdLinkTypeCode.
		/// </summary>
        private int? _idLinkTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad IdAffinityTypeCode.
		/// </summary>
        private int? _idAffinityTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad IdUnlinkedTypeCode.
		/// </summary>
        private int? _idUnlinkedTypeCode = null;
		/// <summary>
		/// Atributo para la propiedad Entity.
		/// </summary>
        private string _entity = null;
		/// <summary>
		/// Atributo para la propiedad Observations.
		/// </summary>
        private string _observations = null;

        private string _jobOffice = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="sarlaftId">IndividualId key property.</param>
        public IndividualPeps(int individualId, int sarlaftId) :
			this(IndividualPeps.CreatePrimaryKey(individualId, sarlaftId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public IndividualPeps(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Exposed.
		/// </summary>
		/// <value>Propiedad Exposed.</value>
	    [
		DescriptionKey("EXPOSED_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Exposed", DbType=System.Data.DbType.String),
	    ]
        public bool? Exposed
	    {
		    get
		    {
			    return this._exposed;
		    }
		    set
		    {
				this._exposed = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad TradeName.
		/// </summary>
		/// <value>Propiedad TradeName.</value>
	    [
		DescriptionKey("TRADE_NAME_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Trade_Name", DbType=System.Data.DbType.String),
	    ]
        public string TradeName
	    {
		    get
		    {
			    return this._tradeName;
		    }
		    set
		    {
				this._tradeName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad UnlinkedDate.
		/// </summary>
		/// <value>Propiedad UnlinkedDate.</value>
	    [
		DescriptionKey("UNLINKED_DATE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Unlinked_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? UnlinkedDate
	    {
		    get
		    {
			    return this._unlinkedDate;
		    }
		    set
		    {
				this._unlinkedDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdCategoryTypeCode.
		/// </summary>
		/// <value>Propiedad IdCategoryTypeCode.</value>
	    [
		DescriptionKey("ID_CATEGORY_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ID_Category_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? IdCategoryTypeCode
	    {
		    get
		    {
			    return this._idCategoryTypeCode;
		    }
		    set
		    {
				this._idCategoryTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdLinkTypeCode.
		/// </summary>
		/// <value>Propiedad IdLinkTypeCode.</value>
	    [
		DescriptionKey("ID_LINK_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ID_Link_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? IdLinkTypeCode
	    {
		    get
		    {
			    return this._idLinkTypeCode;
		    }
		    set
		    {
				this._idLinkTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdAffinityTypeCode.
		/// </summary>
		/// <value>Propiedad IdAffinityTypeCode.</value>
	    [
		DescriptionKey("ID_AFFINITY_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ID_Affinity_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? IdAffinityTypeCode
	    {
		    get
		    {
			    return this._idAffinityTypeCode;
		    }
		    set
		    {
				this._idAffinityTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdUnlinkedTypeCode.
		/// </summary>
		/// <value>Propiedad IdUnlinkedTypeCode.</value>
	    [
		DescriptionKey("ID_UNLINKED_TYPE_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="ID_Unlinked_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? IdUnlinkedTypeCode
	    {
		    get
		    {
			    return this._idUnlinkedTypeCode;
		    }
		    set
		    {
				this._idUnlinkedTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Entity.
		/// </summary>
		/// <value>Propiedad Entity.</value>
	    [
		DescriptionKey("ENTITY_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Entity", DbType=System.Data.DbType.String),
	    ]
        public string Entity
	    {
		    get
		    {
			    return this._entity;
		    }
		    set
		    {
				this._entity = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Observations.
		/// </summary>
		/// <value>Propiedad Observations.</value>
	    [
		DescriptionKey("OBSERVATIONS_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="Observations", DbType=System.Data.DbType.String),
	    ]
        public string Observations
	    {
		    get
		    {
			    return this._observations;
		    }
		    set
		    {
				this._observations = value;
			}
	    }

        /// <summary>
		/// Devuelve o setea el valor de la propiedad JobOffice.
		/// </summary>
		/// <value>Propiedad JobOffice.</value>
	    [
        DescriptionKey("JOBOFFICE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "JobOffice", DbType = System.Data.DbType.String),
        ]
        public string JobOffice
        {
            get
            {
                return this._jobOffice;
            }
            set
            {
                this._jobOffice = value;
            }
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad SarlaftId.
        /// </summary>
        /// <value>Propiedad SarlaftId.</value>
        [
        DescriptionKey("SARLAFT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SARLAFT_ID", DbType = System.Data.DbType.String),
        ]
        public int SarlaftId
        {
            get
            {
                return (int)this._primaryKey[Properties.SarlaftId];
            }
            set
            {
                this._primaryKey[Properties.SarlaftId] = value;
            }
        }

    }
}