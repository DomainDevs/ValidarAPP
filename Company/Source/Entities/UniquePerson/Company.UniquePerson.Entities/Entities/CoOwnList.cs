/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.UniquePerson.CoOwnList.dict v1.0
 * FileSize=3739 Header=255 CRC=3340081743
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad CoOwnList.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.CoOwnList.dict"),
    Serializable(),
    DescriptionKey("CO_OWN_LIST_ENTITY"),
    TableMap(TableName="CO_OWN_LIST", Schema="UP"),
    ]
    public partial class CoOwnList :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IdentificationNro = "IdentificationNro";
			public static readonly string Descripction = "Descripction";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>()
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		public static PrimaryKey CreatePrimaryKey()
	    {
			return InternalCreatePrimaryKey<CoOwnList>();
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IdentificationNro.
		/// </summary>
        private string _identificationNro = null;
		/// <summary>
		/// Atributo para la propiedad Descripction.
		/// </summary>
        private string _descripction = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
	    public CoOwnList():
			this(CoOwnList.CreatePrimaryKey(), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoOwnList(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdentificationNro.
		/// </summary>
		/// <value>Propiedad IdentificationNro.</value>
	    [
		DescriptionKey("IDENTIFICATION_NRO_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IDENTIFICATION_NRO", DbType=System.Data.DbType.String),
	    ]
        public string IdentificationNro
	    {
		    get
		    {
			    return this._identificationNro;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.IdentificationNro);
				}
				this._identificationNro = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Descripction.
		/// </summary>
		/// <value>Propiedad Descripction.</value>
	    [
		DescriptionKey("DESCRIPCTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPCTION", DbType=System.Data.DbType.String),
	    ]
        public string Descripction
	    {
		    get
		    {
			    return this._descripction;
		    }
		    set
		    {
				this._descripction = value;
			}
	    }

    }
}