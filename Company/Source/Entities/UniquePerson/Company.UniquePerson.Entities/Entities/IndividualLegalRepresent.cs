/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.UniquePerson.IndividualLegalRepresent.dict v1.0
 * FileSize=17679 Header=271 CRC=2198372477
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniquePerson.Entities
{
    /// <summary>
    /// Definición de entidad IndividualLegalRepresent.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniquePerson.IndividualLegalRepresent.dict"),
    Serializable(),
    DescriptionKey("INDIVIDUAL_LEGAL_REPRESENT_ENTITY"),
    TableMap(TableName="INDIVIDUAL_LEGAL_REPRESENT", Schema="UP"),
    ]
    public partial class IndividualLegalRepresent :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string IndividualId = "IndividualId";
			public static readonly string LegalRepresentativeName = "LegalRepresentativeName";
			public static readonly string ExpeditionDate = "ExpeditionDate";
			public static readonly string ExpeditionPlace = "ExpeditionPlace";
			public static readonly string BirthDate = "BirthDate";
			public static readonly string BirthPlace = "BirthPlace";
			public static readonly string Nationality = "Nationality";
			public static readonly string City = "City";
			public static readonly string Phone = "Phone";
			public static readonly string JobTitle = "JobTitle";
			public static readonly string CellPhone = "CellPhone";
			public static readonly string Email = "Email";
			public static readonly string Address = "Address";
			public static readonly string IdCardNo = "IdCardNo";
			public static readonly string AuthorizationAmount = "AuthorizationAmount";
			public static readonly string Description = "Description";
			public static readonly string CurrencyCode = "CurrencyCode";
			public static readonly string IdCardTypeCode = "IdCardTypeCode";
			public static readonly string CountryCode = "CountryCode";
			public static readonly string StateCode = "StateCode";
			public static readonly string CityCode = "CityCode";
            public static readonly string LegalRepresentTypeCode = "LegalRepresentTypeCode";
            public static readonly string NationalityTypeCode = "NationalityTypeCode";
            public static readonly string NationalityOtherTypeCode = "NationalityOtherTypeCode";
            public static readonly string IsMain = "IsMain";
            public static readonly string SarlaftId = "SarlaftId";
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey<T>(int individualId, int sarlaftId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.IndividualId, individualId);
            keys.Add(Properties.SarlaftId, sarlaftId);

            return new PrimaryKey<T>(keys);
	    }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="individualId">Propiedad clave IndividualId.</param>
        /// <param name="sarlaftId">Propiedad clave SarlaftId.</param>
        public static PrimaryKey CreatePrimaryKey(int individualId, int sarlaftId)
	    {
			return InternalCreatePrimaryKey<IndividualLegalRepresent>(individualId, sarlaftId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad LegalRepresentativeName.
		/// </summary>
        private string _legalRepresentativeName = null;
		/// <summary>
		/// Atributo para la propiedad ExpeditionDate.
		/// </summary>
        private DateTime? _expeditionDate;
		/// <summary>
		/// Atributo para la propiedad ExpeditionPlace.
		/// </summary>
        private string _expeditionPlace = null;
		/// <summary>
		/// Atributo para la propiedad BirthDate.
		/// </summary>
        private DateTime? _birthDate;
		/// <summary>
		/// Atributo para la propiedad BirthPlace.
		/// </summary>
        private string _birthPlace = null;
		/// <summary>
		/// Atributo para la propiedad Nationality.
		/// </summary>
        private string _nationality = null;
		/// <summary>
		/// Atributo para la propiedad City.
		/// </summary>
        private string _city = null;
		/// <summary>
		/// Atributo para la propiedad Phone.
		/// </summary>
        private long? _phone = null;
		/// <summary>
		/// Atributo para la propiedad JobTitle.
		/// </summary>
        private string _jobTitle = null;
		/// <summary>
		/// Atributo para la propiedad CellPhone.
		/// </summary>
        private long? _cellPhone = null;
		/// <summary>
		/// Atributo para la propiedad Email.
		/// </summary>
        private string _email = null;
		/// <summary>
		/// Atributo para la propiedad Address.
		/// </summary>
        private string _address = null;
		/// <summary>
		/// Atributo para la propiedad IdCardNo.
		/// </summary>
        private string _idCardNo = null;
		/// <summary>
		/// Atributo para la propiedad AuthorizationAmount.
		/// </summary>
        private decimal? _authorizationAmount = null;
		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
		/// <summary>
		/// Atributo para la propiedad CurrencyCode.
		/// </summary>
        private int? _currencyCode = null;
		/// <summary>
		/// Atributo para la propiedad IdCardTypeCode.
		/// </summary>
        private int _idCardTypeCode;
		/// <summary>
		/// Atributo para la propiedad CountryCode.
		/// </summary>
        private int? _countryCode;
		/// <summary>
		/// Atributo para la propiedad StateCode.
		/// </summary>
        private int? _stateCode;
		/// <summary>
		/// Atributo para la propiedad CityCode.
		/// </summary>
        private int? _cityCode;
        /// <summary>
        /// Atributo para la propiedad NationalityTypeCode.
        /// </summary>
        private int? _nationalityTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad NationalityOtherTypeCode.
        /// </summary>
        private int? _nationalityOtherTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad legalRepresentTypeCode.
        /// </summary>
        private int? _legalRepresentTypeCode = null;
        /// <summary>
        /// Atributo para la propiedad IsMain.
        /// </summary>
        private bool? _isMain = null;
        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="individualId">IndividualId key property.</param>
        /// <param name="sarlaftId">sarlaftId key property.</param>
        public IndividualLegalRepresent(int individualId, int sarlaftId) :
			this(IndividualLegalRepresent.CreatePrimaryKey(individualId, sarlaftId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public IndividualLegalRepresent(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad LegalRepresentativeName.
		/// </summary>
		/// <value>Propiedad LegalRepresentativeName.</value>
	    [
		DescriptionKey("LEGAL_REPRESENTATIVE_NAME_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="LEGAL_REPRESENTATIVE_NAME", DbType=System.Data.DbType.String),
	    ]
        public string LegalRepresentativeName
	    {
		    get
		    {
			    return this._legalRepresentativeName;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.LegalRepresentativeName);
				}
				this._legalRepresentativeName = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExpeditionDate.
		/// </summary>
		/// <value>Propiedad ExpeditionDate.</value>
	    [
		DescriptionKey("EXPEDITION_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="EXPEDITION_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? ExpeditionDate
	    {
		    get
		    {
			    return this._expeditionDate;
		    }
		    set
		    {
				this._expeditionDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ExpeditionPlace.
		/// </summary>
		/// <value>Propiedad ExpeditionPlace.</value>
	    [
		DescriptionKey("EXPEDITION_PLACE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EXPEDITION_PLACE", DbType=System.Data.DbType.String),
	    ]
        public string ExpeditionPlace
	    {
		    get
		    {
			    return this._expeditionPlace;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.ExpeditionPlace);
				}
				this._expeditionPlace = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BirthDate.
		/// </summary>
		/// <value>Propiedad BirthDate.</value>
	    [
		DescriptionKey("BIRTH_DATE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="BIRTH_DATE", DbType=System.Data.DbType.String),
	    ]
        public DateTime? BirthDate
	    {
		    get
		    {
			    return this._birthDate;
		    }
		    set
		    {
				this._birthDate = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BirthPlace.
		/// </summary>
		/// <value>Propiedad BirthPlace.</value>
	    [
		DescriptionKey("BIRTH_PLACE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="BIRTH_PLACE", DbType=System.Data.DbType.String),
	    ]
        public string BirthPlace
	    {
		    get
		    {
			    return this._birthPlace;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.BirthPlace);
				}
				this._birthPlace = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Nationality.
		/// </summary>
		/// <value>Propiedad Nationality.</value>
	    [
		DescriptionKey("NATIONALITY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="NATIONALITY", DbType=System.Data.DbType.String),
	    ]
        public string Nationality
	    {
		    get
		    {
			    return this._nationality;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Nationality);
				}
				this._nationality = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad City.
		/// </summary>
		/// <value>Propiedad City.</value>
	    [
		DescriptionKey("CITY_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="CITY", DbType=System.Data.DbType.String),
	    ]
        public string City
	    {
		    get
		    {
			    return this._city;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.City);
				}
				this._city = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Phone.
		/// </summary>
		/// <value>Propiedad Phone.</value>
	    [
		DescriptionKey("PHONE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="PHONE", DbType=System.Data.DbType.String),
	    ]
        public long? Phone
	    {
		    get
		    {
			    return this._phone;
		    }
		    set
		    {
				this._phone = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad JobTitle.
		/// </summary>
		/// <value>Propiedad JobTitle.</value>
	    [
		DescriptionKey("JOB_TITLE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="JOB_TITLE", DbType=System.Data.DbType.String),
	    ]
        public string JobTitle
	    {
		    get
		    {
			    return this._jobTitle;
		    }
		    set
		    {
				this._jobTitle = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CellPhone.
		/// </summary>
		/// <value>Propiedad CellPhone.</value>
	    [
		DescriptionKey("CELL_PHONE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CELL_PHONE", DbType=System.Data.DbType.String),
	    ]
        public long? CellPhone
	    {
		    get
		    {
			    return this._cellPhone;
		    }
		    set
		    {
				this._cellPhone = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Email.
		/// </summary>
		/// <value>Propiedad Email.</value>
	    [
		DescriptionKey("EMAIL_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="EMAIL", DbType=System.Data.DbType.String),
	    ]
        public string Email
	    {
		    get
		    {
			    return this._email;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Email);
				}
				this._email = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Address.
		/// </summary>
		/// <value>Propiedad Address.</value>
	    [
		DescriptionKey("ADDRESS_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ADDRESS", DbType=System.Data.DbType.String),
	    ]
        public string Address
	    {
		    get
		    {
			    return this._address;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Address);
				}
				this._address = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdCardNo.
		/// </summary>
		/// <value>Propiedad IdCardNo.</value>
	    [
		DescriptionKey("ID_CARD_NO_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ID_CARD_NO", DbType=System.Data.DbType.String),
	    ]
        public string IdCardNo
	    {
		    get
		    {
			    return this._idCardNo;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.IdCardNo);
				}
				this._idCardNo = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AuthorizationAmount.
		/// </summary>
		/// <value>Propiedad AuthorizationAmount.</value>
	    [
		DescriptionKey("AUTHORIZATION_AMOUNT_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="AUTHORIZATION_AMT", DbType=System.Data.DbType.Decimal),
	    ]
        public decimal? AuthorizationAmount
	    {
		    get
		    {
			    return this._authorizationAmount;
		    }
		    set
		    {
				this._authorizationAmount = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				this._description = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CurrencyCode.
		/// </summary>
		/// <value>Propiedad CurrencyCode.</value>
	    [
		DescriptionKey("CURRENCY_CODE_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CURRENCY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CurrencyCode
	    {
		    get
		    {
			    return this._currencyCode;
		    }
		    set
		    {
				this._currencyCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IdCardTypeCode.
		/// </summary>
		/// <value>Propiedad IdCardTypeCode.</value>
	    [
		DescriptionKey("ID_CARD_TYPE_CODE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="ID_CARD_TYPE_CD", DbType=System.Data.DbType.String),
	    ]
        public int IdCardTypeCode
	    {
		    get
		    {
			    return this._idCardTypeCode;
		    }
		    set
		    {
				this._idCardTypeCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CountryCode.
		/// </summary>
		/// <value>Propiedad CountryCode.</value>
	    [
		DescriptionKey("COUNTRY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="COUNTRY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CountryCode
	    {
		    get
		    {
			    return this._countryCode;
		    }
		    set
		    {
				this._countryCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad StateCode.
		/// </summary>
		/// <value>Propiedad StateCode.</value>
	    [
		DescriptionKey("STATE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="STATE_CD", DbType=System.Data.DbType.String),
	    ]
        public int? StateCode
	    {
		    get
		    {
			    return this._stateCode;
		    }
		    set
		    {
				this._stateCode = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CityCode.
		/// </summary>
		/// <value>Propiedad CityCode.</value>
	    [
		DescriptionKey("CITY_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="CITY_CD", DbType=System.Data.DbType.String),
	    ]
        public int? CityCode
	    {
		    get
		    {
			    return this._cityCode;
		    }
		    set
		    {
				this._cityCode = value;
			}
	    }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad LegalRepresentTypeCode.
        /// </summary>
        /// <value>Propiedad LegalRepresentTypeCode.</value>
        [
        DescriptionKey("LEGAL_REPRESENT_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "LEGAL_REPRESENT_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int LegalRepresentTypeCode
        {
            get
            {
                return (int)this._primaryKey[Properties.LegalRepresentTypeCode];
            }
            set
            {
                this._primaryKey[Properties.LegalRepresentTypeCode] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad NationalityTypeCode.
        /// </summary>
        /// <value>Propiedad NationalityTypeCode.</value>
        [
        DescriptionKey("NATIONALITY_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NATIONALITY_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? NationalityTypeCode
        {
            get
            {
                return this._nationalityTypeCode;
            }
            set
            {
                this._nationalityTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad NationalityOtherTypeCode.
        /// </summary>
        /// <value>Propiedad NationalityOtherTypeCode.</value>
        [
        DescriptionKey("NATIONALITY_OTHER_TYPE_CODE_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "NATIONALITY_OTHER_TYPE_CD", DbType = System.Data.DbType.String),
        ]
        public int? NationalityOtherTypeCode
        {
            get
            {
                return this._nationalityOtherTypeCode;
            }
            set
            {
                this._nationalityOtherTypeCode = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad IsMain.
        /// </summary>
        /// <value>Propiedad IsMain.</value>
        [
        DescriptionKey("IS_MAIN_PROPERTY"),
        PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName = "IS_MAIN", DbType = System.Data.DbType.String),
        ]
        public bool? IsMain
        {
            get
            {
                return this._isMain;
            }
            set
            {
                this._isMain = value;
            }
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad SarlaftId.
        /// </summary>
        /// <value>Propiedad SarlaftId.</value>
        [
        DescriptionKey("SARLAFT_ID_PROPERTY"),
        PersistentProperty(IsKey = true),
        ColumnMap(ColumnName = "SARLAFT_ID", DbType = System.Data.DbType.String),
        ]
        public int SarlaftId
        {
            get
            {
                return (int)this._primaryKey[Properties.SarlaftId];
            }
            set
            {
                this._primaryKey[Properties.SarlaftId] = value;
            }
        }
    }
}