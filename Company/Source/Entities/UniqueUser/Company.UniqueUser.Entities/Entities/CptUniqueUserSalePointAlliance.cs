/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Co.Colpatria.Application.UniqueUser.CptUniqueUserSalePointAlliance.dict v1.0
 * FileSize=8878 Header=279 CRC=2991566287
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.UniqueUser.Entities
{
    /// <summary>
    /// Definición de entidad CptUniqueUserSalePointAlliance.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.UniqueUser.CptUniqueUserSalePointAlliance.dict"),
    Serializable(),
    DescriptionKey("CPT_UNIQUE_USER_SALE_POINT_ALLIANCE_ENTITY"),
    TableMap(TableName="CPT_UNIQUE_USER_SALE_POINT_ALLIANCE", Schema="UU"),
    ]
    public partial class CptUniqueUserSalePointAlliance :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string UserId = "UserId";
			public static readonly string AllianceId = "AllianceId";
			public static readonly string BranchAllianceId = "BranchAllianceId";
			public static readonly string SalePointAllianceId = "SalePointAllianceId";
			public static readonly string IndividualId = "IndividualId";
			public static readonly string AgentAgencyId = "AgentAgencyId";
			public static readonly string IsAssign = "IsAssign";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="userId">Propiedad clave UserId.</param>
		/// <param name="allianceId">Propiedad clave AllianceId.</param>
		/// <param name="branchAllianceId">Propiedad clave BranchAllianceId.</param>
		/// <param name="salePointAllianceId">Propiedad clave SalePointAllianceId.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int userId, int allianceId, int branchAllianceId, int salePointAllianceId, int individualId, int agentAgencyId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.UserId, userId);
		    keys.Add(Properties.AllianceId, allianceId);
		    keys.Add(Properties.BranchAllianceId, branchAllianceId);
		    keys.Add(Properties.SalePointAllianceId, salePointAllianceId);
		    keys.Add(Properties.IndividualId, individualId);
		    keys.Add(Properties.AgentAgencyId, agentAgencyId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="userId">Propiedad clave UserId.</param>
		/// <param name="allianceId">Propiedad clave AllianceId.</param>
		/// <param name="branchAllianceId">Propiedad clave BranchAllianceId.</param>
		/// <param name="salePointAllianceId">Propiedad clave SalePointAllianceId.</param>
		/// <param name="individualId">Propiedad clave IndividualId.</param>
		/// <param name="agentAgencyId">Propiedad clave AgentAgencyId.</param>
		public static PrimaryKey CreatePrimaryKey(int userId, int allianceId, int branchAllianceId, int salePointAllianceId, int individualId, int agentAgencyId)
	    {
			return InternalCreatePrimaryKey<CptUniqueUserSalePointAlliance>(userId, allianceId, branchAllianceId, salePointAllianceId, individualId, agentAgencyId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IsAssign.
		/// </summary>
        private bool? _isAssign = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="userId">UserId key property.</param>
		/// <param name="allianceId">AllianceId key property.</param>
		/// <param name="branchAllianceId">BranchAllianceId key property.</param>
		/// <param name="salePointAllianceId">SalePointAllianceId key property.</param>
		/// <param name="individualId">IndividualId key property.</param>
		/// <param name="agentAgencyId">AgentAgencyId key property.</param>
	    public CptUniqueUserSalePointAlliance(int userId, int allianceId, int branchAllianceId, int salePointAllianceId, int individualId, int agentAgencyId):
			this(CptUniqueUserSalePointAlliance.CreatePrimaryKey(userId, allianceId, branchAllianceId, salePointAllianceId, individualId, agentAgencyId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CptUniqueUserSalePointAlliance(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad UserId.
		/// </summary>
		/// <value>Propiedad UserId.</value>
	    [
		DescriptionKey("USER_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="USER_ID", DbType=System.Data.DbType.String),
	    ]
        public int UserId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.UserId];
		    }
		    set
		    {
				this._primaryKey[Properties.UserId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AllianceId.
		/// </summary>
		/// <value>Propiedad AllianceId.</value>
	    [
		DescriptionKey("ALLIANCE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="ALLIANCE_ID", DbType=System.Data.DbType.String),
	    ]
        public int AllianceId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AllianceId];
		    }
		    set
		    {
				this._primaryKey[Properties.AllianceId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad BranchAllianceId.
		/// </summary>
		/// <value>Propiedad BranchAllianceId.</value>
	    [
		DescriptionKey("BRANCH_ALLIANCE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="BRANCH_ALLIANCE_ID", DbType=System.Data.DbType.String),
	    ]
        public int BranchAllianceId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.BranchAllianceId];
		    }
		    set
		    {
				this._primaryKey[Properties.BranchAllianceId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad SalePointAllianceId.
		/// </summary>
		/// <value>Propiedad SalePointAllianceId.</value>
	    [
		DescriptionKey("SALE_POINT_ALLIANCE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="SALE_POINT_ALLIANCE_ID", DbType=System.Data.DbType.String),
	    ]
        public int SalePointAllianceId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.SalePointAllianceId];
		    }
		    set
		    {
				this._primaryKey[Properties.SalePointAllianceId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IndividualId.
		/// </summary>
		/// <value>Propiedad IndividualId.</value>
	    [
		DescriptionKey("INDIVIDUAL_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="INDIVIDUAL_ID", DbType=System.Data.DbType.String),
	    ]
        public int IndividualId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.IndividualId];
		    }
		    set
		    {
				this._primaryKey[Properties.IndividualId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad AgentAgencyId.
		/// </summary>
		/// <value>Propiedad AgentAgencyId.</value>
	    [
		DescriptionKey("AGENT_AGENCY_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="AGENT_AGENCY_ID", DbType=System.Data.DbType.String),
	    ]
        public int AgentAgencyId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.AgentAgencyId];
		    }
		    set
		    {
				this._primaryKey[Properties.AgentAgencyId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsAssign.
		/// </summary>
		/// <value>Propiedad IsAssign.</value>
	    [
		DescriptionKey("IS_ASSIGN_PROPERTY"),
		PersistentProperty(IsNullable = true),
        ColumnMap(ColumnName="IS_ASSIGN", DbType=System.Data.DbType.String),
	    ]
        public bool? IsAssign
	    {
		    get
		    {
			    return this._isAssign;
		    }
		    set
		    {
				this._isAssign = value;
			}
	    }

    }
}