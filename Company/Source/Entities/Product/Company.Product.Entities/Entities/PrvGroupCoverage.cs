/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.Product.PrvGroupCoverage.dict v1.0
 * FileSize=6319 Header=256 CRC=182908578
 ******************************************/
using System;
using System.Collections;
using System.Collections.Generic;
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;

namespace Sistran.Company.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad PrvGroupCoverage.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Product.PrvGroupCoverage.dict"),
    Serializable(),
    DescriptionKey("PRV_GROUP_COVERAGE_ENTITY"),
    TableMap(TableName="PRV_GROUP_COVERAGE", Schema="PROD"),
    ]
    public partial class PrvGroupCoverage :
        BusinessObject2
    {
#region static
		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string CoverageId = "CoverageId";
			public static readonly string ProductId = "ProductId";
			public static readonly string CoverGroupId = "CoverGroupId";
			public static readonly string IsPremiumMin = "IsPremiumMin";
			public static readonly string NoCalculate = "NoCalculate";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <param name="coverGroupId">Propiedad clave CoverGroupId.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int coverageId, int productId, int coverGroupId)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.CoverageId, coverageId);
		    keys.Add(Properties.ProductId, productId);
		    keys.Add(Properties.CoverGroupId, coverGroupId);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="coverageId">Propiedad clave CoverageId.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <param name="coverGroupId">Propiedad clave CoverGroupId.</param>
		public static PrimaryKey CreatePrimaryKey(int coverageId, int productId, int coverGroupId)
	    {
			return InternalCreatePrimaryKey<PrvGroupCoverage>(coverageId, productId, coverGroupId);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad IsPremiumMin.
		/// </summary>
        private int _isPremiumMin;
		/// <summary>
		/// Atributo para la propiedad NoCalculate.
		/// </summary>
        private int _noCalculate;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="coverageId">CoverageId key property.</param>
		/// <param name="productId">ProductId key property.</param>
		/// <param name="coverGroupId">CoverGroupId key property.</param>
	    public PrvGroupCoverage(int coverageId, int productId, int coverGroupId):
			this(PrvGroupCoverage.CreatePrimaryKey(coverageId, productId, coverGroupId), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public PrvGroupCoverage(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverageId.
		/// </summary>
		/// <value>Propiedad CoverageId.</value>
	    [
		DescriptionKey("COVERAGE_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVERAGE_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverageId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverageId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverageId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProductId.
		/// </summary>
		/// <value>Propiedad ProductId.</value>
	    [
		DescriptionKey("PRODUCT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PRODUCT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProductId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ProductId];
		    }
		    set
		    {
				this._primaryKey[Properties.ProductId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad CoverGroupId.
		/// </summary>
		/// <value>Propiedad CoverGroupId.</value>
	    [
		DescriptionKey("COVER_GROUP_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="COVER_GROUP_ID", DbType=System.Data.DbType.String),
	    ]
        public int CoverGroupId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.CoverGroupId];
		    }
		    set
		    {
				this._primaryKey[Properties.CoverGroupId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad IsPremiumMin.
		/// </summary>
		/// <value>Propiedad IsPremiumMin.</value>
	    [
		DescriptionKey("IS_PREMIUM_MIN_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="IS_PREMIUM_MIN", DbType=System.Data.DbType.String),
	    ]
        public int IsPremiumMin
	    {
		    get
		    {
			    return this._isPremiumMin;
		    }
		    set
		    {
				this._isPremiumMin = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad NoCalculate.
		/// </summary>
		/// <value>Propiedad NoCalculate.</value>
	    [
		DescriptionKey("NO_CALCULATE_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="NO_CALCULATE", DbType=System.Data.DbType.String),
	    ]
        public int NoCalculate
	    {
		    get
		    {
			    return this._noCalculate;
		    }
		    set
		    {
				this._noCalculate = value;
			}
	    }

    }
}