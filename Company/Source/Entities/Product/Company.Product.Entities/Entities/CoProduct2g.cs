/******************************************
 * Code generated by GEB (Version: 2.2.0.0)
 * Template: Sistran.Company.Application.Common.CoProduct2g.dict v1.0
 * FileSize=4770 Header=247 CRC=933622332
 ******************************************/
namespace Sistran.Company.Application.Product.Entities
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using Sistran.Core.Framework;
    using Sistran.Core.Framework.DAF;

    /// <summary>
    /// Definición de entidad CoProduct2g.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Product.CoProduct2g.dict"),
    Serializable(),
    DescriptionKey("CO_PRODUCT2G_ENTITY"),
    TableMap(TableName = "CO_PRODUCT_2G", Schema = "PROD"),
    ]
    public partial class CoProduct2g : BusinessObject2
    {
        #region static

		/// <summary>
		/// Propiedades públicas de la entidad.
		/// </summary>
		public static class Properties
		{
			public static readonly string ProductId = "ProductId";
			public static readonly string PrefixCode = "PrefixCode";
			public static readonly string Description = "Description";
		}

		/// <summary>
		/// Crea una clave primaria para una clase concreta.
		/// </summary>
		/// <param name="concreteClass">Clase concreta.</param>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <param name="prefixCode">Propiedad clave PrefixCode.</param>
		/// <returns>Clave primaria.</returns>
	    protected static PrimaryKey InternalCreatePrimaryKey<T>(int productId, int prefixCode)
	    {
		    Dictionary<string, object> keys = new Dictionary<string, object>();
		    keys.Add(Properties.ProductId, productId);
		    keys.Add(Properties.PrefixCode, prefixCode);

		    return new PrimaryKey<T>(keys);
	    }

		/// <summary>
		/// Crea una clave primaria para esta clase.
		/// </summary>
		/// <param name="productId">Propiedad clave ProductId.</param>
		/// <param name="prefixCode">Propiedad clave PrefixCode.</param>
		public static PrimaryKey CreatePrimaryKey(int productId, int prefixCode)
	    {
			return InternalCreatePrimaryKey<CoProduct2g>(productId, prefixCode);
		}
#endregion

	    //*** Object Attributes ********************************

		/// <summary>
		/// Atributo para la propiedad Description.
		/// </summary>
        private string _description = null;
	    //*** Object Constructors ********************************

		/// <summary>
		/// Constructor de instancia de la clase en base a las propiedades claves.
		/// </summary>
		/// <param name="productId">ProductId key property.</param>
		/// <param name="prefixCode">PrefixCode key property.</param>
	    public CoProduct2g(int productId, int prefixCode):
			this(CoProduct2g.CreatePrimaryKey(productId, prefixCode), null)
	    {
	    }

		/// <summary>
		/// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
		/// </summary>
		/// <param name="key">
		/// Identificador de la instancia de la entidad.
		/// </param>
		/// <param name="initialValues">
		/// Valores para establecer el estado de la instancia.
		/// </param>
	    public CoProduct2g(PrimaryKey key, IDictionary initialValues):
			base(key, initialValues)
	    {
	    }

	    /*** Object Properties ********************************/
		/// <summary>
		/// Devuelve o setea el valor de la propiedad ProductId.
		/// </summary>
		/// <value>Propiedad ProductId.</value>
	    [
		DescriptionKey("PRODUCT_ID_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PRODUCT_ID", DbType=System.Data.DbType.String),
	    ]
        public int ProductId
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.ProductId];
		    }
		    set
		    {
				this._primaryKey[Properties.ProductId] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad PrefixCode.
		/// </summary>
		/// <value>Propiedad PrefixCode.</value>
	    [
		DescriptionKey("PREFIX_CODE_PROPERTY"),
		PersistentProperty(IsKey = true),
        ColumnMap(ColumnName="PREFIX_CD", DbType=System.Data.DbType.String),
	    ]
        public int PrefixCode
	    {
		    get
		    {
				return (int)this._primaryKey[Properties.PrefixCode];
		    }
		    set
		    {
				this._primaryKey[Properties.PrefixCode] = value;
			}
	    }

		/// <summary>
		/// Devuelve o setea el valor de la propiedad Description.
		/// </summary>
		/// <value>Propiedad Description.</value>
	    [
		DescriptionKey("DESCRIPTION_PROPERTY"),
		PersistentProperty(),
        ColumnMap(ColumnName="DESCRIPTION", DbType=System.Data.DbType.String),
	    ]
        public string Description
	    {
		    get
		    {
			    return this._description;
		    }
		    set
		    {
				if(value == null)
				{
					throw new PropertyNotNullableException(this.GetType().FullName, Properties.Description);
				}
				this._description = value;
			}
	    }
    }
}