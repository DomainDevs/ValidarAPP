/**********************************
 * Code generated by DictEditor v1.0.2.1
 * Template:Sistran.Company.Application.Product.FirstPayComponent.dict v1.0
//  {28/12/2004, mcharytoniuk, MODIFICACIÓN, Ajustes de comentarios de docum
//  entación XML.}
 **********************************/
using Sistran.Core.Framework;
using Sistran.Core.Framework.DAF;
using System;
using System.Collections;
using System.Collections.Specialized;

namespace Sistran.Company.Application.Product.Entities
{
    /// <summary>
    /// Definición de entidad FirstPayComponent.
    /// </summary>
    [
    PersistentClass("Sistran.Company.Application.Product.FirstPayComponent.dict"),
    Serializable(),
    DescriptionKey("FIRST_PAY_COMPONENT_ENTITY")
    ]
    public class FirstPayComponent :
        BusinessObject
    {
        #region static

        /// <summary>
        /// Declaración de constantes con los nombres de las propiedades
        /// de la entidad.
        /// </summary>
        public sealed class Properties
        {
            /// <summary>
            /// Constante con el nombre de la propiedad FinancialPlanId.
            /// </summary>
            public static readonly string FinancialPlanId = "FinancialPlanId";
            /// <summary>
            /// Constante con el nombre de la propiedad ComponentCode.
            /// </summary>
            public static readonly string ComponentCode = "ComponentCode";

            private Properties()
            {
            }
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="componentCode">Propiedad clave ComponentCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass, int componentCode)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add("FinancialPlanId", null);
            keys.Add("ComponentCode", componentCode);

            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Crea una clave primaria para una clase concreta.
        /// </summary>
        /// <param name="concreteClass">Clase concreta.</param>
        /// <param name="financialPlanId">Propiedad clave FinancialPlanId.</param>
        /// <param name="componentCode">Propiedad clave ComponentCode.</param>
        /// <returns>Clave primaria.</returns>
        protected static PrimaryKey InternalCreatePrimaryKey(Type concreteClass, int financialPlanId, int componentCode)
        {
            ListDictionary keys = new ListDictionary();
            keys.Add("FinancialPlanId", financialPlanId);
            keys.Add("ComponentCode", componentCode);

            return new PrimaryKey(concreteClass, keys);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="financialPlanId">Propiedad clave FinancialPlanId.</param>
        /// <param name="componentCode">Propiedad clave ComponentCode.</param>
        public static PrimaryKey CreatePrimaryKey(int financialPlanId, int componentCode)
        {
            return InternalCreatePrimaryKey(typeof(FirstPayComponent), financialPlanId, componentCode);
        }

        /// <summary>
        /// Crea una clave primaria para esta clase.
        /// </summary>
        /// <param name="componentCode">Propiedad clave ComponentCode.</param>
        public static PrimaryKey CreatePrimaryKey(int componentCode)
        {
            return InternalCreatePrimaryKey(typeof(FirstPayComponent), componentCode);
        }

        #endregion

        //*** Object Attributes ********************************

        //*** Object Constructors ********************************

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades 
        /// claves.
        /// </summary>
        /// <param name="componentCode">ComponentCode key property.</param>
        public FirstPayComponent(int componentCode) :
            this(FirstPayComponent.CreatePrimaryKey(componentCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a las propiedades claves.
        /// </summary>
        /// <param name="financialPlanId">FinancialPlanId key property.</param>
        /// <param name="componentCode">ComponentCode key property.</param>
        public FirstPayComponent(int financialPlanId, int componentCode) :
            this(FirstPayComponent.CreatePrimaryKey(financialPlanId, componentCode), null)
        {
        }

        /// <summary>
        /// Constructor de instancia de la clase en base a una clave primaria y a valores iniciales.
        /// </summary>
        /// <param name="key">
        /// Identificador de la instancia de la entidad.
        /// </param>
        /// <param name="initialValues">
        /// Valores para establecer el estado de la instancia.
        /// </param>
        public FirstPayComponent(PrimaryKey key, IDictionary initialValues) :
            base(key, initialValues)
        {
        }

        /*** Object Properties ********************************/
        /// <summary>
        /// Devuelve o setea el valor de la propiedad FinancialPlanId.
        /// </summary>
        /// <value>Propiedad FinancialPlanId.</value>
        [
            DescriptionKey("FINANCIAL_PLAN_ID_PROPERTY"),
            PersistentProperty(IsKey = true)
        ]
        public int FinancialPlanId
        {
            get
            {
                return (int)this._primaryKey["FinancialPlanId"];
            }
            set
            {
                this._primaryKey["FinancialPlanId"] = value;
            }
        }

        /// <summary>
        /// Devuelve o setea el valor de la propiedad ComponentCode.
        /// </summary>
        /// <value>Propiedad ComponentCode.</value>
        [
            DescriptionKey("COMPONENT_CODE_PROPERTY"),
            PersistentProperty(IsKey = true)
        ]
        public int ComponentCode
        {
            get
            {
                return (int)this._primaryKey["ComponentCode"];
            }
            set
            {
                this._primaryKey["ComponentCode"] = value;
            }
        }

        /// <summary>
        /// Obtiene el estado a partir de los valores de la instancia de la entidad.
        /// </summary>
        /// <returns>
        /// Diccionario con los valores de las propiedades.
        /// </returns>
        public override IDictionary GetPropertyValues()
        {
            ListDictionary values = new ListDictionary();


            return values;
        }

    }
}