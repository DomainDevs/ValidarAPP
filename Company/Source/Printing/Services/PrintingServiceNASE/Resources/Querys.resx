<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnnotationsByProcessId" xml:space="preserve">
    <value>SELECT ANNOTATIONS FROM REPORT.CO_TMP_POLICY_COVER WHERE PROCESS_ID = {0}</value>
  </data>
  <data name="CoverageClausesByProcessId" xml:space="preserve">
    <value>SELECT  C.CLAUSE_TITLE, C.CLAUSE_TEXT FROM REPORT.CO_TMP_POLICY_COVER TPC LEFT JOIN ISS.ENDORSEMENT_RISK ER ON ER.POLICY_ID = TPC.POLICY_ID AND ER.ENDORSEMENT_ID = TPC.ENDORSEMENT_ID LEFT JOIN ISS.ENDO_RISK_COVERAGE ERC ON ERC.POLICY_ID = ER.POLICY_ID AND ERC.ENDORSEMENT_ID = ER.ENDORSEMENT_ID AND ERC.RISK_ID = ER.RISK_ID LEFT JOIN ISS.RISK_COVER_CLAUSE RCC ON RCC.RISK_COVER_ID = ERC.RISK_COVER_ID LEFT JOIN TMP.TEMP_RISK_COVER_CLAUSE TC ON TC.TEMP_ID = TPC.POLICY_ID LEFT JOIN QUO.CLAUSE C ON RCC.CLAUSE_ID = C.CLAUSE_ID OR TC.CLAUSE_ID = C.CLAUSE_ID WHERE TPC.PROCESS_ID = {0}</value>
  </data>
  <data name="CoverageTextByProcessId" xml:space="preserve">
    <value>SELECT RC.CONDITION_TEXT FROM REPORT.CO_TMP_POLICY_COVER TPC INNER JOIN ISS.ENDO_RISK_COVERAGE ERC ON TPC.POLICY_ID = ERC.POLICY_ID AND TPC.ENDORSEMENT_ID = ERC.ENDORSEMENT_ID INNER JOIN ISS.RISK_COVERAGE RC ON ERC.RISK_COVER_ID = RC.RISK_COVER_ID WHERE TPC.PROCESS_ID = {0}</value>
  </data>
  <data name="EndorsementTypeByEndorsementId" xml:space="preserve">
    <value>SELECT ENDO_TYPE_CD FROM ISS.ENDORSEMENT WHERE ENDORSEMENT_ID = {0}</value>
  </data>
  <data name="GeneralClausesByProcessId" xml:space="preserve">
    <value>SELECT  C.CLAUSE_TITLE, C.CLAUSE_TEXT FROM REPORT.CO_TMP_POLICY_COVER TPC 
LEFT JOIN ISS.POLICY_CLAUSE PC ON TPC.POLICY_ID = PC.POLICY_ID AND TPC.ENDORSEMENT_ID = PC.ENDORSEMENT_ID
LEFT JOIN TMP.TEMP_CLAUSE TC ON TC.TEMP_ID = TPC.POLICY_ID
LEFT JOIN QUO.CLAUSE C ON PC.CLAUSE_ID = C.CLAUSE_ID OR TC.CLAUSE_ID = C.CLAUSE_ID
WHERE TPC.PROCESS_ID = {0}</value>
  </data>
  <data name="GeneralTextByProcessId" xml:space="preserve">
    <value>SELECT CONDITION_TEXT  FROM REPORT.CO_TMP_POLICY_COVER WHERE PROCESS_ID = {0}</value>
  </data>
  <data name="GetAnnotationEndorsementByPolicyId" xml:space="preserve">
    <value>SELECT ER.ANNOTATIONS FROM REPORT.CO_TMP_POLICY_COVER TPC 
INNER JOIN ISS.POLICY P ON P.DOCUMENT_NUM = TPC.POLICY_NUMBER AND P.PREFIX_CD = TPC.PREFIX_CD AND P.BRANCH_CD = TPC.BRANCH_CD
INNER JOIN ISS.ENDORSEMENT ER ON ER.POLICY_ID = P.POLICY_ID 
WHERE TPC.PROCESS_ID = {0}</value>
  </data>
  <data name="GetConsortiumMembersInfoCompanyByInsuredCd" xml:space="preserve">
    <value>SELECT ILR.LEGAL_REPRESENTATIVE_NAME AS LR_NAME
	,ICTLR.SMALL_DESCRIPTION AS LR_ID_CARD_TYPE	
	,ILR.ID_CARD_NO AS LR_ID_CARD_NUM
	,C.TRADE_NAME AS COMP_NAME
	,C.TRIBUTARY_ID_NO AS COMP_ID_NUM
	,CCO.VERIFY_DIGIT AS COM_VERIFY_DIGIT
	,A.STREET AS COMP_ADDRESS
	,P.PHONE_NUMBER
	,CT.SMALL_DESCRIPTION AS CITY
FROM UP.CO_CONSORTIUM CC
	INNER JOIN UP.COMPANY C
		ON CC.INDIVIDUAL_ID = C.INDIVIDUAL_ID
	INNER JOIN UP.CO_COMPANY CCO
		ON CCO.INDIVIDUAL_ID = C.INDIVIDUAL_ID
	LEFT JOIN UP.INDIVIDUAL_LEGAL_REPRESENT ILR
		ON ILR.INDIVIDUAL_ID = CC.INDIVIDUAL_ID
	LEFT JOIN UP.IDENTITY_CARD_TYPE ICTLR
		ON	ILR.ID_CARD_TYPE_CD = ICTLR.ID_CARD_TYPE_CD
	LEFT JOIN UP.TRIBUTARY_IDENTITY_TYPE TIT
		ON C.TRIBUTARY_ID_TYPE_CD = TIT.TRIBUTARY_ID_TYPE_CD
	LEFT JOIN UP.ADDRESS A
		ON C.INDIVIDUAL_ID = A.INDIVIDUAL_ID
	LEFT JOIN UP.PHONE P
		ON P.INDIVIDUAL_ID = C.INDIVIDUAL_ID
	LEFT JOIN COMM.CITY CT
		ON CT.CITY_CD = A.CITY_CD
		AND CT.COUNTRY_CD = A.COUNTRY_CD
		AND CT.STATE_CD = A.STATE_CD
WHERE CC.INSURED_CD = {0}</value>
  </data>
  <data name="GetConsortiumMembersInfoPersonByInsuredCd" xml:space="preserve">
    <value>SELECT PS.NAME + ' ' + PS.SURNAME AS FULL_NAME
	,ICT.SMALL_DESCRIPTION AS ID_CARD_TYPE
	,PS.ID_CARD_NO
	,A.STREET AS ADDRESS
	,P.PHONE_NUMBER
	,CT.SMALL_DESCRIPTION AS CITY
FROM UP.CO_CONSORTIUM CC
	INNER JOIN UP.PERSON PS
		ON CC.INDIVIDUAL_ID = PS.INDIVIDUAL_ID		
	INNER JOIN UP.IDENTITY_CARD_TYPE ICT
		ON ICT.ID_CARD_TYPE_CD = PS.ID_CARD_TYPE_CD
	LEFT JOIN UP.ADDRESS A
		ON PS.INDIVIDUAL_ID = A.INDIVIDUAL_ID
	LEFT JOIN UP.PHONE P
		ON P.INDIVIDUAL_ID = PS.INDIVIDUAL_ID
	LEFT JOIN COMM.CITY CT
		ON CT.CITY_CD = A.CITY_CD
		AND CT.COUNTRY_CD = A.COUNTRY_CD
		AND CT.STATE_CD = A.STATE_CD
WHERE CC.INSURED_CD = {0}</value>
  </data>
  <data name="GetCountTempAuthorzation" xml:space="preserve">
    <value>SELECT * FROM AUTHO.AUTHORIZATION_REQUEST AS ar 
JOIN AUTHO.AUTHORIZATION_ANSWER AS aa ON aa.AUTHORIZATION_REQUEST_ID = ar.AUTHORIZATION_REQUEST_ID 
LEFT JOIN TMP.TEMP_SUBSCRIPTION AS t ON CAST(ar.[KEY] AS INT) = t.OPERATION_ID 
WHERE ar.STATUS_ID = 1  AND ar.FUNCTION_ID = 1  AND t.TEMP_ID = {0}</value>
  </data>
  <data name="GetCurrentFromEndoExp" xml:space="preserve">
    <value>SELECT TOP 1 E.CURRENT_FROM FROM ISS.POLICY P
INNER JOIN ISS.ENDORSEMENT E ON P.POLICY_ID = E.POLICY_ID
WHERE E.DOCUMENT_NUM = 0 AND P.DOCUMENT_NUM = {0}</value>
  </data>
  <data name="GetDeductibleByPolicyId" xml:space="preserve">
    <value>SELECT DISTINCT COUNT(*) AS DEDUCTIBLE
			FROM ISS.ENDO_RISK_COVERAGE ERC
			INNER JOIN ISS.RISK_COVERAGE RC ON ERC.RISK_COVER_ID = RC.RISK_COVER_ID
			INNER JOIN (
				QUO.COVERAGE QC INNER JOIN COMM.SUB_LINE_BUSINESS SLB ON QC.LINE_BUSINESS_CD = SLB.LINE_BUSINESS_CD
					AND QC.SUB_LINE_BUSINESS_CD = SLB.SUB_LINE_BUSINESS_CD
				INNER JOIN QUO.INSURED_OBJECT IOB ON IOB.INSURED_OBJECT_ID = QC.INSURED_OBJECT_ID
				) ON RC.COVERAGE_ID = QC.COVERAGE_ID
            INNER JOIN QUO.CO_COVERAGE CC ON QC.COVERAGE_ID = CC.COVERAGE_ID
			INNER JOIN ISS.ENDORSEMENT_RISK ER ON ERC.ENDORSEMENT_ID = ER.ENDORSEMENT_ID
				AND ERC.POLICY_ID = ER.POLICY_ID
				AND ERC.RISK_NUM = ER.RISK_NUM
			INNER JOIN ISS.CO_RISK CR ON ER.RISK_ID = CR.RISK_ID
			INNER JOIN (
				ISS.RISK_COVER_DEDUCT RCD LEFT JOIN PARAM.DEDUCTIBLE_SUBJECT DS ON RCD.DEDUCT_SUBJECT_CD = DS.DEDUCT_SUBJECT_CD
				INNER JOIN PARAM.DEDUCTIBLE_UNIT DU ON RCD.DEDUCT_UNIT_CD = DU.DEDUCT_UNIT_CD
				LEFT JOIN PARAM.DEDUCTIBLE_UNIT DUMIN ON RCD.MIN_DEDUCT_UNIT_CD = DUMIN.DEDUCT_UNIT_CD
				LEFT JOIN PARAM.DEDUCTIBLE_UNIT DUMAX ON RCD.MAX_DEDUCT_UNIT_CD = DUMAX.DEDUCT_UNIT_CD
				LEFT JOIN PARAM.DEDUCTIBLE_SUBJECT MDS ON RCD.MIN_DEDUCT_SUBJECT_CD = MDS.DEDUCT_SUBJECT_CD
				LEFT JOIN PARAM.DEDUCTIBLE_UNIT MDUMAX ON RCD.MAX_DEDUCT_UNIT_CD = MDUMAX.DEDUCT_UNIT_CD
				LEFT JOIN PARAM.DEDUCTIBLE_SUBJECT MAXDS ON RCD.MAX_DEDUCT_SUBJECT_CD = MAXDS.DEDUCT_SUBJECT_CD
				) ON RC.RISK_COVER_ID = RCD.RISK_COVER_ID
			WHERE ERC.ENDORSEMENT_ID = {1}
				AND ERC.POLICY_ID = {0}</value>
  </data>
  <data name="GetDeductiblesByTempId" xml:space="preserve">
    <value>SELECT DISTINCT COUNT(*) AS DEDUCTIBLE
		FROM TMP.TEMP_RISK_COVERAGE AS TRC
		INNER JOIN (
			QUO.COVERAGE QC INNER JOIN COMM.SUB_LINE_BUSINESS SLB ON QC.LINE_BUSINESS_CD = SLB.LINE_BUSINESS_CD
				AND QC.SUB_LINE_BUSINESS_CD = SLB.SUB_LINE_BUSINESS_CD
			INNER JOIN QUO.INSURED_OBJECT INO ON INO.INSURED_OBJECT_ID = QC.INSURED_OBJECT_ID
			) ON TRC.COVERAGE_ID = QC.COVERAGE_ID
	    INNER JOIN QUO.CO_COVERAGE CC ON QC.COVERAGE_ID = CC.COVERAGE_ID
		INNER JOIN TMP.TEMP_RISK AS RSK ON TRC.TEMP_ID = RSK.TEMP_ID
		INNER JOIN TMP.CO_TEMP_RISK CRK ON RSK.RISK_ID = CRK.RISK_ID
		INNER JOIN (
			TMP.TEMP_RISK_COVER_DEDUCT AS RCD LEFT JOIN PARAM.DEDUCTIBLE_SUBJECT DS ON RCD.DEDUCT_SUBJECT_CD = DS.DEDUCT_SUBJECT_CD
			INNER JOIN PARAM.DEDUCTIBLE_UNIT DU ON RCD.DEDUCT_UNIT_CD = DU.DEDUCT_UNIT_CD
			LEFT JOIN PARAM.DEDUCTIBLE_UNIT DUMIN ON RCD.MIN_DEDUCT_UNIT_CD = DUMIN.DEDUCT_UNIT_CD
			LEFT JOIN PARAM.DEDUCTIBLE_UNIT DUMAX ON RCD.MAX_DEDUCT_UNIT_CD = DUMAX.DEDUCT_UNIT_CD
			LEFT JOIN PARAM.DEDUCTIBLE_SUBJECT MDS ON RCD.MIN_DEDUCT_SUBJECT_CD = MDS.DEDUCT_SUBJECT_CD
			LEFT JOIN PARAM.DEDUCTIBLE_UNIT MDUMAX ON RCD.MAX_DEDUCT_UNIT_CD = MDUMAX.DEDUCT_UNIT_CD
			LEFT JOIN PARAM.DEDUCTIBLE_SUBJECT MAXDS ON RCD.MAX_DEDUCT_SUBJECT_CD = MAXDS.DEDUCT_SUBJECT_CD
			) ON TRC.RISK_ID = RCD.RISK_ID
			AND TRC.COVERAGE_ID = RCD.COVERAGE_ID
			AND TRC.TEMP_ID = RCD.TEMP_ID
		WHERE TRC.TEMP_ID = {0}</value>
  </data>
  <data name="GetDocumentNum" xml:space="preserve">
    <value>SELECT TOP 1 P.DOCUMENT_NUM FROM ISS.POLICY P WHERE P.POLICY_ID = {0}</value>
  </data>
  <data name="GetGuaranteeArrendamiento" xml:space="preserve">
    <value>SELECT TOP 1 P.PREFIX_CD FROM UP.INSURED_GUARANTEE IG
	INNER JOIN	COMM.GUARANTEE G
		ON IG.GUARANTEE_CD = G.GUARANTEE_CD
	INNER JOIN COMM.GUARANTEE_TYPE GT
		ON G.GUARANTEE_TYPE_CD = GT.GUARANTEE_TYPE_CD
	LEFT JOIN REPORT.CO_TMP_PROMISSORY_NOTE_CONSORTIUM C
		ON C.INDIVIDUAL_ID = IG.INDIVIDUAL_ID
	LEFT JOIN REPORT.CO_TMP_PROMISSORY_NOTE_INDIVIDUAL I
		ON I.INDIVIDUAL_ID = IG.INDIVIDUAL_ID
	LEFT JOIN ISS.RISK_SURETY_GUARANTEE RSG
		ON RSG.GUARANTEE_ID = IG.GUARANTEE_ID
	LEFT JOIN ISS.ENDORSEMENT_RISK ER
		ON RSG.RISK_ID = ER.RISK_ID
	LEFT JOIN ISS.ENDORSEMENT E
		ON ER.ENDORSEMENT_ID = E.ENDORSEMENT_ID
	LEFT JOIN ISS.POLICY P
		ON P.POLICY_ID = E.POLICY_ID
	WHERE IG.GUARANTEE_ID = {0}
		AND IG.INDIVIDUAL_ID = {1}
	ORDER BY P.ISSUE_DATE DESC</value>
  </data>
  <data name="GetGuaranteeClosedIndBYProcessId" xml:space="preserve">
    <value>SELECT IG.CLOSED_IND FROM REPORT.CO_TMP_POLICY_COVER CTPC
	INNER JOIN ISS.ENDORSEMENT_RISK ER
		ON CTPC.POLICY_ID = ER.POLICY_ID
			AND CTPC.ENDORSEMENT_ID = ER.ENDORSEMENT_ID
	INNER JOIN ISS.RISK_SURETY_GUARANTEE RSG
		ON RSG.RISK_ID = ER.RISK_ID
	INNER JOIN UP.INSURED_GUARANTEE IG
		ON RSG.GUARANTEE_ID = IG.GUARANTEE_ID
	INNER JOIN	COMM.GUARANTEE G
		ON IG.GUARANTEE_CD = G.GUARANTEE_CD
	INNER JOIN COMM.GUARANTEE_TYPE GT
		ON G.GUARANTEE_TYPE_CD = GT.GUARANTEE_TYPE_CD
WHERE CTPC.PROCESS_ID = {0}
	AND GT.GUARANTEE_TYPE_CD = 4</value>
  </data>
  <data name="GetGuaranteeClosedIndBYRiskID" xml:space="preserve">
    <value>SELECT DISTINCT IG.CLOSED_IND FROM UP.INSURED_GUARANTEE IG
	INNER JOIN	COMM.GUARANTEE G
		ON IG.GUARANTEE_CD = G.GUARANTEE_CD
	INNER JOIN COMM.GUARANTEE_TYPE GT
		ON G.GUARANTEE_TYPE_CD = GT.GUARANTEE_TYPE_CD
	LEFT JOIN REPORT.CO_TMP_PROMISSORY_NOTE_CONSORTIUM C
		ON C.INDIVIDUAL_ID = IG.INDIVIDUAL_ID
	LEFT JOIN REPORT.CO_TMP_PROMISSORY_NOTE_INDIVIDUAL I
		ON I.INDIVIDUAL_ID = IG.INDIVIDUAL_ID
WHERE IG.GUARANTEE_ID = {0}
	AND IG.INDIVIDUAL_ID = {1}</value>
  </data>
  <data name="GetGuaranteeCoInsurance" xml:space="preserve">
    <value>SELECT TOP 1 CACCEPTED.POLICY_ID AS ACCEPTED, CASSIGNED.POLICY_ID AS ASSIGNED 
	FROM UP.INSURED_GUARANTEE IG
	LEFT JOIN	COMM.GUARANTEE G
		ON IG.GUARANTEE_CD = G.GUARANTEE_CD
	LEFT JOIN COMM.GUARANTEE_TYPE GT
		ON G.GUARANTEE_TYPE_CD = GT.GUARANTEE_TYPE_CD
	LEFT JOIN REPORT.CO_TMP_PROMISSORY_NOTE_CONSORTIUM C
		ON C.INDIVIDUAL_ID = IG.INDIVIDUAL_ID
	LEFT JOIN REPORT.CO_TMP_PROMISSORY_NOTE_INDIVIDUAL I
		ON I.INDIVIDUAL_ID = IG.INDIVIDUAL_ID
	LEFT JOIN ISS.RISK_SURETY_GUARANTEE RSG
		ON RSG.GUARANTEE_ID = IG.GUARANTEE_ID
	LEFT JOIN ISS.ENDORSEMENT_RISK ER
		ON RSG.RISK_ID = ER.RISK_ID
	LEFT JOIN ISS.ENDORSEMENT E
		ON ER.ENDORSEMENT_ID = E.ENDORSEMENT_ID
	LEFT JOIN ISS.POLICY P
		ON P.POLICY_ID = E.POLICY_ID
	LEFT JOIN ISS.COINSURANCE_ACCEPTED CACCEPTED
		ON CACCEPTED.POLICY_ID = P.POLICY_ID
	LEFT JOIN ISS.COINSURANCE_ASSIGNED CASSIGNED
		ON CASSIGNED.POLICY_ID = P.POLICY_ID
	WHERE IG.GUARANTEE_ID = {0}
		AND IG.INDIVIDUAL_ID = {1}
		ORDER BY P.ISSUE_DATE DESC</value>
  </data>
  <data name="GetGuaranteeTypeByIndividualId" xml:space="preserve">
    <value>SELECT DISTINCT G.GUARANTEE_CD FROM UP.INSURED_GUARANTEE IG
	INNER JOIN	COMM.GUARANTEE G
		ON IG.GUARANTEE_CD = G.GUARANTEE_CD
	INNER JOIN COMM.GUARANTEE_TYPE GT
		ON G.GUARANTEE_TYPE_CD = GT.GUARANTEE_TYPE_CD
WHERE IG.GUARANTEE_ID = {0}
	AND IG.INDIVIDUAL_ID = {1}</value>
  </data>
  <data name="GetPolicyCoInsuranceAccepted" xml:space="preserve">
    <value>SELECT * FROM ISS.POLICY P
INNER JOIN ISS.ENDORSEMENT E ON P.POLICY_ID = E.POLICY_ID
INNER JOIN ISS.COINSURANCE_ACCEPTED CA ON CA.POLICY_ID = E.POLICY_ID AND CA.ENDORSEMENT_ID = E.ENDORSEMENT_ID
WHERE P.POLICY_ID = {0} AND E.ENDORSEMENT_ID = {1}</value>
  </data>
  <data name="GetPolicyCoInsuranceAssigned" xml:space="preserve">
    <value>SELECT * FROM ISS.POLICY P
INNER JOIN ISS.ENDORSEMENT E ON P.POLICY_ID = E.POLICY_ID
INNER JOIN ISS.COINSURANCE_ASSIGNED CA ON CA.POLICY_ID = E.POLICY_ID AND CA.ENDORSEMENT_ID = E.ENDORSEMENT_ID
WHERE P.POLICY_ID = {0} AND E.ENDORSEMENT_ID = {1}</value>
  </data>
  <data name="GetPolicyCoInsuranceCedido" xml:space="preserve">
    <value>SELECT * FROM ISS.POLICY P
INNER JOIN ISS.ENDORSEMENT E ON P.POLICY_ID = E.POLICY_ID
INNER JOIN ISS.COINSURANCE_CEDIDO CA ON CA.POLICY_ID = E.POLICY_ID AND CA.ENDORSEMENT_ID = E.ENDORSEMENT_ID
WHERE P.POLICY_ID = {0} AND E.ENDORSEMENT_ID = {1}</value>
  </data>
  <data name="GetPrefixAndPolicyTypeByProcessID" xml:space="preserve">
    <value>SELECT P.PREFIX_CD
	,CP.POLICY_TYPE_CD 
FROM REPORT.CO_TMP_POLICY_COVER CTPC
	INNER JOIN ISS.POLICY P
		ON P.POLICY_ID = CTPC.POLICY_ID
	INNER JOIN ISS.CO_POLICY CP
		ON P.POLICY_ID = CP.POLICY_ID
WHERE CTPC.PROCESS_ID = {0}</value>
  </data>
  <data name="GetTempAuthorization" xml:space="preserve">
    <value>SELECT distinct ar.[KEY] FROM AUTHO.AUTHORIZATION_REQUEST AS ar JOIN AUTHO.AUTHORIZATION_ANSWER AS aa ON aa.AUTHORIZATION_REQUEST_ID = ar.AUTHORIZATION_REQUEST_ID LEFT JOIN TMP.TEMP_SUBSCRIPTION AS t ON CAST(ar.[KEY] AS INT) = t.OPERATION_ID WHERE ar.STATUS_ID = 1  AND ar.FUNCTION_ID = 1  AND t.TEMP_ID = {0}</value>
  </data>
  <data name="GetTempCoInsuranceAccepted" xml:space="preserve">
    <value>SELECT * FROM TMP.TEMP_COINSURANCE_ACCEPTED WHERE TEMP_ID = {0}</value>
  </data>
  <data name="GetTempCoInsuranceAssigned" xml:space="preserve">
    <value>SELECT * FROM TMP.TEMP_COINSURANCE_ASSIGNED WHERE TEMP_ID = {0}</value>
  </data>
  <data name="GetTextEndorsementByPolicyId" xml:space="preserve">
    <value>SELECT ER.CONDITION_TEXT, ER.DOCUMENT_NUM 
FROM REPORT.CO_TMP_POLICY_COVER TPC 
INNER JOIN ISS.POLICY P ON P.DOCUMENT_NUM = TPC.POLICY_NUMBER AND P.PREFIX_CD = TPC.PREFIX_CD AND P.BRANCH_CD = TPC.BRANCH_CD
INNER JOIN ISS.ENDORSEMENT ER ON ER.POLICY_ID = P.POLICY_ID 
WHERE TPC.PROCESS_ID = {0} AND ER.DOCUMENT_NUM &lt;= TPC.DOCUMENT_NUM ORDER BY ER.DOCUMENT_NUM DESC</value>
  </data>
  <data name="RiskClausesByProcessId" xml:space="preserve">
    <value>SELECT  C.CLAUSE_TITLE, C.CLAUSE_TEXT FROM REPORT.CO_TMP_POLICY_COVER TPC 
LEFT JOIN ISS.ENDORSEMENT_RISK ER ON ER.POLICY_ID = TPC.POLICY_ID AND ER.ENDORSEMENT_ID = TPC.ENDORSEMENT_ID 
LEFT JOIN ISS.RISK_CLAUSE RC ON RC.RISK_ID = ER.RISK_ID
LEFT JOIN TMP.TEMP_RISK_CLAUSE TC ON TC.TEMP_ID = TPC.POLICY_ID
LEFT JOIN QUO.CLAUSE C ON RC.CLAUSE_ID = C.CLAUSE_ID OR TC.CLAUSE_ID = C.CLAUSE_ID
WHERE TPC.PROCESS_ID = {0}</value>
  </data>
  <data name="RiskTempTextByProcessId" xml:space="preserve">
    <value>SELECT ER.CONDITION_TEXT FROM REPORT.CO_TMP_POLICY_COVER TPC 
INNER JOIN TMP.TEMP_RISK ER ON TPC.POLICY_ID = ER.TEMP_ID 
WHERE TPC.PROCESS_ID = {0}AND ER.RISK_STATUS_CD &lt;&gt; 3</value>
  </data>
  <data name="RiskTextByProcessId" xml:space="preserve">
    <value>SELECT R.CONDITION_TEXT FROM REPORT.CO_TMP_POLICY_COVER TPC 
INNER JOIN ISS.ENDORSEMENT_RISK ER ON TPC.POLICY_ID = ER.POLICY_ID AND TPC.ENDORSEMENT_ID = ER.ENDORSEMENT_ID 
INNER JOIN ISS.RISK R ON R.RISK_ID = ER.RISK_ID WHERE TPC.PROCESS_ID = {0} AND ER.RISK_STATUS_CD &lt;&gt; 3</value>
  </data>
  <data name="UpdtaeCurrentFromEndoExp" xml:space="preserve">
    <value>UPDATE REPORT.CO_TMP_POLICY_COVER SET 
CURRENT_FROM_DAY = {0}, CURRENT_FROM_MONTH = {1}, CURRENT_FROM_YEAR = {2} 
WHERE PROCESS_ID = {3}</value>
  </data>
</root>