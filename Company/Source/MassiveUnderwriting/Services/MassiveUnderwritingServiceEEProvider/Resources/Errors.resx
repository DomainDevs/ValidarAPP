<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AgentNotFound" xml:space="preserve">
    <value>Agent not found</value>
  </data>
  <data name="AgentTypeNotValid" xml:space="preserve">
    <value>Agent Type Not Valid</value>
  </data>
  <data name="Authorization" xml:space="preserve">
    <value>Authorization</value>
  </data>
  <data name="AuthorizingUser" xml:space="preserve">
    <value>Authorizing User :</value>
  </data>
  <data name="BillingGroup" xml:space="preserve">
    <value>Billing Group</value>
  </data>
  <data name="CompanyRequestNotRenewed" xml:space="preserve">
    <value>The request is not renewed</value>
  </data>
  <data name="ErrorAllianceNotFound" xml:space="preserve">
    <value>Error Alliance Not Found</value>
  </data>
  <data name="ErrorBeneficiaryAdditionalAddress" xml:space="preserve">
    <value>Error Beneficiary Additional Address</value>
  </data>
  <data name="ErrorBeneficiaryAddress" xml:space="preserve">
    <value>Error Beneficiary Address</value>
  </data>
  <data name="ErrorBeneficiaryIndividualType" xml:space="preserve">
    <value>Error Beneficiary Individual Type</value>
  </data>
  <data name="ErrorBeneficiaryNotExist" xml:space="preserve">
    <value>Beneficiary donÂ´t exist</value>
  </data>
  <data name="ErrorBeneficiaryNotExistTemplateBeneficiary" xml:space="preserve">
    <value>Error Additional Beneficiary: The Beneficiary doesn't exist</value>
  </data>
  <data name="ErrorBeneficiaryNotExistTemplateEmission" xml:space="preserve">
    <value>Error Emision: The beneficiary doesn't exist</value>
  </data>
  <data name="ErrorBeneficiaryNotFound" xml:space="preserve">
    <value>Error Beneficiary Not Found</value>
  </data>
  <data name="ErrorBeneficiaryParticipation" xml:space="preserve">
    <value>Error Beneficiary Participation</value>
  </data>
  <data name="ErrorBillingGroupAndRequestGroupNotMatch" xml:space="preserve">
    <value>Error Billing Group And Request Group Not Match</value>
  </data>
  <data name="ErrorBillingGroupDoesNotMatchTheMain" xml:space="preserve">
    <value>Error Billing Group Does Not Match The Main</value>
  </data>
  <data name="ErrorBillingGroupNotMatch" xml:space="preserve">
    <value>Error Billing Group Not Match</value>
  </data>
  <data name="ErrorClauseDateNotValid" xml:space="preserve">
    <value>Error the clause date is not valid</value>
  </data>
  <data name="ErrorClauseNotAssociatedPrefix" xml:space="preserve">
    <value>Error the clause is not associated to prefix</value>
  </data>
  <data name="ErrorClauseNotExists" xml:space="preserve">
    <value>Error clause {0} not exists</value>
  </data>
  <data name="ErrorClearCacheList" xml:space="preserve">
    <value>Error ClearCacheList</value>
  </data>
  <data name="ErrorCoinsuranceAcceptedTemplateMandatory" xml:space="preserve">
    <value>The Coinsurance Accepted Template Is Mandatory</value>
  </data>
  <data name="ErrorCreateAdditionalBeneficiaries" xml:space="preserve">
    <value>Error Create Additional Beneficiaries</value>
  </data>
  <data name="ErrorCreateBeneficiary" xml:space="preserve">
    <value>Error Create Beneficiary</value>
  </data>
  <data name="ErrorCreateClauses" xml:space="preserve">
    <value>Error CreateClauses</value>
  </data>
  <data name="ErrorCreateCompanyPolicy" xml:space="preserve">
    <value>Error Create CompanyPolicy</value>
  </data>
  <data name="ErrorCreateCompanyPolicyWithRequest" xml:space="preserve">
    <value>Error Create Company Policy With Request</value>
  </data>
  <data name="ErrorCreateCoverages" xml:space="preserve">
    <value>Error Create Coverages</value>
  </data>
  <data name="ErrorCreateGroupCoverage" xml:space="preserve">
    <value>Error Create Group Coverage</value>
  </data>
  <data name="ErrorCreateInsured" xml:space="preserve">
    <value>Error Create Insured</value>
  </data>
  <data name="ErrorCreateIssuePolicy" xml:space="preserve">
    <value>Error Create Issue Policy</value>
  </data>
  <data name="ErrorCreateLimitRc" xml:space="preserve">
    <value>Error Create LimitRc</value>
  </data>
  <data name="ErrorCreateRatingZone" xml:space="preserve">
    <value>Error Create Rating Zone</value>
  </data>
  <data name="ErrorExecuteValidations" xml:space="preserve">
    <value>Error Execute Validations</value>
  </data>
  <data name="ErrorGenerateFile" xml:space="preserve">
    <value>Error Generate File</value>
  </data>
  <data name="ErrorGetCacheList" xml:space="preserve">
    <value>Error Get List Cache</value>
  </data>
  <data name="ErrorGetClauses" xml:space="preserve">
    <value>Error get clauses</value>
  </data>
  <data name="ErrorGetCompanyPolicies" xml:space="preserve">
    <value>Error Get Policies</value>
  </data>
  <data name="ErrorGetCompanyPolicy" xml:space="preserve">
    <value>Error Company Policy</value>
  </data>
  <data name="ErrorGetCompanyRequestEndorsement" xml:space="preserve">
    <value>Error Get Company Request Endorsement</value>
  </data>
  <data name="ErrorGetCompanyRisks" xml:space="preserve">
    <value>Error Get Risks</value>
  </data>
  <data name="ErrorGetFields" xml:space="preserve">
    <value>Error Get Fields</value>
  </data>
  <data name="ErrorGetFilterMassiveIndividuals" xml:space="preserve">
    <value>Error GetFilterMassiveIndividuals</value>
  </data>
  <data name="ErrorGetValidationsClauseLevel" xml:space="preserve">
    <value>Error Get Validations Clause Level</value>
  </data>
  <data name="ErrorHolderAddress" xml:space="preserve">
    <value>Error Holder Address</value>
  </data>
  <data name="ErrorHolderBirthDate" xml:space="preserve">
    <value>Error Holder BirthDate</value>
  </data>
  <data name="ErrorHolderDeclinedDate" xml:space="preserve">
    <value>Error Holder Declined Date</value>
  </data>
  <data name="ErrorHolderIndividualType" xml:space="preserve">
    <value>Error Holder IndividualType</value>
  </data>
  <data name="ErrorHolderNotExist" xml:space="preserve">
    <value>HolderdonÂ´t exist</value>
  </data>
  <data name="ErrorHolderNotFound" xml:space="preserve">
    <value>Error Holder Not Found</value>
  </data>
  <data name="ErrorHolderPaymentMethod" xml:space="preserve">
    <value>Error Holder Payment Method</value>
  </data>
  <data name="ErrorInsuredAddress" xml:space="preserve">
    <value>Error Insured Address</value>
  </data>
  <data name="ErrorInsuredBirthDate" xml:space="preserve">
    <value>Error Insured BirthDate</value>
  </data>
  <data name="ErrorInsuredDeclinedDate" xml:space="preserve">
    <value>Error Insured Declined Date</value>
  </data>
  <data name="ErrorInsuredIndividualType" xml:space="preserve">
    <value>Error Insured Individual Type</value>
  </data>
  <data name="ErrorInsuredNotExist" xml:space="preserve">
    <value>Insured donÂ´t exist</value>
  </data>
  <data name="ErrorInsuredNotFound" xml:space="preserve">
    <value>Error Insured Not Found</value>
  </data>
  <data name="ErrorInterPartCoinsuranceAcceptedTemplateMandatory" xml:space="preserve">
    <value>The Inter Part Coinsurance Accepted Template Is Mandatory</value>
  </data>
  <data name="ErrorInvalidGroupCoverageId" xml:space="preserve">
    <value>Error Invalid Group Coverage Id</value>
  </data>
  <data name="ErrorInvalidLimitRcId" xml:space="preserve">
    <value>Error Invalid Limit RC Id</value>
  </data>
  <data name="ErrorInvalidRatingZoneId" xml:space="preserve">
    <value>Error Invalid Rating Zone Id</value>
  </data>
  <data name="ErrorIssuing" xml:space="preserve">
    <value>Error Issuing: {0}</value>
  </data>
  <data name="ErrorLoadCommonListCache" xml:space="preserve">
    <value>Error Load Common List Cache</value>
  </data>
  <data name="ErrorMaxAgentCoinsuranceAccepted" xml:space="preserve">
    <value>Number of Intermediaries Allowed for Coinsurance Accepted Exceeded: {0}</value>
  </data>
  <data name="ErrorParticipationAgencies" xml:space="preserve">
    <value>Error Participation Agencies</value>
  </data>
  <data name="ErrorParticipationCoInsurance" xml:space="preserve">
    <value>Error Participation CoInsurance</value>
  </data>
  <data name="ErrorPaymentMethodNotParameterizedHolder" xml:space="preserve">
    <value>The payment method {0} is not parameterized for the holder</value>
  </data>
  <data name="ErrorPaymentPlanFinancePremium" xml:space="preserve">
    <value>The payment plan  {0} not allowed quotas</value>
  </data>
  <data name="ErrorPaymentPlanNotParameterized" xml:space="preserve">
    <value>The payment plan {0} is not parameterized in the product</value>
  </data>
  <data name="ErrorPolicyToBeIssuedNotFound" xml:space="preserve">
    <value>The policy to be issued has not been found</value>
  </data>
  <data name="ErrorPrintMassiveLoad" xml:space="preserve">
    <value>Error Print Massive Load</value>
  </data>
  <data name="ErrorProductCollective" xml:space="preserve">
    <value>Error Product is Collective</value>
  </data>
  <data name="ErrorProductType" xml:space="preserve">
    <value>The product is not parameterized for massive loads</value>
  </data>
  <data name="ErrorQuotasFinancePremium" xml:space="preserve">
    <value>{0} must be between minimum {1} and maximum {2}</value>
  </data>
  <data name="ErrorRecordsNotFoundToIssue" xml:space="preserve">
    <value>Error, No records found to issue</value>
  </data>
  <data name="ErrorRepeatedAgentCode" xml:space="preserve">
    <value>Repeated Agent Code</value>
  </data>
  <data name="ErrorRequestGroupDoesNotMatchTheMain" xml:space="preserve">
    <value>Error Request Group Does Not Match The Main</value>
  </data>
  <data name="ErrorRequestGroupNotMatch" xml:space="preserve">
    <value>Error Request Group Not Match</value>
  </data>
  <data name="ErrorTemplateAdditionalIntermediaries" xml:space="preserve">
    <value>Error Template Additional Intermediaries</value>
  </data>
  <data name="ErrorTemplateCoInsuranceAccepted" xml:space="preserve">
    <value>Error Template CoInsurance Accepted</value>
  </data>
  <data name="ErrorTemplateCoInsuranceAssigned" xml:space="preserve">
    <value>Error Template CoInsurance Assigned</value>
  </data>
  <data name="ErrorTemporalNotFound" xml:space="preserve">
    <value>Error Temporal Not Found</value>
  </data>
  <data name="ErrorToDatePolicy" xml:space="preserve">
    <value>The date TO couldn't be greater to date FROM</value>
  </data>
  <data name="ErrorTypeAndDocumentNumberAreRequired" xml:space="preserve">
    <value>Fields {0} and {1} are mandatory</value>
  </data>
  <data name="ErrorUpdateMassiveLoad" xml:space="preserve">
    <value>Error Update Massive Load</value>
  </data>
  <data name="ErrorValidateCoInsuranceAcceptedAgents" xml:space="preserve">
    <value>Coinsurance Accepted Agents are required</value>
  </data>
  <data name="ErrorValidateCoInsuranceAcceptedAgents1" xml:space="preserve">
    <value>Los datos de Intermediarios son obligatorios</value>
  </data>
  <data name="MensageTemplateCoInsuredAceptdRequired" xml:space="preserve">
    <value>The accepted co-insured template is mandatory</value>
  </data>
  <data name="MensageTemplateCoInsuredAssignedRequired" xml:space="preserve">
    <value>The assigned co-insured template is mandatory</value>
  </data>
  <data name="MessageAgentsDuplicated" xml:space="preserve">
    <value>Agents Duplicated</value>
  </data>
  <data name="MessageAgentsParticipationPercentage" xml:space="preserve">
    <value>Agents participation percentage is less than 100%</value>
  </data>
  <data name="MessageAgentsParticipationPercentageExceeds" xml:space="preserve">
    <value>Agents Participation Percentage Exceeds 100%</value>
  </data>
  <data name="MessageAgentsPercentage" xml:space="preserve">
    <value>Agents percentage participation percentage exceeds 100%</value>
  </data>
  <data name="MessageAgentsPercentageCantBeNull" xml:space="preserve">
    <value>Additional intermediaries percentage can't be 0</value>
  </data>
  <data name="MessageCoinsuranceAcceptedAllowOnlyOne" xml:space="preserve">
    <value>Coinsurance Accepted Allow Only One</value>
  </data>
  <data name="MessageCoinsuranceAcceptedTemplateNotFound" xml:space="preserve">
    <value>Coinsurance Accepted Template Not Found</value>
  </data>
  <data name="MessageCoinsuranceAssignedTemplateNotFound" xml:space="preserve">
    <value>Coinsurance Assigned Template Not Found</value>
  </data>
  <data name="MessageCoInsuranceDuplicate" xml:space="preserve">
    <value>CoInsurances Duplicates</value>
  </data>
  <data name="MessageCoInsuranceParticipationPercentageExceeds" xml:space="preserve">
    <value>The percentage of participation must not be greater than 100%</value>
  </data>
  <data name="MessageCoInsurancePercentageExpensesExceeds" xml:space="preserve">
    <value>Coinsurance Percentage Expenses Exceeds</value>
  </data>
  <data name="MessageCurrentFromDateExceedsRequest" xml:space="preserve">
    <value>Current From Date Exceeds Request</value>
  </data>
  <data name="MessageRequestNotFound" xml:space="preserve">
    <value>Request Not Found</value>
  </data>
  <data name="NoCoverageGroupRelatedToProduct" xml:space="preserve">
    <value>No coverage group related to product</value>
  </data>
  <data name="NoLimitRcRelatedToProduct" xml:space="preserve">
    <value>No limit rc related to product</value>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="Restrictive" xml:space="preserve">
    <value>Restrictive</value>
  </data>
  <data name="RiskGroupCoverageFieldNotFound" xml:space="preserve">
    <value>Group coverage field not found</value>
  </data>
</root>