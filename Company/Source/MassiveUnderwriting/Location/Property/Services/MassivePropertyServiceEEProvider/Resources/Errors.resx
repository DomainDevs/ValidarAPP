<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccidentRateMandatory" xml:space="preserve">
    <value>Accident rate is mandatory</value>
  </data>
  <data name="AdditionalBeneficiaries" xml:space="preserve">
    <value>Additional Beneficiaries </value>
  </data>
  <data name="Authorization" xml:space="preserve">
    <value>Authorization</value>
  </data>
  <data name="ClauseCoverageNotPresentOnRisk" xml:space="preserve">
    <value>The risk does not cotain any coverage associated to the clause {0}</value>
  </data>
  <data name="ClauseNotRelatedToCoverage" xml:space="preserve">
    <value>The clause {0} was not found at coverage level</value>
  </data>
  <data name="Clauses" xml:space="preserve">
    <value>Clauses</value>
  </data>
  <data name="CompanyRequestNotRenewed" xml:space="preserve">
    <value>The request is not renewed</value>
  </data>
  <data name="EmissionProperty" xml:space="preserve">
    <value>Emission Property</value>
  </data>
  <data name="ErrorAccidentRateValue" xml:space="preserve">
    <value>% Accident rate must be between 0 and 100</value>
  </data>
  <data name="ErrorBeneficiariesAdditionalDuplicated" xml:space="preserve">
    <value>Error Beneficiaries Additional Duplicated</value>
  </data>
  <data name="ErrorBeneficiaryParticipation" xml:space="preserve">
    <value>Error Beneficiary Participation</value>
  </data>
  <data name="ErrorClauseNotFound" xml:space="preserve">
    <value>The clause {0} does not exists or is not related at indicated level</value>
  </data>
  <data name="ErrorCOfConstruction" xml:space="preserve">
    <value>Field {0}: Not valid</value>
  </data>
  <data name="ErrorCompanyRequestNotExist" xml:space="preserve">
    <value>Error Company Request Does Not Exist</value>
  </data>
  <data name="ErrorCreateMassiveLoad" xml:space="preserve">
    <value>Error creating massive load</value>
  </data>
  <data name="ErrorCreateRisk" xml:space="preserve">
    <value>Error Create Risk</value>
  </data>
  <data name="ErrorDuplicatePolicies" xml:space="preserve">
    <value>Duplicate Policies</value>
  </data>
  <data name="ErrorEMLMustBeBetween0And100" xml:space="preserve">
    <value>Error EML Must Be Between 0 And 100</value>
  </data>
  <data name="ErrorExcludedInsuredObject" xml:space="preserve">
    <value>Error Excluded Insured Object</value>
  </data>
  <data name="ErrorFieldNotMatch" xml:space="preserve">
    <value>{0} Field Of {1} Template Not Match</value>
  </data>
  <data name="ErrorFieldNotMatchRegex" xml:space="preserve">
    <value>.* Field Of .* Template Not Match</value>
  </data>
  <data name="ErrorFieldsNotMatch" xml:space="preserve">
    <value>Some fields of loaded file does not match the parametrization : {0}</value>
  </data>
  <data name="ErrorFileParametrizationNotFound" xml:space="preserve">
    <value>Error File Parametrization Not Found</value>
  </data>
  <data name="ErrorGenerateReportToMassiveLoad" xml:space="preserve">
    <value>Error Generate Report To Massive Load</value>
  </data>
  <data name="ErrorGenerateReportToMassiveRenewal" xml:space="preserve">
    <value>Error generating the report of the massive renewal</value>
  </data>
  <data name="ErrorGetExternalServices" xml:space="preserve">
    <value>Error Get External Services</value>
  </data>
  <data name="ErrorInsuredObjectDuplicated" xml:space="preserve">
    <value>Error Insured Object Duplicated</value>
  </data>
  <data name="ErrorInsuredObjectsIsMandatories" xml:space="preserve">
    <value>Error Insured Objects Is Mandatories</value>
  </data>
  <data name="ErrorInsuredObjectTemplateNotFound" xml:space="preserve">
    <value>Error Insured Object Template Not Found</value>
  </data>
  <data name="ErrorInTemplate" xml:space="preserve">
    <value>Error In Template {0}: {1}</value>
  </data>
  <data name="ErrorIssuing" xml:space="preserve">
    <value>Error Issuing: {0}</value>
  </data>
  <data name="ErrorMandatoryTemplates" xml:space="preserve">
    <value>The next mandatory sheets are not in the file  : {0}</value>
  </data>
  <data name="ErrorMissingInsuredObjectForCoverage" xml:space="preserve">
    <value>Missing Insured Object For Coverage {0}</value>
  </data>
  <data name="ErrorNoInsuredObjectsFound" xml:space="preserve">
    <value>Error No Insured Objects Found</value>
  </data>
  <data name="ErrorParticipationBeneficiary" xml:space="preserve">
    <value>Error Participation Beneficiary</value>
  </data>
  <data name="ErrorPaymentPlanIsNull" xml:space="preserve">
    <value>Error Payment Plan IsNull</value>
  </data>
  <data name="ErrorPercentageVariableIndex" xml:space="preserve">
    <value>Error Percentage Variable Index</value>
  </data>
  <data name="ErrorPremiumZero" xml:space="preserve">
    <value>Error Premium Zero</value>
  </data>
  <data name="ErrorPrincipalRowNotFound" xml:space="preserve">
    <value>Error template {0} principal row not found</value>
  </data>
  <data name="ErrorQuotateMassiveLoad" xml:space="preserve">
    <value>Error Quotate Massive Load: {0}</value>
  </data>
  <data name="ErrorQuotateMassiveRenewal" xml:space="preserve">
    <value>Error Quotate Massive Renewal</value>
  </data>
  <data name="ErrorRecordsNotFoundToIssue" xml:space="preserve">
    <value>Records Not Found To Issue</value>
  </data>
  <data name="ErrorRecoupmentPeriod" xml:space="preserve">
    <value>Error Recoupment Period</value>
  </data>
  <data name="ErrorResponseScoreService" xml:space="preserve">
    <value>Error Response Score Service</value>
  </data>
  <data name="ErrorRiskNotFound" xml:space="preserve">
    <value>Risk not found</value>
  </data>
  <data name="ErrorTariffing" xml:space="preserve">
    <value>Error Tariffing</value>
  </data>
  <data name="ErrorTariffingLoad" xml:space="preserve">
    <value>Error Tariffing Load</value>
  </data>
  <data name="ErrorTemplateIsMandatory" xml:space="preserve">
    <value>{0} Template Is Mandatory</value>
  </data>
  <data name="ErrorTemplateIsMandatoryRegex" xml:space="preserve">
    <value>.* Template Is Mandatory</value>
  </data>
  <data name="ErrorTemplateModifyCoverages" xml:space="preserve">
    <value>Error Template Modify Coverages</value>
  </data>
  <data name="ErrorTemporalNotFound" xml:space="preserve">
    <value>Error Temporal Not Found</value>
  </data>
  <data name="ErrorTheNumberOfFloorsCanNotBeGreaterThan" xml:space="preserve">
    <value>Error the number of Floors can not be greater than</value>
  </data>
  <data name="ErrorTheNumberOfFloorsCanNotBeLessThan" xml:space="preserve">
    <value>Error the number of Floors can not be less than</value>
  </data>
  <data name="ErrorTheYearOfConstructionCanNotBeGreaterThanTheCurrent" xml:space="preserve">
    <value>Error the year of construction can not be greater than the current</value>
  </data>
  <data name="ErrorTheYearOfConstructionCanNotBeLessThan" xml:space="preserve">
    <value>Error the year of construction can not be less than</value>
  </data>
  <data name="ErrorValidatingFile" xml:space="preserve">
    <value>Error Validating File: {0}</value>
  </data>
  <data name="InsuredObjects" xml:space="preserve">
    <value>Insured Objects</value>
  </data>
  <data name="InvalidInsuredObjectAmountValue" xml:space="preserve">
    <value>Invalid insured object amount value</value>
  </data>
  <data name="InvalidInsuredObjectId" xml:space="preserve">
    <value>Invalid insured object id</value>
  </data>
  <data name="MessageCurrentFromDateExceedsRequest" xml:space="preserve">
    <value>Current From Date Exceeds Request</value>
  </data>
  <data name="MessageRequestPrefixDoesNotMatch" xml:space="preserve">
    <value>Request Prefix Does Not Match Massive Load Prefix</value>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="PoliciesRestrictive" xml:space="preserve">
    <value>Restrictive policy: {0}</value>
  </data>
  <data name="PolicyNumber" xml:space="preserve">
    <value>Policy Number</value>
  </data>
  <data name="Restrictive" xml:space="preserve">
    <value>Restrictive</value>
  </data>
  <data name="TheInsuranceObjectInTheModificationIsNotRelatedToTheRisk" xml:space="preserve">
    <value>The insurance object in the modification is not related to the risk</value>
  </data>
  <data name="TheInsuredObjectColumnOfTheInsuranceObjectsTemplateIsRequired" xml:space="preserve">
    <value>The Insured Object Column Of The Insurance Objects Template Is Required</value>
  </data>
  <data name="TheSumInsuredColumnOfTheInsuranceObjectsTemplateIsRequired" xml:space="preserve">
    <value>The Sum Insured column of the Insurance Objects template is required</value>
  </data>
  <data name="TheSumInsuredOfTheInsuranceObjectMustBeGreaterThanZeroObject" xml:space="preserve">
    <value>The SumInsured Of The Insurance Object Must Be Greater Than Zero, Object:</value>
  </data>
</root>