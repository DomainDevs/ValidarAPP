<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="EmptyFasecoldaMakeId" xml:space="preserve">
    <value>Fasecolda Make Id es un campo obligatorio</value>
  </data>
  <data name="EmptyFasecoldaModelId" xml:space="preserve">
    <value>Fasecolda Model Id es un campo obligatorio</value>
  </data>
  <data name="EndorsementNumber" xml:space="preserve">
    <value>The endorsement has been successfully generated.Policy number: {0}.Endorsement number: {1}.Endorsement Id: {2}.{3}</value>
  </data>
  <data name="ErrorBeneficiary" xml:space="preserve">
    <value>Beneficiary has more than one active primary address</value>
  </data>
  <data name="ErrorConfigImplementWebServices" xml:space="preserve">
    <value>Error al leer implementación de WebServices</value>
  </data>
  <data name="ErrorConsultPolicyholder" xml:space="preserve">
    <value>Error Consult Policy holder</value>
  </data>
  <data name="ErrorConvertingProspectIntoIndividual" xml:space="preserve">
    <value>Error Converting Prospect Into Individual</value>
  </data>
  <data name="ErrorCreateCompanyPolicy" xml:space="preserve">
    <value>Error Create Policy</value>
  </data>
  <data name="ErrorCreateCompanyVehicle" xml:space="preserve">
    <value>Error Create Company Vehicle</value>
  </data>
  <data name="ErrorCreateEndorsement" xml:space="preserve">
    <value>Error Create Endorsement</value>
  </data>
  <data name="ErrorCreatePolicy" xml:space="preserve">
    <value>ErrorCreatePolicy</value>
  </data>
  <data name="ErrorCreateTemporalCompanyThirdpartyLiability" xml:space="preserve">
    <value>Error Create Temporal Company ThirdParty Liability</value>
  </data>
  <data name="ErrorCreateTemporalCompanyVehicle" xml:space="preserve">
    <value>Error Create Temporal Company Vehicle</value>
  </data>
  <data name="ErrorCreateVehiclesTemporal" xml:space="preserve">
    <value>Error creando vehículos temporales</value>
  </data>
  <data name="ErrorDeleteRisk" xml:space="preserve">
    <value>ErrorDeleteRisk</value>
  </data>
  <data name="ErrorDeleteTemp" xml:space="preserve">
    <value>Error Delete Temporary</value>
  </data>
  <data name="ErrorGetGoodExperienceYear" xml:space="preserve">
    <value>Error obtieniendo anios de buena experiencia</value>
  </data>
  <data name="ErrorGetGoodExpNumPrinter" xml:space="preserve">
    <value>Error obteniendo el parámetro "años de buena experiencia"</value>
  </data>
  <data name="ErrorGetRenewallHistory" xml:space="preserve">
    <value>Error obteniendo historia de renovación</value>
  </data>
  <data name="ErrorGetVehicleByFasecoldaCode" xml:space="preserve">
    <value>Error getting vehicle by code fasecolda</value>
  </data>
  <data name="ErrorGetVehicleByLicensePlate" xml:space="preserve">
    <value>Error getting vehicle by plate</value>
  </data>
  <data name="ErrorGetVehicleByMakeIdModelIdVersionId" xml:space="preserve">
    <value>Error obteniendo vehículo por marca, modelo y versión</value>
  </data>
  <data name="ErrorGetVehicleByMakeIdModelIdVersionIdAndYear" xml:space="preserve">
    <value>Error obteniendo vehículo por marca, modelo y versión y anio</value>
  </data>
  <data name="ErrorGetVehiclePolicyByPolicyIdEndorsementId" xml:space="preserve">
    <value>Error obteniendo la poliza del vehículo por ID de aprobación</value>
  </data>
  <data name="ErrorGetVehiclePolicyByPolicyIdEndorsementIdLicensePlate" xml:space="preserve">
    <value>Error obteniendo poliza de vehículo</value>
  </data>
  <data name="ErrorGetVehiclePolicyByTemporalId" xml:space="preserve">
    <value>Error obteniendo temporal de autos</value>
  </data>
  <data name="ErrorGetVehicles" xml:space="preserve">
    <value>Error Get Vehicles</value>
  </data>
  <data name="ErrorGetVehiclesByPrefixBranchDocumentNumberEndorsementType" xml:space="preserve">
    <value>Error GetVehiclesByPrefixBranchDocumentNumberEndorsementType</value>
  </data>
  <data name="ErrorHolderNoInsuredRole" xml:space="preserve">
    <value>Error Holder No Insured Role</value>
  </data>
  <data name="ErrorInsuredMain" xml:space="preserve">
    <value>ErrorInsuredMain</value>
  </data>
  <data name="ErrorInsuredNoInsuredRole" xml:space="preserve">
    <value>Error Insured No InsuredRole</value>
  </data>
  <data name="ErrorIsVehicleByLicensePlateEngineChassis" xml:space="preserve">
    <value>Error al validar vehículo por placa, nro. motor y nro. de chasis</value>
  </data>
  <data name="ErrorParameterPolicy" xml:space="preserve">
    <value>Error Parameter Policy</value>
  </data>
  <data name="ErrorPolicyholderDefaultPaymentPlan" xml:space="preserve">
    <value>Error Policy holder Default PaymentPlan</value>
  </data>
  <data name="ErrorPolicyholderDisabled" xml:space="preserve">
    <value>Error Policy holder Disabled</value>
  </data>
  <data name="ErrorPolicyholderWithoutRol" xml:space="preserve">
    <value>Error Policy holder With out Rol</value>
  </data>
  <data name="ErrorQuotate" xml:space="preserve">
    <value>Error tarifando póliza de vehículos</value>
  </data>
  <data name="ErrorQuotationCoverage" xml:space="preserve">
    <value>Error tarifando cobertura</value>
  </data>
  <data name="ErrorQuotationVehicle" xml:space="preserve">
    <value>Error tarifando vehículo</value>
  </data>
  <data name="ErrorRecordEndorsement" xml:space="preserve">
    <value>Error Record Endorsement</value>
  </data>
  <data name="ErrorRegisterIntegration" xml:space="preserve">
    <value>Error register integration</value>
  </data>
  <data name="ErrorRiskEmpty" xml:space="preserve">
    <value>Error Risk Empty</value>
  </data>
  <data name="ErrorRunRulesCoverage" xml:space="preserve">
    <value>Error ejecutando reglas de cobertura</value>
  </data>
  <data name="ErrorRunRulesRisk" xml:space="preserve">
    <value>Error ejecutando reglas de riesgo</value>
  </data>
  <data name="ErrorSaveClauses" xml:space="preserve">
    <value>Error Save Clauses</value>
  </data>
  <data name="ErrorSaveRiskVehicle" xml:space="preserve">
    <value>ErrorSaveRiskVehicle</value>
  </data>
  <data name="ErrorSaveText" xml:space="preserve">
    <value>Error Save Text</value>
  </data>
  <data name="ErrorSearchCoverages" xml:space="preserve">
    <value>Error Search Coverages</value>
  </data>
  <data name="ErrorTemporalNotFound" xml:space="preserve">
    <value>Error Temporal Not Found</value>
  </data>
  <data name="ErrorTemporaryNotHaveRisks" xml:space="preserve">
    <value>The Temporary does not have Risks</value>
  </data>
  <data name="ErrorTempPremiumZero" xml:space="preserve">
    <value>Error Temp Premium Zero</value>
  </data>
  <data name="ErrorTheVehicleHasValidPolicy" xml:space="preserve">
    <value>Error The vehicle has a valid policy</value>
  </data>
  <data name="ErrorUpdatePolicy" xml:space="preserve">
    <value>ErrorUpdatePolicy</value>
  </data>
  <data name="Excluded" xml:space="preserve">
    <value>Excluded</value>
  </data>
  <data name="Included" xml:space="preserve">
    <value>Included</value>
  </data>
  <data name="InTheTemporary" xml:space="preserve">
    <value>InTheTemporary</value>
  </data>
  <data name="ItAlreadyExists" xml:space="preserve">
    <value>ItAlreadyExists</value>
  </data>
  <data name="labelPay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="labelUser" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>Modifed</value>
  </data>
  <data name="NoExistRisk" xml:space="preserve">
    <value>No Exist Risk</value>
  </data>
  <data name="NoExistTemporaryNoHaveCoverages" xml:space="preserve">
    <value>No Exist Temporary No Have Coverages</value>
  </data>
  <data name="NoRiskWasFound" xml:space="preserve">
    <value>No Risk Was Found</value>
  </data>
  <data name="NotModified" xml:space="preserve">
    <value>NotModified</value>
  </data>
  <data name="Original" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="PolicyNumber" xml:space="preserve">
    <value>Policy Number is {0} </value>
  </data>
  <data name="ProductNotAddingMoreRisks" xml:space="preserve">
    <value>ProductNotAddingMoreRisks</value>
  </data>
  <data name="PromissoryNote" xml:space="preserve">
    <value>Promissory Note</value>
  </data>
  <data name="QuotationNumber" xml:space="preserve">
    <value>Quotation Number is  {0}</value>
  </data>
  <data name="Rehabilitated" xml:space="preserve">
    <value>Rehabilitated </value>
  </data>
  <data name="ValidationRiskNotFound" xml:space="preserve">
    <value>Risk Not Found</value>
  </data>
  <data name="ValidationTemporalNotFound" xml:space="preserve">
    <value>Temporal Not Found</value>
  </data>
  <data name="WithoutEngineChassis" xml:space="preserve">
    <value>WithoutEngineChassis</value>
  </data>
</root>