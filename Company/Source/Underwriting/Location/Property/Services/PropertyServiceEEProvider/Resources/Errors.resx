<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancelled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="EndorsementNumber" xml:space="preserve">
    <value>The endorsement has been successfully generated.Policy number: {0}.Endorsement number: {1}.Endorsement Id: {2}.{3}</value>
  </data>
  <data name="EnterInsuranceItems" xml:space="preserve">
    <value>Enter Insurance Items</value>
  </data>
  <data name="ErrorBeneficiaryEmpty" xml:space="preserve">
    <value>Beneficiary Empty</value>
  </data>
  <data name="ErrorBeneficiaryNotFound" xml:space="preserve">
    <value>Beneficiary Not Found</value>
  </data>
  <data name="ErrorConsultingInsuranceObjects" xml:space="preserve">
    <value>Error in consulting insurance objects</value>
  </data>
  <data name="ErrorConsultPolicyholder" xml:space="preserve">
    <value>Error Consult Policy holder</value>
  </data>
  <data name="ErrorConvertingProspectIntoIndividual" xml:space="preserve">
    <value>Error Converting Prospect Into Individual</value>
  </data>
  <data name="ErrorCoverages" xml:space="preserve">
    <value>Error Coverages</value>
  </data>
  <data name="ErrorCreateEndorsement" xml:space="preserve">
    <value>Error Create Endorsement</value>
  </data>
  <data name="ErrorCreateInsured" xml:space="preserve">
    <value>Failed Creating the Insured</value>
  </data>
  <data name="ErrorCreatePolicy" xml:space="preserve">
    <value>Error Create Policy</value>
  </data>
  <data name="ErrorCreatePropertyRisk" xml:space="preserve">
    <value>Error Create Property Risk</value>
  </data>
  <data name="ErrorCreatePropertyTemporal" xml:space="preserve">
    <value>ErrorCreatePropertyTemporal</value>
  </data>
  <data name="ErrorCreateQuotateProperty" xml:space="preserve">
    <value>Error Create Quotate Property</value>
  </data>
  <data name="ErrorCreateTemporalCompanyProperty" xml:space="preserve">
    <value>Error Creating Temporal Risk</value>
  </data>
  <data name="ErrorDeleteRisk" xml:space="preserve">
    <value>Error Delete Risk</value>
  </data>
  <data name="ErrorDeleteTemp" xml:space="preserve">
    <value>Erro rDelete Temp</value>
  </data>
  <data name="ErrorEndorsementNotFound" xml:space="preserve">
    <value>Error Endorsement Not Found</value>
  </data>
  <data name="ErrorEndorsementTypeIdEmpty" xml:space="preserve">
    <value>Tipo de Endoso Vacio</value>
  </data>
  <data name="ErrorGetInsuredObject" xml:space="preserve">
    <value>Error Querying Object of Insurance</value>
  </data>
  <data name="ErrorGetNextAdjustmentEndorsementByPolicyId" xml:space="preserve">
    <value>Error getting next adjustment endorsement</value>
  </data>
  <data name="ErrorGetNextDeclarationEndorsementByPolicyId" xml:space="preserve">
    <value>Error get next declaration</value>
  </data>
  <data name="ErrorGetPropertiesByPolicy" xml:space="preserve">
    <value>Error Get Properties By Policy</value>
  </data>
  <data name="ErrorGetPropertiesByTemporalId" xml:space="preserve">
    <value>Error Get Properties By Temporal Id</value>
  </data>
  <data name="ErrorGetPropertyRiskByPolicyId" xml:space="preserve">
    <value>Error to get risk by policy id</value>
  </data>
  <data name="ErrorHolderNoInsuredRole" xml:space="preserve">
    <value>Error Holder No Insured Role</value>
  </data>
  <data name="ErrorInsuredMain" xml:space="preserve">
    <value>Error Insured Main</value>
  </data>
  <data name="ErrorInsuredNoInsuredRole" xml:space="preserve">
    <value>Error Insured No Insured Role</value>
  </data>
  <data name="ErrorLoadFacadeGeneral" xml:space="preserve">
    <value>Error Load Facade General</value>
  </data>
  <data name="ErrorLoadFacadeRiskProperty" xml:space="preserve">
    <value>Error Load Facade Risk Property</value>
  </data>
  <data name="ErrorMinimumCoverage" xml:space="preserve">
    <value>Must be at least one Coverage</value>
  </data>
  <data name="ErrorParametersEmpty" xml:space="preserve">
    <value>Error Parameters Empty</value>
  </data>
  <data name="ErrorPolicyholderDefaultPaymentPlan" xml:space="preserve">
    <value>Error Policy holder Default PaymentPlan</value>
  </data>
  <data name="ErrorPolicyholderDisabled" xml:space="preserve">
    <value>Error Policy holder Disabled</value>
  </data>
  <data name="ErrorPolicyholderWithoutRol" xml:space="preserve">
    <value>Error Policy holder With out Rol</value>
  </data>
  <data name="ErrorPolicyNotFound" xml:space="preserve">
    <value>Error Policy Not Found</value>
  </data>
  <data name="ErrorQueryCoverageGroups" xml:space="preserve">
    <value>Failed to query coverage groups</value>
  </data>
  <data name="ErrorQuotateCoverage" xml:space="preserve">
    <value>Error Quotate Coverage</value>
  </data>
  <data name="ErrorQuotateProperties" xml:space="preserve">
    <value>Error Quotate Properties</value>
  </data>
  <data name="ErrorRecordEndorsement" xml:space="preserve">
    <value>Error Record Endorsement</value>
  </data>
  <data name="ErrorRegisterIntegration" xml:space="preserve">
    <value>Error register integration</value>
  </data>
  <data name="ErrorRemovingObjectInsurance" xml:space="preserve">
    <value>Error removing object from insurance</value>
  </data>
  <data name="ErrorRiskEmpty" xml:space="preserve">
    <value>Error Risk Empty</value>
  </data>
  <data name="ErrorRunRulesCoverage" xml:space="preserve">
    <value>Error Run Rules Coverage</value>
  </data>
  <data name="ErrorRunRulesRisk" xml:space="preserve">
    <value>Error Run Rules Risk</value>
  </data>
  <data name="ErrorSaveAdditionalData" xml:space="preserve">
    <value>Failed to save additional data</value>
  </data>
  <data name="ErrorSaveClauses" xml:space="preserve">
    <value>Failed To Save Clauses</value>
  </data>
  <data name="ErrorSaveRisk" xml:space="preserve">
    <value>Error Save Risk</value>
  </data>
  <data name="ErrorSaveText" xml:space="preserve">
    <value>Failed To Save Text</value>
  </data>
  <data name="ErrorSearchRisk" xml:space="preserve">
    <value>Error Search Risk</value>
  </data>
  <data name="ErrorSelectedClauses" xml:space="preserve">
    <value>No selected clauses</value>
  </data>
  <data name="ErrorTemporalNotFound" xml:space="preserve">
    <value>Error Temporal Not Found</value>
  </data>
  <data name="ErrorTempPremiumZero" xml:space="preserve">
    <value>Error Temp Premium Zero</value>
  </data>
  <data name="ErrorUpdatePolicy" xml:space="preserve">
    <value>Error updating Policy</value>
  </data>
  <data name="Excluded" xml:space="preserve">
    <value>Exclude</value>
  </data>
  <data name="GroupCoveragesCanNotModified" xml:space="preserve">
    <value>Group Coverages Can Not Modified</value>
  </data>
  <data name="Included" xml:space="preserve">
    <value>Included</value>
  </data>
  <data name="labelPay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="labelUser" xml:space="preserve">
    <value>User:</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>Modifed</value>
  </data>
  <data name="NoExistCoverage" xml:space="preserve">
    <value>There is no coverage</value>
  </data>
  <data name="NoExistRisk" xml:space="preserve">
    <value>There is no risk</value>
  </data>
  <data name="NoInsuranceObjects" xml:space="preserve">
    <value>No Insurance Objects</value>
  </data>
  <data name="NoRiskWasFound" xml:space="preserve">
    <value>No Risk Was Found</value>
  </data>
  <data name="NotModified" xml:space="preserve">
    <value>Not Modified</value>
  </data>
  <data name="ObjectInsuranceNotAssociatedCoverages" xml:space="preserve">
    <value>Object Insurance Not Associated Coverages</value>
  </data>
  <data name="Original" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="PolicyNumber" xml:space="preserve">
    <value>Policy Number is : {0}</value>
  </data>
  <data name="PromissoryNote" xml:space="preserve">
    <value>Promissory Note: {0}. ID User: {1}</value>
  </data>
  <data name="QuotationNumber" xml:space="preserve">
    <value>Quotation Number is : {0}</value>
  </data>
  <data name="Rehabilitated" xml:space="preserve">
    <value>Rehabilitated</value>
  </data>
  <data name="RiskInZero" xml:space="preserve">
    <value>You can not issue a risk with zero premium</value>
  </data>
  <data name="SelectedProductNotAllowMoreRisks" xml:space="preserve">
    <value>Selected Product Not Allow MoreRisks</value>
  </data>
</root>