<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EndorsementNumber" xml:space="preserve">
    <value>El endoso se ha generado con exito.Número de póliza: {0}.Número de endoso: {1}.Endorsement Id: {2}.{3}</value>
  </data>
  <data name="ErrorConsultPolicyholder" xml:space="preserve">
    <value>Error al consultar tomador</value>
  </data>
  <data name="ErrorCoverages" xml:space="preserve">
    <value>Error en la Cobertura</value>
  </data>
  <data name="ErrorCreateCompanyClauses" xml:space="preserve">
    <value>Error al guardar el texto</value>
  </data>
  <data name="ErrorCreateCompanyText" xml:space="preserve">
    <value>Error al crear el texto</value>
  </data>
  <data name="ErrorCreateCompanyTransportTemporal" xml:space="preserve">
    <value>Error al crear company temporal</value>
  </data>
  <data name="ErrorCreateEndorsement" xml:space="preserve">
    <value>Error al Crear Endoso</value>
  </data>
  <data name="ErrorCreatePolicy" xml:space="preserve">
    <value>Error al crear póliza</value>
  </data>
  <data name="ErrorDeleteCompanyTransportTemporal" xml:space="preserve">
    <value>Error al borrar el riego de temporal de transporte</value>
  </data>
  <data name="ErrorDeleteRisk" xml:space="preserve">
    <value>Error Borrando el Riesgo</value>
  </data>
  <data name="ErrorExcludeCompanyCoverage" xml:space="preserve">
    <value>Error al excluir cobertura</value>
  </data>
  <data name="ErrorExcludeCompanyTransport" xml:space="preserve">
    <value>Error al excluir transportes</value>
  </data>
  <data name="ErrorGetCompanyCoveragesByInsuredObjectId" xml:space="preserve">
    <value>Error al consultar las coberturas a partir del identificador del objeto de seguro</value>
  </data>
  <data name="ErrorGetCompanyCoveragesByInsuredObjectIdGroupCoverageIdProductId" xml:space="preserve">
    <value>Error al obtener coberturas por ID de cobertura, ID de grupo De objeto asegurado y Id de producto</value>
  </data>
  <data name="ErrorGetCompanyCoveragesByInsuredObjectIdsGroupCoverageIdProductId" xml:space="preserve">
    <value>Error al obtener coberturas por  el ID de objetos asegurados de cobertura de grupo,  producto Id</value>
  </data>
  <data name="ErrorGetCompanyDeductiblesByCoverageId" xml:space="preserve">
    <value>Error al consultar los deducible a partir de la cobertura</value>
  </data>
  <data name="ErrorGetCompanyEndorsement" xml:space="preserve">
    <value>Eror al obtener endosos por tipo de endoso</value>
  </data>
  <data name="ErrorGetCompanyTransportByRiskId" xml:space="preserve">
    <value>Error Get Transport By RiskId</value>
  </data>
  <data name="ErrorGetCompanyTransportsByPolicyId" xml:space="preserve">
    <value>Error al obtener transportes de la empresa por ID de política</value>
  </data>
  <data name="ErrorGetCompanyTransportsByTemporalId" xml:space="preserve">
    <value>Error al obtener temporal de transportes por temporal id</value>
  </data>
  <data name="ErrorGetNextAdjustmentEndorsementByPolicyId" xml:space="preserve">
    <value>Error consultando el siguiente endoso de ajuste</value>
  </data>
  <data name="ErrorGetNextDeclarationEndorsementByPolicyId" xml:space="preserve">
    <value>Error consultando el siguiente endoso de declaración</value>
  </data>
  <data name="ErrorGetPolicyTypeByPrefixIdPolicyTypeCode" xml:space="preserve">
    <value>Error al consultar el tipo de póliza</value>
  </data>
  <data name="ErrorGetPolicyTypesByPrefixIdById" xml:space="preserve">
    <value>Error GetPolicyTypes By PrefixId By Id</value>
  </data>
  <data name="ErrorHolderNoInsuredRole" xml:space="preserve">
    <value>El Tomador no tiene rol de asegurado</value>
  </data>
  <data name="ErrorInsuredMain" xml:space="preserve">
    <value>Errores asegurados principal</value>
  </data>
  <data name="ErrorInsuredNoInsuredRole" xml:space="preserve">
    <value>El asegurado no debe ser prospecto</value>
  </data>
  <data name="ErrorNoExistCoverageRisk" xml:space="preserve">
    <value>Error al no existir el riesgo de covertura</value>
  </data>
  <data name="ErrorNoExistRisk" xml:space="preserve">
    <value>Error no existe el riesgo</value>
  </data>
  <data name="ErrorPolicyholderDefaultPaymentPlan" xml:space="preserve">
    <value>Tomador No Tiene Metodos de Pago</value>
  </data>
  <data name="ErrorPolicyholderDisabled" xml:space="preserve">
    <value>Tomador Dado de Baja</value>
  </data>
  <data name="ErrorPolicyholderWithoutRol" xml:space="preserve">
    <value>Tomador no tiene rol de asegurado</value>
  </data>
  <data name="ErrorPolicyOrRisksEmpty" xml:space="preserve">
    <value>Póliza o Riesgos Vacíos</value>
  </data>
  <data name="ErrorQuotateCompanyCoverage" xml:space="preserve">
    <value>Error de cotización en la cobertura</value>
  </data>
  <data name="ErrorQuotateCompanyTransport" xml:space="preserve">
    <value>Error Cuota en transportes </value>
  </data>
  <data name="ErrorQuotateInsuredObject" xml:space="preserve">
    <value>Error Quotate Insured Object</value>
  </data>
  <data name="ErrorRegisterIntegration" xml:space="preserve">
    <value>Error registrando integración</value>
  </data>
  <data name="ErrorRiskEmpty" xml:space="preserve">
    <value>Error Riesgo vacio</value>
  </data>
  <data name="ErrorRunRulesRisk" xml:space="preserve">
    <value>Error al obtener reglas de riesgo</value>
  </data>
  <data name="ErrorSaveCompanyClauses" xml:space="preserve">
    <value>Error al guardar las clausulas</value>
  </data>
  <data name="ErrorSearchRisk" xml:space="preserve">
    <value>Error Busqueda de Riesgos</value>
  </data>
  <data name="ErrorTemporalNotFound" xml:space="preserve">
    <value>Error al no encontrar el temporal</value>
  </data>
  <data name="ErrorUpdateCompanyTransportTemporal" xml:space="preserve">
    <value>Error al actualizar temporal de transportes</value>
  </data>
  <data name="LabelPay" xml:space="preserve">
    <value>Pagaré:</value>
  </data>
  <data name="LabelUser" xml:space="preserve">
    <value>Usuario:</value>
  </data>
  <data name="NoExistRisk" xml:space="preserve">
    <value>No existe el riesgo</value>
  </data>
  <data name="PolicyNumber" xml:space="preserve">
    <value>Numero de Poliza es   : {0}</value>
  </data>
  <data name="PromissoryNote" xml:space="preserve">
    <value>Pagaré: {0}. ID Usuario: {1}</value>
  </data>
  <data name="QuotationNumber" xml:space="preserve">
    <value>Numero de Cotizacion es  : {0}</value>
  </data>
</root>