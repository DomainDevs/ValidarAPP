<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancelled" xml:space="preserve">
    <value>Cancelada</value>
  </data>
  <data name="ErrorExcludeCompanyAircraft" xml:space="preserve">
    <value>Error al excluir objeto de Aircraftes</value>
  </data>
  <data name="ErrorGetAdjustPeriodTypes" xml:space="preserve">
    <value>Error al traer el periodo de pago</value>
  </data>
  <data name="ErrorGetAircraftByEndorsement" xml:space="preserve">
    <value>Error de consulta de riesgo por endoso</value>
  </data>
  <data name="ErrorGetAircraftsByTemporalId" xml:space="preserve">
    <value>Error al traer medio de Aircrafte por id</value>
  </data>
  <data name="ErrorGetAircraftTypes" xml:space="preserve">
    <value>Error al traer los tipos de Aircrafte</value>
  </data>
  <data name="ErrorGetCalculationTypes" xml:space="preserve">
    <value>Error al traer los tipos de cálculo</value>
  </data>
  <data name="ErrorGetCargoTypes" xml:space="preserve">
    <value>Error al traer los tipos de mercancias</value>
  </data>
  <data name="ErrorGetCitiesByContryIdStateId" xml:space="preserve">
    <value>Error al consultar las ciudades filtradas por país y departamento</value>
  </data>
  <data name="ErrorGetCompanyAircraftByRiskId" xml:space="preserve">
    <value>Error al consultar el Aircrafte partir del identificador del riesgo</value>
  </data>
  <data name="ErrorGetCountries" xml:space="preserve">
    <value>Error al consultar el listado de países</value>
  </data>
  <data name="ErrorGetCoverageGroupsByPrefixIdProductId" xml:space="preserve">
    <value>Error al crear grupos de cobertura por ID de producto de ID de prefijo</value>
  </data>
  <data name="ErrorGetCoveragesByInsuredObjectIdGroupCoverageIdProductId" xml:space="preserve">
    <value>Error al consultar coberturas por objeto de seguro, grupo de cobertura y producto</value>
  </data>
  <data name="ErrorGetCoveragesByInsuredObjectIdsGroupCoverageIdProductId" xml:space="preserve">
    <value>Error al consultar coberturas por identifcadores de objeto de seguro, grupo de cobertura y producto</value>
  </data>
  <data name="ErrorGetCoveragesByProductIdGroupCoverageId" xml:space="preserve">
    <value>Error al consultar los tipos de coberturas</value>
  </data>
  <data name="ErrorGetCoveragesByProductIdGroupCoverageIdPrefixId" xml:space="preserve">
    <value>Error al consultar las coberturas por identificador de producto y de grupo de coberturas y el ramo</value>
  </data>
  <data name="ErrorGetDeclarationPeriods" xml:space="preserve">
    <value>Error al traer el periodo de daclaración</value>
  </data>
  <data name="ErrorGetDeductiblesByCoverageId" xml:space="preserve">
    <value>Error al consultar los deducibles por cobertura</value>
  </data>
  <data name="ErrorGetInsuredObjectsByProductIdGroupCoverageId" xml:space="preserve">
    <value>Error al traer el asegurado por id</value>
  </data>
  <data name="ErrorGetInsuredsByDescriptionInsuredSearchTypeCustomerType" xml:space="preserve">
    <value>Error al consultar las personas por nombre</value>
  </data>
  <data name="ErrorGetMakes" xml:space="preserve">
    <value>Error consultando marcas</value>
  </data>
  <data name="ErrorGetModelsByMakeId" xml:space="preserve">
    <value>Error consultando por marcas</value>
  </data>
  <data name="ErrorGetNotificationInfoByIndividualId" xml:space="preserve">
    <value>Error al obtener la información de contacto</value>
  </data>
  <data name="ErrorGetOperators" xml:space="preserve">
    <value>Error consultando operadores</value>
  </data>
  <data name="ErrorGetPackagingTypes" xml:space="preserve">
    <value>Error al traer el tipo de empaque</value>
  </data>
  <data name="ErrorGetPolicyTypeByPrefixIdPolicyTypeCode" xml:space="preserve">
    <value>Erro al consultar el tipo de póliza</value>
  </data>
  <data name="ErrorGetRateTypes" xml:space="preserve">
    <value>Error al traer tarificación</value>
  </data>
  <data name="ErrorGetRegisters" xml:space="preserve">
    <value>Error consultando registros</value>
  </data>
  <data name="ErrorGetStatesByCountryId" xml:space="preserve">
    <value>Error al consultar el listado de departamentos por país</value>
  </data>
  <data name="ErrorGetUsesByPrefixId" xml:space="preserve">
    <value>Error consultando usuarios por ramo</value>
  </data>
  <data name="ErrorQuotateCoverage" xml:space="preserve">
    <value>Error calculando cobertura</value>
  </data>
  <data name="ErrorQuotateInsuredObject" xml:space="preserve">
    <value>Error calculando objeto de seguro</value>
  </data>
  <data name="ErrorRunRules" xml:space="preserve">
    <value>Error al Ejecutar Reglas</value>
  </data>
  <data name="ErrorSaveClauses" xml:space="preserve">
    <value>Error al crear las clausulas</value>
  </data>
  <data name="ErrorSaveCompanyBeneficiary" xml:space="preserve">
    <value>Error al guardar Beneficiario</value>
  </data>
  <data name="ErrorSaveCoverages" xml:space="preserve">
    <value>Error al guardar coberturas</value>
  </data>
  <data name="ErrorSaveText" xml:space="preserve">
    <value>Error al crear el texto</value>
  </data>
  <data name="ExcludeCompanyCoverage" xml:space="preserve">
    <value>Error al excluir objeto de coberturas</value>
  </data>
  <data name="Excluded" xml:space="preserve">
    <value>Excluida</value>
  </data>
  <data name="GetCoveragesByInsuredObjectId" xml:space="preserve">
    <value>Errir get coverage by Insured Object Id</value>
  </data>
  <data name="Included" xml:space="preserve">
    <value>Agregada</value>
  </data>
  <data name="ListDirect" xml:space="preserve">
    <value>Directo</value>
  </data>
  <data name="ListFixedValue" xml:space="preserve">
    <value>Importe</value>
  </data>
  <data name="ListPercentage" xml:space="preserve">
    <value>Porcentaje</value>
  </data>
  <data name="ListPermilage" xml:space="preserve">
    <value>Milaje</value>
  </data>
  <data name="ListProrate" xml:space="preserve">
    <value>Prorata</value>
  </data>
  <data name="ListShortTerm" xml:space="preserve">
    <value>Corto plazo</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>Modificada</value>
  </data>
  <data name="NotModified" xml:space="preserve">
    <value>Sin modificación</value>
  </data>
  <data name="Original" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="Rehabilitated" xml:space="preserve">
    <value>Rehabilitada</value>
  </data>
</root>