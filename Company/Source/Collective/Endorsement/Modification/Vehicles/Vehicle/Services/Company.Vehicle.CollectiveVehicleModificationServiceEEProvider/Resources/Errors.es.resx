<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorAccessoryAmount" xml:space="preserve">
    <value>El valor del accesorio debe ser mayor a 0, fila adicional {0}</value>
  </data>
  <data name="ErrorBeneficiariesAdditionalDuplicated" xml:space="preserve">
    <value>Los beneficiarios adicionales estan duplicados</value>
  </data>
  <data name="ErrorBodyNotFound" xml:space="preserve">
    <value>Error al realizar la búsqueda de la carrocería</value>
  </data>
  <data name="ErrorBodyWithOutBody" xml:space="preserve">
    <value>Error, Sin Carrocería</value>
  </data>
  <data name="ErrorChassisAssociatedWithThePolicy" xml:space="preserve">
    <value>El número de chasis ya está asociado a la póliza</value>
  </data>
  <data name="ErrorCoverAccesory" xml:space="preserve">
    <value>No se pueden incluir accesorios al grupo de coberturas</value>
  </data>
  <data name="ErrorCoverageCode" xml:space="preserve">
    <value>Codigo de cobertura para deducible requerido</value>
  </data>
  <data name="ErrorCoverageNotFound" xml:space="preserve">
    <value>Error Coberturas no Encontradas</value>
  </data>
  <data name="ErrorCreateRisk" xml:space="preserve">
    <value>Error al crear el riesgo</value>
  </data>
  <data name="ErrorCurrentFrom" xml:space="preserve">
    <value>Error Vigencia Desde</value>
  </data>
  <data name="ErrorDeductCode" xml:space="preserve">
    <value>Codigo de deducible requerido</value>
  </data>
  <data name="ErrorEngineAssociatedWithThePolicy" xml:space="preserve">
    <value>El número de motor ya está asociado a la póliza</value>
  </data>
  <data name="ErrorExcludeAllRisks" xml:space="preserve">
    <value>Error no puede excluir todos los riesgos de la poliza</value>
  </data>
  <data name="ErrorFasecoldaNotFound" xml:space="preserve">
    <value>Error, fasecolda no encontrado</value>
  </data>
  <data name="ErrorFileParametrizationNotFound" xml:space="preserve">
    <value>Parametrización de archivo no encontrada</value>
  </data>
  <data name="ErrorInQuotateCollectiveLoad" xml:space="preserve">
    <value>Error tarifando el cargue</value>
  </data>
  <data name="ErrorInTemplate" xml:space="preserve">
    <value>Error en el template: {0} {1}</value>
  </data>
  <data name="ErrorModelNotFound" xml:space="preserve">
    <value>No existe modelo para fasecolda</value>
  </data>
  <data name="ErrorParticipationBeneficiary" xml:space="preserve">
    <value>La participación de beneficiarios adicionales debe ser mayor a 0 y menor a 100%</value>
  </data>
  <data name="ErrorPlateAssociatedWithThePolicy" xml:space="preserve">
    <value>La placa ya está asociada a la póliza</value>
  </data>
  <data name="ErrorPremiumZero" xml:space="preserve">
    <value>Error prima cero</value>
  </data>
  <data name="ErrorProductIsFlateRate" xml:space="preserve">
    <value>Error el producto tiene marca tasa única</value>
  </data>
  <data name="ErrorQuotate" xml:space="preserve">
    <value>Error al tarifar: {0}</value>
  </data>
  <data name="ErrorRecordsNotFoundToIssue" xml:space="preserve">
    <value>Registros no encrontrados para emitir</value>
  </data>
  <data name="ErrorRiskNotAssociatedWithThePolic" xml:space="preserve">
    <value>No esta Asociada al Riesgo</value>
  </data>
  <data name="ErrorRiskNotAssociatedWithThePolicy" xml:space="preserve">
    <value>El riesgo no esta asociado a la póliza o esta excluido</value>
  </data>
  <data name="ErrorRisksNotFound" xml:space="preserve">
    <value>No se han encontrado los riesgos relacionados con la póliza a emitir</value>
  </data>
  <data name="ErrorTemporalNotFound" xml:space="preserve">
    <value>Temporal no encontrado</value>
  </data>
  <data name="ErrorToDatePolicy" xml:space="preserve">
    <value>La fecha HASTA no puede ser menor o igual a la fecha DESDE</value>
  </data>
  <data name="ErrorValidatingFile" xml:space="preserve">
    <value>Error validando archivo</value>
  </data>
  <data name="NullOrCancelledPolicyEndorsement" xml:space="preserve">
    <value>Error, la póliza fue cancelada o no tiene un endoso relacionado</value>
  </data>
  <data name="PoliciesRestrictive" xml:space="preserve">
    <value>Politica restrictiva: {0}</value>
  </data>
  <data name="PolicyHasEvents" xml:space="preserve">
    <value>La póliza tiene eventos</value>
  </data>
  <data name="PolicyNotCorrespondPrefix" xml:space="preserve">
    <value>El código de ramo ingresado no corresponde a automoviles</value>
  </data>
  <data name="PolicyNotFound" xml:space="preserve">
    <value>Póliza no encontrada</value>
  </data>
  <data name="TemplateScript" xml:space="preserve">
    <value>Guiones</value>
  </data>
  <data name="TemplateScriptRequired" xml:space="preserve">
    <value>La hoja {0} es obligatoria para el código de producto {1}.</value>
  </data>
  <data name="ValidateErrorAcessory" xml:space="preserve">
    <value>El código del accesorio no puede ir vacio</value>
  </data>
  <data name="ValidatePolicyAmounts" xml:space="preserve">
    <value>Error calculando componentes de poliza</value>
  </data>
  <data name="ValidateSarlaftExists" xml:space="preserve">
    <value>El tomador no ha firmado el formulario de SARLAFT</value>
  </data>
  <data name="ValidateSarlaftExistsInsured" xml:space="preserve">
    <value>El asegurado no ha firmado el formulario de SARLAFT</value>
  </data>
  <data name="ValidateSarlaftExpired" xml:space="preserve">
    <value>El formulario de SARLAFT para el tomador ya está vencido. Debe diligenciar uno nuevo</value>
  </data>
  <data name="ValidateSarlaftExpiredInsured" xml:space="preserve">
    <value>El formulario de SARLAFT para el asegurado ya está vencido. Debe diligenciar uno nuevo</value>
  </data>
  <data name="ValidateSarlaftOvercome" xml:space="preserve">
    <value>El formulario de SARLAFT para el tomador está por vencer. Debe diligenciar uno nuevo</value>
  </data>
  <data name="ValidateSarlaftOvercomeInsured" xml:space="preserve">
    <value>El formulario de SARLAFT para el asegurado está por vencer. Debe diligenciar uno nuevo</value>
  </data>
  <data name="ValidateSarlaftPending" xml:space="preserve">
    <value>El formulario de SARLAFT para el tomador está pendiente por autorización</value>
  </data>
  <data name="ValidateSarlaftPendingInsured" xml:space="preserve">
    <value>El formulario de SARLAFT para el asegurado está pendiente por autorización</value>
  </data>
</root>